<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux系统基础知识·3</title>
    <url>/2023/05/21/magedu-week-3/</url>
    <content><![CDATA[<blockquote>
<p>本文基于马哥教育就业班第三周课程总结</p>
</blockquote>
<h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><ul>
<li>尝试基于gcc命令说明 c语言编译过程。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C语言编译过程主要包括预处理、编译、汇编和链接四个阶段。gcc命令是一个常用的C语言编译器，可以完成这四个阶段的工作。
下面是gcc命令的使用示例和各个阶段的说明：
<span class="token number">1</span>. 预处理阶段主要是对源代码进行宏替换、头文件包含等操作，生成预处理后的代码。gcc命令中使用参数“-E”来进行预处理，示例命令如下：
$ gcc <span class="token parameter variable">-E</span> main.c <span class="token parameter variable">-o</span> main.i
<span class="token number">2</span>. 编译阶段主要是将预处理后的代码转换成汇编代码。gcc命令中使用参数“-S”来进行编译，示例命令如下：
$ gcc <span class="token parameter variable">-S</span> main.i <span class="token parameter variable">-o</span> main.s
<span class="token number">3</span>. 汇编阶段主要是将汇编代码转换成机器码。gcc命令中使用参数“-c”来进行汇编，示例命令如下：
$ gcc <span class="token parameter variable">-c</span> main.s <span class="token parameter variable">-o</span> main.o
<span class="token number">4</span>. 链接阶段主要是将多个目标文件链接成一个可执行文件。gcc命令中使用参数“-o”来指定输出文件名，示例命令如下：
$ gcc main.o <span class="token parameter variable">-o</span> main
以上是gcc命令的使用示例和C语言编译过程的各个阶段说明。在实际编译过程中，可以使用gcc命令的多个参数来控制编译过程的细节，例如优化级别、调试信息等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结程序包管理器有哪些，以及包中包含什么内容的文件，尝试这些文件如何获取命令获取？ yum&#x2F;dnf&#x2F;apt<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. 程序包通常包含以下内容的文件：
可执行文件：程序的主要执行文件，通常存放在/bin、/usr/bin、/sbin、/usr/sbin等目录下
库文件：程序所依赖的库文件，通常存放在/lib、/usr/lib、/usr/local/lib等目录下
配置文件：程序的配置文件，通常存放在/etc目录下。
文档文件：程序的文档文件，通常存放在/usr/share/doc目录下
其他文件：程序所需要的其他文件，如图标、音频、视频等文件

<span class="token number">2</span>. 以下是常见的程序包管理器及其命令：
yum/dnf：适用于Red Hat、CentOS等基于RPM的Linux发行版:
安装程序包：sudo yum/dnf <span class="token function">install</span> package_name
卸载程序包：sudo yum/dnf remove package_name
更新程序包：sudo yum/dnf update package_name
搜索程序包：sudo yum/dnf search package_name
查看程序包信息：sudo yum/dnf info package_name

<span class="token number">3</span>. apt：适用于Debian、Ubuntu等基于Debian的Linux发行版:
安装程序包：sudo <span class="token function">apt-get</span> <span class="token function">install</span> package_name
卸载程序包：sudo <span class="token function">apt-get</span> remove package_name
更新程序包：sudo <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade
搜索程序包：sudo <span class="token function">apt-cache</span> search package_name
查看程序包信息：sudo <span class="token function">apt-cache</span> show package_name

<span class="token number">4</span>. pacman：适用于Arch Linux发行版:
安装程序包：sudo pacman <span class="token parameter variable">-S</span> package_name
卸载程序包：sudo pacman <span class="token parameter variable">-R</span> package_name
更新程序包：sudo pacman <span class="token parameter variable">-Syu</span>
搜索程序包：sudo pacman <span class="token parameter variable">-Ss</span> package_name
查看程序包信息：sudo pacman <span class="token parameter variable">-Si</span> package_name

以上是常见的程序包管理器及其命令，可以根据实际需求选择合适的程序包管理器。获取命令可以通过man命令查看程序包管理器的帮助文档，或者在终端中输入程序包管理器的命令加上-h或–help参数获取帮助信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结程序包获取途径，以及rpm, yum, apt命令选项示例<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">程序包获取途径主要有以下几种：
官方软件仓库：操作系统或发行版官方提供的软件仓库，可以通过程序包管理器进行访问和下载
第三方软件仓库：由第三方提供的软件仓库，可以通过程序包管理器进行访问和下载
官方网站：软件开发者或厂商官方网站提供的下载链接，可以通过浏览器进行访问和下载
第三方网站：由第三方提供的软件下载网站，可以通过浏览器进行访问和下载

以下是rpm、yum和apt命令的选项示例：
<span class="token number">1</span>. rpm命令选项示例
安装程序包：sudo <span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> package_name.rpm
卸载程序包：sudo <span class="token function">rpm</span> <span class="token parameter variable">-e</span> package_name
查看程序包信息：sudo <span class="token function">rpm</span> <span class="token parameter variable">-qi</span> package_name
查看程序包文件列表：sudo <span class="token function">rpm</span> <span class="token parameter variable">-ql</span> package_name
查看程序包依赖关系：sudo <span class="token function">rpm</span> <span class="token parameter variable">-qR</span> package_name

<span class="token number">2</span>. yum命令选项示例
安装程序包：sudo yum <span class="token function">install</span> package_name
卸载程序包：sudo yum remove package_name
更新程序包：sudo yum update package_name
搜索程序包：sudo yum search package_name
查看程序包信息：sudo yum info package_name

<span class="token number">3</span>. apt命令选项示例
安装程序包：sudo <span class="token function">apt-get</span> <span class="token function">install</span> package_name
卸载程序包：sudo <span class="token function">apt-get</span> remove package_name
更新程序包：sudo <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade
搜索程序包：sudo <span class="token function">apt-cache</span> search package_name
查看程序包信息：sudo <span class="token function">apt-cache</span> show package_name

以上是程序包获取途径和rpm、yum、apt命令的选项示例，可以根据实际需求选择合适的获取途径和命令选项。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>简要总结yum&#x2F;dnf工作原理。并搭建私有yum仓库(base, epel源）给另一个虚拟机使用<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum/dnf是基于RPM包管理器的程序包管理器，主要用于在Linux系统中安装、升级和卸载软件包。其工作原理如下：
  配置软件仓库：yum/dnf通过配置软件仓库来获取软件包信息。软件仓库可以是本地的、远程的或者是第三方的。
  搜索软件包：yum/dnf通过搜索软件仓库来查找需要安装的软件包。
  下载软件包：yum/dnf会从软件仓库中下载需要安装的软件包及其依赖的软件包。
  安装软件包：yum/dnf会自动解决软件包之间的依赖关系，并安装需要的软件包。
  升级软件包：yum/dnf会检查软件仓库中是否有新版本的软件包，并自动升级已安装的软件包。
  卸载软件包：yum/dnf会自动卸载不再需要的软件包，并删除其依赖的软件包。

<span class="token number">1</span>. 搭建私有yum仓库
<span class="token comment"># 安装httpd和createrepo</span>
yum <span class="token function">install</span> httpd createrepo
<span class="token comment"># 设置httpd服务开机自启动并启动服务</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> httpd
<span class="token comment"># 创建yum仓库目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/html/yum/base
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/html/yum/epel
<span class="token comment"># 复制软件包到yum仓库目录</span>
<span class="token comment"># 将需要的软件包复制到对应的yum仓库目录中。</span>

<span class="token comment"># 创建base源的yum仓库</span>
createrepo /var/www/html/yum/base
<span class="token comment"># 创建epel源的yum仓库</span>
createrepo /var/www/html/yum/epel

<span class="token number">2</span>. 使用yum仓库
在另一个虚拟机中，编辑yum仓库配置文件/etc/yum.repos.d/myrepo.repo，添加以下内容：
<span class="token comment">#yum_server_ip为搭建yum仓库的服务器的IP地址。</span>
<span class="token punctuation">[</span>base<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>My Base Repository
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://yum_server_ip/yum/base
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token punctuation">[</span>epel<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>My EPEL Repository
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://yum_server_ip/yum/epel
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token number">3</span>.测试yum仓库
在另一个虚拟机中，使用yum命令测试yum仓库是否可用：
<span class="token comment"># 更新yum仓库缓存</span>
yum makecache
<span class="token comment"># 搜索软件包</span>
 yum search package_name
<span class="token comment"># 安装软件包</span>
yum <span class="token function">install</span> package_name

以上是yum/dnf工作原理的简要总结和搭建私有yum仓库的步骤，可以根据实际需求进行配置和使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结系统安装之后的常用初始化步骤。rocky&#x2F;ubuntu</li>
</ul>
<ol>
<li><a href="https://www.sujx.net/2021/05/08/centos8-make-template/">制作CentOS8模板</a></li>
<li><a href="https://www.sujx.net/2021/06/28/ubuntu-template-on-hyperv/">制作Ubuntu模板</a></li>
</ol>
<ul>
<li>解读一键安装httpd脚本，并自行实现一个一键安装脚本，要求<br>1）基于位置变量传递版本号<br>2）基于独立函数进行初始化步骤，禁用防火墙，安装开发依赖包。<br>3）基于独立函数进行下载包，解压包。<br>4）基于独立函数进行编译，安装包。<br>5）基于独立函数完成链接包。<br>6）启动服务，并输出自定义的语句，安装xxx服务<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">以下是一个示例的一键安装脚本，安装的是 Apache httpd 服务器：

<span class="token comment">#!/bin/bash</span>
<span class="token comment"># 定义变量</span>
<span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">httpd_url</span><span class="token operator">=</span><span class="token string">"https://mirrors.tuna.tsinghua.edu.cn/apache/httpd/httpd-<span class="token variable">$version</span>.tar.gz"</span>
<span class="token assign-left variable">httpd_dir</span><span class="token operator">=</span><span class="token string">"httpd-<span class="token variable">$version</span>"</span>

<span class="token comment"># 初始化步骤</span>
<span class="token keyword">function</span> <span class="token function-name function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment"># 禁用防火墙</span>
  systemctl stop firewalld
  systemctl disable firewalld
  <span class="token comment"># 安装开发依赖包</span>
  yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc <span class="token function">make</span> apr-devel apr-util-devel pcre-devel
<span class="token punctuation">&#125;</span>

<span class="token comment"># 下载包</span>
<span class="token keyword">function</span> <span class="token function-name function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">wget</span> <span class="token variable">$httpd_url</span>
  <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> <span class="token variable">$httpd_dir</span>.tar.gz
<span class="token punctuation">&#125;</span>

<span class="token comment"># 编译、安装包</span>
<span class="token keyword">function</span> <span class="token function-name function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token builtin class-name">cd</span> <span class="token variable">$httpd_dir</span>
  ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/httpd
  <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 链接包</span>
<span class="token keyword">function</span> <span class="token function-name function">link</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/httpd/bin/apachectl /usr/bin/apachectl
<span class="token punctuation">&#125;</span>

<span class="token comment"># 启动服务</span>
<span class="token keyword">function</span> <span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  /usr/local/httpd/bin/apachectl start
  <span class="token builtin class-name">echo</span> <span class="token string">"Apache httpd <span class="token variable">$version</span> has been installed."</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 执行函数</span>
init
<span class="token function">sleep</span> <span class="token number">1</span>

download
<span class="token function">sleep</span> <span class="token number">1</span>

<span class="token function">install</span>
<span class="token function">sleep</span> <span class="token number">1</span>

<span class="token function">link</span>
<span class="token function">sleep</span> <span class="token number">1</span>

start


该脚本的原理是：
定义了变量 version、httpd_url 和 httpd_dir，分别表示 httpd 的版本号、下载链接和解压后的目录名
定义了函数 init，用于禁用防火墙和安装开发依赖包
定义了函数 download，用于下载 httpd 包并解压
定义了函数 install，用于编译、安装 httpd 包
定义了函数 link，用于创建软链接
定义了函数 start，用于启动 httpd 服务并输出自定义的语句
在脚本的最后，按照顺序执行了 init、download、install、link 和 start 函数。
如果要使用该脚本安装 httpd，需要在命令行中指定 httpd 的版本号，例如：
./install_httpd.sh <span class="token number">2.4</span>.48<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><ul>
<li>总结开放系统互联OSI模型，每层作用及对应的协议。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">开放系统互联<span class="token punctuation">(</span>OSI<span class="token punctuation">)</span>模型是一个由国际标准化组织<span class="token punctuation">(</span>ISO<span class="token punctuation">)</span>制定的网络通信协议参考模型，它将网络通信分为七个层次，每个层次都有自己的功能和协议。
<span class="token number">1</span>. 物理层：负责传输比特流，即0和1的电信号，以及定义物理接口和传输介质。常用的协议有：IEEE <span class="token number">802.3</span>、IEEE <span class="token number">802.5</span>、RS-232、V.35等
<span class="token number">2</span>. 数据链路层：负责将比特流组装成帧，并进行差错检测和纠正。常用的协议有：PPP、HDLC、Ethernet、Token Ring等
<span class="token number">3</span>. 网络层：负责将数据包从源地址传输到目的地址，实现路由和拥塞控制。常用的协议有：IP、ICMP、ARP、RARP等
<span class="token number">4</span>. 传输层：负责提供端到端的可靠数据传输和错误恢复。常用的协议有：TCP、UDP、SPX等
<span class="token number">5</span>. 会话层：负责建立、管理和终止会话，实现数据交换和同步。常用的协议有：RPC、SQL、NFS等
<span class="token number">6</span>. 表示层：负责数据格式转换、加密解密、压缩解压缩等。常用的协议有：JPEG、MPEG、ASCII、EBCDIC等
<span class="token number">7</span>. 应用层：负责提供各种网络应用服务，如电子邮件、文件传输、远程登录等。常用的协议有：HTTP、FTP、SMTP、POP3等
以上是OSI模型每层的作用及对应协议<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>调整动态端口范围为20000-60000<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在Linux主机上，可以通过修改/proc/sys/net/ipv4/ip_local_port_range文件来调整动态端口范围。
以下是将动态端口范围调整为20000-60000的步骤：
使用root用户登录Linux主机，修改/proc/sys/net/ipv4/ip_local_port_range文件
$ <span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">"20000 60000"</span> <span class="token operator">></span> /proc/sys/net/ipv4/ip_local_port_range
验证动态端口范围是否已经修改成功
$ <span class="token function">cat</span> /proc/sys/net/ipv4/ip_local_port_range
如果输出结果为“20000 <span class="token number">60000</span>”，则说明动态端口范围已经修改成功。

注意：以上修改是临时的，重启系统后会恢复默认值。如果需要永久修改动态端口范围，可以在/etc/sysctl.conf文件中添加以下内容：
<span class="token comment"># 修改动态端口范围</span>
net.ipv4.ip_local_port_range <span class="token operator">=</span> <span class="token number">20000</span> <span class="token number">60000</span>
然后执行以下命令使修改生效：
$ <span class="token function">sudo</span> <span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
以上是将Linux主机动态端口范围调整为20000-60000的步骤，可以根据实际需求进行调整。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结TCP包头结构，TCP三次握手，4次挥手<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">TCP是一种面向连接的、可靠的传输协议，它通过TCP包头中的控制信息来实现数据传输的可靠性和有序性。
以下是TCP包头结构、TCP三次握手和四次挥手的简要总结：

TCP包头结构
TCP包头结构由20个字节组成，包括以下字段：
源端口和目的端口：用于标识发送方和接收方的端口号。
序列号和确认号：用于实现数据传输的可靠性和有序性。
数据偏移和保留位：用于标识TCP包头长度和保留位。
标志位：用于标识TCP包的类型，如SYN、ACK、FIN等。
窗口大小：用于实现流量控制。
校验和：用于检测TCP包头和数据的完整性。
紧急指针：用于标识紧急数据的位置。

TCP三次握手
TCP三次握手是建立TCP连接的过程，包括以下步骤：
第一次握手：客户端向服务器发送SYN包，请求建立连接。
第二次握手：服务器收到SYN包后，向客户端发送SYN+ACK包，表示可以建立连接。
第三次握手：客户端收到SYN+ACK包后，向服务器发送ACK包，表示连接已经建立。

TCP四次挥手
TCP四次挥手是关闭TCP连接的过程，包括以下步骤：
第一次挥手：客户端向服务器发送FIN包，请求关闭连接。
第二次挥手：服务器收到FIN包后，向客户端发送ACK包，表示已经收到关闭请求。
第三次挥手：服务器向客户端发送FIN包，请求关闭连接。
第四次挥手：客户端收到FIN包后，向服务器发送ACK包，表示已经收到关闭请求。
以上是TCP包头结构、TCP三次握手和四次挥手的简要总结，可以帮助理解TCP协议的工作原理和数据传输过程。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结主机到主机的包传递过程<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">主机到主机的包传递过程可以分为以下几个步骤：
  应用层：发送主机的应用程序将数据封装成应用层协议数据单元<span class="token punctuation">(</span>PDU<span class="token punctuation">)</span>，如HTTP、FTP、SMTP等。
  传输层：传输层协议将应用层PDU封装成传输层协议数据单元<span class="token punctuation">(</span>PDU<span class="token punctuation">)</span>，如TCP、UDP等。
  网络层：网络层协议将传输层PDU封装成网络层协议数据单元<span class="token punctuation">(</span>PDU<span class="token punctuation">)</span>，如IP、ICMP、ARP等。
  数据链路层：数据链路层协议将网络层PDU封装成数据链路层协议数据单元<span class="token punctuation">(</span>PDU<span class="token punctuation">)</span>，如Ethernet、PPP等。
  物理层：物理层协议将数据链路层PDU封装成比特流，通过物理介质传输到接收主机
  接收主机：接收主机将接收到的比特流转换成数据链路层PDU，然后依次解封装，直到应用层协议数据单元被传递到接收主机的应用程序
在传递过程中，每一层协议都会添加一些控制信息，如源地址、目的地址、端口号、序列号、确认号、校验和等，用于实现数据传输的可靠性、有序性和安全性。同时，每一层协议也会对数据进行一些处理，如分段、分组、路由、差错检测和纠正等，以保证数据能够正确地传输到目的主机。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结IP地址 A, B, C, D 类,并解析IP地址的组成<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">IP地址是互联网协议中用于标识网络设备的地址，根据IP地址的不同分类，可以将其分为A、B、C、D四类。以下是IP地址A、B、C、D类的简要总结及其组成：
A类IP地址
A类IP地址的第一个字节范围是1~126，用于大型网络，其组成如下：
第一个字节：网络地址，后三个字节：主机地址

B类IP地址
B类IP地址的第一个字节范围是128~191，用于中型网络，其组成如下：
前两个字节：网络地址，后两个字节：主机地址

C类IP地址
C类IP地址的第一个字节范围是192~223，用于小型网络，其组成如下：
前三个字节：网络地址，最后一个字节：主机地址

D类IP地址
D类IP地址的第一个字节范围是224~239，用于多播地址，其组成如下：
第一个字节：1110开头，后三个字节：多播组标识

IP地址的组成包括网络地址和主机地址，其中网络地址用于标识网络，主机地址用于标识网络中的主机。IP地址的长度为32位，通常用点分十进制表示法表示，如192.168.1.1。IP地址的子网掩码用于划分网络地址和主机地址的边界，通常也用点分十进制表示法表示，如255.255.255.0。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>201.222.200.111&#x2F;18计算主机数？子网掩码？说明计算方法。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">根据IP地址201.222.200.111/18，可以计算出主机数和子网掩码，具体计算方法如下：
<span class="token number">1</span>. 计算子网掩码
子网掩码用于划分网络地址和主机地址的边界，根据CIDR表示法，/18表示前18位为网络地址，后14位为主机地址，因此子网掩码的前18位为1，后14位为0，即255.255.192.0。
<span class="token number">2</span>. 计算主机数
根据CIDR表示法，/18表示有14位用于主机地址，因此可以计算出主机数为2的14次方减2，即16382个主机。
综上所述，根据IP地址201.222.200.111/18，可以计算出子网掩码为255.255.192.0，主机数为16382个。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>当A(10.0.1.1&#x2F;16)与B(10.0.2.2&#x2F;24)通信，A如何判断是否在同一个网段？A和B能否通信？<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">A和B的IP地址分别为10.0.1.1/16和10.0.2.2/24，其中A的子网掩码为255.255.0.0，B的子网掩码为255.255.255.0。根据子网掩码的规则，如果两个主机的IP地址的网络地址相同，则它们在同一个网段中。因此，A和B的网络地址分别为10.0.0.0和10.0.2.0，不在同一个网段中。

由于A和B不在同一个网段中，它们不能直接通信。如果需要让它们通信，可以通过路由器或者三层交换机等设备进行中转，将数据包从一个网段转发到另一个网段。在这种情况下，需要在路由器或者三层交换机上配置路由表，以便正确地转发数据包。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>如何将10.0.0.0&#x2F;8划分32个子网？<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">将10.0.0.0/8划分为32个子网，需要将原来的8位网络地址划分为更多的子网地址位。可以通过增加子网掩码的位数来实现，具体步骤如下：

<span class="token number">1</span>. 确定需要划分的子网数
将10.0.0.0/8划分为32个子网，需要确定需要划分的子网数为32个
<span class="token number">2</span>. 确定子网掩码
根据需要划分的子网数，可以计算出需要增加的子网掩码位数。由于32个子网需要使用5位二进制数来表示，因此需要将原来的8位网络地址中的5位作为子网地址位，剩余的3位作为主机地址位。因此，新的子网掩码为255.255.248.0
<span class="token number">3</span>.计算子网地址
根据新的子网掩码，可以计算出每个子网的子网地址。由于每个子网的子网地址位不同，因此需要逐个计算。以第一个子网为例，其子网地址为10.0.0.0，第二个子网的子网地址为10.0.8.0，以此类推。
<span class="token number">4</span>. 计算广播地址和可用主机数
根据新的子网掩码，可以计算出每个子网的广播地址和可用主机数。以第一个子网为例，其广播地址为10.0.7.255，可用主机数为2046个，第二个子网的广播地址为10.0.15.255，可用主机数为2046个，以此类推。
综上所述，将10.0.0.0/8划分为32个子网的步骤包括确定需要划分的子网数、确定子网掩码、计算子网地址、计算广播地址和可用主机数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>求每个子网的掩码，主机数。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">将10.0.0.0/8划分为32个子网后，每个子网的掩码和主机数如下：
子网1：10.0.0.0/21，掩码255.255.248.0，主机数2046
子网2：10.0.8.0/21，掩码255.255.248.0，主机数2046
子网3：10.0.16.0/21，掩码255.255.248.0，主机数2046
子网4：10.0.24.0/21，掩码255.255.248.0，主机数2046
子网5：10.0.32.0/21，掩码255.255.248.0，主机数2046
子网6：10.0.40.0/21，掩码255.255.248.0，主机数2046
子网7：10.0.48.0/21，掩码255.255.248.0，主机数2046
子网8：10.0.56.0/21，掩码255.255.248.0，主机数2046
子网9：10.0.64.0/21，掩码255.255.248.0，主机数2046
子网10：10.0.72.0/21，掩码255.255.248.0，主机数2046
子网11：10.0.80.0/21，掩码255.255.248.0，主机数2046
子网12：10.0.88.0/21，掩码255.255.248.0，主机数2046
子网13：10.0.96.0/21，掩码255.255.248.0，主机数2046
子网14：10.0.104.0/21，掩码255.255.248.0，主机数2046
子网15：10.0.112.0/21，掩码255.255.248.0，主机数2046
子网16：10.0.120.0/21，掩码255.255.248.0，主机数2046
子网17：10.0.128.0/21，掩码255.255.248.0，主机数2046
子网18：10.0.136.0/21，掩码255.255.248.0，主机数2046
子网19：10.0.144.0/21，掩码255.255.248.0，主机数2046
子网20：10.0.152.0/21，掩码255.255.248.0，主机数2046
子网21：10.0.160.0/21，掩码255.255.248.0，主机数2046
子网22：10.0.168.0/21，掩码255.255.248.0，主机数2046
子网23：10.0.176.0/21，掩码255.255.248.0，主机数2046
子网24：10.0.184.0/21，掩码255.255.248.0，主机数2046
子网25：10.0.192.0/21，掩码255.255.248.0，主机数2046
子网26：10.0.200.0/21，掩码255.255.248.0，主机数2046
子网27：10.0.208.0/21，掩码255.255.248.0，主机数2046
子网28：10.0.216.0/21，掩码255.255.248.0，主机数2046
子网29：10.0.224.0/21，掩码255.255.248.0，主机数2046
子网30：10.0.232.0/21，掩码255.255.248.0，主机数2046
子网31：10.0.240.0/21，掩码255.255.248.0，主机数2046
子网32：10.0.248.0/21，掩码255.255.248.0，主机数2046
每个子网的掩码都是255.255.248.0，主机数都是2046个。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>通过网络配置命令，让主机可以上网。 ip, netmask, gateway, dns，主机名。相关命令总结，最终可以通过这些配置让你的主机上网。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">要让主机能够上网，需要进行以下配置：IP地址、子网掩码、网关、DNS服务器和主机名。具体命令如下：
<span class="token comment"># 设置主机名</span>
hostnamectl set-hostname ostest
<span class="token comment"># 设置网络地址</span>
nmcli c m ens160 ipv4.method manual ipv4.addresses <span class="token number">192.168</span>.10.138/24 ipv4.gateway <span class="token number">192.168</span>.10.2 ipv4.dns <span class="token number">192.168</span>.10.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>解析&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0配置格式。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/sysconfig/network-scripts/ifcfg-eth0 是 Linux 系统中用于配置网络接口 eth0 的文件。该文件的格式如下：

复制DEVICE<span class="token operator">=</span>eth0
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>none
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.1.100
<span class="token assign-left variable">NETMASK</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0
<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.1.1
<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">8.8</span>.8.8
<span class="token assign-left variable">DNS2</span><span class="token operator">=</span><span class="token number">8.8</span>.4.4
各个字段的含义如下：

DEVICE：指定网络接口的名称，例如 eth0
BOOTPROTO：指定网络接口的启动协议，可以是 none、dhcp、bootp、static 等。none 表示不使用启动协议，需要手动配置 IP 地址等信息；dhcp 和 bootp 表示使用 DHCP 或 BOOTP 协议自动获取 IP 地址等信息；static 表示使用静态 IP 地址
ONBOOT：指定网络接口是否在系统启动时自动启用，可以是 <span class="token function">yes</span> 或 no
IPADDR：指定网络接口的 IP 地址
NETMASK：指定网络接口的子网掩码
GATEWAY：指定网络接口的默认网关
DNS1 和 DNS2：指定 DNS 服务器的 IP 地址，可以指定多个 DNS 服务器

这些字段的值可以根据需要进行修改，修改后需要重启网络服务或者重启系统才能生效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>基于配置文件或命令完成bond0配置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在 Linux 系统中，可以通过配置文件或命令来完成 bond0 的配置。下面分别介绍两种方法：

基于配置文件完成 bond0 配置

在 /etc/sysconfig/network-scripts/ 目录下创建一个名为 ifcfg-bond0 的文件，并添加以下内容：

<span class="token assign-left variable">DEVICE</span><span class="token operator">=</span>bond0
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>none
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">BONDING_OPTS</span><span class="token operator">=</span><span class="token string">"mode=1 miimon=100"</span>
<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.1.100
<span class="token assign-left variable">NETMASK</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0
<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.1.1
<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">8.8</span>.8.8
<span class="token assign-left variable">DNS2</span><span class="token operator">=</span><span class="token number">8.8</span>.4.4
其中，DEVICE 指定了 bond0 的名称，BOOTPROTO 设置为 none 表示不使用启动协议，需要手动配置 IP 地址等信息，ONBOOT 设置为 <span class="token function">yes</span> 表示在系统启动时自动启用，BONDING_OPTS 指定了 bond0 的模式和心跳检测时间，IPADDR、NETMASK、GATEWAY、DNS1 和 DNS2 分别指定了 IP 地址、子网掩码、默认网关和 DNS 服务器的 IP 地址。

基于命令完成 bond0 配置

使用以下命令创建 bond0：

modprobe bonding
<span class="token builtin class-name">echo</span> <span class="token string">"alias bond0 bonding"</span> <span class="token operator">>></span> /etc/modprobe.d/bonding.conf
使用以下命令配置 bond0：

<span class="token function">ifconfig</span> bond0 <span class="token number">192.168</span>.1.100 netmask <span class="token number">255.255</span>.255.0 up
<span class="token builtin class-name">echo</span> <span class="token string">"192.168.1.1 via bond0"</span> <span class="token operator">>></span> /etc/sysconfig/network-scripts/route-bond0
<span class="token builtin class-name">echo</span> <span class="token string">"nameserver 8.8.8.8"</span> <span class="token operator">></span> /etc/resolv.conf
<span class="token builtin class-name">echo</span> <span class="token string">"nameserver 8.8.4.4"</span> <span class="token operator">>></span> /etc/resolv.conf
其中，modprobe bonding 命令加载 bonding 模块，echo <span class="token string">"alias bond0 bonding"</span> <span class="token operator">>></span> /etc/modprobe.d/bonding.conf 命令将 bond0 和 bonding 模块关联起来。ifconfig bond0 <span class="token number">192.168</span>.1.100 netmask <span class="token number">255.255</span>.255.0 up 命令配置 bond0 的 IP 地址和子网掩码，并启用 bond0 接口。echo <span class="token string">"192.168.1.1 via bond0"</span> <span class="token operator">>></span> /etc/sysconfig/network-scripts/route-bond0 命令配置 bond0 的默认网关。echo <span class="token string">"nameserver 8.8.8.8"</span> <span class="token operator">></span> /etc/resolv.conf 和 <span class="token builtin class-name">echo</span> <span class="token string">"nameserver 8.8.4.4"</span> <span class="token operator">>></span> /etc/resolv.conf 命令配置 DNS 服务器的 IP 地址。

无论是基于配置文件还是命令完成 bond0 配置，都需要重启网络服务或者重启系统才能生效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>通过ifconfig命令结果找到ip地址.<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在终端中输入 <span class="token function">ifconfig</span> 命令，按下回车键。
在 <span class="token function">ifconfig</span> 命令的输出结果中，可以找到当前计算机的 IP 地址。通常情况下，IP 地址会显示在 inet 或 inet addr 字段后面，例如：

eth0      Link encap:Ethernet  HWaddr 00:11:22:33:44:55
          inet addr:192.168.1.100  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::211:22ff:fe33:4455/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:12345 errors:0 dropped:0 overruns:0 frame:0
          TX packets:6789 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:12345678 <span class="token punctuation">(</span><span class="token number">12.3</span> MB<span class="token punctuation">)</span>  TX bytes:567890 <span class="token punctuation">(</span><span class="token number">567.8</span> KB<span class="token punctuation">)</span>
在上面的示例中，eth0 是网卡名称，inet addr:192.168.1.100 表示当前计算机的 IP 地址为 <span class="token number">192.168</span>.1.100。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>使用脚本判断 你主机所在网络内在线的主机IP有哪些？ ping通则在线。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">以下是一个使用 Bash 脚本判断本地网络内在线主机 IP 的示例：

<span class="token comment">#!/bin/bash</span>
<span class="token comment"># 获取本地 IP 地址和子网掩码</span>
<span class="token assign-left variable">ip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ifconfig</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">1</span> <span class="token string">'eth0'</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">':'</span> <span class="token parameter variable">-f</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">' '</span> <span class="token parameter variable">-f</span> <span class="token number">1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">subnet</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ifconfig</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">1</span> <span class="token string">'eth0'</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">':'</span> <span class="token parameter variable">-f</span> <span class="token number">4</span><span class="token variable">)</span></span>

<span class="token comment"># 将子网掩码转换为 CIDR 格式</span>
<span class="token assign-left variable">cidr</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $subnet <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123; split($0, a, "."); print a[1]*256^3 + a[2]*256^2 + a[3]*256 + a[4] &#125;'</span> <span class="token operator">|</span> <span class="token function">awk</span> '<span class="token punctuation">&#123;</span> mask <span class="token operator">=</span> 0xFFFFFFFF <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">32</span> - log<span class="token punctuation">(</span>$1<span class="token punctuation">)</span>/log<span class="token punctuation">(</span><span class="token number">2</span><span class="token variable">)</span><span class="token variable">)</span></span><span class="token punctuation">;</span> print <span class="token number">32</span> - log<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>/log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token string">')

# 获取本地网络的 IP 段
network=$(echo $ip | awk -F '</span><span class="token builtin class-name">.</span><span class="token string">' '</span><span class="token punctuation">&#123;</span> print <span class="token variable">$1</span>,<span class="token variable">$2</span>,<span class="token variable">$3</span> <span class="token punctuation">&#125;</span><span class="token string">' OFS='</span>.' <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">"s/$/.0\/<span class="token variable">$cidr</span>/"</span><span class="token punctuation">)</span>

<span class="token comment"># 遍历本地网络内的 IP 地址</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">1</span> <span class="token number">254</span><span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">address</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$network</span>.<span class="token variable">$i</span>"</span>
  <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">1</span> <span class="token parameter variable">-w</span> <span class="token number">1</span> <span class="token variable">$address</span> <span class="token operator">></span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$address</span> is online"</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>

该脚本的原理是通过获取本地 IP 地址和子网掩码，计算出本地网络的 IP 段，然后遍历该 IP 段内的所有 IP 地址，使用 <span class="token function">ping</span> 命令测试每个 IP 地址是否在线。如果 <span class="token function">ping</span> 命令返回值为 <span class="token number">0</span>，则表示该 IP 地址在线，输出该 IP 地址。
注意：该脚本中的 eth0 是网卡名称，如果你的网卡名称不是 eth0，需要将脚本中的 eth0 替换为你的网卡名称。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>使用while read line和&#x2F;etc&#x2F;passwd，计算用户id总和<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">可以使用 <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line 和 /etc/passwd 文件来计算用户 ID 的总和。以下是一个示例脚本：

<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> line<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $line <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">':'</span> <span class="token parameter variable">-f</span> <span class="token number">3</span><span class="token variable">)</span></span>
  <span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>sum <span class="token operator">+</span> uid<span class="token variable">))</span></span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> /etc/passwd

<span class="token builtin class-name">echo</span> <span class="token string">"Total UID: <span class="token variable">$sum</span>"</span>

该脚本的原理是使用 <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line 循环读取 /etc/passwd 文件中的每一行，然后使用 <span class="token function">cut</span> 命令提取每行中的用户 ID（第三个字段），并将其累加到 <span class="token function">sum</span> 变量中。最后输出 <span class="token function">sum</span> 变量的值，即为用户 ID 的总和。
注意：该脚本需要使用 root 权限运行，因为只有 root 用户才有权限读取 /etc/passwd 文件。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<p>​	</p>
]]></content>
      <categories>
        <category>Education</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>面试题</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统基础知识·2</title>
    <url>/2023/05/14/magedu-week-2/</url>
    <content><![CDATA[<blockquote>
<p>本文基于马哥教育就业班第二周课程总结</p>
</blockquote>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p>请总结Linux的安全模型</p>
<pre class="line-numbers language-sehll" data-language="sehll"><code class="language-sehll">Linux的安全模型基于许多不同的安全措施，包括访问控制、加密、审计和漏洞修补以下是Linux安全模型的主要要点：
1. 访问控制：Linux使用许多不同的访问控制机制来保护系统和数据其中最常见的是基于用户和组的访问控制，它允许管理员为每个用户和组分配不同的权限此外，Linux还支持访问控制列表（ACL）和强制访问控制（MAC）等高级访问控制机制；
2. 加密：Linux支持许多不同的加密技术，包括SSL &#x2F; TLS、SSH、IPSec和GPG等这些技术可以用于保护数据传输和存储，以及验证用户身份；
3. 审计：Linux支持系统级别的审计，可以记录用户活动、系统事件和安全事件等这些日志可以用于监控系统安全性，并帮助管理员识别潜在的安全问题；
4. 漏洞修补：Linux社区积极修补系统中发现的漏洞，并发布安全更新管理员应该定期更新系统以确保最新的安全补丁已安装；

总之，Linux的安全模型是一个多层次的、综合的安全框架，它提供了许多不同的安全措施来保护系统和数据管理员应该了解这些措施，并采取适当的措施来保护他们的系统。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>总结学过的权限，属性及ACL相关命令及选项，示例</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Linux系统的权限、属性和ACL相关命令及选项如下：

<span class="token number">1</span>. 权限相关命令：
chmod：修改文件或目录的权限选项包括：
u：表示用户权限
g：表示组权限
o：表示其他用户权限
a：表示所有用户权限
+：表示添加权限
-：表示删除权限
<span class="token operator">=</span>：表示设置权限
示例：将文件file.txt的所有用户的读写权限设置为可读可写，命令为：chmod a+rw file.txt

chown：修改文件或目录的所有者和所属组选项包括：
R：递归修改子目录和文件的所有者和所属组
示例：将文件file.txt的所有者和所属组修改为user1和group1，命令为：chown user1:group1 file.txt

chgrp：修改文件或目录的所属组选项包括：
R：递归修改子目录和文件的所属组
示例：将文件file.txt的所属组修改为group1，命令为：chgrp group1 file.txt

<span class="token number">2</span>. 属性相关命令：
lsattr：显示文件或目录的扩展属性选项包括：
R：递归显示子目录和文件的扩展属性
示例：显示文件file.txt的扩展属性，命令为：lsattr file.txt

chattr：修改文件或目录的扩展属性选项包括：
R：递归修改子目录和文件的扩展属性
+：添加扩展属性
-：删除扩展属性
示例：将文件file.txt设置为只读，命令为：chattr +i file.txt

<span class="token number">3</span>. ACL相关命令：
getfacl：显示文件或目录的ACL信息选项包括：
R：递归显示子目录和文件的ACL信息
示例：显示文件file.txt的ACL信息，命令为：getfacl file.txt

setfacl：设置文件或目录的ACL信息选项包括：
R：递归设置子目录和文件的ACL信息
m：修改ACL信息
x：删除ACL信息
示例：将文件file.txt的用户user1的读写权限设置为可读可写，命令为：setfacl <span class="token parameter variable">-m</span> u:user1:rw file.txt

以上是Linux系统的权限、属性和ACL相关命令及选项的简要总结和示例。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结学过的文本处理工具，文件查找工具，文本处理三剑客, 文本格式化命令(printf)的相关命令及选项</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Linux系统中的文本处理工具、文件查找工具、文本处理三剑客和文本格式化命令（printf）的相关命令及选项如下：

<span class="token number">1</span>. 文本处理工具：
grep：在文件中查找匹配的文本选项包括：
i：忽略大小写
v：反转匹配
r：递归查找子目录
示例：在文件file.txt中查找包含“hello”的行，命令为：grep “hello” file.txt

sed：流编辑器，用于编辑文本流选项包括：
i：直接修改文件
s：替换匹配的文本
示例：将文件file.txt中的“hello”替换为“world”，命令为：sed <span class="token parameter variable">-i</span> ‘s/hello/world/g’ file.txt

awk：文本处理工具，用于处理结构化文本选项包括：
F：指定分隔符
NR：行号
NF：字段数
示例：在文件file.txt中查找第一列为“hello”的行，命令为：awk <span class="token parameter variable">-F</span> ‘,’ ‘<span class="token variable">$1</span><span class="token operator">==</span><span class="token string">"hello"</span><span class="token punctuation">&#123;</span>print<span class="token punctuation">&#125;</span>’ file.txt

<span class="token number">2</span>. 文件查找工具：
find：在文件系统中查找文件选项包括：
name：按名称查找
type：按类型查找
size：按大小查找
示例：在当前目录及其子目录中查找所有扩展名为.txt的文件，命令为：find <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> “*.txt”

文本处理三剑客：grep、sed和awk，是Linux系统中最常用的文本处理工具，被称为文本处理三剑客

<span class="token number">3</span>. 文本格式化命令：
printf：格式化输出文本选项包括：
%s：字符串
%d：十进制整数
%f：浮点数
示例：输出字符串“hello world”，命令为：printf <span class="token string">"%s "</span> “hello world”

以上是Linux系统中的文本处理工具、文件查找工具、文本处理三剑客和文本格式化命令（printf）的相关命令及选项的简要总结和示例<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结文本处理的grep命令相关的基本正则和扩展正则表达式</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">基本正则表达式：
^：匹配行首
$：匹配行尾
.：匹配任意单个字符
<span class="token punctuation">[</span><span class="token punctuation">]</span>：匹配括号内的任意一个字符
<span class="token punctuation">[</span>^<span class="token punctuation">]</span>：匹配不在括号内的任意一个字符
*：匹配前一个字符的零个或多个实例
<span class="token punctuation">\</span>：转义字符
示例：匹配以“hello”开头的行，命令为：grep “^hello” file.txt

扩展正则表达式：
?：匹配前一个字符的零个或一个实例
+：匹配前一个字符的一个或多个实例
<span class="token punctuation">(</span><span class="token punctuation">)</span>：分组匹配
<span class="token operator">|</span>：或匹配
<span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span>：匹配前一个字符的n个实例
<span class="token punctuation">&#123;</span>n,<span class="token punctuation">&#125;</span>：匹配前一个字符的至少n个实例
<span class="token punctuation">&#123;</span>n,m<span class="token punctuation">&#125;</span>：匹配前一个字符的n到m个实例
示例：匹配以“hello”开头或以“world”结尾的行，命令为：grep <span class="token parameter variable">-E</span> “^hello<span class="token operator">|</span>world$” file.txt

以上是Linux文本处理中，grep命令相关的基本正则表达式和扩展正则表达式的简要总结和示例<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结变量命名规则，不同类型变量（环境变量，位置变量，只读变量，局部变量，状态变量）如何使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在shell编程中，变量命名规则如下：
变量名只能包含字母、数字和下划线<span class="token punctuation">\</span><span class="token number">2</span>. 变量名不能以数字开头
变量名区分大小写

不同类型变量的使用如下：
<span class="token number">1</span>. 环境变量：
环境变量是在shell启动时设置的变量，可以在整个shell会话中使用
使用export命令将变量设置为环境变量
示例：设置环境变量MY_VAR为hello，命令为：export <span class="token assign-left variable">MY_VAR</span><span class="token operator">=</span>hello

<span class="token number">2</span>. 位置变量：
位置变量是在shell脚本中使用的特殊变量，用于存储命令行参数
<span class="token number">0</span>表示脚本名称，
<span class="token number">1</span>表示第一个参数，<span class="token variable">$2</span>表示第二个参数，以此类推
示例：输出第一个参数，命令为：echo <span class="token variable">$1</span>

<span class="token number">3</span>. 只读变量：
只读变量是不能被修改的变量
使用readonly命令将变量设置为只读变量
示例：将变量MY_VAR设置为只读变量，命令为：readonly MY_VAR

<span class="token number">4</span>. 局部变量：
局部变量是在shell脚本中定义的变量，只能在当前脚本中使用
使用local命令将变量设置为局部变量
示例：在函数中定义局部变量MY_VAR，命令为：local <span class="token assign-left variable">MY_VAR</span><span class="token operator">=</span><span class="token string">"hello"</span>

<span class="token number">5</span>. 状态变量：
状态变量是用于存储shell的状态信息的特殊变量
?表示上一个命令的退出状态码，
<span class="token operator">!</span>表示上一个后台命令的进程ID，<span class="token comment">#表示命令行参数的数量，</span>
*表示所有命令行参数的列表
示例：输出上一个命令的退出状态码，命令为：echo <span class="token variable">$?</span>

以上是shell编程中变量命名规则和不同类型变量的使用的简要总结和示例。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>通过shell编程完成，30鸡和兔的头，80鸡和兔的脚，分别有几只鸡，几只兔？</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">这是一个典型的数学问题，可以通过编写shell脚本来解决假设鸡的数量为x，兔的数量为y，则可以列出以下方程组：

x + y <span class="token operator">=</span> <span class="token number">30</span> 2x + 4y <span class="token operator">=</span> <span class="token number">80</span>

通过求解这个方程组，可以得到x和y的值，即鸡和兔的数量在shell脚本中，可以使用bc命令进行数学计算，代码如下：

<span class="token comment">#!/bin/bash</span>

<span class="token comment"># 计算鸡和兔的数量</span>
<span class="token comment"># x为鸡的数量，y为兔的数量</span>

<span class="token comment"># 定义方程组</span>
<span class="token assign-left variable">eq1</span><span class="token operator">=</span><span class="token string">"x + y = 30"</span>
<span class="token assign-left variable">eq2</span><span class="token operator">=</span><span class="token string">"2*x + 4*y = 80"</span>

<span class="token comment"># 解方程组</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"scale=0; (4*30-80)/2"</span> <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">)</span></span>
<span class="token assign-left variable">y</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"scale=0; (80-2*30)/2"</span> <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">)</span></span>

<span class="token comment"># 输出结果</span>
<span class="token builtin class-name">echo</span> <span class="token string">"鸡的数量为：<span class="token variable">$x</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"兔的数量为：<span class="token variable">$y</span>"</span>
在上面的代码中，首先定义了方程组eq1和eq2，然后使用bc命令求解方程组，最后输出鸡和兔的数量运行脚本后，输出结果如下：

鸡的数量为：10
兔的数量为：20
因此，30鸡和兔的头，80鸡和兔的脚，分别有10只鸡和20只兔<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>结合编程的for循环，条件测试，条件组合，完成批量创建100个用户，<br>  1）for遍历1..100<br>  2）先id判断是否存在<br>  3）用户存在则说明存在，用户不存在则添加用户并说明已添加</p>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">可以使用以下的shell脚本来批量创建100个用户：

<span class="token comment">#!/bin/bash</span>
<span class="token comment"># 批量创建100个用户</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">100</span><span class="token punctuation">&#125;</span>
<span class="token keyword">do</span>
    <span class="token comment"># 判断用户是否存在</span>
    <span class="token keyword">if</span> <span class="token function">id</span> <span class="token string">"user<span class="token variable">$i</span>"</span> <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"用户user<span class="token variable">$i</span>已存在"</span>
    <span class="token keyword">else</span>
        <span class="token comment"># 创建用户</span>
        <span class="token function">useradd</span> <span class="token string">"user<span class="token variable">$i</span>"</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"用户user<span class="token variable">$i</span>已添加"</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
在上面的脚本中，使用for循环遍历1到100，对于每个用户，使用id命令判断用户是否存在如果用户存在，则输出提示信息；如果用户不存在，则使用useradd命令创建用户，并输出提示信息其中，<span class="token string">">/dev/null 2>&amp;1"</span>用于将id命令的输出重定向到/dev/null，以避免输出到终端

运行脚本后，可以看到输出的提示信息，例如：
用户user1已添加
用户user2已添加
……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="存储相关"><a href="#存储相关" class="headerlink" title="存储相关"></a>存储相关</h2><ul>
<li><p>磁盘存储术语总结: head, track, sector, sylinder</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">磁盘存储术语包括以下几个方面：
<span class="token number">1</span>. 磁盘驱动器（Disk Drive）：磁盘驱动器是计算机中用于读写磁盘的设备，通常包括一个或多个磁盘盘片和一个读写磁头
<span class="token number">2</span>. 磁盘盘片（Disk Platter）：磁盘盘片是磁盘驱动器中的一个圆形盘片，通常由铝或玻璃等材料制成，表面涂有磁性材料
<span class="token number">3</span>. 磁头（Read/Write Head）：磁头是磁盘驱动器中的一个读写设备，用于读取和写入磁盘上的数据
<span class="token number">4</span>. 磁道（Track）：磁道是磁盘盘片上的一个圆形轨道，用于存储数据一个磁盘盘片通常包含多个磁道，每个磁道被分成多个扇区
<span class="token number">5</span>. 扇区（Sector）：扇区是磁盘磁道上的一个小块，用于存储数据每个扇区通常包含512个字节的数据
<span class="token number">6</span>. 柱面（Cylinder）：柱面是磁盘驱动器中的一个逻辑概念，表示磁盘盘片上所有磁道的集合一个柱面包含多个磁道，每个磁道上包含多个扇区
总的来说，磁盘存储术语中的head、track、sector和cylinder都是磁盘驱动器中的重要概念，用于描述磁盘上数据的存储和读写方式其中，head表示磁头，用于读取和写入数据；track表示磁道，用于存储数据；sector表示扇区，是磁道上的一个小块，用于存储数据；cylinder表示柱面，是磁盘盘片上所有磁道的集合，用于描述磁盘的物理结构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结MBR,GPT结构盛大开放接口</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">MBR和GPT都是磁盘分区表的结构，用于描述磁盘上的分区信息它们的主要区别如下：
<span class="token number">1</span>. MBR（Master Boot Record）是一种旧的磁盘分区表结构，最多支持4个主分区或3个主分区和1个扩展分区MBR的分区表存储在磁盘的第一个扇区，占用512个字节
<span class="token number">2</span>. GPT（GUID Partition Table）是一种新的磁盘分区表结构，支持最多128个分区GPT的分区表存储在磁盘的第一个和第二个扇区之间，占用至少34个扇区
除了支持的分区数量不同之外，MBR和GPT还有以下区别：
<span class="token number">1</span>. MBR使用32位的分区标识符（Partition ID），而GPT使用128位的GUID（Globally Unique Identifier）
<span class="token number">2</span>. MBR的分区表存储在磁盘的第一个扇区，容易被破坏，而GPT的分区表存储在多个扇区中，具有更好的容错性
<span class="token number">3</span>. GPT支持UEFI（Unified Extensible Firmware Interface）启动，而MBR不支持UEFI启动
总的来说，GPT是一种更先进、更灵活、更可靠的磁盘分区表结构，逐渐取代了旧的MBR结构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结学过的分区，文件系统管理，SWAP管理相关的命令及选项，并以fdisk, parted, mkfs, tune2fs, xfs_info, fsck, mount, umount, swapon, swapoff举例</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. 分区管理命令：
fdisk：用于创建、删除和修改磁盘分区
parted：用于创建、删除和修改磁盘分区，支持更多的分区类型和文件系统类型
示例：
使用fdisk命令创建一个新的分区：
<span class="token function">fdisk</span> /dev/sda 
使用parted命令创建一个新的分区，命令为：
<span class="token function">parted</span> /dev/sda mkpart primary ext4 <span class="token number">0</span>% <span class="token number">100</span>%

<span class="token number">2</span>. 文件系统管理命令：
mkfs：用于创建文件系统
tune2fs：用于调整文件系统的参数
xfs_info：用于显示XFS文件系统的信息
fsck：用于检查和修复文件系统
mount：用于挂载文件系统
umount：用于卸载文件系统
示例：
使用mkfs命令创建一个ext4文件系统：
mkfs.ext4 /dev/sda1 
使用tune2fs命令将ext4文件系统的最大挂载次数设置为10：
tune2fs <span class="token parameter variable">-c</span> <span class="token number">10</span> /dev/sda1 
使用xfs_info命令显示XFS文件系统的信息：
xfs_info /dev/sda1 
使用fsck命令检查并修复ext4文件系统：
fsck.ext4 /dev/sda1 
使用mount命令挂载ext4文件系统：
<span class="token function">mount</span> /dev/sda1 /mnt 
使用umount命令卸载ext4文件系统：
<span class="token function">umount</span> /mnt

<span class="token number">3</span>.交换分区管理命令：
swapon：用于启用SWAP分区
swapoff：用于禁用SWAP分区
示例：
使用swapon命令启用SWAP分区，命令为：swapon /dev/sda2 使用swapoff命令禁用SWAP分区，命令为：swapoff /dev/sda2
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>总结raid 0, 1, 5, 10, 01的工作原理总结各自的利用率，冗余性，性能，至少几个硬盘实现</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">RAID（Redundant Array of Independent Disks）是一种通过将多个硬盘组合起来来提高数据存储性能和可靠性的技术常见的RAID级别包括RAID <span class="token number">0</span>、RAID <span class="token number">1</span>、RAID <span class="token number">5</span>、RAID <span class="token number">10</span>和RAID 01，它们的工作原理、利用率、冗余性和性能如下：
RAID <span class="token number">0</span>：将多个硬盘组合成一个大的逻辑卷，数据被分散存储在各个硬盘上，从而提高了数据读写的速度RAID <span class="token number">0</span>没有冗余性，如果其中一个硬盘损坏，所有数据都将丢失RAID <span class="token number">0</span>的利用率为100%，性能较好，至少需要2个硬盘实现
RAID <span class="token number">1</span>：将多个硬盘组合成一个镜像卷，数据被同时写入多个硬盘，从而提高了数据的可靠性RAID <span class="token number">1</span>的冗余性较好，如果其中一个硬盘损坏，数据仍然可以从其他硬盘中恢复RAID <span class="token number">1</span>的利用率为50%，性能较差，至少需要2个硬盘实现
RAID <span class="token number">5</span>：将多个硬盘组合成一个逻辑卷，数据被分散存储在各个硬盘上，并使用奇偶校验码来保证数据的完整性RAID <span class="token number">5</span>的冗余性较好，如果其中一个硬盘损坏，数据仍然可以从其他硬盘中恢复RAID <span class="token number">5</span>的利用率为n-1/n，性能较好，至少需要3个硬盘实现
RAID <span class="token number">10</span>：将多个硬盘组合成多个镜像卷，并将这些镜像卷组合成一个逻辑卷，数据被同时写入多个硬盘，从而提高了数据的可靠性和读写性能RAID <span class="token number">10</span>的冗余性和性能较好，如果其中一个硬盘损坏，数据仍然可以从其他硬盘中恢复RAID <span class="token number">10</span>的利用率为n/2，至少需要4个硬盘实现
RAID 01：将多个硬盘组合成多个逻辑卷，并将这些逻辑卷组合成一个镜像卷，数据被同时写入多个硬盘，从而提高了数据的可靠性和读写性能RAID 01的冗余性和性能较好，如果其中一个硬盘损坏，数据仍然可以从其他硬盘中恢复RAID 01的利用率为n/2，至少需要4个硬盘实现

总的来说，不同的RAID级别适用于不同的应用场景，需要根据实际需求选择合适的RAID级别RAID <span class="token number">0</span>适用于需要高速读写的场景，但不适用于需要数据冗余的场景；RAID <span class="token number">1</span>适用于需要数据冗余的场景，但性能较差；RAID <span class="token number">5</span>适用于需要数据冗余和高速读写的场景，但需要至少3个硬盘实现；RAID <span class="token number">10</span>和RAID 01适用于数据量大且对性能和冗余要求较高的场景<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>完成不影响业务对LVM磁盘扩容及缩容示例</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. 扩容LVM磁盘
<span class="token comment"># 查看当前的逻辑卷和卷组信息</span>
lvdisplay
vgdisplay
pvdisplay
<span class="token comment"># 扩大逻辑卷的容量到20GB</span>
lvextend <span class="token parameter variable">-L</span> 20G /dev/vg1/lv1
<span class="token comment"># 扩大文件系统的容量到20GB</span>
resize2fs /dev/vg1/lv1
<span class="token number">2</span>. 缩容LVM磁盘
<span class="token comment"># 缩小文件系统的容量到10GB</span>
resize2fs /dev/vg1/lv1 10G
<span class="token comment"># 缩小逻辑卷的容量到10GB</span>
lvreduce <span class="token parameter variable">-L</span> 10G /dev/vg1/lv1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
]]></content>
      <categories>
        <category>Education</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>面试题</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统基础知识·1</title>
    <url>/2023/04/10/magedu-week-1/</url>
    <content><![CDATA[<ol>
<li><p>一个完整计算系统的简要介绍</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">一个完整的计算系统通常包含以下几个组成部分：
<span class="token number">1</span>. 输入设备：用于输入数据和指令的设备，例如键盘、鼠标、触控屏等。
<span class="token number">2</span>. 输出设备：用于显示计算结果和其他信息的设备，例如显示器、打印机等。
<span class="token number">3</span>. 中央处理器（CPU）：执行计算机指令、控制数据处理流程的核心部件。
<span class="token number">4</span>. 存储器：用于存储程序和数据的设备，包括内存和外存。
<span class="token number">5</span>. 总线：连接各个硬件组件的通信路径。
<span class="token number">6</span>. 操作系统：控制计算机各个部分的软件系统，管理计算机资源，提供用户接口等功能。
<span class="token number">7</span>. 应用程序：各种用于完成特定任务的软件程序，例如文字处理、图像处理、音频制作等。
在一个完整的计算系统中，这些部件通常紧密配合、相互协作，共同完成各种复杂的计算任务。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>简述进制转换，并举例</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">进制转换是指将一个数字从一种进制表示方式转换为另一种进制表示方式的过程。常见的进制包括二进制、八进制、十进制和十六进制。

下面以十进制为例，简述一下如何将一个十进制数转换成其他进制的表示方式。
<span class="token number">1</span>. 转换成二进制：利用除法取余法，将十进制数不断除以2，直到商为0为止，将余数倒序排列即为该数的二进制表示。例如：将十进制数27转换成二进制，过程如下：
<span class="token number">27</span> ÷ <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">13</span> 余 <span class="token number">1</span>
<span class="token number">13</span> ÷ <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">6</span> 余 <span class="token number">1</span>
<span class="token number">6</span> ÷ <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">3</span> 余 <span class="token number">0</span>
<span class="token number">3</span> ÷ <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1</span> 余 <span class="token number">1</span>
<span class="token number">1</span> ÷ <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">0</span> 余 <span class="token number">1</span>
因此，27的二进制表示为11011。

<span class="token number">2</span>. 转换成八进制和十六进制：利用除法取余法和表格法。首先将十进制数不断除以八或十六，将余数倒序排列即为该数的八进制或十六进制表示；然后将每个余数对应的八进制或十六进制数字查找对照表，得到该数的八进制或十六进制表示。例如：将十进制数255转换成八进制和十六进制，过程如下：
<span class="token number">255</span> ÷ <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">31</span> 余 <span class="token number">7</span>
<span class="token number">31</span> ÷ <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">3</span> 余 <span class="token number">7</span>
<span class="token number">3</span> ÷ <span class="token number">8</span> <span class="token operator">=</span> <span class="token number">0</span> 余 <span class="token number">3</span>
因此，255的八进制表示为377。
<span class="token number">255</span> ÷ <span class="token number">16</span> <span class="token operator">=</span> <span class="token number">15</span> 余 <span class="token number">15</span>
<span class="token number">15</span> ÷ <span class="token number">16</span> <span class="token operator">=</span> <span class="token number">0</span> 余 <span class="token number">15</span>
因此，255的十六进制表示为FF。

进制转换在计算机科学中非常重要，因为计算机内部所有数据都是以二进制方式存储和处理，而程序员和系统管理员通常需要将这些数据转换成其他进制表示方式，以方便进行调试和交流。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>说明GPL协议与MIT开源协议的异同</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GPL协议（GNU通用公共许可证）和MIT开源协议都是开源软件许可证，有以下异同：

异同点：
<span class="token number">1</span>. 都是开源协议，授权使用、修改、分发和再发布软件。
<span class="token number">2</span>. 要求使用协议的用户保留原有许可证、著作权声明和免责声明等版权相关信息。
<span class="token number">3</span>. 未包含责任条款，表示对使用软件可能带来的损失，不负任何责任。
<span class="token number">4</span>. 允许在商业目的下使用软件。

不同点：
<span class="token number">1</span>. 授权方式不同。GPL协议要求使用该协议的软件必须以同样的GPL协议发布，而MIT协议则允许其他许可证的使用和发布。
<span class="token number">2</span>. 传染性不同。GPL协议是强制性的“传染性”协议，要求所有使用和修改过的代码都必须以同样的GPL协议发布。而MIT协议则不具备传染性，只要在代码中保留相应的许可证和著作权声明即可。
<span class="token number">3</span>. 对衍生作品的影响不同。GPL协议要求使用该协议的软件必须以同样的GPL协议发布，因此可能会对衍生作品产生限制或者对商业应用造成一定程度的不便。而MIT协议则更加宽松，适合商业软件的开发和应用。
<span class="token number">4</span>. 代码公开程度不同。MIT协议只要求保留相应许可证和著作权声明，并没有强制要求公开源代码。而GPL协议则要求在发布的软件中完整地包含源代码，并公开源代码。

综上所述，GPL协议更加强调开放、共享和社区合作，而MIT协议则更加注重商业应用和知识产权的保护，因此在不同的开源项目和应用场景下，开发者需要选择合适的开源协议。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>说明TAB键补全命令以及补全路径的原理</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">TAB键补全命令是指在命令行界面中输入命令时，输入命令的前几个字符后，按下TAB键，系统会自动显示所有以输入字符开始的命令，使用者可以从中选择或继续输入命令。
TAB键补全路径是指在命令行界面中输入路径时，输入一部分路径后，按下TAB键，系统会自动显示以该路径开头的所有文件、目录等，使用者可以从中选择或继续输入路径。

补全命令和路径的原理是通过查找系统中已经存在的命令和文件路径来实现的。当用户在输入命令或路径时，系统会根据输入的字符或路径进行匹配，并返回所有可能匹配的结果。如果只有一个匹配结果，则系统会自动补全该命令或路径；如果有多个匹配结果，则系统会列出所有匹配结果，使用者可以从中选择。当匹配结果为空时，系统则不会执行补全操作。

在Linux系统中，补全命令和路径的原理是通过bash等命令处理器来实现的。当用户按下TAB键时，bash命令处理器会执行相应的自动补全脚本，扫描已经安装的软件和系统路径，以及当前目录下的文件和文件夹，从而找出所有可能匹配的结果，并将这些结果在命令行界面中显示出来。用户在选择需要的命令或路径时，可以继续输入字符或按下TAB键继续补全。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>尝试部署RockyLinux和Ubuntu系统</p>
<ol>
<li><a href="https://www.sujx.net/2021/06/28/ubuntu-template-on-hyperv/">部署Ubuntu</a></li>
<li><a href="https://www.sujx.net/2021/05/08/centos8-make-template//">部署CentOS</a></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Education</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>面试题</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title>内核虚拟化KVM的使用</title>
    <url>/2022/11/03/How2UseKVM/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><a href="https://www.linux-kvm.org/">KVM</a>全称为Kernel Virtual Machine内核虚拟机，它是硬件辅助的全虚拟化解决方案，支持x86架构，并已移植到ARM、MIPS、PowerPC等架构。KVM作为可加载的内核模块包含在Linux内核之中，除了通用模块kvm.ko外，针对不同的CPU还有不同的模块，例如针对Intel的CPU的kvm-intel.ko，针对AMD的kvm-amd.ko.</p>
<p>KVM的体系结构的核心是一组实现虚拟化功能的Linux内核模块，包括提供虚拟化能力的kvm.ko，还包括特定CPU的模块和管理中断、时钟等设备管理模块。而其他设备例如网卡、显卡、存储控制器和磁盘则由QEMU(Quick Emulator)来负责。它通过&#x2F;dev&#x2F;kvm接口设置一个Guest操作系统的地址空间，从而提供模拟的I&#x2F;O设备。Libvirt是管理虚拟机和其他虚拟化功能的软件集合，包括API库、守护进程(libvirtd)和其他工具，它在KVM解决方案中扮演管理工具的角色。</p>
<h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><h3 id="创建虚机"><a href="#创建虚机" class="headerlink" title="创建虚机"></a>创建虚机</h3><h4 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h4><p>以Rocky Linux 8为例，需要准备一台对应虚机，并开启相关嵌套虚拟化功能。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 最小虚拟化宿主环境,仅包括libvirt和qemu-kvm</span>
yum group <span class="token function">install</span> <span class="token parameter variable">-y</span> virtualization-hypervisor 
<span class="token comment"># 用于访问和控制虚拟机以及容器的接口，包括libvirt客户端</span>
yum group <span class="token function">install</span> <span class="token parameter variable">-y</span> virtualization-platform 
<span class="token comment"># 离线管理虚拟映像的工具，包括libguestfs和virtio-win</span>
yum group <span class="token function">install</span> <span class="token parameter variable">-y</span> virtualization-tools
systemctl <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果需要图形化桌面管理工具，还需要附加执行以下命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装桌面</span>
yum group <span class="token function">install</span> <span class="token parameter variable">-y</span> gnome-desktop
<span class="token comment"># 安装管理工具</span>
yum group <span class="token function">install</span> <span class="token parameter variable">-y</span> virtualization-client<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>安装完成之后，可以进行以下检查</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看虚拟机网桥是否建立</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
ens160: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span>
lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">></span>  mtu <span class="token number">65536</span>
virbr0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">409</span><span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>UP,BROADCAST,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.122.1  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.122.255
        ether <span class="token number">52</span>:54:00:16:e8:45  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
<span class="token comment"># 检查虚拟化后台服务</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl status libvirtd</span>
● libvirtd.service - Virtualization daemon
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/libvirtd.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue <span class="token number">2023</span>-05-23 <span class="token number">18</span>:33:29 CST<span class="token punctuation">;</span> 24s ago
     Docs: man:libvirtd<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
           https://libvirt.org
 Main PID: <span class="token number">1362</span> <span class="token punctuation">(</span>libvirtd<span class="token punctuation">)</span>
<span class="token comment"># 检查CPU特性开启情况</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># egrep '(vmx|svm)' /proc/cpuinfo </span>
flags		<span class="token builtin class-name">:</span> fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities
<span class="token comment"># 检查虚拟化功能</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-host-validate </span>
  QEMU: Checking <span class="token keyword">for</span> hardware virtualization                                 <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/kvm exists                                   <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/kvm is accessible                            <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/vhost-net exists                             <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/net/tun exists                               <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpu'</span> controller support                         <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpuacct'</span> controller support                     <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpuset'</span> controller support                      <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'memory'</span> controller support                      <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'devices'</span> controller support                     <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'blkio'</span> controller support                       <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> device assignment IOMMU support                         <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> IOMMU is enabled by kernel                               <span class="token builtin class-name">:</span> WARN <span class="token punctuation">(</span>IOMMU appears to be disabled <span class="token keyword">in</span> kernel. Add <span class="token assign-left variable">intel_iommu</span><span class="token operator">=</span>on to kernel cmdline arguments<span class="token punctuation">)</span>
  QEMU: Checking <span class="token keyword">for</span> secure guest support                                    <span class="token builtin class-name">:</span> WARN <span class="token punctuation">(</span>Unknown <span class="token keyword">if</span> this platform has Secure Guest support<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>IOMMU(输入输出内存管理单元)可以把设备访问的虚拟地址转化为物理地址。在虚拟化中，开启这个功能后可以启用PCI直通(PCI Passthrough),从而允许虚拟机直接调用主机设备，例如网卡、显卡等。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在内核启动选项中添加 intel_iommu=on</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/default/grub</span>
<span class="token assign-left variable">GRUB_CMDLINE_LINUX</span><span class="token operator">=</span><span class="token string">"crashkernel=auto resume=/dev/mapper/rl_rocky-swap rd.lvm.lv=rl_rocky/root rd.lvm.lv=rl_rocky/swap intel_iommu=on"</span>
<span class="token comment"># 重新生成引导器配置文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl reboot</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-host-validate </span>
  QEMU: Checking <span class="token keyword">for</span> hardware virtualization                                 <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/kvm exists                                   <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/kvm is accessible                            <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/vhost-net exists                             <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> device /dev/net/tun exists                               <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpu'</span> controller support                         <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpuacct'</span> controller support                     <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'cpuset'</span> controller support                      <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'memory'</span> controller support                      <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'devices'</span> controller support                     <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> cgroup <span class="token string">'blkio'</span> controller support                       <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">for</span> device assignment IOMMU support                         <span class="token builtin class-name">:</span> PASS
  QEMU: Checking <span class="token keyword">if</span> IOMMU is enabled by kernel                               <span class="token builtin class-name">:</span> PASS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以使用远程SSH服务直接登录服务器进行管理，或者使用Cockpit这个面板进行管理。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启用cockpit网页管理终端</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> cockpit cockpit-machines cockpit-session-recording.noarch cockpit-storaged cockpit-pcp
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> cockpit.socket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h4 id="网页端部署虚机"><a href="#网页端部署虚机" class="headerlink" title="网页端部署虚机"></a>网页端部署虚机</h4><ul>
<li>登录主机的cockpit页面</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-index.png" alt="cockpit"></p>
<ul>
<li>查看cockpit的虚拟机管理界面</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-virt.png" alt="cockpit-vm"></p>
<ul>
<li>查看虚拟机的网络配置信息</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-virt-net.png" alt="vmnet"></p>
<ul>
<li>创建虚机</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-virt-config-deploy.png" alt="creatvm"></p>
<ul>
<li>部署虚机</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-virt-deploy-centos7.png" alt="install"></p>
<ul>
<li>虚机安装</li>
</ul>
<p><img src="https://cdn.sujx.net/cockpit-virt-deploy-centos7-install.png" alt="deploy"></p>
<h4 id="命令行部署虚机"><a href="#命令行部署虚机" class="headerlink" title="命令行部署虚机"></a>命令行部署虚机</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看安装帮助</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-install --help</span>
<span class="token comment"># 查看可用选项 </span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-install --option=?</span>
usage: virt-install <span class="token parameter variable">--name</span> NAME <span class="token parameter variable">--memory</span> MB STORAGE INSTALL <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
virt-install: error: unrecognized arguments: <span class="token parameter variable">--option</span><span class="token operator">=</span>?
<span class="token comment"># 查看disk选项的可选值</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-install --disk=?</span>
<span class="token comment"># 查看os-variant支持的版本</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># osinfo-query os |grep centos</span>
 centos-stream8       <span class="token operator">|</span> CentOS Stream <span class="token number">8</span>                                    <span class="token operator">|</span> <span class="token number">8</span>        <span class="token operator">|</span> http://centos.org/centos-stream/8       
 centos-stream9       <span class="token operator">|</span> CentOS Stream <span class="token number">9</span>                                    <span class="token operator">|</span> <span class="token number">9</span>        <span class="token operator">|</span> http://centos.org/centos-stream/9       
 centos7.0            <span class="token operator">|</span> CentOS <span class="token number">7</span>                                           <span class="token operator">|</span> <span class="token number">7</span>        <span class="token operator">|</span> http://centos.org/centos/7.0            
 centos8              <span class="token operator">|</span> CentOS <span class="token number">8</span>                                           <span class="token operator">|</span> <span class="token number">8</span>        <span class="token operator">|</span> http://centos.org/centos/8
 <span class="token comment"># 执行部署</span>
 <span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-install --name centos --memory 1048 --vcpus 1 --disk size=5 --cdrom /var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso --os-variant centos7.0</span>
WARNING  Unable to connect to graphical console: virt-viewer not installed. Please <span class="token function">install</span> the <span class="token string">'virt-viewer'</span> package.
WARNING  No console to launch <span class="token keyword">for</span> the guest, defaulting to <span class="token parameter variable">--wait</span> <span class="token parameter variable">-1</span>

Starting install<span class="token punctuation">..</span>.
Allocating <span class="token string">'centos.qcow2'</span>                                                                                                                                                                  <span class="token operator">|</span> <span class="token number">5.0</span> GB  00:00:00     

Domain is still running. Installation may be <span class="token keyword">in</span> progress.
Waiting <span class="token keyword">for</span> the installation to complete.
<span class="token comment"># 执行自动化安装</span>
<span class="token comment"># 首先获取先前部署的centos7的anaconda-ks.cfg文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat ks.cfg </span>
<span class="token comment">#version=DEVEL</span>
<span class="token comment"># System authorization information</span>
auth <span class="token parameter variable">--enableshadow</span> <span class="token parameter variable">--passalgo</span><span class="token operator">=</span>sha512
<span class="token comment"># Use CDROM installation media</span>
cdrom
<span class="token comment"># Use graphical install</span>
graphical
<span class="token comment"># Run the Setup Agent on first boot</span>
firstboot <span class="token parameter variable">--enable</span>
ignoredisk --only-use<span class="token operator">=</span>vda
<span class="token comment"># Keyboard layouts</span>
keyboard <span class="token parameter variable">--vckeymap</span><span class="token operator">=</span>us <span class="token parameter variable">--xlayouts</span><span class="token operator">=</span><span class="token string">'us'</span>
<span class="token comment"># System language</span>
lang en_US.UTF-8 <span class="token parameter variable">--addsupport</span><span class="token operator">=</span>zh_CN.UTF-8

<span class="token comment"># Network information</span>
network  <span class="token parameter variable">--bootproto</span><span class="token operator">=</span>dhcp <span class="token parameter variable">--device</span><span class="token operator">=</span>eth0 <span class="token parameter variable">--ipv6</span><span class="token operator">=</span>auto <span class="token parameter variable">--activate</span>
network  <span class="token parameter variable">--hostname</span><span class="token operator">=</span>guest

<span class="token comment"># Root password</span>
rootpw <span class="token parameter variable">--iscrypted</span> <span class="token variable">$6</span><span class="token variable">$fXDkAKiYiFm45WVl</span><span class="token variable">$y4aKkyg3WrG</span>/Kr9V2zmudjiteXLi8omfkIWob4QHlI2M6EflNlUDkeGL2dTsN6fPL7GiPbtSj81D2iXZmKFg6/
<span class="token comment"># System services</span>
services <span class="token parameter variable">--disabled</span><span class="token operator">=</span><span class="token string">"chronyd"</span>
<span class="token comment"># System timezone</span>
timezone Asia/Shanghai <span class="token parameter variable">--isUtc</span> <span class="token parameter variable">--nontp</span>
user <span class="token parameter variable">--groups</span><span class="token operator">=</span>wheel <span class="token parameter variable">--name</span><span class="token operator">=</span>sujx <span class="token parameter variable">--password</span><span class="token operator">=</span><span class="token variable">$6</span><span class="token variable">$O53JLC0</span>/ED1zlRAT<span class="token variable">$6uMXZclHzYezzmuy</span>.NrK7Hx2olv1IfRp949/kNlguE8g.zDIcAqZpacF1tSnQLMOVWCoY7fKai9aWli/Qqf.Z0 <span class="token parameter variable">--iscrypted</span> <span class="token parameter variable">--gecos</span><span class="token operator">=</span><span class="token string">"sujx"</span>
<span class="token comment"># System bootloader configuration</span>
bootloader <span class="token parameter variable">--append</span><span class="token operator">=</span><span class="token string">" crashkernel=auto console=ttyS0,115200"</span>" <span class="token parameter variable">--location</span><span class="token operator">=</span>mbr --boot-drive<span class="token operator">=</span>vda
autopart <span class="token parameter variable">--type</span><span class="token operator">=</span>lvm
<span class="token comment"># Partition clearing information</span>
clearpart <span class="token parameter variable">--none</span> <span class="token parameter variable">--initlabel</span>
<span class="token comment"># SeLinuxConfig</span>
seLinux <span class="token parameter variable">--disabled</span>

%packages
@^minimal
@core
kexec-tools
<span class="token function">wget</span>
telnet
sysstat
qemu-guest-agent
services <span class="token parameter variable">--enable</span> serial-getty@ttyS0.service,qemu-guest-agent

%end

%addon com_redhat_kdump <span class="token parameter variable">--enable</span> --reserve-mb<span class="token operator">=</span><span class="token string">'auto'</span>

%end

%anaconda
pwpolicy root <span class="token parameter variable">--minlen</span><span class="token operator">=</span><span class="token number">6</span> <span class="token parameter variable">--minquality</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--notstrict</span> <span class="token parameter variable">--nochanges</span> <span class="token parameter variable">--notempty</span>
pwpolicy user <span class="token parameter variable">--minlen</span><span class="token operator">=</span><span class="token number">6</span> <span class="token parameter variable">--minquality</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--notstrict</span> <span class="token parameter variable">--nochanges</span> <span class="token parameter variable">--emptyok</span>
pwpolicy luks <span class="token parameter variable">--minlen</span><span class="token operator">=</span><span class="token number">6</span> <span class="token parameter variable">--minquality</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--notstrict</span> <span class="token parameter variable">--nochanges</span> <span class="token parameter variable">--notempty</span>
%end
<span class="token comment"># 调用kickstart文件进行自动化部署，需要注意的是原来的部署源要从cdrom修改为location，并配置kernel地址。</span>
<span class="token comment"># 如果在ks文件中不修改kernel配置，则还可以使用cdrom参数</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virt-install --name centos --memory 1048 --vcpus 1 --disk size=5 --location /var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso,initrd=isolinux/initrd.img,kernel=isolinux/vmlinuz --os-variant centos7.0 --initrd-inject /root/ks.cfg --extra-args ="ks=file:/ks.cfg"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="管理虚机"><a href="#管理虚机" class="headerlink" title="管理虚机"></a>管理虚机</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># virsh 是管理KVM最主要的工具.</span>
<span class="token comment"># 查看虚机清单</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name      State
-------------------------
 <span class="token number">2</span>    centos7   running
<span class="token comment"># 查看虚机信息,使用虚机ID或者Name均可</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh dominfo 2</span>
Id:             <span class="token number">2</span>
Name:           centos7
UUID:           8a6e60ff-d005-4b86-943f-566ea5de2164
OS Type:        hvm
State:          running
CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:         <span class="token number">2</span>
CPU time:       <span class="token number">33</span>.2s
Max memory:     <span class="token number">1048576</span> KiB
Used memory:    <span class="token number">1048576</span> KiB
Persistent:     <span class="token function">yes</span>
Autostart:      disable
Managed save:   no
Security model: none
Security DOI:   <span class="token number">0</span>
<span class="token comment"># 查看虚机IP地址</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh domifaddr centos7</span>
 Name       MAC address          Protocol     Address
-------------------------------------------------------------------------------
 vnet1      <span class="token number">52</span>:54:00:68:0d:79    ipv4         <span class="token number">192.168</span>.122.242/24
<span class="token comment"># 查看虚拟磁盘信息</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh domblklist centos7</span>
 Target   Source
-------------------------------------------------
 vda      /var/lib/libvirt/images/centos7.qcow2
 sda      -
<span class="token comment"># 查看默认存储池中的内容 </span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh vol-list default</span>
 Name                               Path
----------------------------------------------------------------------------------------------
 CentOS-7-x86_64-Minimal-2009.iso   /var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso
 centos7.qcow2                      /var/lib/libvirt/images/centos7.qcow2
<span class="token comment"># 查看系统的存储池</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
<span class="token comment"># 创建虚机之后的网卡变化，多出来一个类型为tun的vnet1</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># nmcli c show</span>
NAME    UUID                                  TYPE      DEVICE 
ens160  b2aeba94-95b0-4944-ac7b-c20e3fc15bd0  ethernet  ens160 
virbr0  87574d83-cd4d-4579-b6e7-2c14827af7a0  bridge    virbr0 
vnet1   87aa11ea-4e07-4d29-bc9b-83a981ae2f79  tun       vnet1
<span class="token comment"># 安装QemuGuestAgent</span>
<span class="token comment"># QemuGuestAgent是KVM-QEMU平台上类似VMTools的工具，基于虚拟的串口控制器与主机进行通信</span>
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># yum install -y qemu-guest-agent</span>
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable --now qemu-guest-agent</span>
<span class="token comment"># 安装完成上述插件后，就可以有更多的控制选项</span>
<span class="token comment"># 查看虚机挂载情况</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh domfsinfo centos7</span>
 Mountpoint   Name   Type   Target
------------------------------------
 /            dm-0   xfs    vda
 /boot        vda1   xfs    vda
<span class="token comment"># 使用virsh console来登录虚机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh console 2</span>
<span class="token comment"># 默认安装虚机会出现卡住的情况</span>
<span class="token comment"># 需要进入虚机中，编辑 /etc/default/grub 文件，找到下面行： </span>
<span class="token assign-left variable">GRUB_CMDLINE_LINUX</span><span class="token operator">=</span><span class="token string">"crashkernel=auto rd.lvm.lv=cl/root rd.lvm.lv=cl/swap rhgb quiet” 
改为：（尾部增加 console=ttyS0,115200） 
GRUB_CMDLINE_LINUX="</span><span class="token assign-left variable">crashkernel</span><span class="token operator">=</span>auto <span class="token assign-left variable">rd.lvm.lv</span><span class="token operator">=</span>centos/root <span class="token assign-left variable">rd.lvm.lv</span><span class="token operator">=</span>centos/swap <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200"
<span class="token comment"># 重新生成GRUB配置并更新内核参数</span>
grub2-mkconfig <span class="token parameter variable">-o</span> /boot/grub2/grub.cfg
<span class="token comment"># 使用以下命令激活服务</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> serial-getty@ttyS0.service

<span class="token comment"># 关闭虚机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh shutdown centos7</span>
Domain <span class="token string">'centos7'</span> is being <span class="token function">shutdown</span>
<span class="token comment"># 指定--mode配置关机模式，有acpi\agent\initctl\signal\paravirt多个选项，建议在安装和启动qemu-guest-agent服务后搭配agent参数使用</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh shutdown centos7 --mode agent</span>
Domain <span class="token string">'centos7'</span> is being <span class="token function">shutdown</span>
<span class="token comment"># 启动虚机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token comment"># 虚机拔电</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh destroy centos7</span>
Domain <span class="token string">'centos7'</span> destroyed
<span class="token comment"># 挂起（暂停）和恢复虚拟机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh suspend centos7</span>
Domain <span class="token string">'centos7'</span> suspended
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh resume centos7</span>
Domain <span class="token string">'centos7'</span> resumed
<span class="token comment"># 保存虚机状态并关闭源虚机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh save centos7 centos7.9.2009</span>
Domain <span class="token string">'centos7'</span> saved to centos7.9.2009
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name      State
--------------------------
 <span class="token number">3</span>    centos    running
 -    centos7   shut off
<span class="token comment"># 恢复保存点的状态        </span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh restore centos7.9.2009 </span>
Domain restored from centos7.9.2009
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name      State
-------------------------
 <span class="token number">3</span>    centos    running
 <span class="token number">7</span>    centos7   running
<span class="token comment"># Host上虚机的配置文件位置</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/etc/libvirt/qemu
<span class="token comment"># 基于配置文件创建新的虚机</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh dumpxml centos7 > centos792009.xml</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># ls</span>
centos792009.xml  centos7.xml  centos.xml  networks
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh domblklist centos7</span>
 Target   Source
-------------------------------------------------
 vda      /var/lib/libvirt/images/centos7.qcow2
 sda      -
<span class="token comment"># 创建新的虚机文件</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># cp /var/lib/libvirt/images/centos7.qcow2 /var/lib/libvirt/images/centos792009.qcow2</span>
<span class="token comment"># 删除原有UUID，并修改磁盘文件位置和配置文件名称</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># vim centos792009.xml </span>
<span class="token comment"># 依据配置文件创建主机</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh create centos792009.xml </span>
Domain <span class="token string">'centos792009'</span> created from centos792009.xml
<span class="token comment"># 使用create命令创建的虚机只执行一次，关机即undefine.</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh shutdown centos792009 </span>
Domain <span class="token string">'centos792009'</span> is being <span class="token function">shutdown</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name      State
-------------------------
 <span class="token number">3</span>    centos    running
 <span class="token number">7</span>    centos7   running
<span class="token comment"># 使用define命令可以创建被定义的主机，即关机仍保留可管理状态</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh define centos792009.xml </span>
Domain <span class="token string">'centos792009'</span> defined from centos792009.xml
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name           State
-------------------------------
 <span class="token number">3</span>    centos         running
 <span class="token number">7</span>    centos7        running
 -    centos792009   shut off
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh start centos792009 </span>
Domain <span class="token string">'centos792009'</span> started
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh shutdown centos792009 </span>
Domain <span class="token string">'centos792009'</span> is being <span class="token function">shutdown</span>

<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name           State
-------------------------------
 <span class="token number">3</span>    centos         running
 <span class="token number">7</span>    centos7        running
 -    centos792009   shut off
<span class="token comment"># 删除虚机</span>
<span class="token punctuation">[</span>root@kvm1 qemu<span class="token punctuation">]</span><span class="token comment"># virsh undefine centos --remove-all-storage</span>
Domain <span class="token string">'centos'</span> has been undefined
Volume <span class="token string">'vda'</span><span class="token punctuation">(</span>/var/lib/libvirt/images/centos.qcow2<span class="token punctuation">)</span> removed.

<span class="token comment"># 管理快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7</span>
 Name   Creation Time   State
-------------------------------
<span class="token comment"># 创建快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create centos7</span>
Domain snapshot <span class="token number">1684926926</span> created
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7</span>
 Name         Creation Time               State
---------------------------------------------------
 <span class="token number">1684926926</span>   <span class="token number">2023</span>-05-24 <span class="token number">19</span>:15:26 +0800   shutoff
<span class="token comment"># 应用快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-revert centos7 --snapshotname 1684926926 </span>
<span class="token comment"># 删除快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-delete centos7 --snapshotname 1684926926 </span>
Domain snapshot <span class="token number">1684926926</span> deleted

<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7</span>
 Name   Creation Time   State
-------------------------------


<span class="token comment">### 管理存储</span>

<span class="token comment">#### 存储模式</span>
    - 基于文件系统的存储
    - 基于块设备的存储
<span class="token comment">#### 磁盘类型</span>
    - 固定Fixe
    - 动态Dynamic
    - 差异Differencing

<span class="token comment">#### 支持的虚拟镜像格式</span>
    - RAW
    - QCOW2
    - VMDK
    - VHD<span class="token punctuation">\</span>VHDX
    - VDI
<span class="token comment">#### QEMU-img</span>

<span class="token comment">#### 概述</span>

qemu-img是一个功能强大的磁盘镜像管理工具

```shell
<span class="token comment"># 获取帮助</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img --help</span>
check <span class="token comment">#检查完整性</span>
create <span class="token comment">#创建镜像</span>
commit <span class="token comment">#提交更改</span>
compare <span class="token comment">#比较</span>
convert <span class="token comment">#转换</span>
info <span class="token comment">#获得信息</span>
map <span class="token comment">#映射</span>
snapshot <span class="token comment">#快照管理</span>
rebase <span class="token comment">#在已有的镜像的基础上创建新的镜像</span>
resize <span class="token comment">#调整大小</span>
amend <span class="token comment">#修订镜像格式选项</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="创建磁盘文件"><a href="#创建磁盘文件" class="headerlink" title="创建磁盘文件"></a>创建磁盘文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 基本使用格式</span>
qemu-img create <span class="token punctuation">[</span>-q<span class="token punctuation">]</span> <span class="token punctuation">[</span>--object objectdef<span class="token punctuation">]</span> <span class="token punctuation">[</span>-f fmt<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b backing_file<span class="token punctuation">]</span> <span class="token punctuation">[</span>-F
backing_fmt<span class="token punctuation">]</span> <span class="token punctuation">[</span>-u<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o options<span class="token punctuation">]</span> filename <span class="token punctuation">[</span>size<span class="token punctuation">]</span>
<span class="token comment"># 创建默认的稀疏格式的磁盘</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img create vm1.img 1g</span>
Formatting <span class="token string">'vm1.img'</span>, <span class="token assign-left variable">fmt</span><span class="token operator">=</span>raw <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">1073741824</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ll -alh</span>
total <span class="token number">6</span>.7G
drwx--x--x <span class="token number">2</span> root root  <span class="token number">108</span> May <span class="token number">24</span> <span class="token number">18</span>:10 <span class="token builtin class-name">.</span>
drwxr-xr-x <span class="token number">9</span> root root  <span class="token number">106</span> May <span class="token number">23</span> <span class="token number">18</span>:26 <span class="token punctuation">..</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">1</span>.0G May <span class="token number">24</span> <span class="token number">18</span>:10 vm1.img
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># du -h vm1.img </span>
<span class="token number">1</span>.0M	vm1.img
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm1.img </span>
image: vm1.img
<span class="token function">file</span> format: raw
virtual size: <span class="token number">1</span> GiB <span class="token punctuation">(</span><span class="token number">1073741824</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">1</span> MiB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="检查磁盘"><a href="#检查磁盘" class="headerlink" title="检查磁盘"></a>检查磁盘</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 需要在虚机关机状态下进行</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img check ./centos792009.qcow2 </span>
No errors were found on the image.
<span class="token number">163840</span>/163840 <span class="token operator">=</span> <span class="token number">100.00</span>% allocated, <span class="token number">0.00</span>% fragmented, <span class="token number">0.00</span>% compressed clusters
Image end offset: <span class="token number">10739318784</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="磁盘预分配策略"><a href="#磁盘预分配策略" class="headerlink" title="磁盘预分配策略"></a>磁盘预分配策略</h4><p>预分配策略：</p>
<ol>
<li>off 此为默认政策，即不使用预分配，磁盘占用空间小</li>
<li>metadata 只预分配元数据，属于稀疏映像类型，相当于精简置备磁盘</li>
<li>falloc 分配文件块并标识为未初始化，即只分配空间但不置零，属于非稀疏映像，相当于厚置备延迟置零</li>
<li>full 分配所有磁盘空间并置零，属于非稀疏映像，相当于厚置备置零。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建映像文件</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img create -f qcow2 vm2.qcow2 1g -o preallocation=off</span>
Formatting <span class="token string">'vm2.qcow2'</span>, <span class="token assign-left variable">fmt</span><span class="token operator">=</span>qcow2 <span class="token assign-left variable">cluster_size</span><span class="token operator">=</span><span class="token number">65536</span> <span class="token assign-left variable">extended_l2</span><span class="token operator">=</span>off <span class="token assign-left variable">preallocation</span><span class="token operator">=</span>off <span class="token assign-left variable">compression_type</span><span class="token operator">=</span>zlib <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">1073741824</span> <span class="token assign-left variable">lazy_refcounts</span><span class="token operator">=</span>off <span class="token assign-left variable">refcount_bits</span><span class="token operator">=</span><span class="token number">16</span>
<span class="token comment"># 查看文件属性</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm2.qcow2 </span>
image: vm2.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">1</span> GiB <span class="token punctuation">(</span><span class="token number">1073741824</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">196</span> KiB
cluster_size: <span class="token number">65536</span>
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">false</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>
<span class="token comment"># 只分配元数据</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img create -f qcow2 vm3.qcow2 1g -o preallocation=metadata</span>
Formatting <span class="token string">'vm3.qcow2'</span>, <span class="token assign-left variable">fmt</span><span class="token operator">=</span>qcow2 <span class="token assign-left variable">cluster_size</span><span class="token operator">=</span><span class="token number">65536</span> <span class="token assign-left variable">extended_l2</span><span class="token operator">=</span>off <span class="token assign-left variable">preallocation</span><span class="token operator">=</span>metadata <span class="token assign-left variable">compression_type</span><span class="token operator">=</span>zlib <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">1073741824</span> <span class="token assign-left variable">lazy_refcounts</span><span class="token operator">=</span>off <span class="token assign-left variable">refcount_bits</span><span class="token operator">=</span><span class="token number">16</span>
<span class="token comment"># 可见比默认文件要大</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm3.qcow2 </span>
image: vm3.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">1</span> GiB <span class="token punctuation">(</span><span class="token number">1073741824</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">2</span> MiB
cluster_size: <span class="token number">65536</span>
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">false</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h4 id="磁盘格式转换"><a href="#磁盘格式转换" class="headerlink" title="磁盘格式转换"></a>磁盘格式转换</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认转换为raw格式</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img convert CentOS8.2.vmdk CentOS8.2.img</span>
<span class="token comment"># 转化为qcow2格式</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img convert -f vmdk -O qcow2 CentOS8.2.vmdk CentOS8.2.qcow2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="调整磁盘大小"><a href="#调整磁盘大小" class="headerlink" title="调整磁盘大小"></a>调整磁盘大小</h4><ul>
<li>操作之前，一定要做好数据备份</li>
<li>增加文件大小后，需要在客户机中使用fdisk、parted等分区工具进行相应的操作才能真正让客户机使用到增加后的镜像空间。</li>
<li>缩小镜像之前，要在客户机中保证里面的文件系统有空余空间，否则会数据丢失。另外xfs文件系统不支持缩减</li>
<li>qcow2不支持缩小镜像的操作</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 操作之前的磁盘</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm1.img</span>
image: vm1.img
<span class="token function">file</span> format: raw
virtual size: <span class="token number">1</span> GiB <span class="token punctuation">(</span><span class="token number">1073741824</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">1</span> MiB
<span class="token comment"># 文件扩容1GB</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img resize ./vm1.img +512M</span>
WARNING: Image <span class="token function">format</span> was not specified <span class="token keyword">for</span> <span class="token string">'./vm1.img'</span> and probing guessed raw.
         Automatically detecting the <span class="token function">format</span> is dangerous <span class="token keyword">for</span> raw images, <span class="token function">write</span> operations on block <span class="token number">0</span> will be restricted.
         Specify the <span class="token string">'raw'</span> <span class="token function">format</span> explicitly to remove the restrictions.
Image resized.
<span class="token comment"># 操作完成</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm1.img</span>
image: vm1.img
<span class="token function">file</span> format: raw
virtual size: <span class="token number">1.5</span> GiB <span class="token punctuation">(</span><span class="token number">1610612736</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">1</span> MiB
<span class="token comment"># 缩容1GB</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img resize --shrink ./vm1.img -1G</span>
WARNING: Image <span class="token function">format</span> was not specified <span class="token keyword">for</span> <span class="token string">'./vm1.img'</span> and probing guessed raw.
         Automatically detecting the <span class="token function">format</span> is dangerous <span class="token keyword">for</span> raw images, <span class="token function">write</span> operations on block <span class="token number">0</span> will be restricted.
         Specify the <span class="token string">'raw'</span> <span class="token function">format</span> explicitly to remove the restrictions.
Image resized.
<span class="token comment"># 缩容结果</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info vm1.img</span>
image: vm1.img
<span class="token function">file</span> format: raw
virtual size: <span class="token number">512</span> MiB <span class="token punctuation">(</span><span class="token number">536870912</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">1</span> MiB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="快照管理"><a href="#快照管理" class="headerlink" title="快照管理"></a>快照管理</h4><p>磁盘快照的分类：</p>
<ul>
<li>按照快照信息分为：<ul>
<li>内置快照：快照数据和Base数据放在同一个qcow2文件中；</li>
<li>外置快照：快照数据单独一个qcow2文件存放；</li>
</ul>
</li>
<li>按照虚机运行状态可以分为：<ul>
<li>关机态快照：数据可以保持一致性</li>
<li>运行态快照：数据无法保证一致性，可能需要fsck操作</li>
</ul>
</li>
<li>按照磁盘数量可以分为：<ul>
<li>单盘：不涉及原子性</li>
<li>多盘：涉及原子性，要么所有盘快照都成功，要么全失败</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看虚机磁盘信息</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh domblklist centos7</span>
 Target   Source
-------------------------------------------------
 vda      /var/lib/libvirt/images/centos7.qcow2
 sda      -
<span class="token comment"># 查看当前磁盘快照信息</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -l centos7.qcow2 </span>
<span class="token comment"># 创建名为centos7-1的快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -c centos7-1 ./centos7.qcow2 </span>
<span class="token comment"># 再次查看磁盘快照信息</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -l centos7.qcow2 </span>
Snapshot list:
ID        TAG               VM SIZE                DATE     VM CLOCK     ICOUNT
<span class="token number">1</span>         centos7-1             <span class="token number">0</span> B <span class="token number">2023</span>-05-24 <span class="token number">19</span>:06:20 00:00:00.000          <span class="token number">0</span>
<span class="token comment"># 磁盘属性中也有快照信息</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img info ./centos7.qcow2 </span>
image: ./centos7.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">2.34</span> GiB
cluster_size: <span class="token number">65536</span>
Snapshot list:
ID        TAG               VM SIZE                DATE     VM CLOCK     ICOUNT
<span class="token number">1</span>         centos7-1             <span class="token number">0</span> B <span class="token number">2023</span>-05-24 <span class="token number">19</span>:06:20 00:00:00.000          <span class="token number">0</span>
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">true</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>
<span class="token comment"># 删除文件并通过磁盘快照找回</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh console centos7 </span>
Connected to domain <span class="token string">'centos7'</span>
Escape character is ^<span class="token punctuation">]</span> <span class="token punctuation">(</span>Ctrl + <span class="token punctuation">]</span><span class="token punctuation">)</span>

guest login: root
Password: 
Last login: Wed May <span class="token number">24</span> <span class="token number">11</span>:19:56 on ttyS0
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># rm anaconda-ks.cfg </span>
rm: remove regular <span class="token function">file</span> ‘anaconda-ks.cfg’? y
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># poweroff</span>

<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -a centos7-1 ./centos7.qcow2 </span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh console centos7 </span>
Connected to domain <span class="token string">'centos7'</span>
Escape character is ^<span class="token punctuation">]</span> <span class="token punctuation">(</span>Ctrl + <span class="token punctuation">]</span><span class="token punctuation">)</span>

guest login: root
Password: 
Last login: Wed May <span class="token number">24</span> <span class="token number">11</span>:19:56 on ttyS0
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg
<span class="token comment"># 删除磁盘快照</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -d centos7-1 ./centos7.qcow2 </span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># qemu-img snapshot -l ./centos7.qcow2 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="管理网络"><a href="#管理网络" class="headerlink" title="管理网络"></a>管理网络</h3><h4 id="查看默认网络环境"><a href="#查看默认网络环境" class="headerlink" title="查看默认网络环境"></a>查看默认网络环境</h4><p>libvirt网络的最重要组件是虚拟网络交换机，默认由Linux网桥实现，libvirt会创建virbr0，虚拟交换机的端口数量没有限制。连接网桥的接口通常被称为slave接口。</p>
<p>在libvirtd守护程序启动时，会根据配置文件创建一个default的虚拟网络，并通过配置IP转发、iptables的NAT表从而实现NAT功能。libvirt使用IP伪装（IP Masquerading)实现内部虚机访问外部。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ipv4的转发功能已打开</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># cat /proc/sys/net/ipv4/ip_forward</span>
<span class="token number">1</span>
<span class="token comment"># 查看当前路由表</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># iptables -t nat -L -n</span>
Chain PREROUTING <span class="token punctuation">(</span>policy ACCEPT<span class="token punctuation">)</span>
target     prot opt <span class="token builtin class-name">source</span>               destination         

Chain INPUT <span class="token punctuation">(</span>policy ACCEPT<span class="token punctuation">)</span>
target     prot opt <span class="token builtin class-name">source</span>               destination         

Chain POSTROUTING <span class="token punctuation">(</span>policy ACCEPT<span class="token punctuation">)</span>
target     prot opt <span class="token builtin class-name">source</span>               destination         
LIBVIRT_PRT  all  --  <span class="token number">0.0</span>.0.0/0            <span class="token number">0.0</span>.0.0/0           

Chain OUTPUT <span class="token punctuation">(</span>policy ACCEPT<span class="token punctuation">)</span>
target     prot opt <span class="token builtin class-name">source</span>               destination         

Chain LIBVIRT_PRT <span class="token punctuation">(</span><span class="token number">1</span> references<span class="token punctuation">)</span>
target     prot opt <span class="token builtin class-name">source</span>               destination         
RETURN     all  --  <span class="token number">192.168</span>.122.0/24     <span class="token number">224.0</span>.0.0/24        
RETURN     all  --  <span class="token number">192.168</span>.122.0/24     <span class="token number">255.255</span>.255.255     
MASQUERADE  tcp  --  <span class="token number">192.168</span>.122.0/24    <span class="token operator">!</span><span class="token number">192.168</span>.122.0/24     masq ports: <span class="token number">1024</span>-65535
MASQUERADE  udp  --  <span class="token number">192.168</span>.122.0/24    <span class="token operator">!</span><span class="token number">192.168</span>.122.0/24     masq ports: <span class="token number">1024</span>-65535
MASQUERADE  all  --  <span class="token number">192.168</span>.122.0/24    <span class="token operator">!</span><span class="token number">192.168</span>.122.0/24  
<span class="token comment"># 由dnsmasq提供dhcp，默认地址池为192.168.122.2~254</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ps aux|grep dnsmq</span>
root       <span class="token number">12962</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">12144</span>  <span class="token number">1164</span> pts/0    S+   <span class="token number">19</span>:50   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto dnsmq
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># cat /var/lib/libvirt/dnsmasq/default.conf </span>
<span class="token comment">##WARNING:  THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE</span>
<span class="token comment">##OVERWRITTEN AND LOST.  Changes to this configuration should be made using:</span>
<span class="token comment">##    virsh net-edit default</span>
<span class="token comment">## or other application using the libvirt API.</span>
<span class="token comment">##</span>
<span class="token comment">## dnsmasq conf file created by libvirt</span>
strict-order
pid-file<span class="token operator">=</span>/run/libvirt/network/default.pid
except-interface<span class="token operator">=</span>lo
bind-dynamic
<span class="token assign-left variable">interface</span><span class="token operator">=</span>virbr0
dhcp-range<span class="token operator">=</span><span class="token number">192.168</span>.122.2,192.168.122.254,255.255.255.0
dhcp-no-override
dhcp-authoritative
dhcp-lease-max<span class="token operator">=</span><span class="token number">253</span>
dhcp-hostsfile<span class="token operator">=</span>/var/lib/libvirt/dnsmasq/default.hostsfile
addn-hosts<span class="token operator">=</span>/var/lib/libvirt/dnsmasq/default.addnhosts

<span class="token comment"># 查看虚机网络配置</span>
<span class="token comment"># 开机之前</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># nmcli c</span>
NAME    UUID                                  TYPE      DEVICE 
ens160  b2aeba94-95b0-4944-ac7b-c20e3fc15bd0  ethernet  ens160 
virbr0  0782ace4-e598-4332-95a8-b91556cb1523  bridge    virbr0 
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh domiflist centos7</span>
 Interface   Type      Source    Model    MAC
-------------------------------------------------------------
 -           network   default   virtio   <span class="token number">52</span>:54:00:68:0d:79
<span class="token comment"># 开机之后</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># nmcli c</span>
NAME    UUID                                  TYPE      DEVICE 
ens160  b2aeba94-95b0-4944-ac7b-c20e3fc15bd0  ethernet  ens160 
virbr0  0782ace4-e598-4332-95a8-b91556cb1523  bridge    virbr0 
vnet3   cfa6cdb4-9f5d-430f-a088-fc9e717f18b1  tun       vnet3 
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># virsh domiflist centos7</span>
 Interface   Type      Source    Model    MAC
-------------------------------------------------------------
 vnet2       network   default   virtio   <span class="token number">52</span>:54:00:68:0d:79
 <span class="token comment"># 新虚机设备的网络接口的名称时以vnet为开头，从0开始，并从dnsmasq获取IP地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="设备类型工作原理和管理"><a href="#设备类型工作原理和管理" class="headerlink" title="设备类型工作原理和管理"></a>设备类型工作原理和管理</h4><p>虚拟网络接口设备功能与物理网卡类似，有两种常用类型：TAP、TUN。TUN、TAP是没有关联物理设备的虚拟接口，用户空间程序可以附加到TUN&#x2F;TAP接口并处理发送到该接口的流量。可以为该接口分配IP地址、路由数据包到该接口、分析流量等。应用场景为VPN和云计算。</p>
<p>TUN设备在OSI3层运行，实现虚拟IP点对点接口，没有Mac地址，不能称为网桥的slave设备。</p>
<p>TAP设备运行在OSI模型的2层，可以接受和发送原始以太网数据包，有Mac地址，可以成为网桥的slave设备。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建tap设备</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ip tuntap add dev tap-nic1 mode tap</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ip link</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN mode DEFAULT group default qlen <span class="token number">1000</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
<span class="token number">2</span>: ens160: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc mq state UP mode DEFAULT group default qlen <span class="token number">1000</span>
    link/ether 00:0c:29:a9:29:c5 brd ff:ff:ff:ff:ff:ff
    altname enp3s0
<span class="token number">3</span>: virbr0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP mode DEFAULT group default qlen <span class="token number">1000</span>
    link/ether <span class="token number">52</span>:54:00:16:e8:45 brd ff:ff:ff:ff:ff:ff
<span class="token number">7</span>: vnet3: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue master virbr0 state UNKNOWN mode DEFAULT group default qlen <span class="token number">1000</span>
    link/ether fe:54:00:68:0d:79 brd ff:ff:ff:ff:ff:ff
<span class="token number">8</span>: tap-nic1: <span class="token operator">&lt;</span>BROADCAST,MULTICAST<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noop state DOWN mode DEFAULT group default qlen <span class="token number">1000</span>
    link/ether ce:b1:d6:f5:b2:be brd ff:ff:ff:ff:ff:ff
<span class="token comment"># 删除tap设备</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ip tuntap del dev tap-nic1 mode tap</span>
<span class="token comment"># 使用NetworkManager来新增一个tun设备</span>
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># nmcli c add type tun con-name newcon1 ifname tap-nic2 mode tap ip4 172.16.123.2/24</span>
Connection <span class="token string">'newcon1'</span> <span class="token punctuation">(</span>7b45dbc7-ffe2-4375-9377-9cb94238ac42<span class="token punctuation">)</span> successfully added.
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># nmcli c</span>
NAME     UUID                                  TYPE      DEVICE   
ens160   b2aeba94-95b0-4944-ac7b-c20e3fc15bd0  ethernet  ens160   
newcon1  7b45dbc7-ffe2-4375-9377-9cb94238ac42  tun       tap-nic2 
virbr0   0782ace4-e598-4332-95a8-b91556cb1523  bridge    virbr0   
vnet3    cfa6cdb4-9f5d-430f-a088-fc9e717f18b1  tun       vnet3    
<span class="token punctuation">[</span>root@kvm1 images<span class="token punctuation">]</span><span class="token comment"># ip tuntap list</span>
vnet3: tap vnet_hdr
tap-nic2: tap persist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="KVM-x2F-libvirt常用网络类型"><a href="#KVM-x2F-libvirt常用网络类型" class="headerlink" title="KVM&#x2F;libvirt常用网络类型"></a>KVM&#x2F;libvirt常用网络类型</h4><ul>
<li>NAT模式</li>
<li>桥接模式</li>
<li>隔离模式</li>
<li>路由模式</li>
<li>开封模式</li>
<li>直接附加模式</li>
<li>PCI直通与SR-IOV</li>
</ul>
<h3 id="管理存储"><a href="#管理存储" class="headerlink" title="管理存储"></a>管理存储</h3><p>虚拟存储时可以分配给虚机的存储空军，是宿主机物理存储的一部分，是通过模拟或者半虚拟化的快设备驱动程序分配给虚机的存储。由Libvirt创建和管理的存储称为托管存储(Managed Storage)，管理员手工创建的则被称为非托管存储。</p>
<h4 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h4><ul>
<li>虚拟机设备</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># type 设备类型</span>
<span class="token function">file</span> block <span class="token function">dir</span> network volume nvme，默认为file
<span class="token comment"># device 设备</span>
floppy cdrom disk lun，默认为disk
<span class="token comment"># source 源地址</span>
<span class="token comment"># bus 指定要模拟的设备类型，或者指驱动程序</span>
ide scsi virtio usb sata sd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>宿主机设备</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 映像文件</span>
<span class="token comment"># LVM卷</span>
<span class="token comment"># 宿主设备</span>
<span class="token comment"># 分布式存储系统</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="存储池"><a href="#存储池" class="headerlink" title="存储池"></a>存储池</h4><h5 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h5><p>存储池是由Libvirt管理的为虚机预留的宿主机上的存储容量，可以在存储池的空间中创建存储卷，然后将存储卷当作块设备分配给虚机。存储池屏蔽了底层物理路径，提高的系统管理的灵活性。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看宿主机存储池情况</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list --all --details</span>
 Name      State     Autostart   Persistent   Capacity    Allocation   Available
----------------------------------------------------------------------------------
 default   running   <span class="token function">yes</span>         <span class="token function">yes</span>          <span class="token number">16.40</span> GiB   <span class="token number">7.01</span> GiB     <span class="token number">9.39</span> GiB
 ISO       running   <span class="token function">yes</span>         <span class="token function">yes</span>          <span class="token number">9.99</span> GiB    <span class="token number">1.05</span> GiB     <span class="token number">8.93</span> GiB
 KVM       running   <span class="token function">yes</span>         <span class="token function">yes</span>          <span class="token number">9.99</span> GiB    <span class="token number">1.05</span> GiB     <span class="token number">8.93</span> GiB
 NFS       running   <span class="token function">yes</span>         <span class="token function">yes</span>          <span class="token number">49.97</span> GiB   <span class="token number">3.25</span> GiB     <span class="token number">46.72</span> GiB
<span class="token comment"># 查看指定存储池详细信息</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-info NFS</span>
Name:           NFS
UUID:           a761ebee-3a45-484b-9464-e80e79b078b3
State:          running
Persistent:     <span class="token function">yes</span>
Autostart:      <span class="token function">yes</span>
Capacity:       <span class="token number">49.97</span> GiB
Allocation:     <span class="token number">3.25</span> GiB
Available:      <span class="token number">46.72</span> GiB
<span class="token comment"># 查看执行存储池XML配置</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-dumpxml ISO</span>
<span class="token operator">&lt;</span>pool <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'dir'</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>name<span class="token operator">></span>ISO<span class="token operator">&lt;</span>/name<span class="token operator">></span>
  <span class="token operator">&lt;</span>uuid<span class="token operator">></span>7c0205b7-a6f7-4381-a509-bb5bd2d5a77<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/uuid<span class="token operator">></span>
  <span class="token operator">&lt;</span>capacity <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token number">1072273817</span><span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>/capacity<span class="token operator">></span>
  <span class="token operator">&lt;</span>allocation <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token number">112893542</span><span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>/allocation<span class="token operator">></span>
  <span class="token operator">&lt;</span>available <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token number">959380275</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/available<span class="token operator">></span>
  <span class="token operator">&lt;</span>source<span class="token operator">></span>
  <span class="token operator">&lt;</span>/source<span class="token operator">></span>
  <span class="token operator">&lt;</span>target<span class="token operator">></span>
    <span class="token operator">&lt;</span>path<span class="token operator">></span>/data/iso<span class="token operator">&lt;</span>/path<span class="token operator">></span>
    <span class="token operator">&lt;</span>permissions<span class="token operator">></span>
      <span class="token operator">&lt;</span>mode<span class="token operator">></span>075<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>/mode<span class="token operator">></span>
      <span class="token operator">&lt;</span>owner<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/owner<span class="token operator">></span>
      <span class="token operator">&lt;</span>group<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/group<span class="token operator">></span>
    <span class="token operator">&lt;</span>/permissions<span class="token operator">></span>
  <span class="token operator">&lt;</span>/target<span class="token operator">></span>
<span class="token operator">&lt;</span>/pool<span class="token operator">></span>
<span class="token comment"># 存储池配置文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tree /etc/libvirt/storage/</span>
/etc/libvirt/storage/
├── autostart
│   ├── default.xml -<span class="token operator">></span> /etc/libvirt/storage/default.xml
│   ├── ISO.xml -<span class="token operator">></span> /etc/libvirt/storage/ISO.xml
│   ├── KVM.xml -<span class="token operator">></span> /etc/libvirt/storage/KVM.xml
│   └── NFS.xml -<span class="token operator">></span> /etc/libvirt/storage/NFS.xml
├── default.xml
├── ISO.xml
├── KVM.xml
└── NFS.xml

<span class="token number">1</span> directory, <span class="token number">8</span> files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><p>存储池按照时效性划分可以有持久型存储池和临时性存储池；按底层存储技术可以分为基于目录、基于磁盘、基于分区、基于GlusterFS、基于iSCSI、基于LVM、基于ZFS等多种存储池；按照存储位置可以分为本地存储池和共享存储池。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-create-as --</span>
--adapter-name               --adapter-parent-wwpn        --auth-username              <span class="token parameter variable">--overwrite</span>                  --source-dev                 --source-name                <span class="token parameter variable">--type</span>
--adapter-parent             --adapter-wwnn               <span class="token parameter variable">--build</span>                      --print-xml                  --source-format              --source-path                
--adapter-parent-fabric-wwn  --adapter-wwpn               <span class="token parameter variable">--name</span>                       --secret-usage               --source-host                --source-protocol-ver        
--adapter-parent-wwnn        --auth-type                  --no-overwrite               --secret-uuid                --source-initiator           <span class="token parameter variable">--target</span>                     
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-create-as --type </span>
<span class="token function">dir</span>           disk          fs            gluster       iscsi         iscsi-direct  logical       mpath         netfs         rbd           scsi          sheepdog      vstorage      zfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>存储池创建的流程：</p>
<ol>
<li>定义(define)存储池</li>
<li>构建(build)存储池目标路径</li>
<li>启动(start)存储池</li>
<li>将存储池设置为自动启动(autostrat)</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建基于目录的存储池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-define-as --name test --type dir --target "/data/test"</span>
Pool <span class="token builtin class-name">test</span> defined
<span class="token comment"># 查看配置文件信息</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/libvirt/storage/test.xml </span>
<span class="token operator">&lt;</span><span class="token operator">!</span>--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  <span class="token function">virsh</span> pool-edit <span class="token builtin class-name">test</span>
or other application using the libvirt API.
--<span class="token operator">></span>

<span class="token operator">&lt;</span>pool <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'dir'</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>name<span class="token operator">></span>test<span class="token operator">&lt;</span>/name<span class="token operator">></span>
  <span class="token operator">&lt;</span>uuid<span class="token operator">></span>056536d5-b816-4b49-b822-a3b65a6c917a<span class="token operator">&lt;</span>/uuid<span class="token operator">></span>
  <span class="token operator">&lt;</span>capacity <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/capacity<span class="token operator">></span>
  <span class="token operator">&lt;</span>allocation <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/allocation<span class="token operator">></span>
  <span class="token operator">&lt;</span>available <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/available<span class="token operator">></span>
  <span class="token operator">&lt;</span>source<span class="token operator">></span>
  <span class="token operator">&lt;</span>/source<span class="token operator">></span>
  <span class="token operator">&lt;</span>target<span class="token operator">></span>
    <span class="token operator">&lt;</span>path<span class="token operator">></span>/data/test<span class="token operator">&lt;</span>/path<span class="token operator">></span>
  <span class="token operator">&lt;</span>/target<span class="token operator">></span>
<span class="token operator">&lt;</span>/pool<span class="token operator">></span>
<span class="token comment"># 当前并不会创建池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
 NFS       active   <span class="token function">yes</span>
<span class="token comment"># 构建存储池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-build test</span>
Pool <span class="token builtin class-name">test</span> built
<span class="token comment"># 依然没有存储池，build命令会自动创建文件目录</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
 NFS       active   <span class="token function">yes</span>
<span class="token comment"># 启动存储池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-start test</span>
Pool <span class="token builtin class-name">test</span> started
<span class="token comment"># 可见存储池已经可用，但是临时性的</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
 NFS       active   <span class="token function">yes</span>
 <span class="token builtin class-name">test</span>      active   no
<span class="token comment"># 配置自动启动</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-autostart test </span>
Pool <span class="token builtin class-name">test</span> marked as autostarted

<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
 NFS       active   <span class="token function">yes</span>
 <span class="token builtin class-name">test</span>      active   <span class="token function">yes</span>
<span class="token comment"># 删除存储池test</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-destroy test </span>
<span class="token comment"># 列表中删除test存储池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
 NFS       active   <span class="token function">yes</span>
<span class="token comment"># test配置文件保留  </span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/libvirt/storage/test.xml </span>
<span class="token operator">&lt;</span><span class="token operator">!</span>--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  <span class="token function">virsh</span> pool-edit <span class="token builtin class-name">test</span>
or other application using the libvirt API.
--<span class="token operator">></span>

<span class="token operator">&lt;</span>pool <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'dir'</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>name<span class="token operator">></span>test<span class="token operator">&lt;</span>/name<span class="token operator">></span>
  <span class="token operator">&lt;</span>uuid<span class="token operator">></span>056536d5-b816-4b49-b822-a3b65a6c917a<span class="token operator">&lt;</span>/uuid<span class="token operator">></span>
  <span class="token operator">&lt;</span>capacity <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/capacity<span class="token operator">></span>
  <span class="token operator">&lt;</span>allocation <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/allocation<span class="token operator">></span>
  <span class="token operator">&lt;</span>available <span class="token assign-left variable">unit</span><span class="token operator">=</span><span class="token string">'bytes'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/available<span class="token operator">></span>
  <span class="token operator">&lt;</span>source<span class="token operator">></span>
  <span class="token operator">&lt;</span>/source<span class="token operator">></span>
  <span class="token operator">&lt;</span>target<span class="token operator">></span>
    <span class="token operator">&lt;</span>path<span class="token operator">></span>/data/test<span class="token operator">&lt;</span>/path<span class="token operator">></span>
  <span class="token operator">&lt;</span>/target<span class="token operator">></span>
<span class="token operator">&lt;</span>/pool<span class="token operator">></span>
<span class="token comment"># 删除配置</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-undefine test </span>
Pool <span class="token builtin class-name">test</span> has been undefined
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/libvirt/storage/</span>
autostart/   default.xml  ISO.xml      KVM.xml      NFS.xml 
<span class="token comment"># 创建NFS共享为存储池</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-create-as NFS netfs --source-host=stor1 --source-path=/data/nfs --target=/data/nfs</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="存储卷"><a href="#存储卷" class="headerlink" title="存储卷"></a>存储卷</h3><p>可以将存储池划分为存储卷，它可以使映像文件、物理分区、LVM卷或者其他可以被libvirt管理的存储。无论底层硬件架构如何，存储卷都将以块设备附加到虚机。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看存储池的卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-list NFS</span>
 Name                Path
--------------------------------------------------
 centosshare.qcow2   /data/nfs/centosshare.qcow2
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-list ISO --details</span>
 Name                               Path                                         Type   Capacity     Allocation
-----------------------------------------------------------------------------------------------------------------
 CentOS-7-x86_64-Minimal-2009.iso   /data/iso/CentOS-7-x86_64-Minimal-2009.iso   <span class="token function">file</span>   <span class="token number">973.00</span> MiB   <span class="token number">973.00</span> MiB
 <span class="token comment"># 相关参数</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-</span>
vol-clone        vol-create-as    vol-delete       vol-dumpxml      vol-key          vol-name         vol-pool         vol-upload       
vol-create       vol-create-from  vol-download     vol-info         vol-list         vol-path         vol-resize       vol-wipe   
<span class="token comment"># 创建一个10GB大小的预先分配元数据的存储卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-create-as --pool NFS --name rocky.qcow2 --format qcow2 --capacity 10G --prealloc-metadata </span>
Vol rocky.qcow2 created
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-list --pool NFS --details </span>
 Name                Path                          Type   Capacity    Allocation
----------------------------------------------------------------------------------
 centosshare.qcow2   /data/nfs/centosshare.qcow2   <span class="token function">file</span>   <span class="token number">10.00</span> GiB   <span class="token number">2.87</span> GiB
 rocky.qcow2         /data/nfs/rocky.qcow2         <span class="token function">file</span>   <span class="token number">10.00</span> GiB   <span class="token number">12.00</span> GiB
<span class="token comment"># 创建一个默认不提前分配磁盘的存储卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-create-as --pool NFS --name rocky9.qcow2 --format qcow2 --capacity 10G </span>
Vol rocky9.qcow2 created

<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /data/nfs/rocky9.qcow2 </span>
image: /data/nfs/rocky9.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">196</span> KiB
cluster_size: <span class="token number">65536</span>
Format specific information:
    compat: <span class="token number">0.10</span>
    compression type: zlib
    refcount bits: <span class="token number">16</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-list --pool NFS --details </span>
 Name                Path                          Type   Capacity    Allocation
----------------------------------------------------------------------------------
 centosshare.qcow2   /data/nfs/centosshare.qcow2   <span class="token function">file</span>   <span class="token number">10.00</span> GiB   <span class="token number">2.87</span> GiB
 rocky.qcow2         /data/nfs/rocky.qcow2         <span class="token function">file</span>   <span class="token number">10.00</span> GiB   <span class="token number">12.00</span> GiB
 rocky9.qcow2        /data/nfs/rocky9.qcow2        <span class="token function">file</span>   <span class="token number">10.00</span> GiB   <span class="token number">196.00</span> KiB
<span class="token comment"># 附加磁盘到centos7虚机，使用--config表示重启或者再启动后添加，默认需要虚机处于开机状态才能添加</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh attach-disk --domain centos7 --cache none --source /data/nfs/rocky.qcow2 --target vdb --config </span>
Disk attached successfully
<span class="token comment"># 分离存储卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh detach-disk --domain centos7 --target vdb --config </span>
Disk detached successfully
<span class="token comment"># 擦除存储卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-wipe --pool NFS --vol rocky.qcow2 </span>
Vol rocky.qcow2 wiped
<span class="token comment"># 删除存储卷</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vol-delete --pool NFS --vol rocky.qcow2</span>
Vol rocky.qcow2 deleted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>





<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="虚机的迁移"><a href="#虚机的迁移" class="headerlink" title="虚机的迁移"></a>虚机的迁移</h3><p>KVM虚机由XML配置我呢见和磁盘映像组成，如果虚机正在运行则还要考虑内存的迁移。按照目标宿主机的位置来分，虚机迁移分为两种：内部迁移和宿主机之间的迁移。按照虚机的状态来区分，虚机迁移分为3种：实时(虚机处于运行状态)迁移、非实时(虚机处于休眠状态)迁移和离线(虚机处于关机状态)迁移。</p>
<p>虚机迁移的要求：</p>
<ol>
<li>尽量使用共享存储，非共享存储需要添加 –copy-storage来实现迁移；</li>
<li>对宿主机操作系统版本号有要求RHEL7.5之后可以迁移到RHEL8，反之则不可以。RHEL8各个版本可以互相迁移；</li>
</ol>
<p>虚机迁移的限制：</p>
<ol>
<li>使用直通设备的，不支持迁移</li>
<li>使用单根虚拟化设备(SR-IOV)的，不支持迁移</li>
<li>使用vGPU设备的，不支持迁移</li>
<li>需要支持NUMA</li>
</ol>
<h4 id="宿主机内部迁移"><a href="#宿主机内部迁移" class="headerlink" title="宿主机内部迁移"></a>宿主机内部迁移</h4><p>KVM的宿主机内部迁移无法通过cockpit或者virsh命令完成，需要手动执行：</p>
<ol>
<li>使用mv迁移磁盘文件、XML配置文件</li>
<li>修改XML配置文件</li>
<li>无需重新define虚机</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Host主机有三个存储池，现将default池内的centos模板虚机迁移到KVM池</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># virsh pool-list</span>
 Name      State    Autostart
-------------------------------
 default   active   <span class="token function">yes</span>
 ISO       active   <span class="token function">yes</span>
 KVM       active   <span class="token function">yes</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id   Name           State
-------------------------------
 <span class="token number">1</span>    centos7        running
 -    centos         shut off
<span class="token comment"># 迁移磁盘文件到存储池KVM</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># mv /var/lib/libvirt/images/centos.qcow2 /data/kvm/centos.qcow2</span>
<span class="token comment"># 修改配置文件</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># vim /etc/libvirt/qemu/centos.xml</span>
<span class="token comment"># 方法一，使用file参数直接写入磁盘文件的硬路径：</span>
    <span class="token operator">&lt;</span>disk <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'file'</span> <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'disk'</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>driver <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">'qemu'</span> <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>source <span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token string">'/data/kvm/centos.qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>backingStore/<span class="token operator">></span>
      <span class="token operator">&lt;</span>target <span class="token assign-left variable">dev</span><span class="token operator">=</span><span class="token string">'vda'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'virtio'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>address <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'pci'</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'0x0000'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'0x04'</span> <span class="token assign-left variable">slot</span><span class="token operator">=</span><span class="token string">'0x00'</span> <span class="token assign-left variable">function</span><span class="token operator">=</span><span class="token string">'0x0'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>/disk<span class="token operator">></span>
<span class="token comment"># 方法二,使用volume参数指定pool中的磁盘：</span>
    <span class="token operator">&lt;</span>disk <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'volume'</span> <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'disk'</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>driver <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">'qemu'</span> <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>source <span class="token assign-left variable">pool</span><span class="token operator">=</span><span class="token string">'kvm'</span> <span class="token assign-left variable">volume</span><span class="token operator">=</span><span class="token string">'/data/kvm/centos.qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>backingStore/<span class="token operator">></span>
      <span class="token operator">&lt;</span>target <span class="token assign-left variable">dev</span><span class="token operator">=</span><span class="token string">'vda'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'virtio'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>address <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'pci'</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'0x0000'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'0x04'</span> <span class="token assign-left variable">slot</span><span class="token operator">=</span><span class="token string">'0x00'</span> <span class="token assign-left variable">function</span><span class="token operator">=</span><span class="token string">'0x0'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>/disk<span class="token operator">></span>
<span class="token comment"># 开机检查</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># virsh start centos</span>
Domain <span class="token string">'centos'</span> started
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># virsh list</span>
 Id   Name      State
-------------------------
 <span class="token number">1</span>    centos7   running
 <span class="token number">3</span>    centos    running<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="基于共享存储迁移"><a href="#基于共享存储迁移" class="headerlink" title="基于共享存储迁移"></a>基于共享存储迁移</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加防护的例外</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --add-service=&#123;libvirt,libvirt-tls&#125; --permanent</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --add-port=49152-49215/tcp --permanent</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --reload</span>
<span class="token comment"># 添加域名解析</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/hosts </span>
<span class="token number">127.0</span>.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
<span class="token number">192.168</span>.10.140	kvm1
<span class="token number">192.168</span>.10.141	kvm2
<span class="token number">192.168</span>.10.142	stor1
<span class="token comment"># 配置共享存储</span>
<span class="token comment"># 在所有主机上运行 yum install -y nfs-utils</span>
<span class="token comment"># 在存储主机上配置NFS</span>
<span class="token punctuation">[</span>root@stor1 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/exports</span>
/data/nfs       <span class="token number">192.168</span>.10.0/24<span class="token punctuation">(</span>rw,no_root_squash<span class="token punctuation">)</span>
<span class="token punctuation">[</span>root@stor1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable --now nfs-server</span>
Created symlink /etc/systemd/system/multi-user.target.wants/nfs-server.service → /usr/lib/systemd/system/nfs-server.service.
<span class="token punctuation">[</span>root@stor1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable --now rpcbind</span>
<span class="token punctuation">[</span>root@stor1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --permanent --add-service=nfs</span>
success
<span class="token punctuation">[</span>root@stor1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --reload</span>
success
<span class="token comment"># 在宿主机1号上挂载nfs</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># mkdir /data/nfs</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-create-as NFS netfs --source-host=stor1 --source-path=/data/nfs --target=/data/nfs</span>
<span class="token comment"># 在宿主机2号上挂载nfs</span>
<span class="token punctuation">[</span>root@kvm2 ~<span class="token punctuation">]</span><span class="token comment"># mkdir /data/nfs</span>
<span class="token punctuation">[</span>root@kvm2 ~<span class="token punctuation">]</span><span class="token comment"># virsh pool-create-as NFS netfs --source-host=stor1 --source-path=/data/nfs --target=/data/nfs</span>
<span class="token comment"># 在宿主机上将default磁盘池中的centos虚机磁盘迁移至共享存储上</span>
<span class="token comment"># 迁移磁盘文件到存储池KVM</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># mv /var/lib/libvirt/images/centos.qcow2 /data/nfs/centos-share.qcow2</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh dumpxml centos > /etc/libvirt/qemu/centos-share.xml</span>
<span class="token comment"># 修改配置文件</span>
<span class="token comment"># 删除UUID并修改主机名为centos-share</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/libvirt/qemu/centos-share.xml</span>
    <span class="token operator">&lt;</span>disk <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'volume'</span> <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'disk'</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>driver <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">'qemu'</span> <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>source <span class="token assign-left variable">pool</span><span class="token operator">=</span><span class="token string">'kvm'</span> <span class="token assign-left variable">volume</span><span class="token operator">=</span><span class="token string">'/data/nfs/centos-share.qcow2'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>backingStore/<span class="token operator">></span>
      <span class="token operator">&lt;</span>target <span class="token assign-left variable">dev</span><span class="token operator">=</span><span class="token string">'vda'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'virtio'</span>/<span class="token operator">></span>
      <span class="token operator">&lt;</span>address <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">'pci'</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'0x0000'</span> <span class="token assign-left variable">bus</span><span class="token operator">=</span><span class="token string">'0x04'</span> <span class="token assign-left variable">slot</span><span class="token operator">=</span><span class="token string">'0x00'</span> <span class="token assign-left variable">function</span><span class="token operator">=</span><span class="token string">'0x0'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>/disk<span class="token operator">></span>
<span class="token comment"># 导入配置文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh define /etc/libvirt/qemu/centos-share.xml </span>
<span class="token comment"># 开机</span>
<span class="token punctuation">[</span>root@kvm1 data<span class="token punctuation">]</span><span class="token comment"># virsh start centos-share</span>
Domain <span class="token string">'centos-share'</span> started
<span class="token comment"># 执行动态迁移</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh migrate --live --verbose --undefinesource --persistent centos-share qemu+ssh://kvm2/system</span>
Migration: <span class="token punctuation">[</span><span class="token number">100</span> %<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="基于非共享存储迁移"><a href="#基于非共享存储迁移" class="headerlink" title="基于非共享存储迁移"></a>基于非共享存储迁移</h4><p>非共享存储的迁移功能基于NBD方式，NetworkBlockDevice，即让用户通过网络访问块设备、设备镜像的方式，通过流将磁盘数据发送到本地或者远程。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加防护的例外</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --add-service=&#123;libvirt,libvirt-tls&#125; --permanent</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --add-port=49152-49215/tcp --permanent</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --reload</span>
<span class="token comment"># 添加域名解析</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/hosts </span>
<span class="token number">127.0</span>.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
<span class="token number">192.168</span>.10.140	kvm1
<span class="token number">192.168</span>.10.141	kvm2
<span class="token number">192.168</span>.10.142	stor1

<span class="token comment"># 必须要添加--copy-storage-all参数才能复制镜像文件到非共享Host主机上</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh migrate --live  --copy-storage-all --verbose centos qemu+ssh://192.168.10.141/system </span>
Migration: <span class="token punctuation">[</span><span class="token number">100</span> %<span class="token punctuation">]</span>

<span class="token punctuation">[</span>root@kvm2 ~<span class="token punctuation">]</span><span class="token comment"># virsh list</span>
 Id   Name     State
------------------------
 <span class="token number">14</span>   centos   running<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="监控与优化"><a href="#监控与优化" class="headerlink" title="监控与优化"></a>监控与优化</h3><h4 id="Linux性能监控及调优工具"><a href="#Linux性能监控及调优工具" class="headerlink" title="Linux性能监控及调优工具"></a>Linux性能监控及调优工具</h4><p>主机性能的瓶颈要么由于错误或者非最优配置，要么业务负载重。对于前者血药调整配置，对于后者则需要扩容。而扩容有两种：</p>
<ul>
<li><p>纵向扩容：使用更多的内存、更好的CPU、更快的网络</p>
</li>
<li><p>横向扩容：使用更多的节点、组件来分担负载</p>
</li>
</ul>
<p><a href="https://brendangregg.com/linuxperf.html">Linux性能监控以及调优</a>的工具主要有：</p>
<ul>
<li><p>观测工具</p>
</li>
<li><p>静态性能分析工具</p>
</li>
<li><p>基准测试工具</p>
</li>
<li><p>调优工具</p>
</li>
<li><p>sar命令<br><img src="https://brendangregg.com/Perf/linux_observability_tools.png" alt="performanceTools"></p>
</li>
</ul>
<ol>
<li>top：显示Linux整体运行状态</li>
<li>ps：显示进程状态</li>
<li>uptime：显示系统运行时间</li>
<li>netstat：显示网络连接、路由表、接口统计信息</li>
<li>free：显示系统中可用和已用内存</li>
<li>vmstat：显示虚拟内存统计信息</li>
<li>sysctl：运行时配置内核参数</li>
<li>tcpdump：包分析工具</li>
<li>&#x2F;proc目录下的文件：系统信息</li>
<li>pgrep：根据名称和其他属性查找进程</li>
<li>ls* 命令：获得硬件信息，例如lscpu、lsblk、lsmem、lsscisi</li>
<li>tuned：针对不同业务需求快速调整系统参数</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># lscpu</span>
Architecture:        x86_64
CPU op-mode<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:      <span class="token number">32</span>-bit, <span class="token number">64</span>-bit
Byte Order:          Little Endian
CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:              <span class="token number">4</span>
On-line CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span> list: <span class="token number">0</span>-3
Thread<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per core:  <span class="token number">1</span>
Core<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per socket:  <span class="token number">4</span>
Socket<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:           <span class="token number">1</span>
NUMA node<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:        <span class="token number">1</span>
Vendor ID:           GenuineIntel
BIOS Vendor ID:      GenuineIntel
CPU family:          <span class="token number">6</span>
Model:               <span class="token number">158</span>
Model name:          Intel<span class="token punctuation">(</span>R<span class="token punctuation">)</span> Core<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> i5-8300H CPU @ <span class="token number">2</span>.30GHz
BIOS Model name:     Intel<span class="token punctuation">(</span>R<span class="token punctuation">)</span> Core<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> i5-8300H CPU @ <span class="token number">2</span>.30GHz
Stepping:            <span class="token number">10</span>
CPU MHz:             <span class="token number">2303.999</span>
BogoMIPS:            <span class="token number">4607.99</span>
Virtualization:      VT-x
Hypervisor vendor:   VMware
Virtualization type: full
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            8192K
NUMA node0 CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:   <span class="token number">0</span>-3
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># lsmem</span>
RANGE                                 SIZE  STATE REMOVABLE BLOCK
0x0000000000000000-0x00000000bfffffff   3G online       <span class="token function">yes</span>  <span class="token number">0</span>-23
0x0000000100000000-0x000000023fffffff   5G online       <span class="token function">yes</span> <span class="token number">32</span>-71

Memory block size:       128M
Total online memory:       8G
Total offline memory:      0B
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># lsblk</span>
NAME              MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                 <span class="token number">8</span>:0    <span class="token number">0</span>   10G  <span class="token number">0</span> disk 
└─vg_data-lv_data <span class="token number">253</span>:2    <span class="token number">0</span>   10G  <span class="token number">0</span> lvm  
nvme0n1           <span class="token number">259</span>:0    <span class="token number">0</span>   20G  <span class="token number">0</span> disk 
├─nvme0n1p1       <span class="token number">259</span>:1    <span class="token number">0</span>  600M  <span class="token number">0</span> part /boot/efi
├─nvme0n1p2       <span class="token number">259</span>:2    <span class="token number">0</span>    1G  <span class="token number">0</span> part /boot
└─nvme0n1p3       <span class="token number">259</span>:3    <span class="token number">0</span> <span class="token number">18</span>.4G  <span class="token number">0</span> part 
  ├─rl_rocky-root <span class="token number">253</span>:0    <span class="token number">0</span> <span class="token number">16</span>.4G  <span class="token number">0</span> lvm  /
  └─rl_rocky-swap <span class="token number">253</span>:1    <span class="token number">0</span>    2G  <span class="token number">0</span> lvm  <span class="token punctuation">[</span>SWAP<span class="token punctuation">]</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># lsscsi</span>
<span class="token punctuation">[</span><span class="token number">9</span>:0:0:0<span class="token punctuation">]</span>    disk    VMware,  VMware Virtual S <span class="token number">1.0</span>   /dev/sda 
<span class="token punctuation">[</span>N:0:0:1<span class="token punctuation">]</span>    disk    VMware Virtual NVMe Disk__1                /dev/nvme0n1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="使用Tuned优化性能"><a href="#使用Tuned优化性能" class="headerlink" title="使用Tuned优化性能"></a>使用Tuned优化性能</h4><p>Tuned可以根据不同业务需求和硬件条件，通过切换配置文件实现对需求的改变。针对虚拟化环境，有两个预安装的配置文件可以直接使用：</p>
<ol>
<li>virtual-host，用于宿主机，减少了虚拟内存交换，增加了磁盘预读值，并提供更积极的脏页回写</li>
<li>virtual-guest，用于运行在kvm上的虚机，减少了虚拟内存交换性，增加磁盘预读值，不会禁用disk barriers</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装Tuned</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y tuned</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable --now tuned</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tuned-adm active</span>
Current active profile: virtual-guest
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tuned-adm list</span>
Available profiles:
- accelerator-performance     - Throughput performance based tuning with disabled higher latency STOP states
- aws                         - Optimize <span class="token keyword">for</span> aws ec2 instances
- balanced                    - General non-specialized tuned profile
- desktop                     - Optimize <span class="token keyword">for</span> the desktop use-case
- hpc-compute                 - Optimize <span class="token keyword">for</span> HPC compute workloads
- intel-sst                   - Configure <span class="token keyword">for</span> Intel Speed Select Base Frequency
- latency-performance         - Optimize <span class="token keyword">for</span> deterministic performance at the cost of increased power consumption
- network-latency             - Optimize <span class="token keyword">for</span> deterministic performance at the cost of increased power consumption, focused on low latency network performance
- network-throughput          - Optimize <span class="token keyword">for</span> streaming network throughput, generally only necessary on older CPUs or 40G+ networks
- optimize-serial-console     - Optimize <span class="token keyword">for</span> serial console use.
- powersave                   - Optimize <span class="token keyword">for</span> low power consumption
- throughput-performance      - Broadly applicable tuning that provides excellent performance across a variety of common server workloads
- virtual-guest               - Optimize <span class="token keyword">for</span> running inside a virtual guest
- virtual-host                - Optimize <span class="token keyword">for</span> running KVM guests
Current active profile: virtual-guest
<span class="token comment"># 激活配置文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tuned-adm profile aws</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tuned-adm active </span>
Current active profile: aws<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="VirtIO驱动"><a href="#VirtIO驱动" class="headerlink" title="VirtIO驱动"></a>VirtIO驱动</h4><p>VirtIO时一种半虚拟化框架。当使用该半虚拟化驱动程序时，虚拟机操作系统会认识到它在Hypervisor上运行，其IO请求不经过虚拟化层而直接发送给QEMU提供的半虚拟化设备，通过宿主机的驱动程序发送给真实的物理硬件，以提供较高的性能。</p>
<h4 id="CPU优化技术"><a href="#CPU优化技术" class="headerlink" title="CPU优化技术"></a>CPU优化技术</h4><p>宿主机逻辑CPU的数量时物理CPU的插槽(socket)，内核(core)和线程(thread)的乘积。</p>
<ul>
<li>vCPU的数量<ul>
<li>单个虚机的vCPU数量不能超过宿主机中逻辑CPU的总数</li>
<li>增加vCPU数量不一定能提高性能；</li>
<li>KVM支持CPU超分</li>
</ul>
</li>
<li>vCPU的配置<ul>
<li>“Copy host CPU configuration”是通用配置</li>
<li>“Hypervisor Default”是qemu64模式，可以让虚拟在物理CPU有差异的宿主机之间进行实时迁移</li>
</ul>
</li>
<li>vCPU的拓扑<ul>
<li>vCPU的拓扑是指设置vCPU的插槽、核心和线程数的不同比值</li>
<li>最佳策略根据需求确定所需插槽数，然后只分配一个内核和一个线程</li>
</ul>
</li>
</ul>
<h4 id="NUMA"><a href="#NUMA" class="headerlink" title="NUMA"></a>NUMA</h4><p>NUMA的出现是为了解决多CPU的协同工作和内存访问冲突的问题，CPU和内存都在相同NUMA节点内是最理想的配置。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 系统默认不安装</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># yum install numactl</span>
<span class="token comment"># 查看NUMA情况，显示一个NUMA节点中有4个vcpu、8G内存</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># numactl -H</span>
available: <span class="token number">1</span> nodes <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">node</span> <span class="token number">0</span> cpus: <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token function">node</span> <span class="token number">0</span> size: <span class="token number">7665</span> MB
<span class="token function">node</span> <span class="token number">0</span> free: <span class="token number">6783</span> MB
<span class="token function">node</span> distances:
<span class="token function">node</span>   <span class="token number">0</span> 
  <span class="token number">0</span>:  <span class="token number">10</span> 
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh nodeinfo</span>
CPU model:           x86_64
CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:              <span class="token number">4</span>
CPU frequency:       <span class="token number">2303</span> MHz
CPU socket<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:       <span class="token number">2</span>
Core<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per socket:  <span class="token number">2</span>
Thread<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per core:  <span class="token number">1</span>
NUMA cell<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:        <span class="token number">1</span>
Memory size:         <span class="token number">7849944</span> KiB
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vcpuinfo centos7</span>
VCPU:           <span class="token number">0</span>    <span class="token comment"># 表示虚机CPU0放置到宿主机CPU1上</span>
CPU:            <span class="token number">1</span>
State:          running
CPU time:       <span class="token number">11</span>.3s
CPU Affinity:   yyyy  <span class="token comment"># 表示可以放置到4个CPU上，一个y代表一个CPU</span>

VCPU:           <span class="token number">1</span>
CPU:            <span class="token number">2</span>
State:          running
CPU time:       <span class="token number">0</span>.1s
CPU Affinity:   yyyy
<span class="token comment"># 将虚机CPU固定到指定节点</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh edit centos7</span>
<span class="token comment"># 在下面一行之后新增CPU配置信息</span>
  <span class="token operator">&lt;</span>vcpu <span class="token assign-left variable">placement</span><span class="token operator">=</span><span class="token string">'static'</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>/vcpu<span class="token operator">></span>
  <span class="token operator">&lt;</span>cputune<span class="token operator">></span>
    <span class="token operator">&lt;</span>vcpupin <span class="token assign-left variable">vcpu</span><span class="token operator">=</span><span class="token string">'0'</span> <span class="token assign-left variable">cpuset</span><span class="token operator">=</span><span class="token string">'3'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>vcpupin <span class="token assign-left variable">vcpu</span><span class="token operator">=</span><span class="token string">'1'</span> <span class="token assign-left variable">cpuset</span><span class="token operator">=</span><span class="token string">'2'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>vcpupin <span class="token assign-left variable">vcpu</span><span class="token operator">=</span><span class="token string">'2'</span> <span class="token assign-left variable">cpuset</span><span class="token operator">=</span><span class="token string">'1'</span>/<span class="token operator">></span>
    <span class="token operator">&lt;</span>vcpupin <span class="token assign-left variable">vcpu</span><span class="token operator">=</span><span class="token string">'3'</span> <span class="token assign-left variable">cpuset</span><span class="token operator">=</span><span class="token string">'0'</span>/<span class="token operator">></span>
  <span class="token operator">&lt;</span>/cputune<span class="token operator">></span>
<span class="token comment"># 然后重启centos7虚机，可见CPU固定节点</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vcpuinfo centos7</span>
VCPU:           <span class="token number">0</span>
CPU:            <span class="token number">3</span>
State:          running
CPU time:       <span class="token number">14</span>.0s
CPU Affinity:   ---y

VCPU:           <span class="token number">1</span>
CPU:            <span class="token number">2</span>
State:          running
CPU time:       <span class="token number">2</span>.5s
CPU Affinity:   --y-

VCPU:           <span class="token number">2</span>
CPU:            <span class="token number">1</span>
State:          running
CPU time:       <span class="token number">2</span>.0s
CPU Affinity:   -y--

VCPU:           <span class="token number">3</span>
CPU:            <span class="token number">0</span>
State:          running
CPU time:       <span class="token number">2</span>.8s
CPU Affinity:   y---
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh vcpupin centos7</span>
 VCPU   CPU Affinity
----------------------
 <span class="token number">0</span>      <span class="token number">3</span>
 <span class="token number">1</span>      <span class="token number">2</span>
 <span class="token number">2</span>      <span class="token number">1</span>
 <span class="token number">3</span>      <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在使用virt-install 部署虚机时，可以使用–cpuset来配置numa策略。</p>
<h4 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h4><p>内存分配主要考虑以下三个方面：</p>
<ol>
<li>内存分配</li>
<li>内存调整</li>
<li>内存支持</li>
</ol>
<p>优化KVM内存性能的第一条准则时不要向虚机分配过多内存。当物理机内存≤64GB时，虚机可用内存数为-2GB,当＞64GB时，可用内存数为内存总量-(2+5x内存总量&#x2F;64)。假设宿主机有32GB内存，则分配给虚机的内存总数为30GB；宿主机内存有256GB时，虚机可分配上限为：256-(2+0.5(256&#x2F;64))&#x3D;252GB.即内存不超过64GB时，为宿主机保留2GB内存；超过64GB，除了为宿主机保留2GB外，每组64GB内存应当预留512M。</p>
<p>内存气球是一种内存回收技术，可以在虚机运行时动态调整内存资源，而不需要关闭虚机。主流虚拟化解决方案都支持内存气泡，其中KVM通过virtiio_balloon设备实现。内存气泡只能由宿主机实现，可以通过充气操作增加气球设备所占用的虚机内存，从而将虚机空闲内存回收进行二次分配。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动虚机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token comment"># 宿主机可用内存6.5GB</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:          <span class="token number">7</span>.5Gi       358Mi       <span class="token number">6</span>.5Gi       <span class="token number">9</span>.0Mi       636Mi       <span class="token number">6</span>.9Gi
Swap:         <span class="token number">2</span>.0Gi          0B       <span class="token number">2</span>.0Gi
<span class="token comment"># 虚机开机正常后宿主机可用内存6.1GB</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:          <span class="token number">7</span>.5Gi       830Mi       <span class="token number">6</span>.1Gi       <span class="token number">9</span>.0Mi       571Mi       <span class="token number">6</span>.4Gi
Swap:         <span class="token number">2</span>.0Gi          0B       <span class="token number">2</span>.0Gi
<span class="token comment"># 查看虚机内存气泡情况，默认为配置的1GB</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh qemu-monitor-command centos7 --hmp --cmd info balloon</span>
balloon: <span class="token assign-left variable">actual</span><span class="token operator">=</span><span class="token number">1024</span>
<span class="token comment"># 对虚机进行充气100M内存的操作</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh qemu-monitor-command centos7 --hmp --cmd balloon 800</span>
<span class="token comment"># 虚机内存可用量降到800M</span>
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:           766M        143M        522M        <span class="token number">6</span>.8M        100M        499M
Swap:          <span class="token number">1</span>.0G          0B        <span class="token number">1</span>.0G
<span class="token comment"># 再次充气，将虚机内存可用量将为256M</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh qemu-monitor-command centos7 --hmp --cmd balloon 256</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh qemu-monitor-command centos7 --hmp --cmd info balloon</span>
balloon: <span class="token assign-left variable">actual</span><span class="token operator">=</span><span class="token number">256</span>
<span class="token comment"># 虚机可用内存数量如下：</span>
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:           222M        134M         60M        992K         27M        <span class="token number">3</span>.9M
Swap:          <span class="token number">1</span>.0G         11M        <span class="token number">1</span>.0G
<span class="token comment"># 执行放气操作，</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh qemu-monitor-command centos7 --hmp --cmd balloon 1024</span>
<span class="token comment"># 虚拟内存恢复默认值</span>
<span class="token punctuation">[</span>root@guest ~<span class="token punctuation">]</span><span class="token comment"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:           990M        134M        821M        976K         34M        768M
Swap:          <span class="token number">1</span>.0G         11M        <span class="token number">1</span>.0G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="大页原理"><a href="#大页原理" class="headerlink" title="大页原理"></a>大页原理</h4><p>内存是以页(Page)为单位进行管理，x86架构通常为4KB，适用于大多数工作负载，而对于相对固定的大型内存占用程序而已，4KB内存页的性能开销较大。HugePage可以解决这个问题，通过提高内存页大小，减小了内页表项数节省了页表所占CPU缓存空间和内存地址转换次数，从而提高内存使用效率和性能。</p>
<p>大页的实现方式有两种哦：静态大页(Huge TLB)和动态大页(Transparent HugePages THP).</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># grep -i huge /proc/meminfo </span>
AnonHugePages:    <span class="token number">503808</span> kB
ShmemHugePages:        <span class="token number">0</span> kB
FileHugePages:         <span class="token number">0</span> kB
HugePages_Total:       <span class="token number">0</span>
HugePages_Free:        <span class="token number">0</span>
HugePages_Rsvd:        <span class="token number">0</span>
HugePages_Surp:        <span class="token number">0</span>
Hugepagesize:       <span class="token number">2048</span> kB
Hugetlb:               <span class="token number">0</span> kB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="网络优化"><a href="#网络优化" class="headerlink" title="网络优化"></a>网络优化</h4><ul>
<li>需要合理隔离网络流量来避免网络拥塞，避免ARP Flux现象。</li>
</ul>
<pre class="line-numbers language-shelll" data-language="shelll"><code class="language-shelll">net.ipv4.conf.all.arp_filter&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>使用vrtIO驱动和vhost模块来提供接近物理设备性能的驱动</li>
<li>使用桥接零复制传输提高宿主机大数据传输性能</li>
<li>多队列virtio-net</li>
<li>直接设备分配和SR-IOV</li>
<li>调整内核参数</li>
</ul>
<h4 id="存储优化"><a href="#存储优化" class="headerlink" title="存储优化"></a>存储优化</h4><ul>
<li>缓存模式：<ul>
<li>none：无页面缓存</li>
<li>writethrough：直写，数据直接落盘，使用宿主机缓存</li>
<li>writeback：回写，数据落宿主机之后即报告虚机完成写入</li>
<li>directsync：类似直写，但不经过缓存</li>
<li>unsafe：宿主机缓存所有IO</li>
</ul>
</li>
<li>I&#x2F;O模式</li>
<li>丢弃模式</li>
<li>检测零模式</li>
<li>I&#x2F;O调整<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看虚机的硬盘文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh domblklist centos7</span>
 Target   Source
-------------------------------------------------
 vda      /var/lib/libvirt/images/centos7.qcow2
 sda      -
<span class="token comment"># 限制硬盘iops值为100，读写吞吐量为10MB</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh blkdeviotune centos7 vda --total-iops-sec 100 --total-bytes-sec 10MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h3><p>备份数据的目标是恢复数据。在恢复的过程中有2个最关键的衡量指标：</p>
<ul>
<li>RTO：Recovery Time Objective 指业务停止时长</li>
<li>RPO：Recovery Point Objectve 指可恢复时间点，即可恢复的数据代表的业务时长，也就是用户损失的数据量。</li>
</ul>
<p>备份的方法有两种：</p>
<ul>
<li>脱机备份：冷备</li>
<li>联机备份：热备</li>
</ul>
<h4 id="内部快照"><a href="#内部快照" class="headerlink" title="内部快照"></a>内部快照</h4><p>内部快照仅适用于QCOW2格式文件，它是磁盘快照和虚机内存状态的组合，所以也被称为检查点(Checkpoint)。KVM在创建快照的过程中，虚机会进入暂停模式，创建结束后会自动恢复运行，所以创建内部快照会导致系统中断。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看快照清单</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7</span>
 Name   Creation Time   State
-------------------------------
<span class="token comment"># 创建名为snap1的快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 --name "snap1"</span>
Domain snapshot snap1 created
<span class="token comment"># 关机创建snap2的快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh shutdown centos7</span>
Domain <span class="token string">'centos7'</span> is being <span class="token function">shutdown</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 --name "snap2"</span>
Domain snapshot snap2 created
<span class="token comment"># 再次创建snap3的快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh start centos7</span>
Domain <span class="token string">'centos7'</span> started
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 --name "snap3"</span>
Domain snapshot snap3 created
<span class="token comment"># 查看快照的层级</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --parent</span>
 Name    Creation Time               State     Parent
-------------------------------------------------------
 snap1   <span class="token number">2023</span>-05-25 <span class="token number">17</span>:57:30 +0800   running   
 snap2   <span class="token number">2023</span>-05-25 <span class="token number">17</span>:59:43 +0800   shutoff   snap1
 snap3   <span class="token number">2023</span>-05-25 <span class="token number">18</span>:00:49 +0800   running   snap2
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --tree</span>
snap1
  <span class="token operator">|</span>
  +- snap2
      <span class="token operator">|</span>
      +- snap3
<span class="token comment"># 查看快照信息，可见snap1的快照占据287M空间，snap3快照占据321M空间，这些空间是内存的dump文件。</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /var/lib/libvirt/images/centos7.qcow2 </span>
image: /var/lib/libvirt/images/centos7.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">3.01</span> GiB
cluster_size: <span class="token number">65536</span>
Snapshot list:
ID        TAG               VM SIZE                DATE     VM CLOCK     ICOUNT
<span class="token number">1</span>         snap1             <span class="token number">287</span> MiB <span class="token number">2023</span>-05-25 <span class="token number">17</span>:57:30 03:31:24.541           
<span class="token number">2</span>         snap2                 <span class="token number">0</span> B <span class="token number">2023</span>-05-25 <span class="token number">17</span>:59:43 00:00:00.000          <span class="token number">0</span>
<span class="token number">3</span>         snap3             <span class="token number">321</span> MiB <span class="token number">2023</span>-05-25 <span class="token number">18</span>:00:49 00:00:45.355           
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">true</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>
<span class="token comment"># 在虚机关机状态下恢复快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-revert centos7 snap3</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh list</span>
 Id   Name      State
-------------------------
 <span class="token number">1</span>    centos7   running
<span class="token comment"># 在虚机运行情况下恢复关机状态的快照，并让虚机开机</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-revert centos7 snap2 --running</span>
<span class="token comment"># 删除快照，直接删除父快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-delete centos7 snap1</span>
Domain snapshot snap1 deleted
<span class="token comment"># 可见子快照升级为父快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --tree</span>
snap2
  <span class="token operator">|</span>
  +- snap3
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-delete centos7 snap3</span>
Domain snapshot snap3 deleted
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-delete centos7 snap2</span>
Domain snapshot snap2 deleted
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --parent</span>
 Name   Creation Time   State   Parent
----------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="外部快照"><a href="#外部快照" class="headerlink" title="外部快照"></a>外部快照</h4><p>外部快照是指在外部保存快照资源，其中包括backing_file(后备文件)指虚机原始磁盘映像(只读)、overlay_image(覆盖映像)快照映像文件(可写)。创建外部快照之后，backing_file变为只读状态，数据写入overlay_image中。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建外部快照</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 snap1 "External Snapshot1" --disk-only --atomic</span>
Domain snapshot snap1 created
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list </span>
error: <span class="token builtin class-name">command</span> <span class="token string">'snapshot-list'</span> requires <span class="token operator">&lt;</span>domain<span class="token operator">></span> option
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7</span>
 Name    Creation Time               State
----------------------------------------------------
 snap1   <span class="token number">2023</span>-05-25 <span class="token number">18</span>:18:31 +0800   disk-snapshot
<span class="token comment"># 快照位置为external</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-info centos7 snap1 </span>
Name:           snap1
Domain:         centos7
Current:        <span class="token function">yes</span>
State:          disk-snapshot
Location:       external
Parent:         -
Children:       <span class="token number">0</span>
Descendants:    <span class="token number">0</span>
Metadata:       <span class="token function">yes</span>
<span class="token comment"># 虚机磁盘文件变更为.snap1文件</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh domblklist centos7</span>
 Target   Source
-------------------------------------------------
 vda      /var/lib/libvirt/images/centos7.snap1
 sda      -
<span class="token comment"># 原始镜像文件信息，2.41GB</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /var/lib/libvirt/images/centos7.qcow2 </span>
image: /var/lib/libvirt/images/centos7.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">2.41</span> GiB
<span class="token comment"># 快照盘文件信息，4.25M</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /var/lib/libvirt/images/centos7.snap1 </span>
image: /var/lib/libvirt/images/centos7.snap1
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">4.25</span> MiB
<span class="token comment"># 原始镜像变为只读，所有数据写入则保留到新的snap1文件中。</span>
<span class="token comment"># 再次创建外部快照2</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 snap2 --disk-only --atomic</span>
Domain snapshot snap2 created
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /var/lib/libvirt/images/centos7.snap</span>
centos7.snap1  centos7.snap2  
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info /var/lib/libvirt/images/centos7.snap2</span>
image: /var/lib/libvirt/images/centos7.snap2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">196</span> KiB
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --parent</span>
 Name    Creation Time               State           Parent
-------------------------------------------------------------
 snap1   <span class="token number">2023</span>-05-25 <span class="token number">18</span>:18:31 +0800   disk-snapshot   
 snap2   <span class="token number">2023</span>-05-25 <span class="token number">18</span>:25:30 +0800   shutoff         snap1

<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-list centos7 --tree</span>
snap1
  <span class="token operator">|</span>
  +- snap2
<span class="token comment"># 创建静默快照 --quiesce ，使开机状态的虚机在创建快照时将缓存文件同步写入磁盘</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-create-as centos7 snap3 --disk-only --atomic --quiesce </span>
Domain snapshot snap3 created
<span class="token comment"># 快照链，从上到下展示快照数据的文件生成链</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># qemu-img info --backing-chain /var/lib/libvirt/images/centos7.snap3</span>
image: /var/lib/libvirt/images/centos7.snap3
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">8.44</span> MiB
cluster_size: <span class="token number">65536</span>
backing file: /var/lib/libvirt/images/centos7.snap2
backing <span class="token function">file</span> format: qcow2
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">false</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>

image: /var/lib/libvirt/images/centos7.snap2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">196</span> KiB
cluster_size: <span class="token number">65536</span>
backing file: /var/lib/libvirt/images/centos7.snap1
backing <span class="token function">file</span> format: qcow2
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">false</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>

image: /var/lib/libvirt/images/centos7.snap1
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">2.5</span> MiB
cluster_size: <span class="token number">65536</span>
backing file: /var/lib/libvirt/images/centos7.qcow2
backing <span class="token function">file</span> format: qcow2
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">false</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>

image: /var/lib/libvirt/images/centos7.qcow2
<span class="token function">file</span> format: qcow2
virtual size: <span class="token number">10</span> GiB <span class="token punctuation">(</span><span class="token number">10737418240</span> bytes<span class="token punctuation">)</span>
disk size: <span class="token number">2.41</span> GiB
cluster_size: <span class="token number">65536</span>
Format specific information:
    compat: <span class="token number">1.1</span>
    compression type: zlib
    lazy refcounts: <span class="token boolean">true</span>
    refcount bits: <span class="token number">16</span>
    corrupt: <span class="token boolean">false</span>
    extended l2: <span class="token boolean">false</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># tree /var/lib/libvirt/qemu/snapshot/</span>
/var/lib/libvirt/qemu/snapshot/
└── centos7
    ├── snap1.xml
    ├── snap2.xml
    ├── snap3.xml
    └── snap4.xml
<span class="token comment"># 当前版本不支持外部快照恢复</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># libvirtd --version</span>
libvirtd <span class="token punctuation">(</span>libvirt<span class="token punctuation">)</span> <span class="token number">8.0</span>.0
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># rpm -qi qemu-kvm |grep -i ^version</span>
Version     <span class="token builtin class-name">:</span> <span class="token number">6.2</span>.0
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/redhat-release </span>
Rocky Linux release <span class="token number">8.8</span> <span class="token punctuation">(</span>Green Obsidian<span class="token punctuation">)</span>
<span class="token punctuation">[</span>root@kvm1 ~<span class="token punctuation">]</span><span class="token comment"># virsh snapshot-revert centos7 snap2</span>
error: unsupported configuration: revert to external snapshot not supported yet
<span class="token comment"># 恢复外部快照只能修改手动配置文件和手动收缩磁盘。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>

	<div class="row">
    <embed src="https://cdn.sujx.net/documents/red_hat_enterprise_linux-8-configuring_and_managing_virtualization-zh-cn.pdf" width="100%" height="550" type="application/pdf">
	</div>






]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Virtual</tag>
        <tag>KVM</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS主机清理旧内核</title>
    <url>/2022/10/19/clean-old-kernel/</url>
    <content><![CDATA[<h3 id="CentOS7上删除旧内核"><a href="#CentOS7上删除旧内核" class="headerlink" title="CentOS7上删除旧内核"></a>CentOS7上删除旧内核</h3><p>centos7 上有专门的清理工具，package-cleanup来执行内核的清理。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos7 ~<span class="token punctuation">]</span><span class="token comment"># package-cleanup --oldkernels --count=1</span>
Loaded plugins: fastestmirror, langpacks
--<span class="token operator">></span> Running transaction check
---<span class="token operator">></span> Package kernel.x86_64 <span class="token number">0</span>:3.10.0-1160.el7 will be erased
---<span class="token operator">></span> Package kernel.x86_64 <span class="token number">0</span>:3.10.0-1160.88.1.el7 will be erased
--<span class="token operator">></span> Finished Dependency Resolution
base/7/x86_64                                                                                                                                                                              <span class="token operator">|</span> <span class="token number">3.6</span> kB  00:00:00     
base/7/x86_64/group_gz                                                                                                                                                                     <span class="token operator">|</span> <span class="token number">153</span> kB  00:00:00     
base/7/x86_64/primary_db                                                                                                                                                                   <span class="token operator">|</span> <span class="token number">6.1</span> MB  00:00:00     
updates/7/x86_64                                                                                                                                                                           <span class="token operator">|</span> <span class="token number">2.9</span> kB  00:00:00     
updates/7/x86_64/primary_db                                                                                                                                                                <span class="token operator">|</span>  <span class="token number">21</span> MB  00:00:01     

Dependencies Resolved

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
 Package                                       Arch                                          Version                                                       Repository                                        Size
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
Removing:
 kernel                                        x86_64                                        <span class="token number">3.10</span>.0-1160.el7                                               @anaconda                                         <span class="token number">64</span> M
 kernel                                        x86_64                                        <span class="token number">3.10</span>.0-1160.88.1.el7                                          @updates                                          <span class="token number">66</span> M

Transaction Summary
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
Remove  <span class="token number">2</span> Packages

Installed size: <span class="token number">130</span> M
Is this ok <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>: y
Downloading packages:
Running transaction check
Running transaction <span class="token builtin class-name">test</span>
Transaction <span class="token builtin class-name">test</span> succeeded
Running transaction
  Erasing    <span class="token builtin class-name">:</span> kernel.x86_64                                                                                                                                                                                  <span class="token number">1</span>/2 
  Erasing    <span class="token builtin class-name">:</span> kernel.x86_64                                                                                                                                                                                  <span class="token number">2</span>/2 
  Verifying  <span class="token builtin class-name">:</span> kernel-3.10.0-1160.88.1.el7.x86_64                                                                                                                                                             <span class="token number">1</span>/2 
  Verifying  <span class="token builtin class-name">:</span> kernel-3.10.0-1160.el7.x86_64                                                                                                                                                                  <span class="token number">2</span>/2 

Removed:
  kernel.x86_64 <span class="token number">0</span>:3.10.0-1160.el7                                                                       kernel.x86_64 <span class="token number">0</span>:3.10.0-1160.88.1.el7    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="CentOS8上删除旧内核"><a href="#CentOS8上删除旧内核" class="headerlink" title="CentOS8上删除旧内核"></a>CentOS8上删除旧内核</h3><p>centos8以上则通过定义&#x2F;etc&#x2F;dnf&#x2F;dnf.conf 来清理内核。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos8 ~<span class="token punctuation">]</span><span class="token comment"># dnf -y remove --oldinstallonly --setopt installonly_limt=1 kernel</span>
Main config did not have a installonly_limt attr. before setopt
Repository extras is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configuration
Main config did not have a installonly_limt attr. before setopt
Dependencies resolved.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
 Package          Arch     Version                 Repository   Size
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Removing:
 kernel           x86_64   <span class="token number">4.18</span>.0-425.3.1.el8      @anaconda     <span class="token number">0</span>  
 kernel           x86_64   <span class="token number">4.18</span>.0-425.19.2.el8_7   @baseos       <span class="token number">0</span>  
 kernel-core      x86_64   <span class="token number">4.18</span>.0-425.3.1.el8      @anaconda    <span class="token number">70</span> M
 kernel-core      x86_64   <span class="token number">4.18</span>.0-425.19.2.el8_7   @baseos      <span class="token number">70</span> M
 kernel-modules   x86_64   <span class="token number">4.18</span>.0-425.3.1.el8      @anaconda    <span class="token number">24</span> M
 kernel-modules   x86_64   <span class="token number">4.18</span>.0-425.19.2.el8_7   @baseos      <span class="token number">24</span> M

Transaction Summary
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Remove  <span class="token number">6</span> Packages

Freed space: <span class="token number">187</span> M
Running transaction check
Transaction check succeeded.
Running transaction <span class="token builtin class-name">test</span>
Transaction <span class="token builtin class-name">test</span> succeeded.
Running transaction
  Preparing        <span class="token builtin class-name">:</span>                                             <span class="token number">1</span>/1 
  Erasing          <span class="token builtin class-name">:</span> kernel-4.18.0-425.19.2.el8_7.x86_64         <span class="token number">1</span>/6 
  Running scriptlet: kernel-4.18.0-425.19.2.el8_7.x86_64         <span class="token number">1</span>/6 
  Erasing          <span class="token builtin class-name">:</span> kernel-4.18.0-425.3.1.el8.x86_64            <span class="token number">2</span>/6 
  Running scriptlet: kernel-4.18.0-425.3.1.el8.x86_64            <span class="token number">2</span>/6 
  Erasing          <span class="token builtin class-name">:</span> kernel-modules-4.18.0-425.3.1.el8.x86_64    <span class="token number">3</span>/6 
  Running scriptlet: kernel-modules-4.18.0-425.3.1.el8.x86_64    <span class="token number">3</span>/6 
  Erasing          <span class="token builtin class-name">:</span> kernel-modules-4.18.0-425.19.2.el8_7.x86_   <span class="token number">4</span>/6 
  Running scriptlet: kernel-modules-4.18.0-425.19.2.el8_7.x86_   <span class="token number">4</span>/6 
  Running scriptlet: kernel-core-4.18.0-425.19.2.el8_7.x86_64    <span class="token number">5</span>/6 
  Erasing          <span class="token builtin class-name">:</span> kernel-core-4.18.0-425.19.2.el8_7.x86_64    <span class="token number">5</span>/6 
  Running scriptlet: kernel-core-4.18.0-425.19.2.el8_7.x86_64    <span class="token number">5</span>/6 
  Running scriptlet: kernel-core-4.18.0-425.3.1.el8.x86_64       <span class="token number">6</span>/6 
  Erasing          <span class="token builtin class-name">:</span> kernel-core-4.18.0-425.3.1.el8.x86_64       <span class="token number">6</span>/6 
  Running scriptlet: kernel-core-4.18.0-425.3.1.el8.x86_64       <span class="token number">6</span>/6 
  Running scriptlet: kernel-core-4.18.0-425.3.1.el8.x86_64                                                                                                                                                    <span class="token number">6</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-4.18.0-425.3.1.el8.x86_64                                                                                                                                                         <span class="token number">1</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-4.18.0-425.19.2.el8_7.x86_64                                                                                                                                                      <span class="token number">2</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-core-4.18.0-425.3.1.el8.x86_64                                                                                                                                                    <span class="token number">3</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-core-4.18.0-425.19.2.el8_7.x86_64                                                                                                                                                 <span class="token number">4</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-modules-4.18.0-425.3.1.el8.x86_64                                                                                                                                                 <span class="token number">5</span>/6 
  Verifying        <span class="token builtin class-name">:</span> kernel-modules-4.18.0-425.19.2.el8_7.x86_64                                                                                                                                              <span class="token number">6</span>/6 

Removed:
  kernel-4.18.0-425.3.1.el8.x86_64             kernel-4.18.0-425.19.2.el8_7.x86_64  kernel-core-4.18.0-425.3.1.el8.x86_64  kernel-core-4.18.0-425.19.2.el8_7.x86_64  kernel-modules-4.18.0-425.3.1.el8.x86_64 
  kernel-modules-4.18.0-425.19.2.el8_7.x86_64 

Complete<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考：<a href="https://www.golinuxcloud.com/remove-old-kernels-rhel-centos-8/">How to properly remove old kernels RHEL&#x2F;CentOS 8</a></p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>CentOS8</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>CCSK思维导图</title>
    <url>/2022/10/01/CCSK-MindMap/</url>
    <content><![CDATA[<p><a href="https://www.c-csa.cn/u_file/photo/20200827/825c545c82.pdf">CCSK前导知识</a></p>
<p><img src="https://cdn.sujx.net/CCSK-Mindmap.png" alt="CCSK"></p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>CCSK</tag>
        <tag>MindMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes的部署</title>
    <url>/2022/09/19/Kubernetes-Deploy/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p><strong>Kubernetes</strong> 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。</p>
<p><img src="https://cdn.sujx.net/container_evolution.PNG" alt="container_evolution"></p>
<p>随着容器的广泛应用，Kubernetes能够满足容器的资源管理和任务编排的需要，它可以实现：</p>
<ul>
<li><p><strong>服务发现和负载均衡</strong><br>  Kubernetes 可以使用 DNS 名称或自己的 IP 地址来暴露容器。 如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p>
</li>
<li><p><strong>存储编排</strong><br>  Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p>
</li>
<li><p><strong>自动部署和回滚</strong><br>  你可以使用 Kubernetes 描述已部署容器的所需状态， 它可以以受控的速率将实际状态更改为期望状态。 例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p>
</li>
<li><p><strong>自动完成装箱计算</strong><br>  你为 Kubernetes 提供许多节点组成的集群，在这个集群上运行容器化的任务。 你告诉 Kubernetes 每个容器需要多少 CPU 和内存 (RAM)。 Kubernetes 可以将这些容器按实际情况调度到你的节点上，以最佳方式利用你的资源。</p>
</li>
<li><p><strong>自我修复</strong><br>  Kubernetes 将重新启动失败的容器、替换容器、杀死不响应用户定义的运行状况检查的容器， 并且在准备好服务之前不将其通告给客户端。</p>
</li>
<li><p><strong>密钥与配置管理</strong><br>  Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。</p>
</li>
</ul>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p><img src="https://cdn.sujx.net/k8s-com.png" alt="K8sComonet"></p>
<h3 id="API-Server：大脑组件"><a href="#API-Server：大脑组件" class="headerlink" title="API-Server：大脑组件"></a>API-Server：大脑组件</h3><p>对外暴露k8s的HTTP API，允许最终用户、集群的不同部分和外部组件彼此通信，是所有服务请求的统一入口，是控制平面的核心。</p>
<h3 id="Kube-scheduler：左膀右臂"><a href="#Kube-scheduler：左膀右臂" class="headerlink" title="Kube-scheduler：左膀右臂"></a>Kube-scheduler：左膀右臂</h3><p>任务调度器，负责监视新创建、未指定运行节点的Pods，然后选择合适的节点来运行这些pod。</p>
<h3 id="Controller-manager：集群监工"><a href="#Controller-manager：集群监工" class="headerlink" title="Controller-manager：集群监工"></a>Controller-manager：集群监工</h3><p>通过APIServer监控集群公共状态，是集群的控制器，处理集群种常规后台任务。集群中的扩容、维护都是由它来实现。通常一个资源对应一个控制器。</p>
<h3 id="Etcd：保险柜"><a href="#Etcd：保险柜" class="headerlink" title="Etcd：保险柜"></a>Etcd：保险柜</h3><p>存储集群数据，一致且高可用的键值对存储数据库用于所有集群数据的备份，实现集群的所有重要信息持久化。etcd官方将其定为为一个可信赖的分布式KV存储服务。</p>
<h3 id="Worker节点：打工人"><a href="#Worker节点：打工人" class="headerlink" title="Worker节点：打工人"></a>Worker节点：打工人</h3><ul>
<li>kubelet：负责Pod对应容器的创建、启停等任务，同时与Master协作。<ul>
<li>监视分配给该Node节点的pods</li>
<li>挂载pod所需要volumes</li>
<li>下载pod的secret</li>
<li>通过CRI来运行pod中的容器</li>
<li>周期执行pod中为容器定义的liveness探针</li>
<li>上报pod的状态给系统其他组件</li>
<li>上报Node的状态</li>
</ul>
</li>
<li>kube-proxy：简单的网络代理和负载均衡器，负责Service的实现，能够使Node上的pod被外部访问</li>
<li>CRI<ul>
<li>Docker</li>
<li>Contained</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.sujx.net/k8s-parts.PNG" alt="K8sParts"></p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><blockquote>
<p>因Kubernetes 1.24版本以后不支持直接使用docker，因此使用1.20.1版本，后续升级至1.21.14版本。</p>
</blockquote>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以CentOS7为例,使用华为源</span>
<span class="token comment"># 设置默认防火墙配置为信任区域</span>
firewall-cmd --set-default-zone<span class="token operator">=</span>trusted
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment"># 关闭SWAP</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'/swap/s|/dev|#/dev|g'</span> /etc/fstab
<span class="token comment"># 关闭selinux</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/enforceing/disabled'</span> /etc/selinux/config
<span class="token comment"># 修改内核参数</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/sysctl.d/k8s.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF</span>
<span class="token comment"># 配置时间同步</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ntpdate
ntpdate time.windows.com
hwclock <span class="token parameter variable">-w</span>
<span class="token comment"># 配置软件安装源</span>
<span class="token function">rm</span> /etc/yum.repos.d/*
<span class="token function">wget</span> <span class="token parameter variable">-P</span> /etc/yum.repos.d/ ftp://ftp.rhce.cc/k8s/*
<span class="token comment"># 执行部署</span>
yum makecache fast
yum update
yum remove <span class="token parameter variable">-y</span> <span class="token function">docker</span> docker-common docker-selinux docker-engine
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2 psmisc net-tools
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce-19.03.9-3.el7
<span class="token comment"># 配置加速源</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">'EOF'
&#123;
  "registry-mirrors": ["https://37y8py0j.mirror.aliyuncs.com"],
  "exec-opts": ["native.cgroupdriver=systemd"]  
&#125;
EOF</span>
systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
<span class="token comment"># 配置开机启动</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token comment"># 锁定docker版本，以免误升级</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> yum-versionlock
yum versionlock <span class="token function">add</span> docker-ce
<span class="token comment"># 重启主机</span>
systemctl <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署1.20.1版本集群</span>
<span class="token comment"># 在所有节点上部署</span>
<span class="token comment"># 安装kubelet和kubeadm</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kubelet-1.20.1-0 kubeadm-1.20.1-0 kubectl-1.20.1-0 <span class="token parameter variable">--disableexcludes</span><span class="token operator">=</span>kubernetes
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> kubelet
yum versionlock <span class="token function">add</span> kubeadm kubectl kubelet
yum versionlock status
<span class="token comment"># 安装coredns</span>
<span class="token function">wget</span> ftp://ftp.rhce.cc/cka-tool/coredns-1.21.tar
<span class="token function">docker</span> load <span class="token parameter variable">-i</span> coredns-1.21.tar
<span class="token comment"># 部署k8s</span>
kubeadm init   --kubernetes-version <span class="token number">1.20</span>.1   --pod-network-cidr<span class="token operator">=</span><span class="token number">10.245</span>.0.0/16   --image-repository registry.aliyuncs.com/google_containers
<span class="token comment"># 复制kubeconfig文件</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token environment constant">$HOME</span>/.kube
<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-i</span> /etc/kubernetes/admin.conf <span class="token environment constant">$HOME</span>/.kube/config
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-u</span><span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-g</span><span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/.kube/config
<span class="token comment"># 在WorkNode上加入集群</span>
kubeadm <span class="token function">join</span> <span class="token number">172.16</span>.10.10:6443 <span class="token parameter variable">--token</span> rd4el2.q4mfotxvwm195p7m     --discovery-token-ca-cert-hash sha256:0021ae786417d2a3202b42d580a71218ba17fa563ce7fe2b56d21624ffa389f9
<span class="token comment"># 若忘记保存此命令，可使用如下命令</span>
kubeadmin token create --print-join-command
<span class="token comment"># 查询主机状态</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   43m   v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 43m   v1.20.1
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 42m   v1.20.1
<span class="token comment"># 添加k8s的执行补全</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/profile <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
source &lt;(kubectl completion bash)
EOF</span>
<span class="token builtin class-name">source</span> /etc/profile
<span class="token comment"># 部署Calico</span>
<span class="token function">wget</span> ftp://ftp.rhce.cc/calico/calico-3.19-img.tar
<span class="token function">wget</span> ftp://ftp.rhce.cc/calico/calico.yaml
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> docker.io/calico/cni:v3.19.1 docker.io/calico/cni:v3.19.1 docker.io/calico/pod2daemon-flexvol:v3.19.1 docker.io/calico/node:v3.19.1 docker.io/calico/kube-controllers:v3.19.1 <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">docker</span> pull <span class="token variable">$i</span><span class="token punctuation">;</span><span class="token keyword">done</span>
kubectl apply <span class="token parameter variable">-f</span> calico.yaml
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE     VERSION
vms10   Ready    control-plane,master   3h38m   v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 3h37m   v1.20.1
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 3h37m   v1.20.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h3><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看版本</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl version</span>
Client Version: version.Info<span class="token punctuation">&#123;</span>Major:<span class="token string">"1"</span>, Minor:<span class="token string">"20"</span>, GitVersion:<span class="token string">"v1.20.1"</span>, GitCommit:<span class="token string">"c4d752765b3bbac2237bf87cf0b1c2e307844666"</span>, GitTreeState:<span class="token string">"clean"</span>, BuildDate:<span class="token string">"2020-12-18T12:09:25Z"</span>, GoVersion:<span class="token string">"go1.15.5"</span>, Compiler:<span class="token string">"gc"</span>, Platform:<span class="token string">"linux/amd64"</span><span class="token punctuation">&#125;</span>
Server Version: version.Info<span class="token punctuation">&#123;</span>Major:<span class="token string">"1"</span>, Minor:<span class="token string">"20"</span>, GitVersion:<span class="token string">"v1.20.1"</span>, GitCommit:<span class="token string">"c4d752765b3bbac2237bf87cf0b1c2e307844666"</span>, GitTreeState:<span class="token string">"clean"</span>, BuildDate:<span class="token string">"2020-12-18T12:00:47Z"</span>, GoVersion:<span class="token string">"go1.15.5"</span>, Compiler:<span class="token string">"gc"</span>, Platform:<span class="token string">"linux/amd64"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 精简版本信息</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl version --short</span>
Client Version: v1.20.1
Server Version: v1.20.1
<span class="token comment"># 集群信息</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl cluster-info </span>
Kubernetes control plane is running at https://172.16.10.10:6443
KubeDNS is running at https://172.16.10.10:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
<span class="token comment"># 集群主机</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE     VERSION
vms10   Ready    control-plane,master   10m     v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 5m44s   v1.20.1
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 5m38s   v1.20.1
<span class="token comment"># 备份安装配置</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get cm -o yaml -n kube-system kubeadm-config > kubeadm-config.yml</span>
<span class="token comment"># 同等环境重安装</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl init --config=kubeadm-config.yml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="删除节点-amp-重新加入"><a href="#删除节点-amp-重新加入" class="headerlink" title="删除节点&amp;重新加入"></a>删除节点&amp;重新加入</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置worker节点为维护模式</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl drain vms12 --delete-emptydir-data --force --ignore-daemonsets</span>
node/vms12 cordoned
WARNING: ignoring DaemonSet-managed Pods: kube-system/calico-node-87846, kube-system/kube-proxy-7f2jx
evicting pod kube-system/coredns-7f89b7bc75-q24dt
evicting pod kube-system/calico-kube-controllers-7f4f5bf95d-9c95m
pod/calico-kube-controllers-7f4f5bf95d-9c95m evicted
pod/coredns-7f89b7bc75-q24dt evicted
node/vms12 evicted
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS                     ROLES                  AGE   VERSION
vms10   Ready                      control-plane,master   17m   v1.20.1
vms11   Ready                      <span class="token operator">&lt;</span>none<span class="token operator">></span>                 12m   v1.20.1
vms12   Ready,SchedulingDisabled   <span class="token operator">&lt;</span>none<span class="token operator">></span>                 12m   v1.20.1
<span class="token comment"># 删除节点</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl delete node vms12</span>
<span class="token function">node</span> <span class="token string">"vms12"</span> deleted
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   18m   v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 13m   v1.20.1
<span class="token comment"># 清空节点配置</span>
<span class="token punctuation">[</span>root@vms12 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm reset</span>
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> WARNING: Changes made to this <span class="token function">host</span> by <span class="token string">'kubeadm init'</span> or <span class="token string">'kubeadm join'</span> will be reverted.
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Are you sure you want to proceed? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>: y
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Running pre-flight checks
W0520 01:30:17.934650   <span class="token number">13451</span> removeetcdmember.go:79<span class="token punctuation">]</span> <span class="token punctuation">[</span>reset<span class="token punctuation">]</span> No kubeadm config, using etcd pod spec to get data directory
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> No etcd config found. Assuming external etcd
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Please, manually reset etcd to prevent further issues
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Stopping the kubelet <span class="token function">service</span>
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Unmounting mounted directories <span class="token keyword">in</span> <span class="token string">"/var/lib/kubelet"</span>
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Deleting contents of config directories: <span class="token punctuation">[</span>/etc/kubernetes/manifests /etc/kubernetes/pki<span class="token punctuation">]</span>
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Deleting files: <span class="token punctuation">[</span>/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf<span class="token punctuation">]</span>
<span class="token punctuation">[</span>reset<span class="token punctuation">]</span> Deleting contents of stateful directories: <span class="token punctuation">[</span>/var/lib/kubelet /var/lib/dockershim /var/run/kubernetes /var/lib/cni<span class="token punctuation">]</span>

The reset process does not clean CNI configuration. To <span class="token keyword">do</span> so, you must remove /etc/cni/net.d

The reset process does not reset or clean up iptables rules or IPVS tables.
If you wish to reset iptables, you must <span class="token keyword">do</span> so manually by using the <span class="token string">"iptables"</span> command.

If your cluster was setup to utilize IPVS, run ipvsadm <span class="token parameter variable">--clear</span> <span class="token punctuation">(</span>or similar<span class="token punctuation">)</span>
to reset your system's IPVS tables.

The reset process does not clean your kubeconfig files and you must remove them manually.
Please, check the contents of the <span class="token environment constant">$HOME</span>/.kube/config file.
<span class="token punctuation">[</span>root@vms12 ~<span class="token punctuation">]</span><span class="token comment"># rm -rf /etc/cni/net.d/*</span>
<span class="token comment"># 重新加入集群</span>
<span class="token punctuation">[</span>root@vms12 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm join 172.16.10.10:6443 --token rd4el2.q4mfotxvwm195p7m --discovery-token-ca-cert-hash sha256:0021ae786417d2a3202b42d580a71218ba17fa563ce7fe2b56d21624ffa389f9</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   21m   v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 16m   v1.20.1
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 53s   v1.20.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><h4 id="顺序"><a href="#顺序" class="headerlink" title="顺序"></a>顺序</h4><ol>
<li>先升级master节点，再升级worker。如有多台master，则需要一台一台完成升级之后，再升级worker节点。</li>
<li>不管节点属性，都是先升级kubeadm,然后执行kubeadm upgrade，再升级kubelet和kkubectl。</li>
</ol>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 升级Master</span>
<span class="token comment"># 查看节点情况</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   15h   v1.20.1
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 15h   v1.20.1
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 15h   v1.20.1
<span class="token comment"># 查看版本情况        </span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl version --short</span>
Client Version: v1.20.1
Server Version: v1.20.1
<span class="token comment"># 解除升级锁</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># yum versionlock del kubeadm</span>
Loaded plugins: fastestmirror, langpacks, versionlock
Deleting versionlock for: <span class="token number">0</span>:kubeadm-1.20.1-0.*
versionlock deleted: <span class="token number">1</span>
<span class="token comment"># 查看可升级版本，确定升级到1.21.14版本，不建议跨大版本升级</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># yum list --showduplicates kubeadm</span>
kubeadm.x86_64                                                                                        <span class="token number">1.21</span>.14-0                   
kubeadm.x86_64                                                                                        <span class="token number">1.22</span>.0-0
<span class="token comment"># 升级kubeadm</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y kubeadm-1.21.14-0</span>
<span class="token comment"># 验证kubeadm版本</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm version</span>
kubeadm version: <span class="token operator">&amp;</span>version.Info<span class="token punctuation">&#123;</span>Major:<span class="token string">"1"</span>, Minor:<span class="token string">"21"</span>, GitVersion:<span class="token string">"v1.21.14"</span>, GitCommit:<span class="token string">"0f77da5bd4809927e15d1658fb4aa8f13ad890a5"</span>, GitTreeState:<span class="token string">"clean"</span>, BuildDate:<span class="token string">"2022-06-15T14:16:13Z"</span>, GoVersion:<span class="token string">"go1.16.15"</span>, Compiler:<span class="token string">"gc"</span>, Platform:<span class="token string">"linux/amd64"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 查看升级方案</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm upgrade plan</span>
<span class="token comment"># 检查当前集群状态</span>
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> Making sure the configuration is correct:
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span>
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Running pre-flight checks.
<span class="token punctuation">[</span>upgrade<span class="token punctuation">]</span> Running cluster health checks
<span class="token punctuation">[</span>upgrade<span class="token punctuation">]</span> Fetching available versions to upgrade to
<span class="token punctuation">[</span>upgrade/versions<span class="token punctuation">]</span> Cluster version: v1.20.1
<span class="token punctuation">[</span>upgrade/versions<span class="token punctuation">]</span> kubeadm version: v1.21.14
I0520 <span class="token number">17</span>:54:43.190274   <span class="token number">54385</span> version.go:254<span class="token punctuation">]</span> remote version is much newer: v1.27.2<span class="token punctuation">;</span> falling back to: stable-1.21
<span class="token punctuation">[</span>upgrade/versions<span class="token punctuation">]</span> Target version: v1.21.14
<span class="token punctuation">[</span>upgrade/versions<span class="token punctuation">]</span> Latest version <span class="token keyword">in</span> the v1.20 series: v1.20.15

Components that must be upgraded manually after you have upgraded the control plane with <span class="token string">'kubeadm upgrade apply'</span><span class="token builtin class-name">:</span>
COMPONENT   CURRENT       TARGET
kubelet     <span class="token number">3</span> x v1.20.1   v1.20.15

Upgrade to the latest version <span class="token keyword">in</span> the v1.20 series:

COMPONENT                 CURRENT    TARGET
kube-apiserver            v1.20.1    v1.20.15
kube-controller-manager   v1.20.1    v1.20.15
kube-scheduler            v1.20.1    v1.20.15
kube-proxy                v1.20.1    v1.20.15
CoreDNS                   <span class="token number">1.7</span>.0      v1.8.0
etcd                      <span class="token number">3.4</span>.13-0   <span class="token number">3.4</span>.13-0

You can now apply the upgrade by executing the following command:

	kubeadm upgrade apply v1.20.15
<span class="token comment"># 由1.20.1升级到1.20.15，也即1.20版本的最高小版本</span>
_____________________________________________________________________

Components that must be upgraded manually after you have upgraded the control plane with <span class="token string">'kubeadm upgrade apply'</span><span class="token builtin class-name">:</span>
COMPONENT   CURRENT       TARGET
kubelet     <span class="token number">3</span> x v1.20.1   v1.21.14

Upgrade to the latest stable version:

COMPONENT                 CURRENT    TARGET
kube-apiserver            v1.20.1    v1.21.14
kube-controller-manager   v1.20.1    v1.21.14
kube-scheduler            v1.20.1    v1.21.14
kube-proxy                v1.20.1    v1.21.14
CoreDNS                   <span class="token number">1.7</span>.0      v1.8.0
etcd                      <span class="token number">3.4</span>.13-0   <span class="token number">3.4</span>.13-0

You can now apply the upgrade by executing the following command:

	kubeadm upgrade apply v1.21.14
<span class="token comment"># 使用带版本号的升级方案，则是升级到指定的1.21.14版本</span>
_____________________________________________________________________

The table below shows the current state of component configs as understood by this version of kubeadm.
Configs that have a <span class="token string">"yes"</span> mark <span class="token keyword">in</span> the <span class="token string">"MANUAL UPGRADE REQUIRED"</span> <span class="token function">column</span> require manual config upgrade or
resetting to kubeadm defaults before a successful upgrade can be performed. The version to manually
upgrade to is denoted <span class="token keyword">in</span> the <span class="token string">"PREFERRED VERSION"</span> column.

API GROUP                 CURRENT VERSION   PREFERRED VERSION   MANUAL UPGRADE REQUIRED
kubeproxy.config.k8s.io   v1alpha1          v1alpha1            no
kubelet.config.k8s.io     v1beta1           v1beta1             no
_____________________________________________________________________

<span class="token comment"># 设置Master为维护模式，并清空pod</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl drain vms10 --ignore-daemonsets</span>
node/vms10 cordoned
WARNING: ignoring DaemonSet-managed Pods: kube-system/calico-node-tjswd, kube-system/kube-proxy-9cfhk
node/vms10 drained
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS                     ROLES                  AGE   VERSION
vms10   Ready,SchedulingDisabled   control-plane,master   16h   v1.20.1
vms11   Ready                      <span class="token operator">&lt;</span>none<span class="token operator">></span>                 16h   v1.20.1
vms12   Ready                      <span class="token operator">&lt;</span>none<span class="token operator">></span>                 16h   v1.20.1
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm upgrade apply 1.21.14</span>
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> Making sure the configuration is correct:
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>upgrade/config<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span>
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Running pre-flight checks.
<span class="token punctuation">[</span>upgrade<span class="token punctuation">]</span> Running cluster health checks
<span class="token punctuation">[</span>upgrade/successful<span class="token punctuation">]</span> SUCCESS<span class="token operator">!</span> Your cluster was upgraded to <span class="token string">"v1.21.14"</span><span class="token builtin class-name">.</span> Enjoy<span class="token operator">!</span>
<span class="token punctuation">[</span>upgrade/kubelet<span class="token punctuation">]</span> Now that your control plane is upgraded, please proceed with upgrading your kubelets <span class="token keyword">if</span> you haven<span class="token string">'t already done so.
# 解除Master的维护模式
[root@vms10 ~]# kubectl uncordon vms10
node/vms10 uncordoned
# 恢复对kubeadm的加锁
[root@vms10 ~]# yum versionlock add kubeadm
Loaded plugins: fastestmirror, langpacks, versionlock
Adding versionlock on: 0:kubeadm-1.21.14-0
versionlock added: 1
# 升级kubelet和kukbectl
# 解锁kubelet和kubectl
[root@vms10 ~]# yum versionlock del kubelet kubectl
Loaded plugins: fastestmirror, langpacks, versionlock
Deleting versionlock for: 0:kubectl-1.20.1-0.*
Deleting versionlock for: 0:kubelet-1.20.1-0.*
versionlock deleted: 2
[root@vms10 ~]# yum install -y kubelet-1.21.14-0 kubectl-1.21.14-0
[root@vms10 ~]# systemctl daemon-reload &amp;&amp; systemctl restart kubelet
[root@vms10 ~]# kubectl version --short
Client Version: v1.21.14
Server Version: v1.21.14
# 再对kubelet和kubectl加锁以免误升级
[root@vms10 ~]# yum versionlock add kubelet kubectl
Loaded plugins: fastestmirror, langpacks, versionlock
Adding versionlock on: 0:kubelet-1.21.14-0
Adding versionlock on: 0:kubectl-1.21.14-0
versionlock added: 2
# Master升级完毕
[root@vms10 ~]# kubectl get nodes
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   17h   v1.21.14
vms11   Ready    &lt;none>                 17h   v1.20.1
vms12   Ready    &lt;none>                 16h   v1.20.1
# 升级Worker节点
# 创建升级脚本
[root@vms11 ~]# tee ./upgrade-k8s.sh &lt;&lt;-'</span>EOF'
<span class="token comment">#!/bin/bash</span>
<span class="token comment"># set the upgrade target</span>
<span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token string">"1.21.14"</span>
<span class="token comment"># unlock kubeadm kubelet kubectl</span>
yum versionlock del kubeadm kubelet kubectl
<span class="token comment"># upgrade kubeadm</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kubeadm-<span class="token variable">$version</span>
<span class="token comment"># upgrade kuberentes</span>
kubectl drain <span class="token variable"><span class="token variable">$(</span><span class="token function">hostname</span><span class="token variable">)</span></span> --ignore-daemonsets
kubeadm upgrade apply <span class="token parameter variable">-y</span> <span class="token variable">$version</span>
kubectl uncordon <span class="token variable"><span class="token variable">$(</span><span class="token function">hostname</span><span class="token variable">)</span></span>
<span class="token comment"># upgrade</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kubelet-<span class="token variable">$version</span> kubectl-<span class="token variable">$version</span>
systemctl daemon-reload <span class="token operator">&amp;&amp;</span> systemctl restart kubelet
yum versionlock <span class="token function">add</span> kubeadm kubelet kubectl
EOF
<span class="token punctuation">[</span>root@vms11 ~<span class="token punctuation">]</span><span class="token comment"># chmod +x upgrade-k8s.sh</span>
<span class="token punctuation">[</span>root@vms11 ~<span class="token punctuation">]</span><span class="token comment"># ./upgrade-k8s.sh</span>
<span class="token comment"># 升级完成所有worker节点之后查看结果</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME    STATUS   ROLES                  AGE   VERSION
vms10   Ready    control-plane,master   17h   v1.21.14
vms11   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 17h   v1.21.14
vms12   Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>                 16h   v1.21.14
<span class="token comment"># 升级完毕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载配置文件</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># wget https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.5.0/components.yaml</span>
<span class="token comment"># 修改配置文件</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># vim components.yaml</span>

      containers:
      - args:
        - --cert-dir<span class="token operator">=</span>/tmp
        - --secure-port<span class="token operator">=</span><span class="token number">443</span>
        - --kubelet-preferred-address-types<span class="token operator">=</span>InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution<span class="token operator">=</span>15s
        - --kubelet-insecure-tls <span class="token comment">#使用http而非默认https</span>
        image: ccr.ccs.tencentyun.com/mirrors/metrics-server:v0.5.0 <span class="token comment">#修改为国内镜像，只有0.5.0一个版本可用</span>

<span class="token comment"># 执行部署</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f components.yaml</span>
serviceaccount/metrics-server created
clusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader created
clusterrole.rbac.authorization.k8s.io/system:metrics-server created
rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created
clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created
clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created
service/metrics-server created
deployment.apps/metrics-server created
apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created
<span class="token comment"># 查看运行pod</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pod -n kube-system |grep metrics-server</span>
metrics-server-c44f75469-ltpgz             <span class="token number">0</span>/1     Running   <span class="token number">0</span>          34s
<span class="token comment"># 查看集群状态</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl top nodes</span>
W0520 <span class="token number">18</span>:59:54.167920  <span class="token number">103768</span> top_node.go:119<span class="token punctuation">]</span> Using json <span class="token function">format</span> to get metrics. Next release will switch to protocol-buffers, switch early by passing --use-protocol-buffers flag
NAME    CPU<span class="token punctuation">(</span>cores<span class="token punctuation">)</span>   CPU%   MEMORY<span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>   MEMORY%   
vms10   153m         <span class="token number">7</span>%     1669Mi          <span class="token number">43</span>%       
vms11   96m          <span class="token number">4</span>%     787Mi           <span class="token number">20</span>%       
vms12   86m          <span class="token number">4</span>%     767Mi           <span class="token number">20</span>% <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="面板"><a href="#面板" class="headerlink" title="面板"></a>面板</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在Master节点上配置部署文件</span>
<span class="token comment"># 1.21版本对应dashboard的2.4版本</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># docker pull kubernetesui/dashboard:v2.4.0</span>
v2.4.0: Pulling from kubernetesui/dashboard
5a24d13191c9: Pull complete 
476e0d029a85: Pull complete 
Digest: sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
Status: Downloaded newer image <span class="token keyword">for</span> kubernetesui/dashboard:v2.4.0
docker.io/kubernetesui/dashboard:v2.4.0
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># docker pull kubernetesui/metrics-scraper:v1.0.7</span>
v1.0.7: Pulling from kubernetesui/metrics-scraper
18dd5eddb60d: Pull complete 
1930c20668a8: Pull complete 
Digest: sha256:36d5b3f60e1a144cc5ada820910535074bdf5cf73fb70d1ff1681537eef4e172
Status: Downloaded newer image <span class="token keyword">for</span> kubernetesui/metrics-scraper:v1.0.7
docker.io/kubernetesui/metrics-scraper:v1.0.7
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml</span>
<span class="token comment"># 对上述文件进行如下修改</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># vim recommended.yaml </span>
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  type: NodePort <span class="token comment">#新增</span>
  ports:
    - port: <span class="token number">443</span>
      targetPort: <span class="token number">8443</span>
      nodePort: <span class="token number">30001</span> <span class="token comment">#新增</span>
  selector:
    k8s-app: kubernetes-dashboard

<span class="token comment"># 创建账户</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create serviceaccount dashboard-admin -n kube-system</span>
serviceaccount/dashboard-admin created
<span class="token comment"># 账户赋权</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span>
clusterrolebinding.rbac.authorization.k8s.io/dashboard-admin created
<span class="token comment"># 创建账户Token</span>
<span class="token punctuation">[</span>root@vms10 ~<span class="token punctuation">]</span><span class="token comment"># kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/&#123;print $1&#125;')</span>
Name:         dashboard-admin-token-zm45s
Namespace:    kube-system
Labels:       <span class="token operator">&lt;</span>none<span class="token operator">></span>
Annotations:  kubernetes.io/service-account.name: dashboard-admin
              kubernetes.io/service-account.uid: b6679e77-4d4c-4fbc-bbb4-c05965cf7af7

Type:  kubernetes.io/service-account-token

Data
<span class="token operator">==</span><span class="token operator">==</span>
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IlRqYTQzSUtER0lVa1B1WVAtV1drSkpCSjdseUJ5bmJJbjhTRTZYR28xMjgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tem00NXMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYjY2NzllNzctNGQ0Yy00ZmJjLWJiYjQtYzA1OTY1Y2Y3YWY3Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.hGsLdZ8zg7ZbC47fYj5ZxrFbGBgdabnzQQaaiPe_oHKHucWT0Ewq79s6VXgDlOOCrgWCSwhV_s8M_3h5MD7E53xOapIdZKJ8QPATRKzD6sqS2OQ3l6APbQYDU_He_2apCHNhgTrZJvg5QmPToU-GayphWda9i3JRxtryo2xujASTx5futs06TP0Ue_SP3gzPIxdmsBahVSdBs4t6IB-_UJ-T25bcmxs_GT3TEnMyjoYFWER30Ypktha6-wE3DGW6GX1gIQldhUCtOHHcoW12dD74Mvmwq8gMUUcqTAm4oS_laaYKr3OddzdYGz4Gvv-HkfxSeX3RRB3dnjUvavn3rw
ca.crt:     <span class="token number">1066</span> bytes
namespace:  <span class="token number">11</span> bytes
<span class="token comment"># 然后使用上述token登录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>







]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker的基本使用</title>
    <url>/2022/08/15/Docker-Pratice/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="Docker是什么"><a href="#Docker是什么" class="headerlink" title="Docker是什么"></a>Docker是什么</h3><p>Docker是一个在2013年开源的使用go语言编写的PaaS服务。特点是交付速度快、资源消耗低。Docker采用客户端&#x2F;服务端架构，使用远程API来管理和创建Docker容器。它的三大理念是build、ship、run，使用Namespace及cggroup等来提供容器的资源隔离与安全保障。</p>
<h3 id="Docker的组成"><a href="#Docker的组成" class="headerlink" title="Docker的组成"></a>Docker的组成</h3><ul>
<li>Docker主机(Host)：物理机或者虚机，用于运行Docker服务进程和容器；</li>
<li>Docker服务端(Server)：Docker守护进程，运行Docker容器；</li>
<li>Docker客户端(Client)：客户端使用docker命令或者其他工具调用相应API；</li>
<li>Docker仓库(Registroy)：保存镜像的仓库，类似git这样的版本控制系统；</li>
<li>Docker镜像(Images)：镜像可以理解为创建实例使用的模板；</li>
<li>Docker容器(Container)：容器是从镜像生成对外提供服务的一个或者一组服务。</li>
</ul>
<h3 id="NameSpace技术"><a href="#NameSpace技术" class="headerlink" title="NameSpace技术"></a>NameSpace技术</h3><p>命名空间保证容器之间的运行环境互相隔离，可以使每个进程看起来都拥有自己的隔离的全局系统资源。</p>
<ul>
<li>MNT NameSpace：提供存储隔离能力</li>
<li>IPC NameSpace：提供进程间通信隔离能力</li>
<li>UTS NameSpace：提供主机名隔离能力</li>
<li>PID NameSpace：提供进程隔离能力</li>
<li>Net NameSpace：提供网络隔离能力</li>
<li>User NameSpace：提供用户隔离能力</li>
</ul>
<h3 id="Control-Groups"><a href="#Control-Groups" class="headerlink" title="Control Groups"></a>Control Groups</h3><p>容器的本质就是进程，为了让容器中的进程可控，Docke使用Linux cgroups来限制容器能够使用资源的上限，包括CPU、内存、磁盘、网络带宽等等。此外，还能够对进程进行优先级配置，以及将进程挂起和恢复。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 验证CGROUP</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cat /boot/config-3.10.0-1160.90.1.el7.x86_64 |grep CGROUP</span>
<span class="token assign-left variable">CONFIG_CGROUPS</span><span class="token operator">=</span>y
<span class="token comment"># CONFIG_CGROUP_DEBUG is not set</span>
<span class="token assign-left variable">CONFIG_CGROUP_FREEZER</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_PIDS</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_DEVICE</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_CPUACCT</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_HUGETLB</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_PERF</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_CGROUP_SCHED</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_BLK_CGROUP</span><span class="token operator">=</span>y
<span class="token comment"># CONFIG_DEBUG_BLK_CGROUP is not set</span>
<span class="token assign-left variable">CONFIG_NETFILTER_XT_MATCH_CGROUP</span><span class="token operator">=</span>m
<span class="token assign-left variable">CONFIG_NET_CLS_CGROUP</span><span class="token operator">=</span>y
<span class="token assign-left variable">CONFIG_NETPRIO_CGROUP</span><span class="token operator">=</span>y

<span class="token comment"># 查看系统cgroups</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ll /sys/fs/cgroup/</span>
total <span class="token number">0</span>
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 blkio
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">11</span> May  <span class="token number">9</span> 03:40 cpu -<span class="token operator">></span> cpu,cpuacct
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">11</span> May  <span class="token number">9</span> 03:40 cpuacct -<span class="token operator">></span> cpu,cpuacct
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 cpu,cpuacct
drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 cpuset
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 devices
drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 freezer
drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 hugetlb
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 memory
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">16</span> May  <span class="token number">9</span> 03:40 net_cls -<span class="token operator">></span> net_cls,net_prio
drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 net_cls,net_prio
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">16</span> May  <span class="token number">9</span> 03:40 net_prio -<span class="token operator">></span> net_cls,net_prio
drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 perf_event
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 pids
drwxr-xr-x. <span class="token number">4</span> root root  <span class="token number">0</span> May  <span class="token number">9</span> 03:40 systemd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="cgroups的具体实现"><a href="#cgroups的具体实现" class="headerlink" title="cgroups的具体实现"></a>cgroups的具体实现</h3><ul>
<li>blkio：块设备的IO限制</li>
<li>cpu：使用调度程序为任务提供CPU的访问</li>
<li>cpu.stat：产生任务的CPU资源报告</li>
<li>cpuset：多核CPU的调度</li>
<li>memory：设置任务的内存限制以及产生内存资源报告</li>
<li>ns：命名空间子系统</li>
<li>net_cls：标记每个网络包以供cgroups任务使用</li>
</ul>
<h2 id="核心技术"><a href="#核心技术" class="headerlink" title="核心技术"></a>核心技术</h2><h3 id="容器规范"><a href="#容器规范" class="headerlink" title="容器规范"></a>容器规范</h3><ul>
<li>runtime spec</li>
<li>image format spec</li>
</ul>
<h3 id="容器运行时"><a href="#容器运行时" class="headerlink" title="容器运行时"></a>容器运行时</h3><ul>
<li>LXC</li>
<li>runc</li>
<li>rkt</li>
</ul>
<h3 id="容器管理工具"><a href="#容器管理工具" class="headerlink" title="容器管理工具"></a>容器管理工具</h3><ul>
<li>RKT的管理工具是rkt cli</li>
<li>Runc的管理工具是Docker engine</li>
<li>LXC|LXD的管理工具就是lxc</li>
</ul>
<h3 id="容器定义工具"><a href="#容器定义工具" class="headerlink" title="容器定义工具"></a>容器定义工具</h3><ul>
<li>Docker Image：Docker容器的模板</li>
<li>DockerFile：包含N个命令的文本文件，通过定义Dockerfile来创建Docker Image</li>
<li>ACI(App Container Image)：与DockerImage类似，是CoreOS开发的rkt容器镜像格式</li>
</ul>
<h3 id="镜像仓库（Registry）"><a href="#镜像仓库（Registry）" class="headerlink" title="镜像仓库（Registry）"></a>镜像仓库（Registry）</h3><p>统一保存镜像而且是多个不同镜像版本的地方，叫做镜像仓库。</p>
<ul>
<li>Image Registry：Docker官方提供的私有仓库部署工具</li>
<li>Docker Hub：Docker官方的公共仓库</li>
<li>Harbor：VMware提供的带WEB界面自带认证功能的镜像仓库</li>
</ul>
<h3 id="编排工具"><a href="#编排工具" class="headerlink" title="编排工具"></a>编排工具</h3><p>容器编排通常包括容器管理、调度、集群定义和服务发现等功能。</p>
<ul>
<li>Docker Swarm：Docker官方开发的容器编排引擎</li>
<li>Kubernetes：Google领导开发的容器编排引擎，其内部项目为Borg，支持Docker和CoreOS</li>
</ul>
<h2 id="依赖技术"><a href="#依赖技术" class="headerlink" title="依赖技术"></a>依赖技术</h2><h3 id="容器网络"><a href="#容器网络" class="headerlink" title="容器网络"></a>容器网络</h3><p>Docker自带网络功能的docker network仅支持管理单机容器网络，多主机运行需要使用第三方开源网络插件，例如calico、flannel等。</p>
<h3 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h3><p>容器的动态扩容特性决定了容器IP会动态变化，需要一种机制自动识别并将用户请求动态转发到新的容器上。k8s自带服务发现功能，需要结合kube-dns服务解析域名。</p>
<h3 id="容器监控"><a href="#容器监控" class="headerlink" title="容器监控"></a>容器监控</h3><p>Docker原生命令Docker ps&#x2F;top&#x2F;stats可以查看容器运行状态，也可以使用Promeheus等第三方工具监控容器运行状态。</p>
<h3 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h3><p>容器的在不同Host之间的动态迁移就需要相关数据也要随之迁移，需要使用解决其数据存储和挂载问题。</p>
<h3 id="日志收集"><a href="#日志收集" class="headerlink" title="日志收集"></a>日志收集</h3><p>Docker原生日志查看工具是docker logs，但容器内部日志需要通过ELK等专门日志工具进行收集、分析和展示。</p>
<h2 id="容器安装"><a href="#容器安装" class="headerlink" title="容器安装"></a>容器安装</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以CentOS7为例,使用华为源</span>
<span class="token comment"># 设置默认防火墙配置为信任区域</span>
firewall-cmd --set-default-zone<span class="token operator">=</span>trusted
<span class="token comment"># 配置软件安装源</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/docker-ce.repo https://repo.huaweicloud.com/docker-ce/linux/centos/docker-ce.repo
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s+download.docker.com+repo.huaweicloud.com/docker-ce+'</span> /etc/yum.repos.d/docker-ce.repo
<span class="token comment"># 执行部署</span>
yum makecache fast
yum update
yum remove <span class="token parameter variable">-y</span> <span class="token function">docker</span> docker-common docker-selinux docker-engine
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2 psmisc net-tools
<span class="token comment"># 安装指定版本</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce
<span class="token comment"># 配置加速源</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">'EOF'
&#123;
  "registry-mirrors": ["https://37y8py0j.mirror.aliyuncs.com"],
  "exec-opts": ["native.cgroupdriver=systemd"]  
&#125;
EOF</span>
systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
<span class="token comment"># 启动</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> <span class="token function">docker</span>

<span class="token comment"># 修改内核参数</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/sysctl.d/k8s.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF</span>

<span class="token function">sysctl</span> <span class="token parameter variable">--system</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看版本信息</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker version</span>
Client: Docker Engine - Community
 Version:           <span class="token number">23.0</span>.5
 API version:       <span class="token number">1.42</span>
 Go version:        go1.19.8
 Git commit:        bc4487a
 Built:             Wed Apr <span class="token number">26</span> <span class="token number">16</span>:18:56 <span class="token number">2023</span>
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          <span class="token number">23.0</span>.5
  API version:      <span class="token number">1.42</span> <span class="token punctuation">(</span>minimum version <span class="token number">1.12</span><span class="token punctuation">)</span>
  Go version:       go1.19.8
  Git commit:       94d3ad6
  Built:            Wed Apr <span class="token number">26</span> <span class="token number">16</span>:16:35 <span class="token number">2023</span>
  OS/Arch:          linux/amd64
  Experimental:     <span class="token boolean">false</span>
 containerd:
  Version:          <span class="token number">1.6</span>.20
  GitCommit:        2806fc1057397dbaeefbea0e4e17bddfbd388f38
 runc:
  Version:          <span class="token number">1.1</span>.5
  GitCommit:        v1.1.5-0-gf19387a
 docker-init:
  Version:          <span class="token number">0.19</span>.0
  GitCommit:        de40ad0
<span class="token comment"># 验证Docker0网卡</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
docker0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">409</span><span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>UP,BROADCAST,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span>
        inet <span class="token number">172.17</span>.0.1  netmask <span class="token number">255.255</span>.0.0  broadcast <span class="token number">172.17</span>.255.255
        ether 02:42:e6:56:9d:47  txqueuelen <span class="token number">0</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
        RX packets <span class="token number">0</span>  bytes <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0.0</span> B<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">0</span>  bytes <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0.0</span> B<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>
<span class="token comment"># 查看系统信息</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker info</span>
Client:
 Context:    default
 Debug Mode: <span class="token boolean">false</span>
 Plugins:
  buildx: Docker Buildx <span class="token punctuation">(</span>Docker Inc.<span class="token punctuation">)</span>
    Version:  v0.10.4
    Path:     /usr/libexec/docker/cli-plugins/docker-buildx
  compose: Docker Compose <span class="token punctuation">(</span>Docker Inc.<span class="token punctuation">)</span>
    Version:  v2.17.3
    Path:     /usr/libexec/docker/cli-plugins/docker-compose

Server:
 Containers: <span class="token number">0</span>
  Running: <span class="token number">0</span>
  Paused: <span class="token number">0</span>
  Stopped: <span class="token number">0</span>
 Images: <span class="token number">1</span>
 Server Version: <span class="token number">23.0</span>.5
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: <span class="token boolean">true</span>
  Using metacopy: <span class="token boolean">false</span>
  Native Overlay Diff: <span class="token boolean">true</span>
  userxattr: <span class="token boolean">false</span>
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Cgroup Version: <span class="token number">1</span>
 Plugins:
  Volume: <span class="token builtin class-name">local</span>
  Network: bridge <span class="token function">host</span> ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file <span class="token builtin class-name">local</span> logentries splunk syslog
 Swarm: inactive
 Runtimes: io.containerd.runc.v2 runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 2806fc1057397dbaeefbea0e4e17bddfbd388f38
 runc version: v1.1.5-0-gf19387a
 init version: de40ad0
 Security Options:
  seccomp
   Profile: <span class="token builtin class-name">builtin</span>
 Kernel Version: <span class="token number">3.10</span>.0-1160.90.1.el7.x86_64
 Operating System: CentOS Linux <span class="token number">7</span> <span class="token punctuation">(</span>Core<span class="token punctuation">)</span>
 OSType: linux
 Architecture: x86_64
 CPUs: <span class="token number">2</span>
 Total Memory: <span class="token number">3</span>.839GiB
 Name: vms101
 ID: 589aba66-198e-4805-9ae2-518d17585521
 Docker Root Dir: /var/lib/docker
 Debug Mode: <span class="token boolean">false</span>
 Registry: https://index.docker.io/v1/
 Experimental: <span class="token boolean">false</span>
 Insecure Registries:
  <span class="token number">127.0</span>.0.0/8
 Registry Mirrors:
  https://37y8py0j.mirror.aliyuncs.com/
 Live Restore Enabled: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="服务进程"><a href="#服务进程" class="headerlink" title="服务进程"></a>服务进程</h3><ul>
<li>dockerd：被Client直接访问，其父进程为Host的Systemd守护进程</li>
<li>docker-proxy：实现容器通信，其父进程为dockerd</li>
<li>containerd：被dockerd进程调用以实现与runc交互</li>
<li>containerd-shim：真正运行容器的载体，其父进程为containerd</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看宿主机进程树</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># pstree -p 1</span>
systemd<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>─┬─NetworkManager<span class="token punctuation">(</span><span class="token number">881</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>NetworkManager<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">886</span><span class="token punctuation">)</span>
           │                     └─<span class="token punctuation">&#123;</span>NetworkManager<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">892</span><span class="token punctuation">)</span>
           ├─containerd<span class="token punctuation">(</span><span class="token number">1191</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1208</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1212</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1213</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1214</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1242</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1253</span><span class="token punctuation">)</span>
           │                  ├─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1254</span><span class="token punctuation">)</span>
           │                  └─<span class="token punctuation">&#123;</span>containerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1285</span><span class="token punctuation">)</span>
           ├─containerd-shim<span class="token punctuation">(</span><span class="token number">2030</span><span class="token punctuation">)</span>─┬─nginx<span class="token punctuation">(</span><span class="token number">2051</span><span class="token punctuation">)</span>─┬─nginx<span class="token punctuation">(</span><span class="token number">2101</span><span class="token punctuation">)</span>
           │                       │             └─nginx<span class="token punctuation">(</span><span class="token number">2102</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2031</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2032</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2033</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2034</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2035</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2036</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2037</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2038</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2039</span><span class="token punctuation">)</span>
           │                       └─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2040</span><span class="token punctuation">)</span>
           ├─containerd-shim<span class="token punctuation">(</span><span class="token number">2139</span><span class="token punctuation">)</span>─┬─nginx<span class="token punctuation">(</span><span class="token number">2159</span><span class="token punctuation">)</span>─┬─nginx<span class="token punctuation">(</span><span class="token number">2212</span><span class="token punctuation">)</span>
           │                       │             └─nginx<span class="token punctuation">(</span><span class="token number">2213</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2141</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2142</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2143</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2144</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2145</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2146</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2147</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2153</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2179</span><span class="token punctuation">)</span>
           │                       ├─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2180</span><span class="token punctuation">)</span>
           │                       └─<span class="token punctuation">&#123;</span>containerd-shim<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2181</span><span class="token punctuation">)</span>
           ├─dockerd<span class="token punctuation">(</span><span class="token number">1290</span><span class="token punctuation">)</span>─┬─docker-proxy<span class="token punctuation">(</span><span class="token number">2011</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2012</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2013</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2014</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2015</span><span class="token punctuation">)</span>
           │               │                    └─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">)</span>
           │               ├─docker-proxy<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">)</span>
           │               │                    └─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">)</span>
           │               ├─docker-proxy<span class="token punctuation">(</span><span class="token number">2121</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2122</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2123</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2124</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2125</span><span class="token punctuation">)</span>
           │               │                    └─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2126</span><span class="token punctuation">)</span>
           │               ├─docker-proxy<span class="token punctuation">(</span><span class="token number">2127</span><span class="token punctuation">)</span>─┬─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2128</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2129</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2130</span><span class="token punctuation">)</span>
           │               │                    ├─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2131</span><span class="token punctuation">)</span>
           │               │                    └─<span class="token punctuation">&#123;</span>docker-proxy<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">2132</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1373</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1374</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1375</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1376</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1462</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1463</span><span class="token punctuation">)</span>
           │               ├─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1464</span><span class="token punctuation">)</span>
           │               └─<span class="token punctuation">&#123;</span>dockerd<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token number">1868</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="容器的创建与管理"><a href="#容器的创建与管理" class="headerlink" title="容器的创建与管理"></a>容器的创建与管理</h2><h3 id="通信流程"><a href="#通信流程" class="headerlink" title="通信流程"></a>通信流程</h3><ol>
<li>dockerd通过grpc和containerd模块通信，dockerd由libcontainerd负责和contaiinerd进行交换，socket文件为：&#x2F;run&#x2F;containerd&#x2F;containerd.sock；</li>
<li>containerd在dockerd启动时被启动，然后containerd启动grpc请求监听，containerd处理grpc请求；</li>
<li>若是start或者exec容器，containerd拉起一个container-shim，并进行相关操作；</li>
<li>container-shim拉起后，start&#x2F;exec&#x2F;create拉起runC进程，通过exit、control文件和containerd通信，通过父子进程关系和SIGCHLD监控容器中的进程状态；</li>
<li>在整个容器生命周期中，containerd通过epoll监控容器文件，监控容器事件。</li>
</ol>
<h3 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h3><p>Docker镜像包含有启动容器所需要的文件系统及所需要的内容，因此镜像主要用于创建并启动Docker容器。Docker镜像包含多层文件系统，称为UnionFS联合文件系统，它将多层目录挂载到一起，形成一个虚拟文件系统，每一层叫做一层layer，每层文件系统有只读(readonly)、读写(readwrite)和写出(whiteout-able)三种权限，但每层文件系统都是只读的。构建镜像的时候，每个构建的操作都增加一层文件系统，一层层往上叠加，上层的修改会覆盖底层的可见性。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 搜索镜像</span>
<span class="token comment"># 按最新版搜索</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker search centos</span>
NAME                                         DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
centos                                       DEPRECATED<span class="token punctuation">;</span> The official build of CentOS.       <span class="token number">7575</span>      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>       
kasmweb/centos-7-desktop                     CentOS <span class="token number">7</span> desktop <span class="token keyword">for</span> Kasm Workspaces            <span class="token number">36</span>                   
bitnami/centos-base-buildpack                Centos base compilation image                   <span class="token number">0</span>                    <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
<span class="token comment"># 指定版本搜索</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker search centos:7.2</span>
NAME                                        DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
vikingco/python                             Python Stack Docker Base Image: Based on cen…   <span class="token number">1</span>                    
alvintz/centos                              centos:7.2.1511                                 <span class="token number">0</span>                    <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
morrowind/centos                            From centos:7.2                                 <span class="token number">0</span>                    
<span class="token comment"># 下载镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker pull alpine</span>
Using default tag: latest
latest: Pulling from library/alpine
59bf1c3509f3: Pull complete 
Digest: sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300
Status: Downloaded newer image <span class="token keyword">for</span> alpine:latest
docker.io/library/alpine:latest
<span class="token comment"># 查看本地镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
nginx        latest    605c77e624dd   <span class="token number">16</span> months ago   141MB
alpine       latest    c059bfaa849c   <span class="token number">17</span> months ago   <span class="token number">5</span>.59MB
centos       latest    5d0da3dc9764   <span class="token number">20</span> months ago   231MB
<span class="token comment"># 镜像导出</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker save centos -o /opt/centos.tar.gz</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ll /opt/centos.tar.gz </span>
-rw-------. <span class="token number">1</span> root root <span class="token number">238581248</span> May  <span class="token number">9</span> 04:26 /opt/centos.tar.gz
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># tar xvf /opt/centos.tar.gz </span>
079bc5e75545bf45253ab44ce73fbd51d96fa52ee799031e60b65a82e89df662/
079bc5e75545bf45253ab44ce73fbd51d96fa52ee799031e60b65a82e89df662/VERSION
079bc5e75545bf45253ab44ce73fbd51d96fa52ee799031e60b65a82e89df662/json
079bc5e75545bf45253ab44ce73fbd51d96fa52ee799031e60b65a82e89df662/layer.tar
5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6.json
manifest.json
tar: manifest.json: implausibly old <span class="token function">time</span> stamp <span class="token number">1970</span>-01-01 08:00:00
repositories
tar: repositories: implausibly old <span class="token function">time</span> stamp <span class="token number">1970</span>-01-01 08:00:00
<span class="token comment"># 镜像删除</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rmi centos</span>
Untagged: centos:latest
Untagged: centos@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177
Deleted: sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6
Deleted: sha256:74ddd0ec08fa43d09f32636ba91a0a3053b02cb4627c35051aff89f853606b59
<span class="token comment"># 镜像导入</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker load &lt; /opt/centos.tar.gz </span>
74ddd0ec08fa: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  <span class="token number">238</span>.6MB/238.6MB
Loaded image: centos:latest
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
nginx        latest    605c77e624dd   <span class="token number">16</span> months ago   141MB
alpine       latest    c059bfaa849c   <span class="token number">17</span> months ago   <span class="token number">5</span>.59MB
centos       latest    5d0da3dc9764   <span class="token number">20</span> months ago   231MB
<span class="token comment"># 镜像的重新打标签</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY            TAG        IMAGE ID       CREATED          SIZE
sujx/nginx-yum-file   v1         97d106d963e7   <span class="token number">9</span> minutes ago    <span class="token number">2</span>.42GB
centos                latest     5d0da3dc9764   <span class="token number">20</span> months ago    231MB
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker tag centos</span>
centos:7.9.2009  centos:latest    centos-nginx:v1  
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker tag centos:latest centos8</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY            TAG        IMAGE ID       CREATED          SIZE
centos8               latest     5d0da3dc9764   <span class="token number">20</span> months ago    231MB
centos                latest     5d0da3dc9764   <span class="token number">20</span> months ago    231MB
<span class="token comment"># 查看镜像的文件层次</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker history centos8</span>
IMAGE          CREATED         CREATED BY                                      SIZE      COMMENT
5d0da3dc9764   <span class="token number">20</span> months ago   /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop)  CMD ["/bin/bash"]            0B        </span>
<span class="token operator">&lt;</span>missing<span class="token operator">></span>      <span class="token number">20</span> months ago   /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop)  LABEL org.label-schema.sc…   0B        </span>
<span class="token operator">&lt;</span>missing<span class="token operator">></span>      <span class="token number">20</span> months ago   /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop) ADD file:805cb5e15fb6e0bb0…   231MB </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="容器管理"><a href="#容器管理" class="headerlink" title="容器管理"></a>容器管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示所有容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                               NAMES
6a36e33a02f0   nginx     <span class="token string">"/docker-entrypoint.…"</span>   About an hour ago   Up About an hour   <span class="token number">0.0</span>.0.0:83-<span class="token operator">></span><span class="token number">80</span>/tcp, :::83-<span class="token operator">></span><span class="token number">80</span>/tcp   ngingx-3
1353d6b1c4f2   nginx     <span class="token string">"/docker-entrypoint.…"</span>   About an hour ago   Up About an hour   <span class="token number">0.0</span>.0.0:82-<span class="token operator">></span><span class="token number">80</span>/tcp, :::82-<span class="token operator">></span><span class="token number">80</span>/tcp   ngingx-2
<span class="token comment"># 从镜像启动一个容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it centos bash</span>
<span class="token punctuation">[</span>root@c82b8168f173 /<span class="token punctuation">]</span><span class="token comment">#</span>
<span class="token comment"># 使用crtl+p+q推出容器而不注销</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                               NAMES
c82b8168f173   centos    <span class="token string">"bash"</span>                   <span class="token number">18</span> seconds ago      Up <span class="token number">17</span> seconds                                          eager_nash
6a36e33a02f0   nginx     <span class="token string">"/docker-entrypoint.…"</span>   About an hour ago   Up About an hour   <span class="token number">0.0</span>.0.0:83-<span class="token operator">></span><span class="token number">80</span>/tcp, :::83-<span class="token operator">></span><span class="token number">80</span>/tcp   ngingx-3
1353d6b1c4f2   nginx     <span class="token string">"/docker-entrypoint.…"</span>   About an hour ago   Up About an hour   <span class="token number">0.0</span>.0.0:82-<span class="token operator">></span><span class="token number">80</span>/tcp, :::82-<span class="token operator">></span><span class="token number">80</span>/tcp   ngingx-2
<span class="token comment"># 进入容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it c82b8 bash</span>
<span class="token punctuation">[</span>root@c82b8168f173 /<span class="token punctuation">]</span><span class="token comment"># top</span>
<span class="token function">top</span> - <span class="token number">21</span>:28:03 up  <span class="token number">1</span>:47,  <span class="token number">0</span> users,  load average: <span class="token number">0.00</span>, <span class="token number">0.01</span>, <span class="token number">0.05</span>
Tasks:   <span class="token number">3</span> total,   <span class="token number">1</span> running,   <span class="token number">2</span> sleeping,   <span class="token number">0</span> stopped,   <span class="token number">0</span> zombie
%Cpu<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:  <span class="token number">0.0</span> us,  <span class="token number">0.0</span> sy,  <span class="token number">0.0</span> ni,100.0 id,  <span class="token number">0.0</span> wa,  <span class="token number">0.0</span> hi,  <span class="token number">0.0</span> si,  <span class="token number">0.0</span> st
MiB Mem <span class="token builtin class-name">:</span>   <span class="token number">3931.1</span> total,   <span class="token number">2082.2</span> free,    <span class="token number">476.3</span> used,   <span class="token number">1372.5</span> buff/cache
MiB Swap:   <span class="token number">2048.0</span> total,   <span class="token number">2048.0</span> free,      <span class="token number">0.0</span> used.   <span class="token number">3199.2</span> avail Mem 
PID <span class="token environment constant">USER</span>      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
<span class="token number">1</span>  root      <span class="token number">20</span>   <span class="token number">0</span>   <span class="token number">12036</span>   <span class="token number">2088</span>   <span class="token number">1572</span> S   <span class="token number">0.0</span>   <span class="token number">0.1</span>   <span class="token number">0</span>:00.03 <span class="token function">bash</span>
<span class="token number">21</span> root      <span class="token number">20</span>   <span class="token number">0</span>   <span class="token number">12036</span>   <span class="token number">2088</span>   <span class="token number">1572</span> S   <span class="token number">0.0</span>   <span class="token number">0.1</span>   <span class="token number">0</span>:00.02 <span class="token function">bash</span>                                                                   <span class="token number">35</span> root      <span class="token number">20</span>   <span class="token number">0</span>   <span class="token number">49112</span>   <span class="token number">2164</span>   <span class="token number">1520</span> R   <span class="token number">0.0</span>   <span class="token number">0.1</span>   <span class="token number">0</span>:00.00 <span class="token function">top</span> 
<span class="token comment"># 删除正在运行的容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rm c82b</span>
Error response from daemon: You cannot remove a running container c82b8168f173d8d4f0365c8d9672e99db68fd25f224a251b8ac31ef54996b5a1. Stop the container before attempting removal or force remove
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f c82b</span>
c82b
<span class="token comment"># 设定容器别名并指定端口、后台运行</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name nginx-1 -p 81:80 nginx</span>
b5b0c251e4e7458e1022722d6b19d287caba93b307636c54a60a0a28e7f4e30c
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name nginx-2 -p 82:80 nginx</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name nginx-3 -p 83:80 nginx</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp</span>
Active Internet connections <span class="token punctuation">(</span>only servers<span class="token punctuation">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name   
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:81              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">3859</span>/docker-proxy   
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:82              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">2011</span>/docker-proxy   
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:83              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">2121</span>/docker-proxy   
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::81                   :::*                    LISTEN      <span class="token number">3865</span>/docker-proxy   
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::82                   :::*                    LISTEN      <span class="token number">2017</span>/docker-proxy   
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::83                   :::*                    LISTEN      <span class="token number">2127</span>/docker-proxy 
<span class="token comment"># 查看日志</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker logs nginx-1</span>
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking <span class="token keyword">for</span> shell scripts <span class="token keyword">in</span> /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
<span class="token number">10</span>-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
<span class="token number">10</span>-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 <span class="token keyword">in</span> /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete<span class="token punctuation">;</span> ready <span class="token keyword">for</span> start up
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: using the "epoll" event method</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: nginx/1.21.5</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) </span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: OS: Linux 3.10.0-1160.90.1.el7.x86_64</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: start worker processes</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: start worker process 31</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:32:14 <span class="token punctuation">[</span>notice<span class="token punctuation">]</span> <span class="token number">1</span><span class="token comment">#1: start worker process 32</span>
<span class="token number">172.16</span>.10.1 - - <span class="token punctuation">[</span>08/May/2023:21:34:49 +0000<span class="token punctuation">]</span> <span class="token string">"GET / HTTP/1.1"</span> <span class="token number">200</span> <span class="token number">615</span> <span class="token string">"-"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36 Edg/113.0.1774.35"</span> <span class="token string">"-"</span>
<span class="token number">2023</span>/05/08 <span class="token number">21</span>:34:49 <span class="token punctuation">[</span>error<span class="token punctuation">]</span> <span class="token number">31</span><span class="token comment">#31: *2 open() "/usr/share/nginx/html/favicon.ico" failed (2: No such file or directory), client: 172.16.10.1, server: localhost, request: "GET /favicon.ico HTTP/1.1", host: "172.16.10.101:81", referrer: "http://172.16.10.101:81/"</span>
<span class="token number">172.16</span>.10.1 - - <span class="token punctuation">[</span>08/May/2023:21:34:49 +0000<span class="token punctuation">]</span> <span class="token string">"GET /favicon.ico HTTP/1.1"</span> <span class="token number">404</span> <span class="token number">555</span> <span class="token string">"http://172.16.10.101:81/"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36 Edg/113.0.1774.35"</span> <span class="token string">"-"</span>
<span class="token comment"># 查看容器映射端口</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker port nginx-1</span>
<span class="token number">80</span>/tcp -<span class="token operator">></span> <span class="token number">0.0</span>.0.0:81
<span class="token number">80</span>/tcp -<span class="token operator">></span> <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:81
<span class="token comment"># 传递运行命令，以保持容器的运行</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d centos /usr/bin/tail -f '/etc/hosts'</span>
d43c0e0a418819c0638fb63831e0e7becfb2d9ceed408721b98e8b3013bfaa3a
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps </span>
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES
d43c0e0a4188   centos    <span class="token string">"/usr/bin/tail -f /e…"</span>   <span class="token number">24</span> seconds ago   Up <span class="token number">23</span> seconds                                       pedantic_mcclintock
<span class="token comment"># 容器的停止和运行以及重启</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker stop nginx-1</span>
nginx-1
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker start nginx-1</span>
nginx-1
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker restart nginx-1</span>
nginx-1
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                               NAMES
b5b0c251e4e7   nginx     <span class="token string">"/docker-entrypoint.…"</span>   <span class="token number">9</span> minutes ago   Up <span class="token number">9</span> seconds   <span class="token number">0.0</span>.0.0:81-<span class="token operator">></span><span class="token number">80</span>/tcp, :::81-<span class="token operator">></span><span class="token number">80</span>/tcp   nginx-1
<span class="token comment"># 使用inspect获取容器相关值</span>
<span class="token comment"># 获取IP地址</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect -f "&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;" nginx-1</span>
<span class="token number">172.17</span>.0.4
<span class="token comment"># 获取容器PID</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect -f "&#123;&#123;.State.Pid&#125;&#125;" nginx-1</span>
<span class="token number">4216</span>
<span class="token comment">#使用nsenter命令进入容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y util-linux</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># nsenter -t 4216 -m -u -i -n -p</span>
root@b5b0c251e4e7:/<span class="token comment"># </span>
<span class="token comment"># 批量关闭正在运行的容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker stop $(docker ps -a -q)</span>
d43c0e0a4188
b5b0c251e4e7
6a36e33a02f0
1353d6b1c4f2
<span class="token comment"># 批量强制删除已退出容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f `docker ps -aq -f status=exited`</span>
d43c0e0a4188
b5b0c251e4e7
6a36e33a02f0
1353d6b1c4f2
<span class="token comment"># 执行容器的DNS地址</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it --rm centos bash</span>
<span class="token punctuation">[</span>root@a440c4ada42f /<span class="token punctuation">]</span><span class="token comment"># cat /etc/resolv.conf </span>
<span class="token comment"># Generated by NetworkManager</span>
nameserver <span class="token number">223.5</span>.5.5
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it --rm --dns 114.114.114.114 centos bash</span>
<span class="token punctuation">[</span>root@14689e61b122 /<span class="token punctuation">]</span><span class="token comment"># cat /etc/resolv.conf </span>
nameserver <span class="token number">114.114</span>.114.114
<span class="token comment"># 配置随Host拉起镜像 --restart=always</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker run -d --restart=always --name AT-nginx -p 8080:80 nginx</span>
2223df5da188178b7f53043f32387e2ad5c6813b63cfb6030a48960e7d340857<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="镜像与制作"><a href="#镜像与制作" class="headerlink" title="镜像与制作"></a>镜像与制作</h2><h3 id="手动制作YUM版Nginx镜像"><a href="#手动制作YUM版Nginx镜像" class="headerlink" title="手动制作YUM版Nginx镜像"></a>手动制作YUM版Nginx镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载CentOS7.9.2009版本镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker pull centos:7.9.2009</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it centos:7.0.2009 /bin/bash</span>
<span class="token comment"># 进入容器</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum makecache</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum install -y wget</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://repo.huaweicloud.com/repository/conf/CentOS-7-reg.repo</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum install -y epel-release</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># sed -i "s/#baseurl/baseurl/g" /etc/yum.repos.d/epel.repo</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># sed -i "s/metalink/#metalink/g" /etc/yum.repos.d/epel.repo</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># sed -i "s@https\?://download.fedoraproject.org/pub@https://repo.huaweicloud.com@g" /etc/yum.repos.d/epel.repo</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum makecache</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum update -y</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum install -y vim wget pcre pcre-devel zlib zlib-devel openssl openssl-devel iproute net-tools iotop</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># yum install -y nginx</span>
<span class="token comment"># 修改Nginx配置</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># rm -f /usr/share/nginx/html/index.html</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># echo "Docker YUM Nginx" >> /usr/share/nginx/html/index.html</span>
<span class="token punctuation">[</span>root@76ea6d768009 /<span class="token punctuation">]</span><span class="token comment"># echo "daemon off;" >> /etc/nginx/nginx.conf</span>
<span class="token comment"># 提交为镜像，-a 作者信息 -m</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker commit -a "sujx@live.cn" -m "nginx yum v1" --change="EXPOSE 80 443" 76ea centos-nginx:v1</span>
sha256:10761eaac11cef2e72957c75e922b9d7a29bf481a4723664f9dc7caa54d4f132
<span class="token comment"># 查看新生成的镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY     TAG        IMAGE ID       CREATED              SIZE
centos-nginx   v1         10761eaac11c   About a minute ago   <span class="token number">1</span>.04GB
nginx          latest     605c77e624dd   <span class="token number">16</span> months ago        141MB
alpine         latest     c059bfaa849c   <span class="token number">17</span> months ago        <span class="token number">5</span>.59MB
centos         <span class="token number">7.9</span>.2009   eeb6ee3f44bd   <span class="token number">20</span> months ago        204MB
centos         latest     5d0da3dc9764   <span class="token number">20</span> months ago        231MB
<span class="token comment"># 运行新生成的容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -p 80:80 --name my-centos-nginx centos-nginx:v1 /usr/sbin/nginx</span>
4df01551e3778be4be619b5a0fe644e404fc92a527622f4bdeb7cad9005278f8
<span class="token comment"># 测试</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1</span>
Docker YUM Nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="DockerFile制作Nginx镜像"><a href="#DockerFile制作Nginx镜像" class="headerlink" title="DockerFile制作Nginx镜像"></a>DockerFile制作Nginx镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建文件目录</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cd /opt</span>
<span class="token punctuation">[</span>root@vms101 opt<span class="token punctuation">]</span><span class="token comment"># mkdir -pv dockerfile/&#123;web/&#123;nginx,tomcat,apache&#125;,system/&#123;centos,ubuntu,redhat&#125;&#125;</span>
mkdir: created directory ‘dockerfile’
mkdir: created directory ‘dockerfile/web’
mkdir: created directory ‘dockerfile/web/nginx’
mkdir: created directory ‘dockerfile/web/tomcat’
mkdir: created directory ‘dockerfile/web/apache’
mkdir: created directory ‘dockerfile/system’
mkdir: created directory ‘dockerfile/system/centos’
mkdir: created directory ‘dockerfile/system/ubuntu’
mkdir: created directory ‘dockerfile/system/redhat’
<span class="token punctuation">[</span>root@vms101 opt<span class="token punctuation">]</span><span class="token comment"># cd dockerfile/web/nginx/</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># touch ./Dockerfile</span>
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># cat > Dockerfile&lt;&lt;EOF</span>
<span class="token comment">#My Dockerfile</span>
FROM centos:7.9.2009
MAINTAINER sujingxuan <span class="token string">"sujx@live.cn"</span>
RUN yum makecache <span class="token operator">&amp;&amp;</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/yum.repos.d/* <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://repo.huaweicloud.com/repository/conf/CentOS-7-reg.repo <span class="token operator">&amp;&amp;</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/#baseurl/baseurl/g"</span> /etc/yum.repos.d/epel.repo <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/metalink/#metalink/g"</span> /etc/yum.repos.d/epel.repo <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s@https\?://download.fedoraproject.org/pub@https://repo.huaweicloud.com@g"</span> /etc/yum.repos.d/epel.repo <span class="token operator">&amp;&amp;</span>yum makecache
RUN yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">vim</span> <span class="token function">wget</span> pcre pcre-devel zlib zlib-devel openssl openssl-devel iproute net-tools iotop nginx
RUN <span class="token function">rm</span> <span class="token parameter variable">-f</span> /usr/share/nginx/html/index.html <span class="token operator">&amp;&amp;</span> RUN <span class="token builtin class-name">echo</span> <span class="token string">"Docker YUM Nginx"</span> <span class="token operator">>></span> /usr/share/nginx/html/index.html
EXPOSE <span class="token number">80</span> <span class="token number">443</span>
CMD <span class="token punctuation">[</span><span class="token string">"nginx"</span>,<span class="token string">"-g"</span>,<span class="token string">"daemon off;"</span><span class="token punctuation">]</span>
EOF
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker build -t sujx/nginx-yum-file:v1 /opt/dockerfile/web/nginx</span>
root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker build -t sujx/nginx-yum-file:v1 ./</span>
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Building <span class="token number">160</span>.1s <span class="token punctuation">(</span><span class="token number">7</span>/7<span class="token punctuation">)</span> FINISHED                                                                                                       ………………  
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># docker run -d --name nginx-dfile -p 80:80 sujx/nginx-yum-file:v1</span>
7b1f4629ff4a451d95c0a5284a06633bb6ae4c66a27ffb28433563045bde2a51
<span class="token punctuation">[</span>root@vms101 nginx<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1</span>
Docker YUM Nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="自定义Tomcat镜像"><a href="#自定义Tomcat镜像" class="headerlink" title="自定义Tomcat镜像"></a>自定义Tomcat镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 基于CentOS 7.9.2009基础镜像构建JDK和Tomcat镜像。</span>
<span class="token comment"># 下载基础镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker pull centos:7.9.2009</span>
<span class="token comment"># 构建JDK镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/dockerfile/web/jdk</span>
<span class="token punctuation">[</span>root@vms101 jdk<span class="token punctuation">]</span><span class="token comment"># wget https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.rpm</span>
<span class="token punctuation">[</span>root@vms101 jdk<span class="token punctuation">]</span><span class="token comment"># cat ./Dockerfile </span>
<span class="token comment"># JDK Base Image</span>
FROM centos:7.9.2009
MAINTAINER sujingxuan <span class="token string">"sujx@live.cn"</span>

COPY jdk-8u202-linux-x64.rpm /tmp
RUN <span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> /tmp/jdk-8u202-linux-x64.rpm

ADD profile /etc/profile

ENV <span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/default
ENV <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin
ENV <span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/jre/lib:<span class="token variable">$JAVA_HOME</span>/lib:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar

RUN <span class="token function">rm</span> <span class="token parameter variable">-f</span> /etc/localtime <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-snf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"Asia/Shanghai"</span> <span class="token operator">></span> /etc/timezone <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> /tmp/*.rpm

<span class="token punctuation">[</span>root@vms101 jdk<span class="token punctuation">]</span><span class="token comment"># docker build -t centos-jdk:v1 ./</span>
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Building <span class="token number">11</span>.0s <span class="token punctuation">(</span><span class="token number">9</span>/9<span class="token punctuation">)</span> FINISHED                        
 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>internal<span class="token punctuation">]</span> load .dockerignore                                            <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span> naming to docker.io/library/centos-jdk:v1 
<span class="token comment"># 验证结果</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it --rm --name jdk-test centos-jdk:v1 /bin/bash</span>
<span class="token punctuation">[</span>root@4115a47a2c49 /<span class="token punctuation">]</span><span class="token comment"># java -showversion</span>
<span class="token function">java</span> version <span class="token string">"1.8.0_202"</span>
Java<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> SE Runtime Environment <span class="token punctuation">(</span>build <span class="token number">1.8</span>.0_202-b08<span class="token punctuation">)</span>
Java HotSpot<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> <span class="token number">64</span>-Bit Server VM <span class="token punctuation">(</span>build <span class="token number">25.202</span>-b08, mixed mode<span class="token punctuation">)</span>
<span class="token punctuation">[</span>root@4115a47a2c49 /<span class="token punctuation">]</span><span class="token comment"># vi day.java</span>
<span class="token function">import</span> java.util.Calendar<span class="token punctuation">;</span>

class day <span class="token punctuation">&#123;</span>
    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        Calendar <span class="token function">cal</span> <span class="token operator">=</span> Calendar.getInstance<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        int year <span class="token operator">=</span> cal.get<span class="token punctuation">(</span>Calendar.YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        int month <span class="token operator">=</span> cal.get<span class="token punctuation">(</span>Calendar.MONTH<span class="token punctuation">)</span> + <span class="token number">1</span><span class="token punctuation">;</span>
        int day <span class="token operator">=</span> cal.get<span class="token punctuation">(</span>Calendar.DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        int hour <span class="token operator">=</span> cal.get<span class="token punctuation">(</span>Calendar.HOUR_OF_DAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        int minute <span class="token operator">=</span> cal.get<span class="token punctuation">(</span>Calendar.MINUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System.out.println<span class="token punctuation">(</span>year + <span class="token string">"/"</span> + month + <span class="token string">"/"</span> + day + <span class="token string">" "</span> + hour + <span class="token string">":"</span> + minute<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span>root@4115a47a2c49 /<span class="token punctuation">]</span><span class="token comment"># javac day.java </span>
<span class="token punctuation">[</span>root@4115a47a2c49 /<span class="token punctuation">]</span><span class="token comment"># java day</span>
<span class="token number">2023</span>/5/10 <span class="token number">23</span>:56
<span class="token comment"># 构建Tomcat Base镜像</span>

<span class="token comment"># CentOS7 JDK For Tomcat</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/dockerfile/web/tomcat</span>
<span class="token punctuation">[</span>root@vms101 tomcat<span class="token punctuation">]</span><span class="token comment"># wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.88/bin/apache-tomcat-8.5.88.tar.gz</span>
<span class="token punctuation">[</span>root@vms101 tomcat<span class="token punctuation">]</span><span class="token comment"># vim Dockerfile </span>
FROM centos-jdk:v1
MAINTAINER sujingxuan <span class="token string">"sujx@live.cn"</span>

ADD apache-tomcat-8.5.88.tar.gz /usr/local/src
RUN <span class="token function">useradd</span> <span class="token parameter variable">-M</span> <span class="token parameter variable">-d</span> /usr/local/src/apache-tomcat-8.5.88 tomcat
RUN <span class="token function">chown</span> <span class="token parameter variable">-R</span> tomcat:tomcat /usr/local/src/apache-tomcat-8.5.88

ENV TOMCAT_MAJOR_VERSION <span class="token number">8</span>
ENV TOMCAT_MINOR_VERSION <span class="token number">8.5</span>.88
ENV <span class="token builtin class-name">export</span> <span class="token assign-left variable">CATALINA_HOME</span><span class="token operator">=</span>/usr/local/src/apache-tomcat-8.5.88
ENV APP_DIR <span class="token variable"><span class="token variable">$(</span>CATALINA_HOME<span class="token variable">)</span></span>/webapps
<span class="token punctuation">[</span>root@vms101 tomcat<span class="token punctuation">]</span><span class="token comment"># docker build -t tomcat-base:v1 .</span>
<span class="token punctuation">[</span>root@vms101 tomcat<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY     TAG        IMAGE ID       CREATED          SIZE
tomcat-base    v1         38e080bd23d4   <span class="token number">3</span> minutes ago    815MB
centos-jdk     v1         ae6b4f8f0c29   <span class="token number">48</span> minutes ago   785MB
<span class="token comment"># 构建业务镜像</span>
<span class="token punctuation">[</span>root@vms101 tomcat-app1<span class="token punctuation">]</span><span class="token comment"># vim run_tomcat.sh </span>
<span class="token comment">#!/bin/bash</span>
<span class="token function">su</span> - tomcat <span class="token parameter variable">-c</span> <span class="token string">"/usr/local/src/apache-tomcat-8.5.88/bin/startup.sh start"</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> /etc/hosts
<span class="token punctuation">[</span>root@vms101 tomcat-app1<span class="token punctuation">]</span><span class="token comment"># mkdir myapp &amp;&amp; echo "Tomcat Web Page1">>myapp/index.html</span>
<span class="token punctuation">[</span>root@vms101 tomcat-app1<span class="token punctuation">]</span><span class="token comment"># vim Dockerfile </span>
<span class="token comment"># Tomcat WEB APPS</span>
FROM tomcat-base:v1
MAINTAINER sujingxuan <span class="token string">"sujx@live.cn"</span>

COPY run_tomcat.sh /usr/local/src/apache-tomcat-8.5.88/
COPY myapp/* /usr/local/src/apache-tomcat-8.5.88/webapps/myapp/

RUN <span class="token function">chown</span> <span class="token parameter variable">-R</span> tomcat:tomcat /usr/local/src/apache-tomcat-8.5.88/
CMD <span class="token punctuation">[</span><span class="token string">"/usr/local/src/apache-tomcat-8.5.88/run_tomcat.sh"</span><span class="token punctuation">]</span>
EXPOSE <span class="token number">8080</span> <span class="token number">8005</span>
<span class="token punctuation">[</span>root@vms101 tomcat-app1<span class="token punctuation">]</span><span class="token comment"># docker build -t tomcat-app1:v1 .</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it -d -p 80:8080 tomcat-app1:v1 </span>
<span class="token comment"># 验证</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl http://172.16.10.101/myapp/</span>
Tomcat Web Page1

<span class="token comment"># 依据上述操作，准备tomcat-app2镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it -d -p 81:8080 tomcat-app1:v1 </span>
246cdabbb8ed87ede039306870d4c61dddd27c50b3857b53b0d09efd79046f15
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it -d -p 82:8080 tomcat-app2:v1 </span>
22a0c67911dac716df2aaf4b24b5927bcd30f590e3b858f6d8bac5f329943fc2
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1:81/myapp/</span>
Tomcat Web Page1
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1:82/myapp/</span>
Tomcat Web Page2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="构建Haproxy镜像"><a href="#构建Haproxy镜像" class="headerlink" title="构建Haproxy镜像"></a>构建Haproxy镜像</h3><p><img src="https://cdn.sujx.net/haproxy_haadmin.PNG" alt="haproxy_status"></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建Haproxy启动脚本</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># mkdir /opt/dockerfile/haproxy/ &amp;&amp; cd /opt/dockerfile/haproxy/ &amp;&amp; touch Dockerfile run_haproxy.sh haproxy.cfg</span>
<span class="token punctuation">[</span>root@vms101 haproxy<span class="token punctuation">]</span><span class="token comment"># cat run_haproxy.sh </span>
<span class="token comment">#!/bin/bash</span>
haproxy <span class="token parameter variable">-f</span> /etc/haproxy/haproxy.cfg 
/bin/bash

<span class="token comment"># 创建Haproxy配置文件</span>
<span class="token punctuation">[</span>root@vms101 haproxy<span class="token punctuation">]</span><span class="token comment"># cat haproxy.cfg</span>
global
    log         <span class="token number">127.0</span>.0.1 local2 info
    <span class="token function">chroot</span>      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     <span class="token number">256</span>
    user        haproxy
    group       haproxy
    daemon

defaults
    mode               http
    log                global
    option             httplog
    <span class="token function">timeout</span> connect    10s
    <span class="token function">timeout</span> client     30s
    <span class="token function">timeout</span> server     30s
listen stats
    mode	       http
    <span class="token builtin class-name">bind</span>	       <span class="token number">0.0</span>.0.0:9999
    stats              <span class="token builtin class-name">enable</span>
    log                global
    stats uri	       /haproxy-status
    stats auth         haadmin:qwe123<span class="token operator">!</span><span class="token operator">!</span>

frontend http-in
    <span class="token builtin class-name">bind</span> *:80
    default_backend    backend_servers
    option             forwardfor

backend backend_servers
    mode	       http
    balance            roundrobin
    server             web1 <span class="token number">172.16</span>.10.101:81 check inter <span class="token number">3000</span> fall <span class="token number">2</span> rise <span class="token number">5</span>
    server             web2 <span class="token number">172.16</span>.10.101:82 check inter <span class="token number">3000</span> fall <span class="token number">2</span> rise <span class="token number">5</span>
<span class="token comment"># 创建Haproxy镜像</span>
<span class="token punctuation">[</span>root@vms101 haproxy<span class="token punctuation">]</span><span class="token comment"># cat Dockerfile </span>
<span class="token comment">#Haproxy Base Image</span>
FROM centos:7.9.2009
MAINTAINER sujingxuan <span class="token string">"sujx@live.cn"</span>
RUN yum <span class="token function">install</span> <span class="token parameter variable">-y</span> haproxy
RUN <span class="token function">mv</span> /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.org
COPY haproxy.cfg /etc/haproxy/
COPY run_haproxy.sh /usr/bin/
EXPOSE <span class="token number">80</span> <span class="token number">9999</span>
CMD <span class="token punctuation">[</span><span class="token string">"/usr/bin/run_haproxy.sh"</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span>root@vms101 haproxy<span class="token punctuation">]</span><span class="token comment"># docker build -t haproxy-base:v1 .</span>
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Building <span class="token number">0</span>.1s <span class="token punctuation">(</span><span class="token number">10</span>/10<span class="token punctuation">)</span> FINISHED                                                                           
 <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span> naming to docker.io/library/haproxy-base:v1 
<span class="token comment"># 拉起前端容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -itd --name haproxy -p 80:80 -p 9999:9999 haproxy-base:v1</span>
91dfb0cb8d8fbf1c81b8804819eba4a308c57209da84ba526cb1bf15be1de2e6
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps </span>
91dfb0cb8d8f   haproxy-base:v1 <span class="token number">0.0</span>.0.0:80-<span class="token operator">></span><span class="token number">80</span>/tcp, :::80-<span class="token operator">></span><span class="token number">80</span>/tcp, <span class="token number">0.0</span>.0.0:9999-<span class="token operator">></span><span class="token number">9999</span>/tcp, :::9999-<span class="token operator">></span><span class="token number">9999</span>/tcp   haproxy
5ec41ac5f902   tomcat-app1:v1  <span class="token number">8005</span>/tcp, <span class="token number">0.0</span>.0.0:81-<span class="token operator">></span><span class="token number">8080</span>/tcp, :::81-<span class="token operator">></span><span class="token number">8080</span>/tcp
d903c1419c9b   tomcat-app2:v1  <span class="token number">8005</span>/tcp, <span class="token number">0.0</span>.0.0:82-<span class="token operator">></span><span class="token number">8080</span>/tcp, :::82-<span class="token operator">></span><span class="token number">8080</span>/tcp                  
<span class="token comment"># 验证结果</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1/myapp/</span>
Tomcat Web Page2
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1/myapp/</span>
Tomcat Web Page1
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1/myapp/</span>
Tomcat Web Page2
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1/myapp/</span>
Tomcat Web Page1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="数据管理-1"><a href="#数据管理-1" class="headerlink" title="数据管理"></a>数据管理</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>Docker镜像是分层设计，底层只读，通过镜像添加可读写文件系统，用户写入的数据则保存在此层中。</p>
<p>容器的数据分层目录：</p>
<ul>
<li>LowerDir: image 镜像层,即镜像本身，只读</li>
<li>UpperDir: 容器的上层,可读写 ,容器变化的数据存放在此处</li>
<li>MergedDir: 容器的文件系统，使用Union FS（联合文件系统）将lowerdir 和 upperdir 合并完成后给容器使用,最终呈现给用户的统一视图</li>
<li>WorkDir: 容器在宿主机的工作目录,挂载后内容会被清空，且在使用过程中其内容用户不可见</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 拉起一个容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -it -d centos:7.9.2009 /bin/bash</span>
c8dcc79d12a987f4e37c4e9747f37bfe9b4c9ae7eb3a41212ae38b58a0fc0ff4
<span class="token comment"># 查看容器配置信息</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect c8dcc</span>
……
<span class="token string">"GraphDriver"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"Data"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
                <span class="token string">"LowerDir"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351-init/diff:/var/lib/docker/overlay2/e8b3f1e50e7ff6272e00ddf3aba286ea0729d65b54c57542970fc180fd350bc3/diff"</span>,
                <span class="token string">"MergedDir"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/merged"</span>,
                <span class="token string">"UpperDir"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/diff"</span>,
                <span class="token string">"WorkDir"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/work"</span>
            <span class="token punctuation">&#125;</span>,
            <span class="token string">"Name"</span><span class="token builtin class-name">:</span> <span class="token string">"overlay2"</span>
        <span class="token punctuation">&#125;</span>,
        <span class="token string">"Mounts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
……
<span class="token comment"># 在容器中创建文件</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it c8dcc /bin/bash</span>
<span class="token punctuation">[</span>root@c8dcc79d12a9 /<span class="token punctuation">]</span><span class="token comment"># dd if=/dev/zero of=file bs=1M count=100</span>
<span class="token number">100</span>+0 records <span class="token keyword">in</span>
<span class="token number">100</span>+0 records out
<span class="token number">104857600</span> bytes <span class="token punctuation">(</span><span class="token number">105</span> MB<span class="token punctuation">)</span> copied, <span class="token number">0.276637</span> s, <span class="token number">379</span> MB/s
<span class="token punctuation">[</span>root@c8dcc79d12a9 /<span class="token punctuation">]</span><span class="token comment"># md5sum file</span>
2f282b84e7e608d5852449ed940bfc51  <span class="token function">file</span>
<span class="token punctuation">[</span>root@c8dcc79d12a9 /<span class="token punctuation">]</span><span class="token comment"># cp anaconda-post.log /opt/anaconda-post.log</span>
<span class="token punctuation">[</span>root@c8dcc79d12a9 /<span class="token punctuation">]</span><span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>
<span class="token comment"># 在Host中查看容器创建的文件</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># tree /var/lib/docker/overlay2/c</span>
c18937983445d3e2d6c11c5bb3ce20a336f9024111c529bd7a99008c27bcf096/ c595c60cf63d162ae9493e112498b941cf8d40a6b7f3bdeb73fa39609383c1e4/ cxn3dw459jii5d9r5iseys6zx/
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># tree /var/lib/docker/overlay2/l</span>
l/                         lmv5guk13yscu2hburzkmzyl7/ lwp6qtbel95861tstj3q5tqu5/ 
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># tree /var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/diff/</span>
/var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/diff/
├── <span class="token function">file</span>
├── opt
│   └── anaconda-post.log
└── root
<span class="token number">2</span> directories, <span class="token number">2</span> files
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># md5sum file</span>
md5sum: file: No such <span class="token function">file</span> or directory
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># md5sum /var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/diff/file </span>
2f282b84e7e608d5852449ed940bfc51  /var/lib/docker/overlay2/1e520f13bb5e4cc2ba6776c164c59777f35d00ed7a489e061deeec140293c351/diff/file
<span class="token comment"># 从宿主机复制文件到容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker cp testapp/index.html 4d7d:/data</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>数据卷的特点：</p>
<ul>
<li>数据卷是目录或者文件，并且可以在多个容器之间共享</li>
<li>对数据卷的更改在所有容器内会立即更新</li>
<li>数据卷的数据可以持久保存，即使删除使用该容器卷的容器也不影响</li>
<li>在容器里面写入数据不会影响镜像本身</li>
</ul>
<p>数据卷使用场景：</p>
<ul>
<li>日志输出</li>
<li>静态页面</li>
<li>应用配置文件</li>
<li>多容器间目录或文件共享</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 挂载随机目录,Host会自动创建一个随机名称的volume</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name files -v /data centos:7.9.2009</span>
4d7d7b6ebee8207a9b24964a76224c4be2853fbda9797d63dadfae5a0d89b374
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect 4d7d |grep -A5 Mounts</span>
        <span class="token string">"Mounts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">&#123;</span>
                <span class="token string">"Type"</span><span class="token builtin class-name">:</span> <span class="token string">"volume"</span>,
                <span class="token string">"Name"</span><span class="token builtin class-name">:</span> <span class="token string">"83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba"</span>,
                <span class="token string">"Source"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/volumes/83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba/_data"</span>,
                <span class="token string">"Destination"</span><span class="token builtin class-name">:</span> <span class="token string">"/data"</span>,
<span class="token comment"># 查看数据卷</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume ls</span>
DRIVER    VOLUME NAME
<span class="token builtin class-name">local</span>     83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba
<span class="token comment"># 创建数据卷</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume create httpd-vol</span>
httpd-vol
<span class="token comment"># 查看数据卷</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume ls</span>
DRIVER    VOLUME NAME
<span class="token builtin class-name">local</span>     83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba
<span class="token builtin class-name">local</span>     httpd-vol
<span class="token comment"># 数据卷的信息</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume inspect httpd-vol </span>
<span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span>
        <span class="token string">"CreatedAt"</span><span class="token builtin class-name">:</span> <span class="token string">"2023-05-11T23:47:10+08:00"</span>,
        <span class="token string">"Driver"</span><span class="token builtin class-name">:</span> <span class="token string">"local"</span>,
        <span class="token string">"Labels"</span><span class="token builtin class-name">:</span> null,
        <span class="token string">"Mountpoint"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/volumes/httpd-vol/_data"</span>,
        <span class="token string">"Name"</span><span class="token builtin class-name">:</span> <span class="token string">"httpd-vol"</span>,
        <span class="token string">"Options"</span><span class="token builtin class-name">:</span> null,
        <span class="token string">"Scope"</span><span class="token builtin class-name">:</span> <span class="token string">"local"</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume inspect 83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba </span>
<span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span>
        <span class="token string">"CreatedAt"</span><span class="token builtin class-name">:</span> <span class="token string">"2023-05-11T23:28:03+08:00"</span>,
        <span class="token string">"Driver"</span><span class="token builtin class-name">:</span> <span class="token string">"local"</span>,
        <span class="token string">"Labels"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"com.docker.volume.anonymous"</span><span class="token builtin class-name">:</span> <span class="token string">""</span>
        <span class="token punctuation">&#125;</span>,
        <span class="token string">"Mountpoint"</span><span class="token builtin class-name">:</span> <span class="token string">"/var/lib/docker/volumes/83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba/_data"</span>,
        <span class="token string">"Name"</span><span class="token builtin class-name">:</span> <span class="token string">"83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba"</span>,
        <span class="token string">"Options"</span><span class="token builtin class-name">:</span> null,
        <span class="token string">"Scope"</span><span class="token builtin class-name">:</span> <span class="token string">"local"</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span>
<span class="token comment"># 清理卷</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID   IMAGE             COMMAND       CREATED          STATUS                      PORTS     NAMES
4d7d7b6ebee8   centos:7.9.2009   <span class="token string">"/bin/bash"</span>   <span class="token number">44</span> minutes ago   Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">44</span> minutes ago             files
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f 4d7d</span>
4d7d
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker volume rm 83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba -f</span>
83c5ae40340c360db9cf11c79f7ccd363a981b18a2e664c22b1d9105cac370ba<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="绑定挂载"><a href="#绑定挂载" class="headerlink" title="绑定挂载"></a>绑定挂载</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建访问文件</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># mkdir testapp</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># echo "&lt;p>&lt;h1>Test APP Page.&lt;/h1>&lt;/p>" > testapp/index.html</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker pull httpd</span>
Using default tag: latest
latest: Pulling from library/httpd
a2abf6c4d29d: Already exists 
dcc4698797c8: Pull complete 
41c22baa66ec: Pull complete 
67283bbdd4a0: Pull complete 
d982c879c57e: Pull complete 
Digest: sha256:0954cc1af252d824860b2c5dc0a10720af2b7a3d3435581ca788dff8480c7b32
Status: Downloaded newer image <span class="token keyword">for</span> httpd:latest
docker.io/library/httpd:latest
<span class="token comment"># 使用-v参数将目标目录挂载给容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name web -v /root/testapp/:/usr/local/apache2/htdocs/ -p 80:80 httpd</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1</span>
<span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>></span>Test APP Page.<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token operator">&lt;</span>/p<span class="token operator">></span>
<span class="token comment"># 删除容器，数据仍然保留</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f 538</span>
<span class="token number">538</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ll testapp/</span>
total <span class="token number">4</span>
-rw-r--r--. <span class="token number">1</span> root root <span class="token number">51</span> May <span class="token number">11</span> <span class="token number">23</span>:10 index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="容器管理卷"><a href="#容器管理卷" class="headerlink" title="容器管理卷"></a>容器管理卷</h3><p>数据卷容器可以让数据在多个容器之间共享，需要先创建一个后台运行的容器作为Server用于提供数据存储服务，其他使用此卷的容器作为Client。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建数据存储容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run --name data -it -v /data --rm busybox</span>
Unable to <span class="token function">find</span> image <span class="token string">'busybox:latest'</span> locally
latest: Pulling from library/busybox
5cc84ad355aa: Pull complete 
Digest: sha256:5acba83a746c7608ed544dc1533b87c737a0b0fb730301639a0179f9344b1678
Status: Downloaded newer image <span class="token keyword">for</span> busybox:latest
/ <span class="token comment">#</span>
<span class="token comment"># 新开一个终端来查看容器属性</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect -f &#123;&#123;.Mounts&#125;&#125; data</span>
<span class="token punctuation">[</span><span class="token punctuation">&#123;</span>volume dd641a30fbca54f88a6c8e7057e79a5af057cb3e6120b8d521bc3f52d6b743c7 /var/lib/docker/volumes/dd641a30fbca54f88a6c8e7057e79a5af057cb3e6120b8d521bc3f52d6b743c7/_data /data <span class="token builtin class-name">local</span>  <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>
<span class="token comment"># 复制文件到存储容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker cp testapp/index.html data:/data</span>
Successfully copied <span class="token number">2</span>.05kB to data:/data
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec data ls /data/testapp</span>
index.html
<span class="token comment"># 创建客户端容器，指定卷来自于上述的data容器</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run --name client --volumes-from data -it --rm busybox</span>
/ <span class="token comment"># ls</span>
bin   data  dev   etc   home  proc  root  sys   tmp   usr   var
/ <span class="token comment"># ls /data</span>
testapp
/ <span class="token comment"># ls /data/testapp/</span>
index.html

<span class="token comment"># 已关闭存储容器可以再创建客户端容器，已删除存储容器则不能再创建客户端容器，但已经存在的客户端容器不受影响，本质是卷的自动挂载。</span>
<span class="token comment"># 自动删除容器卷</span>
<span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-f</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="网络部分"><a href="#网络部分" class="headerlink" title="网络部分"></a>网络部分</h2><p>Docker服务安装完成之后，默认在宿主机会生成一个名称为docker0的网桥。Docker0是一个二层的网络设备，通过网桥可以将Linux支持的不同端口连接起来，其IP地址为172.17.0.1&#x2F;16,并生成三种类型的网络：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a</span>
<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN group default 
    link/ether 02:42:5e:4e:37:81 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">172.17</span>.0.1/16 brd <span class="token number">172.17</span>.255.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:5eff:fe4e:3781/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker network ls</span>
NETWORK ID     NAME      DRIVER    SCOPE
4645c608490f   bridge    bridge    <span class="token builtin class-name">local</span>
d24bbf5a7ca6   <span class="token function">host</span>      <span class="token function">host</span>      <span class="token builtin class-name">local</span>
bbc3fc5e53b4   none      null      <span class="token builtin class-name">local</span>
<span class="token comment"># 拉起一个容器之后的网络</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name web -p 8080:80 nginx</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a</span>
<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP group default 
    link/ether 02:42:16:d2:ae:dc brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">172.17</span>.0.1/16 brd <span class="token number">172.17</span>.255.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:16ff:fed2:aedc/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">5</span>: veth2344e4d@if4: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue master docker0 state UP group default 
    link/ether fe:a1:6c:51:73:87 brd ff:ff:ff:ff:ff:ff link-netnsid <span class="token number">0</span>
    inet6 fe80::fca1:6cff:fe51:7387/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># brctl show</span>
bridge name	bridge <span class="token function">id</span>		STP enabled	interfaces
docker0		<span class="token number">8000</span>.024216d2aedc	no		veth2344e4d
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name web1 -p 81:80 nginx</span>
ea153bf7bf6a95f58e46d902d0113c1ce21a1fd1cd8e7004cfdac3e6385523c0
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d --name web2 -p 82:80 nginx</span>
096113318c74e3a109451c938fd52f3f1dd48ba146760ce2f8c23de017feb390
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect -f &#123;&#123;.NetworkSettings.IPAddress&#125;&#125; web1</span>
<span class="token number">172.17</span>.0.3
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker inspect -f &#123;&#123;.NetworkSettings.IPAddress&#125;&#125; web2</span>
<span class="token number">172.17</span>.0.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>每次新建容器，宿主机就会多一个虚拟网卡，和容器的网卡组成一个网卡，比如veth2344e4d@if4，而在容器内的网卡名为if4。容器会自动获取一个172.17.0.0、16的网段随机地址，默认从172.17.0.2开始。容器获取的地址并不固定，每次重启容器，可能会发生地址变化。该网络设备类型为veth pair，是种成对出现的虚拟网络设备，用于解决网络命名空间之间的隔离。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@5926763045b4 /<span class="token punctuation">]</span><span class="token comment"># ping 172.17.0.3</span>
PING <span class="token number">172.17</span>.0.3 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.3<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from <span class="token number">172.17</span>.0.3: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.094</span> ms
--- <span class="token number">172.17</span>.0.3 <span class="token function">ping</span> statistics ---
<span class="token number">1</span> packets transmitted, <span class="token number">1</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 0ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.094</span>/0.094/0.094/0.000 ms
<span class="token punctuation">[</span>root@5926763045b4 /<span class="token punctuation">]</span><span class="token comment"># ping 172.17.0.4</span>
PING <span class="token number">172.17</span>.0.4 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.4<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from <span class="token number">172.17</span>.0.4: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.090</span> ms
--- <span class="token number">172.17</span>.0.4 <span class="token function">ping</span> statistics ---
<span class="token number">2</span> packets transmitted, <span class="token number">2</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 1000ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.070</span>/0.080/0.090/0.010 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="修改网桥的网络配置"><a href="#修改网桥的网络配置" class="headerlink" title="修改网桥的网络配置"></a>修改网桥的网络配置</h4><ol>
<li><p>通过配置Docker的daemon.json来修改</p>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/docker/daemon.json </span>
<span class="token punctuation">&#123;</span>
  <span class="token string">"bip"</span><span class="token builtin class-name">:</span> <span class="token string">"192.168.100.1/24"</span>
  <span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"https://37y8py0j.mirror.aliyuncs.com"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl daemon-reload </span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart docker</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a</span>
<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN group default 
    link/ether 02:42:16:d2:ae:dc brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.100.1/24 brd <span class="token number">192.168</span>.100.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:16ff:fed2:aedc/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改docker服务的配置文件</p>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/systemd/system/multi-user.target.wants/docker.service </span>
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>notify
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">-H</span> fd:// <span class="token parameter variable">--containerd</span><span class="token operator">=</span>/run/containerd/containerd.sock <span class="token parameter variable">--bip</span><span class="token operator">=</span><span class="token number">192.168</span>.100.2/24

<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl daemon-reload</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart docker</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a</span>
<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN group default 
    link/ether 02:42:16:d2:ae:dc brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.100.2/24 brd <span class="token number">192.168</span>.100.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:16ff:fed2:aedc/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h4 id="修改默认网桥"><a href="#修改默认网桥" class="headerlink" title="修改默认网桥"></a>修改默认网桥</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y bridge-utils</span>
Package bridge-utils-1.5-9.el7.x86_64 already installed and latest version
Nothing to <span class="token keyword">do</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># brctl addbr br0</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a a 192.168.100.1/24 dev br0</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># brctl show</span>
bridge name	bridge <span class="token function">id</span>		STP enabled	interfaces
br0		<span class="token number">8000.000000000000</span>	no		
docker0		<span class="token number">8000</span>.024216d2aedc	no		
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># ip a</span>
<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN group default 
    link/ether 02:42:16:d2:ae:dc brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">172.17</span>.0.1/16 brd <span class="token number">172.17</span>.255.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:16ff:fed2:aedc/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">14</span>: br0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noop state DOWN group default qlen <span class="token number">1000</span>
    link/ether e2:73:fe:78:07:72 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.100.1/24 scope global br0
       valid_lft forever preferred_lft forever
<span class="token comment"># 修改docker配置文件</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/systemd/system/multi-user.target.wants/docker.service </span>
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>notify
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">-H</span> fd:// <span class="token parameter variable">--containerd</span><span class="token operator">=</span>/run/containerd/containerd.sock <span class="token parameter variable">-b</span> br0
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl daemon-reload</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart docker</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run --rm centos:7.9.2009 hostname -i</span>
<span class="token number">192.168</span>.100.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="容器间网络连接"><a href="#容器间网络连接" class="headerlink" title="容器间网络连接"></a>容器间网络连接</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -it --name web0 -p 80:80 nginx </span>
54cca62ffbe9fc59f4e7474d0a481136cdbfca68eb677e892c9b98673bc4842d
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -it --name web1 -p 81:80 --link web0 nginx </span>
824595bdb5e4991a506f5b3cb87e4fe88c08696df1be0ab4988c50b89be53bae
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it web1 cat /etc/hosts</span>
<span class="token number">172.17</span>.0.2	web0 54cca62ffbe9
<span class="token number">172.17</span>.0.3	824595bdb5e4
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -it --name web2 -p 82:80 --link web0 --link web1 nginx </span>
51a303ad5da9476dd1b878064ff927f3fd49511e32b27c10785799d2ecc82a60
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it web2 cat /etc/hosts</span>
<span class="token number">172.17</span>.0.2	web0 54cca62ffbe9
<span class="token number">172.17</span>.0.3	web1 824595bdb5e4
<span class="token number">172.17</span>.0.4	51a303ad5da9
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -it --name web3 -p 83:80 --link web0 --link web1 --link web2 centos:7.9.2009 </span>
277807e81bb92a66e1696af982467f66dda719b6e4a3ae2e0499aeabdcba16b5
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it web3 cat /etc/hosts</span>
<span class="token number">172.17</span>.0.2	web0 54cca62ffbe9
<span class="token number">172.17</span>.0.3	web1 824595bdb5e4
<span class="token number">172.17</span>.0.4	web2 51a303ad5da9
<span class="token number">172.17</span>.0.5	277807e81bb9
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it web3 /bin/bash</span>
<span class="token punctuation">[</span>root@277807e81bb9 /<span class="token punctuation">]</span><span class="token comment"># ping web0</span>
PING web0 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.2<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from web0 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.2<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.105</span> ms
--- web0 <span class="token function">ping</span> statistics ---
<span class="token number">2</span> packets transmitted, <span class="token number">2</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 999ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.060</span>/0.082/0.105/0.024 ms
<span class="token punctuation">[</span>root@277807e81bb9 /<span class="token punctuation">]</span><span class="token comment"># ping web2</span>
PING web2 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.4<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from web2 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.4<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.176</span> ms
--- web2 <span class="token function">ping</span> statistics ---
<span class="token number">2</span> packets transmitted, <span class="token number">2</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 1000ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.061</span>/0.118/0.176/0.058 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="网络模式"><a href="#网络模式" class="headerlink" title="网络模式"></a>网络模式</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker run --network </span>
bridge      container:  <span class="token function">host</span>        ipvlan      macvlan     none        null        overlay <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Docker容器一共有7种网络模式：</p>
<ol>
<li>bridge模式：默认模式，为每个容器创建自己的网络信息，并将容器连接到一个虚拟网桥与外界通信通过SNAT访问外网，也使用DNAT让容器被外部访问；<ol>
<li>网络资源隔离</li>
<li>无需手动配置</li>
<li>可访问外网</li>
<li>外部主机无法直接访问容器，需要配置DNAT</li>
<li>性能较低</li>
<li>端口管理繁琐</li>
</ol>
</li>
<li>Host模式：容器直接使用宿主机Host的网卡和IP地址，网络性能最高，但各个容器内使用端口不能相同，适用于端口固定的模式，各个容器网络无隔离</li>
<li>container模式：与已有容器共享一个网络，与宿主机网络隔离，适合频繁的容器间网络通信，容器进程通过lo网卡进行通信</li>
<li>ipvlan模式:容器使用基于IP的VLAN模式</li>
<li>macvlan模式：容器使用基于Mac的VLAN模式</li>
<li>none&#x2F;null模式：容器不会进行任何网络配置，无法与外界通信</li>
<li>overlay模式：基于多宿主机和多个容器之间构建分布式的加密网络</li>
</ol>
<h2 id="配置非HTTPS镜像库"><a href="#配置非HTTPS镜像库" class="headerlink" title="配置非HTTPS镜像库"></a>配置非HTTPS镜像库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载仓库镜像</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># docker pull registry</span>
<span class="token comment"># 配置docker服务，使用http而不是默认的https</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/docker/daemon.json </span>
<span class="token punctuation">&#123;</span>
  <span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"https://37y8py0j.mirror.aliyuncs.com"</span><span class="token punctuation">]</span>,
  <span class="token string">"insecure-registries"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"172.16.10.101:5000"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl daemon-reload </span>
<span class="token punctuation">[</span>root@vms101 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart docker</span>

<span class="token comment"># 配置客户端</span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># docker pull hello-world</span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># docker tag hello-world:latest 172.16.10.101:5000/cka/helloworld:v1</span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># docker push 172.16.10.101:5000/cka/helloworld:v1</span>
The push refers to repository <span class="token punctuation">[</span><span class="token number">172.16</span>.10.101:5000/cka/helloworld<span class="token punctuation">]</span>
e07ee1baac5f: Pushed 
v1: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: <span class="token number">525</span>
<span class="token comment"># 编写查看registry已有镜像</span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># cat list_img.sh </span>
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span>
<span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token variable">$1</span>:5000/v2/_catalog <span class="token operator">|</span> jq <span class="token operator">|</span> <span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">'\&#123;|\&#125;|\[|]'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token punctuation">\</span>" <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">></span> <span class="token variable">$file</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> aa <span class="token punctuation">;</span> <span class="token keyword">do</span>
<span class="token assign-left variable">tag</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-s</span> $1:5000/v2/$aa/tags/list <span class="token operator">|</span> jq <span class="token operator">|</span> <span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">'\&#123;|\&#125;|\[|]|name'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token punctuation">\</span>" <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span><span class="token punctuation">)</span>
 <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">$&#123;tag<span class="token punctuation">[</span>*<span class="token punctuation">]</span>&#125;</span> <span class="token punctuation">;</span> <span class="token keyword">do</span>
 <span class="token builtin class-name">echo</span> <span class="token variable">$1</span>:5000/<span class="token variable">$&#123;aa&#125;</span><span class="token builtin class-name">:</span><span class="token variable">$i</span>
 <span class="token keyword">done</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token variable">$file</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$file</span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># chmod +x list_img.sh </span>
<span class="token punctuation">[</span>root@vms100 ~<span class="token punctuation">]</span><span class="token comment"># ./list_img.sh 172.16.10.101</span>
<span class="token number">172.16</span>.10.101:5000/cka/centos7:v1
<span class="token number">172.16</span>.10.101:5000/cka/helloworld:v1
<span class="token number">172.16</span>.10.101:5000/rhce8/mysql:v1
<span class="token number">172.16</span>.10.101:5000/rhce8/wordpress:v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="单机编排Compose"><a href="#单机编排Compose" class="headerlink" title="单机编排Compose"></a>单机编排Compose</h2><p>Docker-compose是容器的一种单机编排工具，用以解决容器的依赖关系，替代docker命令对容器进行创建、启动、停止等手工操作。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>







]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>Basic</tag>
        <tag>Tech</tag>
      </tags>
  </entry>
  <entry>
    <title>大型网站技术架构核心原理与案例分析</title>
    <url>/2022/08/01/Large-Scale_Website_Architecture/</url>
    <content><![CDATA[<blockquote>
<p>此为《大型网站技术架构核心原理与案例分析》的记录</p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="大型网站架构演化"><a href="#大型网站架构演化" class="headerlink" title="大型网站架构演化"></a>大型网站架构演化</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul>
<li>高并发、大流量</li>
<li>高可用</li>
<li>海量数据</li>
<li>用户分布广泛、网络情况复杂</li>
<li>安全环境恶劣</li>
<li>需求快速变更、发布频繁</li>
<li>渐进式发展</li>
</ul>
<h4 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h4><ul>
<li>单体服务器</li>
<li>前后端分离、应用服务和数据服务分离</li>
<li>加入缓存和分布式缓存服务器</li>
<li>使用服务器集群改善并发处理能力</li>
<li>数据库读写分离</li>
<li>使用反向代理和CDN加速网站响应</li>
<li>使用分布式文件系统和分布式数据库系统</li>
<li>使用noSQL和搜索引擎</li>
<li>业务拆分</li>
<li>分布式服务</li>
</ul>
<h4 id="价值观"><a href="#价值观" class="headerlink" title="价值观"></a>价值观</h4><ul>
<li>大型网站架构技术的核心价值随网站所需灵活应对</li>
<li>驱动大型网站技术发展的主要力量是网站的业务发展</li>
</ul>
<h4 id="误区"><a href="#误区" class="headerlink" title="误区"></a>误区</h4><ul>
<li>一味追随大公司的解决方案</li>
<li>为技术而技术</li>
<li>企图用技术解决所有问题</li>
</ul>
<h3 id="大型网站架构模式"><a href="#大型网站架构模式" class="headerlink" title="大型网站架构模式"></a>大型网站架构模式</h3><ul>
<li>分层，基本分为应用层、服务层、数据层，各层必须合理规划层次边界和接口，严格遵循分层架构的约束，禁止跨层调用和逆向调用；</li>
<li>分割，将不同功能按照高内聚低耦合模块单元进行分割，提高并发处理能力和功能扩展能力；</li>
<li>分布式<ul>
<li>分布式应用和服务</li>
<li>分布式静态资源</li>
<li>分布式数据和存储</li>
<li>分布式计算</li>
</ul>
</li>
<li>集群，独立部署的服务器集群化，通过负载均衡设备共同对外提供服务</li>
<li>缓存，使用缓存的前提：数据访问热点不均衡；数据在某个时间段有效，不会很快过期</li>
<li>异步，将一个业务操作分成多个阶段，每个阶段之间通过共享数据的方式异步执行。异步架构是典型的生产者消费者模式。<ul>
<li>提高系统可用性</li>
<li>加快网站响应速度</li>
<li>消除并发访问高峰</li>
</ul>
</li>
<li>冗余</li>
<li>自动化</li>
<li>安全</li>
</ul>
<h3 id="大型网站核心架构要素"><a href="#大型网站核心架构要素" class="headerlink" title="大型网站核心架构要素"></a>大型网站核心架构要素</h3><p>架构：最高层次的规划、南里改变的决定</p>
<p>软件架构:有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。</p>
<p>架构的五要素：功能、性能、可用性、伸缩性、扩展性和安全性</p>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><h3 id="网站的高性能架构"><a href="#网站的高性能架构" class="headerlink" title="网站的高性能架构"></a>网站的高性能架构</h3><h4 id="网站性能测试"><a href="#网站性能测试" class="headerlink" title="网站性能测试"></a>网站性能测试</h4><ul>
<li>用户视角</li>
<li>开发视角</li>
<li>运维视角</li>
</ul>
<h4 id="性能测试指标"><a href="#性能测试指标" class="headerlink" title="性能测试指标"></a>性能测试指标</h4><ul>
<li>响应时间</li>
<li>并发数</li>
<li>吞吐量</li>
<li>性能计数器</li>
</ul>
<h4 id="性能测试方法"><a href="#性能测试方法" class="headerlink" title="性能测试方法"></a>性能测试方法</h4><ul>
<li>性能测试</li>
<li>负载测试</li>
<li>压力测试</li>
<li>稳定性测试</li>
</ul>
<h4 id="性能测试报告"><a href="#性能测试报告" class="headerlink" title="性能测试报告"></a>性能测试报告</h4><h4 id="性能优化策略"><a href="#性能优化策略" class="headerlink" title="性能优化策略"></a>性能优化策略</h4><ul>
<li>性能分析</li>
<li>性能优化</li>
</ul>
<h4 id="前端性能优化"><a href="#前端性能优化" class="headerlink" title="前端性能优化"></a>前端性能优化</h4><ul>
<li>浏览器访问优化<ul>
<li>减少HTTP请求</li>
<li>使用浏览器缓存</li>
<li>启用压缩</li>
<li>CSS放到页面最上，JavaScript放到最下</li>
<li>减少Cookie</li>
</ul>
</li>
<li>使用CDN加速</li>
<li>反向代理</li>
</ul>
<h4 id="应用服务器性能优化"><a href="#应用服务器性能优化" class="headerlink" title="应用服务器性能优化"></a>应用服务器性能优化</h4><ul>
<li>分布式缓存</li>
<li>合理使用缓存</li>
<li>分布式缓存架构</li>
<li>Memcached</li>
<li>异步操作</li>
<li>使用集群</li>
<li>代码优化<ul>
<li>多线程</li>
<li>资源复用</li>
<li>数据结构</li>
<li>垃圾回收</li>
</ul>
</li>
</ul>
<h4 id="存储性能优化"><a href="#存储性能优化" class="headerlink" title="存储性能优化"></a>存储性能优化</h4><ul>
<li>机械硬盘 vs 固态硬盘</li>
<li>B+树 vs LSM 树</li>
<li>RAID vs HDFS</li>
</ul>
<h3 id="网站的高可用架构"><a href="#网站的高可用架构" class="headerlink" title="网站的高可用架构"></a>网站的高可用架构</h3><h4 id="网站可用性的度量和考核"><a href="#网站可用性的度量和考核" class="headerlink" title="网站可用性的度量和考核"></a>网站可用性的度量和考核</h4><h4 id="网站可用性考核"><a href="#网站可用性考核" class="headerlink" title="网站可用性考核"></a>网站可用性考核</h4><h4 id="高可用的网站架构"><a href="#高可用的网站架构" class="headerlink" title="高可用的网站架构"></a>高可用的网站架构</h4><p>实现高可用架构的主要手段是数据和服务的冗余备份以及失效转移</p>
<ul>
<li>高可用的网站架构</li>
<li>高可用的应用</li>
<li>通过负载均衡进行无状态服务的失效转移</li>
</ul>
<h4 id="应用服务Session管理"><a href="#应用服务Session管理" class="headerlink" title="应用服务Session管理"></a>应用服务Session管理</h4><p>Web应用中将这些多次请求修改使用的上下文对象称作绘画。Session管理主要有以下手段：</p>
<ol>
<li>Session 复制</li>
<li>Session 绑定，基于负载均衡源地址Hash算法</li>
<li>利用 Cookie 记录 Session</li>
<li>Session 服务器</li>
</ol>
<h4 id="高可用的服务"><a href="#高可用的服务" class="headerlink" title="高可用的服务"></a>高可用的服务</h4><ol>
<li>分级管理</li>
<li>超时设置</li>
<li>异步调用</li>
<li>服务降级</li>
<li>幂等性设计</li>
</ol>
<h4 id="高可用的数据"><a href="#高可用的数据" class="headerlink" title="高可用的数据"></a>高可用的数据</h4><p>CAP原理：提供数据服务的存储系统无法同时满足数据一致性、数据可用性、分区耐受性这三个条件。</p>
<ul>
<li>数据持久性</li>
<li>数据可访问性</li>
<li>数据一致性<ul>
<li>数据强一致</li>
<li>数据用户一致</li>
<li>数据最终一致</li>
</ul>
</li>
<li>数据备份<ul>
<li>数据冷备</li>
<li>数据热备<ul>
<li>异步热备</li>
<li>同步热备</li>
</ul>
</li>
</ul>
</li>
<li>失效转移<ul>
<li>失效确认</li>
<li>访问转移</li>
<li>数据恢复</li>
</ul>
</li>
</ul>
<h4 id="高可用网站的软件质量保证"><a href="#高可用网站的软件质量保证" class="headerlink" title="高可用网站的软件质量保证"></a>高可用网站的软件质量保证</h4><ul>
<li>网站发布</li>
<li>自动化测试</li>
<li>预发布验证</li>
<li>代码控制<ul>
<li>主干开发、分支发布</li>
<li>分支开发、主干发布</li>
<li>自动化发布</li>
<li>灰度发布</li>
</ul>
</li>
</ul>
<h4 id="网站运行监控"><a href="#网站运行监控" class="headerlink" title="网站运行监控"></a>网站运行监控</h4><p>“不允许没有监控的系统上线”</p>
<ul>
<li>监控数据采集<ul>
<li>用户行为日志收集<ul>
<li>服务器端日志收集</li>
<li>客户端浏览器日志收集</li>
</ul>
</li>
<li>服务器性能监控</li>
<li>运行数据报告</li>
</ul>
</li>
<li>监控管理<ul>
<li>系统报警</li>
<li>失效转移</li>
<li>自动优雅降级</li>
</ul>
</li>
</ul>
<h3 id="网站的伸缩架构"><a href="#网站的伸缩架构" class="headerlink" title="网站的伸缩架构"></a>网站的伸缩架构</h3><p>网站的伸缩性可分成两类，一类是根据功能进行物理分离实现伸缩，一类是单一功能通过集群实现伸缩。前者是不同的服务器部署不同的服务，提供不同的功能；后者是集群内的多台服务器部署相同的服务，提供相同的功能。</p>
<ul>
<li>不同功能进行物理分离实现伸缩</li>
<li>单一功能通过集群规模实现伸缩</li>
</ul>
<h4 id="应用服务器集群的伸缩设计"><a href="#应用服务器集群的伸缩设计" class="headerlink" title="应用服务器集群的伸缩设计"></a>应用服务器集群的伸缩设计</h4><ul>
<li>HTTP重定向负载均衡</li>
<li>DNS域名解析负载均衡</li>
<li>反向代理负载均衡</li>
<li>IP负载均衡</li>
<li>数据链路层负载均衡</li>
<li>负载均衡算法</li>
</ul>
<h4 id="分布式缓存集群的伸缩性设计"><a href="#分布式缓存集群的伸缩性设计" class="headerlink" title="分布式缓存集群的伸缩性设计"></a>分布式缓存集群的伸缩性设计</h4><ul>
<li>Memcached 分布式缓存集群的访问模型</li>
<li>热添加缓存集群的伸缩性挑战</li>
<li>分布式缓存的一致性Hash算法</li>
</ul>
<h4 id="数据存储服务器集群的伸缩性设计"><a href="#数据存储服务器集群的伸缩性设计" class="headerlink" title="数据存储服务器集群的伸缩性设计"></a>数据存储服务器集群的伸缩性设计</h4><ul>
<li>关系数据库集群的伸缩性设计</li>
<li>NoSQL数据库的伸缩性设计</li>
</ul>
<h3 id="网站的可扩展性架构"><a href="#网站的可扩展性架构" class="headerlink" title="网站的可扩展性架构"></a>网站的可扩展性架构</h3><h4 id="构建可扩展的网站架构"><a href="#构建可扩展的网站架构" class="headerlink" title="构建可扩展的网站架构"></a>构建可扩展的网站架构</h4><ul>
<li>开发低耦合系统</li>
<li>模块化</li>
</ul>
<h4 id="利用分布式消息队列降低系统耦合性"><a href="#利用分布式消息队列降低系统耦合性" class="headerlink" title="利用分布式消息队列降低系统耦合性"></a>利用分布式消息队列降低系统耦合性</h4><ul>
<li>事件驱动架构</li>
<li>分布式消息队列</li>
</ul>
<h4 id="利用分布式服务打造可复用的业务平台"><a href="#利用分布式服务打造可复用的业务平台" class="headerlink" title="利用分布式服务打造可复用的业务平台"></a>利用分布式服务打造可复用的业务平台</h4><ul>
<li>Web Service 与企业级分布式服务</li>
<li>分布式服务框架设计</li>
</ul>
<h4 id="可扩展的数据结构"><a href="#可扩展的数据结构" class="headerlink" title="可扩展的数据结构"></a>可扩展的数据结构</h4><h4 id="利用开发平台建设网站生态圈"><a href="#利用开发平台建设网站生态圈" class="headerlink" title="利用开发平台建设网站生态圈"></a>利用开发平台建设网站生态圈</h4><h3 id="网站的安全架构"><a href="#网站的安全架构" class="headerlink" title="网站的安全架构"></a>网站的安全架构</h3><h4 id="网站应用攻击与防御"><a href="#网站应用攻击与防御" class="headerlink" title="网站应用攻击与防御"></a>网站应用攻击与防御</h4><ul>
<li>XSS 攻击 跨站点脚本攻击<ul>
<li>攻击类型：<ul>
<li>反射型</li>
<li>持久型</li>
</ul>
</li>
<li>防御手段：<ul>
<li>消毒</li>
<li>HttpOnly</li>
</ul>
</li>
</ul>
</li>
<li>注入攻击<ul>
<li>攻击类型：<ul>
<li>错误回显</li>
<li>盲注</li>
<li>开源搭建</li>
</ul>
</li>
<li>防御手段：<ul>
<li>消毒</li>
<li>参数绑定</li>
</ul>
</li>
</ul>
</li>
<li>CSRF 攻击 跨站点请求伪造<ul>
<li>防御手段：<ul>
<li>表单Token</li>
<li>验证码</li>
<li>Referer Check</li>
</ul>
</li>
</ul>
</li>
<li>其他攻击和漏洞</li>
<li>Web应用防火墙</li>
<li>网站安全漏洞扫描</li>
</ul>
<h4 id="加密技术及密钥安全管理"><a href="#加密技术及密钥安全管理" class="headerlink" title="加密技术及密钥安全管理"></a>加密技术及密钥安全管理</h4><ul>
<li>单向散列加密</li>
<li>对称加密</li>
<li>非对称加密</li>
<li>密钥安全管理</li>
</ul>
<h4 id="信息过滤与反垃圾"><a href="#信息过滤与反垃圾" class="headerlink" title="信息过滤与反垃圾"></a>信息过滤与反垃圾</h4><ul>
<li>文本匹配</li>
<li>分类算法</li>
<li>黑名单</li>
</ul>
<h4 id="电子商务风险控制"><a href="#电子商务风险控制" class="headerlink" title="电子商务风险控制"></a>电子商务风险控制</h4><h2 id="典型故障案例"><a href="#典型故障案例" class="headerlink" title="典型故障案例"></a>典型故障案例</h2><ol>
<li>写日志故障<ol>
<li>应用程序日志和第三方组件日志输出要分别配置</li>
<li>日志文件输出级别为Warn，调用级别要符合其真实日志级别</li>
<li>检查第三方组件的error日志</li>
</ol>
</li>
<li>高并发范文数据库引起故障<ol>
<li>首页不应该访问数据库</li>
<li>首页最好是静态</li>
</ol>
</li>
<li>高并发情况下锁引发的故障<ol>
<li>谨慎操作锁操作</li>
</ol>
</li>
<li>缓存引发的故障<ol>
<li>当缓存成为了网站架构不可或缺的一部分时，对缓存的管理就要提高到和其他服务器一样的级别</li>
</ol>
</li>
<li>大文件读写独占磁盘引发的故障<ol>
<li>存储的使用需要根据不同文件类型和用途进行管理</li>
<li>图片等小文件应该使用专用存储服务器，不能和大文件共用存储</li>
</ol>
</li>
</ol>
<h2 id="架构师"><a href="#架构师" class="headerlink" title="架构师"></a>架构师</h2><h4 id="关注人而不是产品"><a href="#关注人而不是产品" class="headerlink" title="关注人而不是产品"></a>关注人而不是产品</h4><p>寻找一个值得共同奋斗的目标，营造一个让大家能够最大限度发挥自我价值的工作氛围。</p>
<h4 id="发掘人的优秀"><a href="#发掘人的优秀" class="headerlink" title="发掘人的优秀"></a>发掘人的优秀</h4><h4 id="共享美好蓝图"><a href="#共享美好蓝图" class="headerlink" title="共享美好蓝图"></a>共享美好蓝图</h4><ul>
<li>蓝图应该是表述清楚的</li>
<li>蓝图应该是形象的</li>
<li>蓝图应该是简单的</li>
</ul>
<h4 id="共同参与架构"><a href="#共同参与架构" class="headerlink" title="共同参与架构"></a>共同参与架构</h4><ul>
<li>不要只有架构师一个人拥有架构</li>
<li>让其他人维护框架与架构文档</li>
</ul>
<h4 id="学会妥协、成就他人"><a href="#学会妥协、成就他人" class="headerlink" title="学会妥协、成就他人"></a>学会妥协、成就他人</h4>]]></content>
      <tags>
        <tag>Architecture</tag>
        <tag>Website</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>定时删除Wazuh日志索引</title>
    <url>/2022/07/20/wauzh-clean-log/</url>
    <content><![CDATA[<h2 id="前情"><a href="#前情" class="headerlink" title="前情"></a>前情</h2><p>生产和办公环境部署的Wazuh系统，因为对接的大量的Agent，每日的数据量在1.2GB左右。为减少实际运行成本并根据实际使用情况，原始日志导入一份到日志服务器外，Wazuh的安全日志只保留一个自然月。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><ol>
<li>使用Shell脚本来实现定时删除Wazuh的ElasticSearch索引的功能：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#本脚本用于按月份清理ES存储数据</span>
<span class="token comment">#获取本月份与索引中的日期进行比较，本月份前的索引数据将被删除。</span>
<span class="token comment">#删除前要确认</span>

<span class="token assign-left variable">ES_URL</span><span class="token operator">=</span>http://127.0.0.1:9200
<span class="token assign-left variable">NOW_Year</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y<span class="token variable">`</span></span> 
<span class="token assign-left variable">NOW_Mon</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%m<span class="token variable">`</span></span>
<span class="token assign-left variable">ALLLINES</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>/usr/bin/curl <span class="token parameter variable">-s</span> <span class="token parameter variable">-XGET</span> $ES_URL/_cat/indices?v<span class="token operator">|</span> <span class="token function">grep</span> wazuh-alerts-4.x-*<span class="token variable">`</span></span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> <span class="token string">"THIS IS WHAT SHOULD BE DELETED FOR ES:"</span>
<span class="token builtin class-name">echo</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;ALLLINES&#125;</span>"</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line
<span class="token keyword">do</span>
  <span class="token comment"># echo $&#123;line&#125;</span>
  <span class="token assign-left variable">FORMATEDLINE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>line<span class="token punctuation">&#125;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'&#123; print $3 &#125;'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token string">'-'</span> <span class="token string">'&#123; print $4 &#125;'</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">6</span>-7 <span class="token variable">`</span></span>
  <span class="token comment"># echo $&#123;FORMATEDLINE&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;FORMATEDLINE&#125;</span>"</span> <span class="token operator">!=</span> <span class="token string">"<span class="token variable">$&#123;NOW_Mon&#125;</span>"</span> <span class="token punctuation">]</span>
  <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$ES_URL</span>/wazuh-alerts-4.x-<span class="token variable">$NOW_Year</span>.<span class="token variable">$FORMATEDLINE</span>.*"</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">"if this make sence, Y to continue N to exit [Y/N]:"</span>
<span class="token builtin class-name">read</span> INPUT
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;INPUT&#125;</span>"</span> <span class="token operator">==</span> <span class="token string">"Y"</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;INPUT&#125;</span>"</span> <span class="token operator">==</span> <span class="token string">"y"</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;INPUT&#125;</span>"</span> <span class="token operator">==</span> <span class="token string">"yes"</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;INPUT&#125;</span>"</span> <span class="token operator">==</span> <span class="token string">"YES"</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;ALLLINES&#125;</span>"</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line
  <span class="token keyword">do</span>
    <span class="token assign-left variable">FORMATEDLINE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>line<span class="token punctuation">&#125;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'&#123; print $3 &#125;'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token string">'-'</span> <span class="token string">'&#123; print $4 &#125;'</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">6</span>-7 <span class="token variable">`</span></span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;FORMATEDLINE&#125;</span>"</span> <span class="token operator">!=</span> <span class="token string">"<span class="token variable">$&#123;NOW_Mon&#125;</span>"</span> <span class="token punctuation">]</span>
    <span class="token keyword">then</span>
      /usr/bin/curl <span class="token parameter variable">-XDELETE</span> <span class="token string">"<span class="token variable">$ES_URL</span>/wazuh-alerts-4.x-<span class="token variable">$NOW_Year</span>.<span class="token variable">$FORMATEDLINE</span>.*"</span>
      <span class="token function">sleep</span> <span class="token number">1</span>
      <span class="token keyword">fi</span>
  <span class="token keyword">done</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> SCRIPT CLOSED BY <span class="token environment constant">USER</span>, BYE <span class="token punctuation">..</span>.
  <span class="token builtin class-name">exit</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>使用Crontab来实现定时删除指定数据：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#本脚本用于定时按月份清理Wazuh存储数据</span>
<span class="token comment">#获取本月份与索引中的日期进行比较，本月份前的索引数据将被删除。</span>
<span class="token comment"># crontab参数为： 50 23 28-31 * * /opt/file/del_es_data.sh</span>

<span class="token assign-left variable">ES_URL</span><span class="token operator">=</span>http://127.0.0.1:9200
<span class="token assign-left variable">NOW_Year</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y<span class="token variable">`</span></span>
<span class="token assign-left variable">NOW_Mon</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%m<span class="token variable">`</span></span>
<span class="token assign-left variable">ALLLINES</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>/usr/bin/curl <span class="token parameter variable">-s</span> <span class="token parameter variable">-XGET</span> $ES_URL/_cat/indices?v<span class="token operator">|</span> <span class="token function">grep</span> wazuh-alerts-4.x-*<span class="token variable">`</span></span>

<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;ALLLINES&#125;</span>"</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line
<span class="token keyword">do</span>
  <span class="token assign-left variable">FORMATEDLINE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>line<span class="token punctuation">&#125;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'&#123; print $3 &#125;'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token string">'-'</span> <span class="token string">'&#123; print $4 &#125;'</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">6</span>-7 <span class="token variable">`</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$&#123;FORMATEDLINE&#125;</span>"</span> <span class="token operator">!=</span> <span class="token string">"<span class="token variable">$&#123;NOW_Mon&#125;</span>"</span> <span class="token punctuation">]</span>
  <span class="token keyword">then</span>
    /usr/bin/curl <span class="token parameter variable">-XDELETE</span> <span class="token string">"<span class="token variable">$ES_URL</span>/wazuh-alerts-4.x-<span class="token variable">$NOW_Year</span>.<span class="token variable">$FORMATEDLINE</span>.*"</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://blog.csdn.net/qq_39626154/article/details/108881907">Shell脚本定期清理elasticsearch日志</a></li>
<li><a href="https://www.jianshu.com/p/838d2ffc6537">Shell中while read line的用法及实战</a></li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Wazuh</tag>
        <tag>ElasticSearch</tag>
        <tag>crontab - Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则</title>
    <url>/2022/07/01/powershell-vm-netacl/</url>
    <content><![CDATA[<h1 id="使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则"><a href="#使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则" class="headerlink" title="使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则"></a>使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则</h1><h2 id="前情"><a href="#前情" class="headerlink" title="前情"></a>前情</h2><blockquote>
<p>标题也太绕了</p>
</blockquote>
<p>The Add-VMNetworkAdapterExtendedAcl cmdlet creates an extended access control list (ACL) for a virtual network adapter. The ACL allows or denies access to a virtual machine network adapter for network packets based on source IP address, destination IP address, protocol, source port, and destination port.</p>
<p><a href="https://learn.microsoft.com/en-us/powershell/module/hyper-v/add-vmnetworkadapterextendedacl?view=windowsserver2022-ps">官方文档</a></p>
<p>其实在单一Hyper-V宿主机上实现对其上运行的VM网络访问限制，主要是对非集群化部署有用，一旦涉及群集部署或者动态迁移，这个功能就没用了。这些规则是写到宿主机里面的，不会跟随VM而迁移。不过，对于边缘部署或者固定节点部署的VM还是有用的。</p>
<h2 id="脚本实现"><a href="#脚本实现" class="headerlink" title="脚本实现"></a>脚本实现</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 使用PowerShell脚本管理Hyper-V宿主机上的虚机网卡访问ACL规则</span>
<span class="token comment"># 输入需要配置的虚机名称</span>
<span class="token function">Write-Host</span> <span class="token operator">-</span>NoNewline <span class="token operator">-</span>ForegroundColor Magenta <span class="token string">'请输入要配置防火墙规则的虚机计算机名（如：VLNX******）'</span>
<span class="token namespace">[String]</span><span class="token variable">$VM_Name</span> = <span class="token function">Read-Host</span>
<span class="token comment"># 输入需要配置的宿主机名称</span>
<span class="token function">Write-Host</span> <span class="token operator">-</span>NoNewline <span class="token operator">-</span>ForegroundColor Magenta <span class="token string">'请输入目标虚机的宿主机名（如：PHPV******）'</span>
<span class="token namespace">[String]</span><span class="token variable">$VM_HostName</span>= <span class="token function">Read-Host</span>

<span class="token comment"># 默认的网关以及域控制器IP</span>
<span class="token variable">$VM_Gateway</span> = 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>100<span class="token punctuation">.</span>254
<span class="token variable">$VM_ADcontrl1</span> = 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>100<span class="token punctuation">.</span>1
<span class="token variable">$VM_ADcontrl2</span> = 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>100<span class="token punctuation">.</span>2
<span class="token variable">$VM_SecAdmin</span> = 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>100<span class="token punctuation">.</span>10

<span class="token variable">$VM_Firewall</span> = <span class="token punctuation">&#123;</span>
    <span class="token keyword">param</span><span class="token punctuation">(</span><span class="token variable">$VM_Name</span><span class="token punctuation">)</span>
    <span class="token comment"># 清除已有规则</span>
    <span class="token function">Get-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token punctuation">|</span> <span class="token function">Remove-VMNetworkAdapterAcl</span>
    <span class="token function">Get-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token punctuation">|</span> <span class="token function">Remove-VMNetworkAdapterExtendedAcl</span>
    
    <span class="token comment"># 权重为1~10</span>
    <span class="token comment"># 阻止流量进出</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Deny <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>RemoteIPAddress ANY <span class="token operator">-</span>Weight 1
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Deny <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress ANY <span class="token operator">-</span>Weight 1
    
    <span class="token comment"># 开启ICMP支持</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>Protocol 1 <span class="token operator">-</span>Weight 2
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>Protocol 1 <span class="token operator">-</span>Weight 2
    
    <span class="token comment"># 开启本机管理SSH端口</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>RemoteIPAddress Any <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>LocalPort 22 <span class="token operator">-</span>Weight 4 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    
    <span class="token comment">#允许访问网关</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_Gateway</span> <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>Weight 5 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_Gateway</span> <span class="token operator">-</span>Protocol udp <span class="token operator">-</span>Weight 6 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    
    <span class="token comment"># 权重为10~99</span>
    <span class="token comment"># 开启管理端口</span>
    <span class="token comment"># 允许访问域控制器</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_ADcontrl1</span> <span class="token operator">-</span>Weight 10
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_ADcontrl2</span> <span class="token operator">-</span>Weight 11
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_ADcontrl1</span> <span class="token operator">-</span>Weight 10
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_ADcontrl2</span> <span class="token operator">-</span>Weight 11
    
    <span class="token comment"># 开通WAZUH上传端口</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_SecAdmin</span> <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>RemotePort 1514 <span class="token operator">-</span>Weight 20 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>RemoteIPAddress <span class="token variable">$VM_SecAdmin</span> <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>RemotePort 1515 <span class="token operator">-</span>Weight 21 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    
    <span class="token comment"># 权重为100~150</span>
    <span class="token comment"># 开启访问其他服务的常规端口</span>
    dd-VMNetworkAdapterExtendedAcl <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>RemotePort 80 <span class="token operator">-</span>Weight 100 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>RemotePort 443 <span class="token operator">-</span>Weight 101 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    
    <span class="token comment"># 权重为150~200</span>
    <span class="token comment"># 特殊端口的设置</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>LocalPort 10085 <span class="token operator">-</span>Weight 150 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    <span class="token function">Add-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token operator">-</span>Action Allow <span class="token operator">-</span>Direction Outbound <span class="token operator">-</span>Protocol tcp <span class="token operator">-</span>RemotePort 9088 <span class="token operator">-</span>Weight 150 <span class="token operator">-</span>Stateful <span class="token boolean">$true</span>
    
    <span class="token comment"># 检查当前规则</span>
    <span class="token function">Get-VMNetworkAdapterAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token punctuation">|</span> <span class="token function">Sort</span> <span class="token operator">-</span>Property Weight <span class="token punctuation">|</span><span class="token function">ft</span> <span class="token operator">-</span>autosize
    <span class="token function">Get-VMNetworkAdapterExtendedAcl</span> <span class="token operator">-</span>VMName <span class="token variable">$VM_Name</span> <span class="token punctuation">|</span> <span class="token function">Sort</span> <span class="token operator">-</span>Property Weight <span class="token punctuation">|</span><span class="token function">ft</span> <span class="token operator">-</span>autosize
<span class="token punctuation">&#125;</span>

<span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$VM_HostName</span> <span class="token operator">-</span>ScriptBlock <span class="token variable">$VM_Firewall</span> <span class="token operator">-</span>ArgumentList <span class="token variable">$VM_Name</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>powershell</tag>
        <tag>troubleshooting</tag>
      </tags>
  </entry>
  <entry>
    <title>自己动手构建简易广播系统</title>
    <url>/2022/06/29/how-to-build-liveserver/</url>
    <content><![CDATA[<h2 id="综合概述"><a href="#综合概述" class="headerlink" title="综合概述"></a>综合概述</h2><p>XXX电视直播系统是用于XXX北京研发中心的广播和直播相结合的便宜视频推送系统，使用到了办公环境服务器、监控用电视大屏和监控用主机盒子。</p>
<h3 id="组织架构"><a href="#组织架构" class="headerlink" title="组织架构"></a>组织架构</h3><h4 id="逻辑拓扑"><a href="#逻辑拓扑" class="headerlink" title="逻辑拓扑"></a>逻辑拓扑</h4><p>整体系统由开源直播系统<a href="https://ossrs.net/lts/zh-cn/">SRS</a>和开源视频播放器<a href="https://www.videolan.org/vlc/">VLC</a>构成，其逻辑拓扑如下：<br><img src="https://cdn.sujx.net/liveshow-topo.png" alt="liveshow-topo"></p>
<h4 id="物理组件"><a href="#物理组件" class="headerlink" title="物理组件"></a>物理组件</h4><ol>
<li>一个SRS服务器：VLNX101071（172.31.101.71）</li>
<li>十三个视频接收端：172.29.153.165~177</li>
<li>推流服务：使用安装OBS工具的公共笔记本电脑</li>
</ol>
<h2 id="构建软件"><a href="#构建软件" class="headerlink" title="构建软件"></a>构建软件</h2><h3 id="视频网关"><a href="#视频网关" class="headerlink" title="视频网关"></a>视频网关</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 系统准备</span>
yum makecache
yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">git</span> <span class="token function">make</span> autoconf m4 gcc
<span class="token builtin class-name">cd</span> /opt
<span class="token comment"># 从GITHUB拉取SRS</span>
<span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4</span>.0release https://gitee.com/ossrs/srs.git
<span class="token comment"># 编译系统</span>
<span class="token builtin class-name">cd</span> srs/trunk
./configure
<span class="token function">make</span>
<span class="token comment"># 安装系统</span>
<span class="token function">make</span> <span class="token function">install</span>
<span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/srs/etc/init.d/srs /etc/init.d/srs
<span class="token function">cp</span> <span class="token parameter variable">-f</span> /usr/local/srs/usr/lib/systemd/system/srs.service /usr/lib/systemd/system/srs.service
<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> srs
<span class="token comment"># 配置防火墙</span>
<span class="token comment"># 8080端口为控制台端口 1935为rtmp拉流端口 1985为SRS群集通讯端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">8080</span>/tcp,1935/tcp,1985/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ol>
<li>登录访问 <a href="http://172.31.101.71:8080/">http://172.31.101.71:8080/</a><br><img src="https://cdn.sujx.net/liveshow-server-1.png" alt="liveshow-server-1"></li>
<li>进入控制台<br><img src="https://cdn.sujx.net/liveshow-server-console.png" alt="liveshow-server-1"></li>
<li>查看主机信息<br><img src="https://cdn.sujx.net/liveshow-server-vhost.png" alt="liveshow-server-1"></li>
<li>查看视频流<br><img src="https://cdn.sujx.net/liveshow-server-stream.png" alt="liveshow-server-1"></li>
<li>查看客户端<br><img src="https://cdn.sujx.net/liveshow-server-client.png" alt="liveshow-server-1"></li>
</ol>
<h4 id="推流"><a href="#推流" class="headerlink" title="推流"></a>推流</h4><h5 id="本地推流"><a href="#本地推流" class="headerlink" title="本地推流"></a>本地推流</h5><p><a href="https://ffmpeg.org/">FFMPEG</a>是一套功能强大的多媒体视频处理框架，能够完成视频采集、格式转换、视频抓图等各项功能，初步使用方法可以参考《<a href="https://ruanyifeng.com/blog/2020/01/ffmpeg.html">FFmpeg 视频处理入门教程</a>》。我们本次使用它的视频推送功能，以便完成当前需求。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用 \\172.31.101.71 打开服务器主机共享文件夹，并上传视频文件</span>
<span class="token comment"># 最简单的输入输出命令为 ffmpeg -i input.avi output.mp4</span>
<span class="token comment"># 我们实际使用如下命令</span>
ffmpeg <span class="token parameter variable">-i</span> /var/liveshow/1840.mp4 <span class="token parameter variable">-vcodec</span> libx264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> flv <span class="token parameter variable">-preset</span> ultrafast <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">25</span> rtmp://localhost/live/livestream
<span class="token comment"># -i /var/liveshow/1840.mp4 参数指定播放的文件路径</span>
<span class="token comment"># -vcodec libx264 指定使用H.264编码器进行编码</span>
<span class="token comment"># -acodec aac 使用aac进行音频编码</span>
<span class="token comment"># -f flv 输出格式为flv格式</span>
<span class="token comment"># -preset ultrafast 指定输出的视频质量，可用值为ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow</span>
<span class="token comment"># -vf fps=25 指定帧率为25</span>
<span class="token comment"># rtmp://localhost/live/livestream 使用rtmp协议推送到本地的Live频道，验证码为livestream</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>我们在本项目中使用Linux主机的crontab定时机制实现定点播放指定内容</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 周一至周五，上午11点59开始静音推流 1150.mp4 文件</span>
00 <span class="token number">12</span> * * <span class="token number">1</span>-5 ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> /var/liveshow/1150.mp4 <span class="token parameter variable">-vcodec</span> libx264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> flv <span class="token parameter variable">-preset</span> ultrafast <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">25</span> <span class="token parameter variable">-threads</span> <span class="token number">4</span> <span class="token parameter variable">-vol</span> <span class="token number">0</span> rtmp://localhost/live/livestream
<span class="token comment"># 周一至周五，下午18点40开始推流 1840.mp4 文件</span>
<span class="token number">40</span> <span class="token number">18</span> * * <span class="token number">1</span>-5 ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> /var/liveshow/1840.mp4 <span class="token parameter variable">-vcodec</span> libx264 <span class="token parameter variable">-acodec</span> aac <span class="token parameter variable">-f</span> flv <span class="token parameter variable">-preset</span> ultrafast <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">25</span> <span class="token parameter variable">-threads</span> <span class="token number">4</span> rtmp://localhost/live/livestream<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h5 id="OBS推流"><a href="#OBS推流" class="headerlink" title="OBS推流"></a>OBS推流</h5><p><a href="https://obsproject.com/">OBS</a>是一款开源免费的直播推流软件，支持当前的主流系统平台和直播平台，具有良好的兼容性和功能性。</p>
<p><img src="https://cdn.sujx.net/liveshow-obs-pro.png" alt="liveshow-obs-pro"></p>
<h6 id="推流设置"><a href="#推流设置" class="headerlink" title="推流设置"></a>推流设置</h6><p><img src="https://cdn.sujx.net/liveshow-obs-push.png" alt="liveshow-obs-push"></p>
<h6 id="视频来源"><a href="#视频来源" class="headerlink" title="视频来源"></a>视频来源</h6><p><img src="https://cdn.sujx.net/liveshow-obs-zoom.png" alt="liveshow-obs-zoom"></p>
<h6 id="推流与录制"><a href="#推流与录制" class="headerlink" title="推流与录制"></a>推流与录制</h6><p><img src="https://cdn.sujx.net/liveshow-obs-recod.png" alt="liveshow-obs-recod"></p>
<h6 id="SRS视频流"><a href="#SRS视频流" class="headerlink" title="SRS视频流"></a>SRS视频流</h6><p><img src="https://cdn.sujx.net/liveshow-obs-srs.png" alt="liveshow-obs-srs"></p>
<h3 id="电视大屏"><a href="#电视大屏" class="headerlink" title="电视大屏"></a>电视大屏</h3><p><a href="https://www.videolan.org/vlc/">VLC Media Player</a> 是一个老牌的流媒体播放器，以跨平台的兼容性和丰富的媒体支持而著称。</p>
<p><img src="https://cdn.sujx.net/liveshow-vlc.png" alt="liveshow-vlc"></p>
<h4 id="拉流"><a href="#拉流" class="headerlink" title="拉流"></a>拉流</h4><p>我们在电视大屏的监控主机上使用vlc播放器的客户端版本cvlc来实现主动从172.31.101.71上拉取视频流</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 配置变量环境</span>
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
<span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>/bin/bash
<span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/home/fxiaoke
<span class="token comment"># 配置视频和音频环境</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">XDG_RUNTIME_DIR</span></span><span class="token operator">=</span><span class="token string">"/run/user/1000"</span>
<span class="token assign-left variable"><span class="token environment constant">DISPLAY</span></span><span class="token operator">=</span>:0.0
<span class="token comment"># 调用cvlc播放，音频输出到第一个HDMI接口</span>
cvlc <span class="token parameter variable">--fullscreen</span> --play-and-exit --alsa-audio-device hw:0,0 http://172.31.101.71:8080/live/livestream.flv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="定时播放"><a href="#定时播放" class="headerlink" title="定时播放"></a>定时播放</h4><p>为了实现以下目标：</p>
<ol>
<li>电视大屏主机实现定时播放SRS视频网关上推送的视频流；</li>
<li>可自定义拉起视频流，实现电视直播</li>
</ol>
<p>我们使用了Linux主机的Crontab和Ansible两种技术来实现。</p>
<h5 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置客户端定时调用播放脚本</span>
<span class="token comment"># Ansible: Live Show</span>
00 <span class="token number">12</span> * * * /bin/bash /home/fxiaoke/play.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h5 id="批量下发"><a href="#批量下发" class="headerlink" title="批量下发"></a>批量下发</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用Ansible Cron模块下发定时任务，指定12:00静音播放SRS网关视频流</span>
ansible TV <span class="token parameter variable">-m</span> <span class="token function">cron</span> <span class="token parameter variable">-a</span> <span class="token string">"name='Play Steam Live Show' minute=00 hour=12 job='/bin/bash /home/fxiaoke/play.sh' user=fxiaoke disabled=no"</span>

<span class="token comment"># 使用Ansible Cron模块下发定时任务，指定18:00播放SRS网关视频流</span>
ansible TV <span class="token parameter variable">-m</span> <span class="token function">cron</span> <span class="token parameter variable">-a</span> <span class="token string">"name='Play Steam Live Show Again' minute=40 hour=18 job='/bin/bash /home/fxiaoke/play.sh' user=fxiaoke disabled=no"</span>

<span class="token comment"># 使用Ansible Cron模块下发临时任务，指定某一时刻临时播放SRS网关视频流</span>
ansible TV <span class="token parameter variable">-m</span> <span class="token function">cron</span> <span class="token parameter variable">-a</span> <span class="token string">"name='Live Show Test' minute=13 hour=12 job='/bin/bash /home/fxiaoke/play.sh' user=fxiaoke disabled=yes"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>SRS</tag>
      </tags>
  </entry>
  <entry>
    <title>远程搜集主机网卡信息</title>
    <url>/2022/06/01/powershell-remote-netadapter/</url>
    <content><![CDATA[<h1 id="远程搜集主机网卡信息"><a href="#远程搜集主机网卡信息" class="headerlink" title="远程搜集主机网卡信息"></a>远程搜集主机网卡信息</h1><h2 id="开启功能"><a href="#开启功能" class="headerlink" title="开启功能"></a>开启功能</h2><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>默认情况下，在Windows 10或者11 首次执行powershell脚本会提示”系统禁止脚本运行“的错误。这是因为M$为了安全，把powershell的脚本执行策略设定为有数字证书的才允许执行。因此，需要执行脚本的方法一个是使用合法的数字证书对脚本进行签名：</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 获取合法的PFX证书(IIS版本SSL证书)</span>
<span class="token comment"># 一般情况下都会为证书设置密码，所以这一步需要输入密码进行验证</span>
<span class="token variable">$cert</span> = <span class="token function">Get-PfxCertificate</span> <span class="token operator">-</span>FilePath <span class="token string">"test.pfx"</span>

<span class="token comment"># 然后为 demo.ps1 脚本文件签名：</span>
<span class="token function">Set-AuthenticodeSignature</span> <span class="token operator">-</span>FilePath <span class="token string">"demo.ps1"</span> `
    <span class="token operator">-</span>Certificate <span class="token variable">$cert</span> <span class="token operator">-</span>IncludeChain <span class="token string">"All"</span> `
    <span class="token operator">-</span>TimeStampServer <span class="token string">"http://timestamp.verisign.com/scripts/timstamp.dll"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>或者我们干脆取消这一限制：</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 设置执行策略无签名脚本执行</span>
<span class="token function">set-executionpolicy</span> remotesigned<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>如果服务器已经加入Windows域环境的话，</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 打开远程管理，接受所有机器连接</span>
<span class="token function">Enable-PSRemoting</span> <span class="token operator">-</span>Force
<span class="token function">Set-Item</span> <span class="token operator">-</span>Path WSMan:\localhost\client\trustedhosts <span class="token operator">-</span>Value <span class="token operator">*</span> <span class="token operator">-</span>Force
<span class="token comment"># 关闭远程管理</span>
<span class="token comment"># Disable-PSRemoting -force</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="执行搜集"><a href="#执行搜集" class="headerlink" title="执行搜集"></a>执行搜集</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 添加需要搜集目标主机计算机名</span>
<span class="token variable">$ServerList</span>=<span class="token punctuation">(</span> <span class="token string">'servera.example.com'</span><span class="token punctuation">,</span><span class="token string">'serverb.example.com'</span><span class="token punctuation">,</span><span class="token string">'serverc.example.com'</span><span class="token punctuation">)</span>
<span class="token comment"># 使用for循环把各个主机的网卡信息列出来</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span> <span class="token variable">$ServerName</span> in <span class="token variable">$ServerList</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment"># 列出主机名</span>
    <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$ServerName</span> <span class="token operator">-</span>Command <span class="token punctuation">&#123;</span><span class="token function">Get-Content</span> Env:COMPUTERNAME<span class="token punctuation">&#125;</span>
    <span class="token comment"># 列出主机网卡信息</span>
    <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$ServerName</span> <span class="token operator">-</span>Command <span class="token punctuation">&#123;</span><span class="token function">Get-Netadapter</span> <span class="token punctuation">|</span><span class="token function">ft</span><span class="token punctuation">&#125;</span>
    <span class="token comment"># 列出主机网卡地址信息</span>
    <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName phpv153003<span class="token punctuation">.</span>firstshare<span class="token punctuation">.</span>cn <span class="token operator">-</span>Command <span class="token punctuation">&#123;</span> <span class="token function">Get-NetIPAddress</span> <span class="token punctuation">|</span> <span class="token function">Sort</span> <span class="token operator">-</span>Property ifIndex <span class="token punctuation">|</span><span class="token function">ft</span> <span class="token operator">-</span>autosize  <span class="token punctuation">|</span><span class="token function">ft</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">servera

Name                            InterfaceDescription                         ifIndex Status       MacAddress        LinkSpeed
<span class="token operator">--</span><span class="token operator">--</span>                            <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>                         <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>       <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>        <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
NIC4                            Broadcom NetXtreme Gigabit Ethernet <span class="token comment">#2             5 Disconnected 54-9F-35-15-FD-5F     0 bps</span>
NIC3                            Broadcom NetXtreme Gigabit Ethernet <span class="token comment">#4             7 Not Present  54-9F-35-15-FD-5E     0 bps</span>
NIC2                            Broadcom NetXtreme Gigabit Ethernet                2 Up           54-9F-35-15-FD-5D    1 Gbps
NIC1                            Broadcom NetXtreme Gigabit Ethernet <span class="token comment">#3            11 Up           54-9F-35-15-FD-5C    1 Gbps</span>


ifIndex IPAddress                    PrefixLength PrefixOrigin SuffixOrigin AddressState PolicyStore
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>                    <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
1       ::1                                   128 WellKnown    WellKnown    Preferred    ActiveStore
1       127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1                               8 WellKnown    WellKnown    Preferred    ActiveStore
3       fe80::5efe:10<span class="token punctuation">.</span>12<span class="token punctuation">.</span>153<span class="token punctuation">.</span>103%3            128 WellKnown    Link         Deprecated   ActiveStore
7       fe80::5efe:172<span class="token punctuation">.</span>31<span class="token punctuation">.</span>153<span class="token punctuation">.</span>3%7             128 WellKnown    Link         Deprecated   ActiveStore
8       169<span class="token punctuation">.</span>254<span class="token punctuation">.</span>31<span class="token punctuation">.</span>27                          16 WellKnown    Link         Tentative    ActiveStore
8       fe80::7c00:7d4d:22ea:1f1b%8            64 WellKnown    Link         Deprecated   ActiveStore<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>powershell</tag>
        <tag>troubleshooting</tag>
      </tags>
  </entry>
  <entry>
    <title>文件存在但IIS报404故障的解决</title>
    <url>/2022/05/05/iis-mime/</url>
    <content><![CDATA[<h1 id="文件存在但IIS报404故障的解决"><a href="#文件存在但IIS报404故障的解决" class="headerlink" title="文件存在但IIS报404故障的解决"></a>文件存在但IIS报404故障的解决</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>公司内建有SMB的网络共享盘，同时为方便MacOS用户，也基于同样的文件夹位置，建立的共享文件的HTTP站点。这个文件夹中有很多的打印机和扫描仪的驱动文件。由于原先使用打印服务器的模式，所以客户端无需单独安装驱动。后来，有了直连打印机的需求，就要上传MacOS的打印机驱动。<br>在上传DMG格式的驱动之后，SMB共享可以正常下载，但WEB共享发现无法下载，点击文件回显404.</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在IIS服务器中添加对.dmg文件的描述。</p>
<ol>
<li>打开IIS控制台<br><img src="https://cdn.sujx.net/iis-console-admin.PNG"></li>
<li>添加DMG文件的描述信息<br><img src="https://cdn.sujx.net/iis-console-mime.PNG"></li>
</ol>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。浏览器通常使用 MIME 类型（而不是文件扩展名）来确定如何处理URL，因此 We b服务器在响应头中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会无法解析文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。<br>MIME 的组成结构非常简单，由类型与子类型两个字符串中间用 &#x2F; 分隔而组成，不允许有空格。type 表示可以被分多个子类的独立类别，subtype 表示细分后的每个类型。MIME类型对大小写不敏感，但是传统写法都是小写。</p>
<p>两种主要的 MIME 类型在默认类型中扮演了重要的角色：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">text/plain 表示文本文件的默认值。
application/octet-stream 表示所有其他情况的默认值。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>常见的 MIME 类型</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">超文本标记语言文本 .html、.html：text/html
普通文本 .txt： text/plain
RTF 文本 .rtf： application/rtf
GIF 图形 .gif： image/gif
JPEG 图形 .jpeg、.jpg： image/jpeg
au 声音文件 .au： audio/basic
MIDI 音乐文件 mid、.midi： audio/midi、audio/x-midi
RealAudio 音乐文件 .ra、.ram： audio/x-pn-realaudio
MPEG 文件 .mpg、.mpeg： video/mpeg
AVI 文件 .avi： video/x-msvideo
GZIP 文件 .gz： application/x-gzip
TAR 文件 .tar： application/x-tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>因为互联网的发展太快，IIS对一些程序和二进制文件不会全部添加类型描述，因此需要自行添加MIME标识信息，从而为WEB Server提供行为描述。</p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>IIS</tag>
        <tag>troubleshooting</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS的部署、重命名与加域</title>
    <url>/2022/04/11/macOS-join-ad/</url>
    <content><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>公司现有一堆14年末的Mac mini主机需要清理、更换SSD、系统升级和资产归纳。因为是库存主机且数据已经可以清空的情况下，对这些老家伙进行格式化重装和重命名主机并加入现有AD域。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="制作USB启动器"><a href="#制作USB启动器" class="headerlink" title="制作USB启动器"></a>制作USB启动器</h3><ol>
<li>下载 <a href="https://www.balena.io/etcher/">balenaEtcher</a>  工具，来刻录USB安装镜像（需科学上网才能正常下载）<br><img src="https://cdn.sujx.net/macOS-install-000.png"></li>
<li>下载可引导ISO镜像，我们使用最新的12.3.1</li>
</ol>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><ol>
<li>开机部署（ 开机按 alt 键，进入引导界面）<br><img src="https://cdn.sujx.net/macOS-install-001.png"></li>
<li>打开系统工具，点击“Disk Utility”<br><img src="https://cdn.sujx.net/macOS-install-002.png"></li>
<li>清除磁盘，并新建磁盘<br><img src="https://cdn.sujx.net/macOS-install-004.png"></li>
<li>返回系统工具，点击“Install macOS”，开始安装<br><img src="https://cdn.sujx.net/macOS-install-003.png"></li>
</ol>
<h2 id="更名"><a href="#更名" class="headerlink" title="更名"></a>更名</h2><p>原有主机配置根据用户名创建主机名，为方便后续资产管理，现需要变更主机名。</p>
<ol>
<li>打开系统偏好设置<br><img src="https://cdn.sujx.net/macOS-join-ad-001.png"></li>
<li>选择 “共享” ，并点击“编辑”<br><img src="https://cdn.sujx.net/macOS-join-ad-002.png"></li>
<li>勾选“使用动态全局主机名”<br><img src="https://cdn.sujx.net/macOS-join-ad-003.png"></li>
<li>修改默认“电脑名称”<br><img src="https://cdn.sujx.net/macOS-join-ad-004.png"></li>
</ol>
<h2 id="加域"><a href="#加域" class="headerlink" title="加域"></a>加域</h2><ol>
<li>使用管理员权限打开“用户与群组”<br><img src="https://cdn.sujx.net/macOS-join-ad-005.png"></li>
<li>点击“登录选项”，并点击锁按钮<br><img src="https://cdn.sujx.net/macOS-join-ad-006.png"></li>
<li>使用管理员权限解锁按钮<br><img src="https://cdn.sujx.net/macOS-join-ad-007.png"></li>
<li>点击下方“网络账户服务器：加入”<br><img src="https://cdn.sujx.net/macOS-join-ad-008.png"></li>
<li>输入可加域管理员账号、密码、加域主机名(默认小写)<br><img src="https://cdn.sujx.net/macOS-join-ad-009.png"></li>
<li>输入本地管理员密码确认变更<br><img src="https://cdn.sujx.net/macOS-join-ad-010.png"></li>
</ol>
]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>ActiveDirectory</tag>
        <tag>MacMini</tag>
      </tags>
  </entry>
  <entry>
    <title>MacMini 主机更换SSD</title>
    <url>/2022/04/01/macmini-hd2ssd/</url>
    <content><![CDATA[<p>部门库存里面有几台硬盘为1TB机械盘的2014年版本Mac Mini。为了资源利用，现将这些主机的硬盘更换为拆机的256GB SSD磁盘。</p>
<p>主要操作流程如下：</p>
<ol>
<li>拆除主机外壳( 要注意wifi的连接线)<br><img src="https://cdn.sujx.net/macmini-hd2ssd-001.jpg"></li>
<li>拆除主机风扇（注意使用镊子或者小的一字螺丝刀把风扇电源、硬盘数据线、主板电源小心的拆掉，这个接口很脆）<br><img src="https://cdn.sujx.net/macmini-hd2ssd-002.jpg"></li>
<li>从机壳中拉出主板（有两颗固定长螺丝需要拆除）<br><img src="https://cdn.sujx.net/macmini-hd2ssd-003.jpg"></li>
<li>拆除主机电源（拔掉电源接口下方的金属销，然后将电源接口向主板位置方向旋转90度即可拉出电源）；<br><img src="https://cdn.sujx.net/macmini-hd2ssd-004.jpg"></li>
<li>拆除主机硬盘<br><img src="https://cdn.sujx.net/macmini-hd2ssd-005.jpg"></li>
<li>更换硬盘（硬盘位使用普通十字螺丝固定，接口有贴纸，贴纸很容易失去粘性，可小心贴到塑料表面，不要沾染指纹或灰尘）<br><img src="https://cdn.sujx.net/macmini-hd2ssd-006.jpg"></li>
<li>最后依次还原主机</li>
</ol>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>《VMware vSphere 性能设计》笔记</title>
    <url>/2022/03/21/vsphere-performance/</url>
    <content><![CDATA[<blockquote>
<p>本书从概念和操作两方面介绍了虚拟化基础设施的性能。</p>
</blockquote>
<h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><h3 id="虚拟化基础"><a href="#虚拟化基础" class="headerlink" title="虚拟化基础"></a>虚拟化基础</h3><ol>
<li>CPU保护模式<ol>
<li>CPU保护模式，也称为保护虚拟地址模式，是一种提供硬件级别内存保护的X86处理器操作模式。</li>
<li>实模式<ol>
<li>为原始x86处理器设计</li>
<li>关闭内存保护功能</li>
<li>只有操作系统内核才可以无限制使用全部硬件资源</li>
</ol>
</li>
<li>保护模式：<ol>
<li>保护模式的特权等级：Ring0 Ring1 Ring2 Ring3</li>
<li>Ring 0 特权最多，Ring 3 特权做少</li>
<li>Ring 0：Kernel ；Ring 1 设备驱动； Ring 2 设备驱动； Ring 3 应用</li>
</ol>
</li>
</ol>
</li>
<li>定义CPU虚拟化的类型：<ol>
<li>基于软件的CPU虚拟化：<ol>
<li>运行于Ring1级别</li>
<li>需要VMM编译执行代码</li>
</ol>
</li>
<li>基于硬件辅助的CPU虚拟化<ol>
<li>运行于Ring0</li>
<li>使用Intel VT 或者AMD-V硬件辅助功能，无需软件编译</li>
</ol>
</li>
</ol>
</li>
<li>物理CPU与虚拟CPU之间的区别<ol>
<li>每一个物理处理器内核被检测为一个pCPU</li>
<li>每个线程也可以被视为一个pCPU</li>
</ol>
</li>
<li>vCPU状态<ol>
<li>运行状态：在pCPU上被调度来运行指令</li>
<li>准备状态：在pCPU上准备调度，但由于调度延迟不直接运行</li>
<li>等待闲置状态：特殊状态（？）</li>
<li>等待状态：等待I&#x2F;O操作在外部系统组件上完成</li>
</ol>
</li>
</ol>
<h3 id="CPU的调度程序"><a href="#CPU的调度程序" class="headerlink" title="CPU的调度程序"></a>CPU的调度程序</h3><p>VMware ESXi CPU调度程序的主要目标是调度“world”（VMM的进程或者线程）在pCPU上严格执行，并满足性能、吞吐率、处理器使用率上的要求。同时，调度程序也负责欺骗客户机操作系统，以使其相信自己有pCPU资源。</p>
<ol>
<li>比例分配算法<ol>
<li>计算优先级：数值低的优先级被认为是高优先级，数值高的优先级为低优先级</li>
<li>根据分配资源的消耗动态计算优先级</li>
</ol>
</li>
<li>CPU联合调度<ol>
<li>严格联合调度</li>
<li>宽松联合调度</li>
</ol>
</li>
<li>CPU调度单元<ol>
<li>调度单元的分布式锁定<ol>
<li>当全部vCPU在不同的处理器上协同调度时，虚拟机的性能表现最好</li>
<li>限制同级vCPU在任意时刻只在一个单元中调度会更有效率</li>
<li>调度单元在确保了CPU调度的扩展性的同时，又限制了CPU调度的扩展性</li>
</ol>
</li>
<li>vSphere取消调度单元<ol>
<li>单独使用等于物理CPU内核数的vCPU，会产生一个对全部调度程序调用进行序列化的全局锁定，并导致调度单元无效</li>
<li>限制了缓存的总量以及共享缓存的多核处理器上的内存带宽</li>
</ol>
</li>
</ol>
</li>
<li>CPU拓扑感知负载均衡<ol>
<li>拉迁移和推迁移</li>
<li>world在物理CPU之间的迁移会有很高的成本<ol>
<li>CPU亲和：不推荐人工配置CPU亲和；保证配置给虚拟机上的pCPU数量总比vCPU的数量多至少一个</li>
</ol>
</li>
<li>NUMA 不统一的内存访问<ol>
<li>目的：解决多核处理器上访问内存延迟问题。每个numa节点由一组处理器和指定给处理器的内存组成</li>
<li>内存在相同节点中访问时，进行本地访问</li>
<li>内存被其他节点访问时，进行远程访问</li>
<li>NUMA系统的负载平衡</li>
<li>NUMA系统宽虚拟机负载平衡（超线程 numa.vcpu.preferHT）</li>
<li>虚拟NUMA</li>
<li>每个插槽的内核</li>
<li>超线程架构的负载均衡：通过保持处理器流水线的繁忙状态，超线程可以提高性能</li>
</ol>
</li>
</ol>
</li>
<li>多核感知负载均衡<ol>
<li>基于CPU负载的迁移限流</li>
<li>虚拟SMP整合（vSMP整合是的多处理器虚拟机上的同级vCPU被单个LLC调度）</li>
<li>外部VM缓存亲和力（当同一主机上的两个虚机经常发生通信时，CPU调度程序会调度相同LLC上的虚机）</li>
</ol>
</li>
</ol>
<h3 id="适时调配CPU"><a href="#适时调配CPU" class="headerlink" title="适时调配CPU"></a>适时调配CPU</h3><ol>
<li>vSMP的注意事项<ol>
<li>客户机操作系统硬件抽象层</li>
</ol>
</li>
<li>NUMA与vNUMA的注意事项</li>
<li>CPU资源热插拔</li>
</ol>
<h3 id="CPU资源管理"><a href="#CPU资源管理" class="headerlink" title="CPU资源管理"></a>CPU资源管理</h3><ol>
<li>CPU保留</li>
<li>CPU限制</li>
<li>配置CPU保留和限制</li>
<li>资源池<ol>
<li>资源池的CPU保留</li>
<li>资源池的CPU限制</li>
<li>资源池共享</li>
</ol>
</li>
</ol>
<h3 id="性能问题的故障排除"><a href="#性能问题的故障排除" class="headerlink" title="性能问题的故障排除"></a>性能问题的故障排除</h3><ol>
<li>使用esxtop诊断CPU性能问题</li>
<li>高CPU就绪时间</li>
<li>ESXi主机的CPU使用率高</li>
<li>用户的CPU使用率高</li>
</ol>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><ol>
<li>内存虚拟化<ol>
<li>三层内存：主机物理内存、客户机物理内存、客户机虚拟内存</li>
</ol>
</li>
<li>内存管理<ol>
<li>向虚机分配物理内存前，管理程序将主机物理内存置零</li>
<li>客户机操作系统释放客户机物理内存时，管理程序不能从虚拟机回收主机物理内存</li>
</ol>
</li>
<li>硬件辅助MMU虚拟化<ol>
<li>AMD（RVI）和Intel（EPT）</li>
</ol>
</li>
</ol>
<h3 id="虚拟机的内存回收"><a href="#虚拟机的内存回收" class="headerlink" title="虚拟机的内存回收"></a>虚拟机的内存回收</h3><ol>
<li>透明页共享<ol>
<li>内存过量分配</li>
<li>使用透明页共享、内存膨胀、内存压缩和管理程序内存交换来实现过量分配</li>
<li>虚机使用相同版本的客户机操作系统，产生复制内存页</li>
<li>ESXI不会对大内存页使用透明页内存共享</li>
<li>建议开启大内存页</li>
</ol>
</li>
<li>内存膨胀<ol>
<li>需要VMTools驱动支持（vmmemctl）</li>
<li>解决主机物理内存压力，回收主机物理内存页<ol>
<li>配置内存膨胀</li>
<li>禁用内存膨胀</li>
</ol>
</li>
</ol>
</li>
<li>内存压缩<ol>
<li>如果可被压缩50%，则执行压缩</li>
<li>否则交换到磁盘</li>
<li>虚机压缩默认最大10%的压缩量</li>
</ol>
</li>
<li>管理程序内存交换<ol>
<li>.vswap 交换文件，与客户机物理内存相同</li>
<li>会产生严重的性能问题</li>
</ol>
</li>
<li>主机SSD缓存交换<ol>
<li>配置两块SSD RAID-1 作为主机缓存</li>
</ol>
</li>
<li>主机内存回收<ol>
<li>内存状态：High、Soft、Hard、Low</li>
</ol>
</li>
<li>空闲页回收<ol>
<li>空闲内存税</li>
</ol>
</li>
</ol>
<h3 id="管理虚拟机内存分配"><a href="#管理虚拟机内存分配" class="headerlink" title="管理虚拟机内存分配"></a>管理虚拟机内存分配</h3><ol>
<li>工作集大小</li>
<li>比例分配算法<ol>
<li>内存共享</li>
<li>内存保留</li>
<li>内存限制</li>
<li>内存和资源池</li>
</ol>
</li>
<li>改变虚拟机内存大小</li>
<li>内存开销</li>
<li>内存过量</li>
</ol>
<h3 id="解决内存性能问题"><a href="#解决内存性能问题" class="headerlink" title="解决内存性能问题"></a>解决内存性能问题</h3><ol>
<li>使用 esxtop 来诊断内存性能问题</li>
<li>高虚拟机已消耗内存</li>
<li>高内存膨胀</li>
<li>管理系统内存交换</li>
<li>客户机操作系统内存交换</li>
</ol>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="创建网络设计"><a href="#创建网络设计" class="headerlink" title="创建网络设计"></a>创建网络设计</h3><ol>
<li>物理网络的设计<ol>
<li>确保有足够的带宽</li>
<li>确保有足够的物理网络上行链路，以提供网络隔离和冗余</li>
<li>检查网络瓶颈，以确保流量的传输速度</li>
</ol>
</li>
<li>ESXi主机网卡需求<ol>
<li>TCP校验和卸载</li>
<li>TCP分段卸载（TSO）</li>
<li>大型接收卸载</li>
<li>支持巨型帧</li>
<li>支持网络队列(NetQueue)</li>
</ol>
</li>
</ol>
<h3 id="选择虚拟交换机"><a href="#选择虚拟交换机" class="headerlink" title="选择虚拟交换机"></a>选择虚拟交换机</h3><ol>
<li>标准vSwitch<ol>
<li>批量标准化部署，保持vSwitch配置的一致性</li>
<li>使用powercli脚本来保持一致性</li>
</ol>
</li>
<li>vSphere分布式交换机（dvSwtich）<ol>
<li>链路层发现协议(LLDP)</li>
<li>NetFlow协议</li>
<li>网络 I&#x2F;O 控制( NOIC)<ol>
<li>共享 定义共享来控制那些虚机获得网络流量优先级</li>
<li>限制 限制特定虚机可消耗网络资源的最大限度</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="选择主机硬件"><a href="#选择主机硬件" class="headerlink" title="选择主机硬件"></a>选择主机硬件</h3><ol>
<li>主机服务器类型<ol>
<li>刀片服务器</li>
<li>机架服务器</li>
</ol>
</li>
<li>网络适配器<ol>
<li>虚机和vmkernel流量分离</li>
<li>不同的vmkernel流量应当分离</li>
<li>容错流量应当分离</li>
<li>IP存储流量应当与其他类型流量隔离</li>
<li>应当为客户机iSCSI流量提供专用的上行链路</li>
</ol>
</li>
</ol>
<h3 id="性能设计"><a href="#性能设计" class="headerlink" title="性能设计"></a>性能设计</h3><ol>
<li>ESXi主机层性能<ol>
<li>vSwitch 负载均衡<ol>
<li>基于始发虚拟端口的路由策略</li>
<li>基于源MAC哈希的路由策略</li>
<li>基于IP哈希的路由策略</li>
<li>基于物理NIC负载的路由策略</li>
</ol>
</li>
<li>CPU使用率</li>
<li>网络 I&#x2F;O 控制</li>
<li>多网卡 vMotion</li>
<li>DirectPath I&#x2F;O 和 单根 I&#x2F;O 虚拟化</li>
</ol>
</li>
<li>虚拟机性能<ol>
<li>准虚拟化网卡驱动程序<ol>
<li>巨型帧</li>
<li>接收端缩放（RSS）</li>
<li>SplitRX模式</li>
</ol>
</li>
<li>协同定位网络依赖虚拟机</li>
<li>网络延迟敏感度</li>
</ol>
</li>
<li>解决网络问题<ol>
<li>虚拟机网络性能缓慢问题<ol>
<li>虚拟机到物理网卡的映射</li>
<li>使用高使用率的物理网卡</li>
<li>检测高使用率的CPU</li>
<li>检测配置不合理的物理网卡（双工）</li>
<li>流量整形的不合理配置</li>
<li>网络包丢失</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><h3 id="选择存储平台"><a href="#选择存储平台" class="headerlink" title="选择存储平台"></a>选择存储平台</h3><ol>
<li>SAN<ol>
<li>光纤信道(FC)</li>
<li>以太网光纤信道协议（FCoE）</li>
<li>iSCSI</li>
</ol>
</li>
<li>NAS</li>
<li>虚拟 SAN</li>
</ol>
<h3 id="设计物理存储"><a href="#设计物理存储" class="headerlink" title="设计物理存储"></a>设计物理存储</h3><ol>
<li>确定需求<ol>
<li>评估性能和容量</li>
<li>与你的软件供应商合作</li>
<li>与应用提供商合作</li>
<li>信息整合</li>
</ol>
</li>
<li>RAID 级别</li>
<li>闪存基础设施层</li>
<li>IP-SAN</li>
</ol>
<h3 id="设计vSphere存储"><a href="#设计vSphere存储" class="headerlink" title="设计vSphere存储"></a>设计vSphere存储</h3><ol>
<li>存储的重要性</li>
<li>VAAI</li>
<li>存储 I&#x2F;O 控制</li>
<li>存储分布式资源调度程序<ol>
<li>不把不同类型的数据存储放在同一个数据存储集群中</li>
<li>尽量使用大小相近的数据存储作为数据存储集群的构成</li>
<li>为每种类型创建单独的数据存储集群</li>
<li>使用相同物理磁盘支持的数据存储将不会使存储DRA平衡I&#x2F;O负载</li>
</ol>
</li>
<li>配置驱动存储<ol>
<li>存储感知的vSphere API</li>
<li>用户定义的存储性能</li>
<li>虚拟机存储策略</li>
</ol>
</li>
<li>数据存储大小</li>
<li>vFlash 读缓存</li>
<li>虚拟SAN<ol>
<li>分布式RAID</li>
<li>固态硬盘</li>
<li>存储策略<ol>
<li>容许的失效数</li>
<li>每个对象的磁盘条带数量</li>
<li>闪存读缓存预留</li>
<li>对象空间预留</li>
</ol>
</li>
<li>为性能设计vSAN<ol>
<li>10GB网络</li>
<li>专用NIC</li>
<li>高速SSD</li>
</ol>
</li>
</ol>
</li>
<li>IP存储巨型帧</li>
</ol>
<h3 id="优化虚拟机性能"><a href="#优化虚拟机性能" class="headerlink" title="优化虚拟机性能"></a>优化虚拟机性能</h3><ol>
<li>裸映射与VMDK文件</li>
<li>虚拟磁盘类型</li>
<li>虚拟SCSI适配器</li>
<li>客户操作系统磁盘对齐</li>
</ol>
<h3 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h3><ol>
<li>存储延迟<ol>
<li>理解和观察存储延迟</li>
<li>解决方法<ol>
<li>后端存储过载</li>
<li>存储配置错误</li>
<li>带宽饱和</li>
<li>其他潜在因素</li>
</ol>
</li>
</ol>
</li>
<li>错误配置应用程序的存储</li>
<li>存储队列<ol>
<li>队列监控管理</li>
<li>存储I&#x2F;O 控制的使用</li>
</ol>
</li>
<li>端对端网络</li>
</ol>
<hr>
<h2 id="性能设计-1"><a href="#性能设计-1" class="headerlink" title="性能设计"></a>性能设计</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>确定参数</li>
<li>构建应用程序</li>
<li>评估物理性能</li>
<li>从默认值开始</li>
</ol>
<h3 id="建立基准"><a href="#建立基准" class="headerlink" title="建立基准"></a>建立基准</h3><ol>
<li>CPU基础设施基准</li>
<li>内存</li>
<li>网络</li>
<li>存储</li>
</ol>
<h2 id="建立你的工具箱"><a href="#建立你的工具箱" class="headerlink" title="建立你的工具箱"></a>建立你的工具箱</h2><h3 id="容量规划工具"><a href="#容量规划工具" class="headerlink" title="容量规划工具"></a>容量规划工具</h3><ol>
<li>使用容量规划工具<ol>
<li>VMware容量规划器</li>
<li>微软评估和规划工具包</li>
</ol>
</li>
<li>运行容量管理</li>
</ol>
<h3 id="性能分析工具"><a href="#性能分析工具" class="headerlink" title="性能分析工具"></a>性能分析工具</h3><ol>
<li>esxtop</li>
<li>vscsiStats</li>
</ol>
<h3 id="性能基准测试工具"><a href="#性能基准测试工具" class="headerlink" title="性能基准测试工具"></a>性能基准测试工具</h3><ol>
<li>VMmark</li>
<li>vBenchmark</li>
</ol>
<h3 id="性能仿真工具"><a href="#性能仿真工具" class="headerlink" title="性能仿真工具"></a>性能仿真工具</h3><ol>
<li>CPU&#x2F;内存</li>
<li>存储</li>
<li>网络</li>
</ol>
<h2 id="构建测试LAB"><a href="#构建测试LAB" class="headerlink" title="构建测试LAB"></a>构建测试LAB</h2><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><ol>
<li>测试和复现生产环境的实施以及故障</li>
<li>新的应用和补丁的测试</li>
<li>新硬件的基准测试</li>
<li>学习</li>
</ol>
<h3 id="成功策略"><a href="#成功策略" class="headerlink" title="成功策略"></a>成功策略</h3><ol>
<li>建立真实的环境</li>
<li>建立实验室</li>
<li>使用合适的测量工具</li>
</ol>
<h3 id="建立Lab"><a href="#建立Lab" class="headerlink" title="建立Lab"></a>建立Lab</h3><ol>
<li>测试目标</li>
<li>实验小结</li>
<li>供应实验室</li>
<li>定义工作负载和配置</li>
<li>实验室的事后分析</li>
</ol>
]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>vSphere</tag>
        <tag>performance</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 8转换为CentOS Stream 8</title>
    <url>/2022/03/11/centos8-covert-2-stream/</url>
    <content><![CDATA[<p>由于CentOS 8的源已经不可用，所以需要将原有 CentOS 8 升级为CentOS Steam 8：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf <span class="token parameter variable">--disablerepo</span> <span class="token string">'*'</span> <span class="token parameter variable">--enablerepo</span> extras swap centos-linux-repos centos-stream-repos
dnf distro-sync<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>system</tag>
      </tags>
  </entry>
  <entry>
    <title>SSSD服务主机脱域的处理</title>
    <url>/2022/03/01/sssd-realm/</url>
    <content><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>近期，DBA报错多台CentOS7的主机无法使用域账号登陆，出现“Permission denied”的错误。确认域账号密码正确无误，使用root可登录，域账号就是无法登陆。由于CentOS7.3以后使用SSSD替换了winbind服务，所以尝试重启SSSD服务，但故障依旧。SSSD服务可以完成重启，但重启之后提示认证失败：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sssd<span class="token punctuation">[</span>krb5_child<span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span>: Preauthentication failed
Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sssd<span class="token punctuation">[</span>krb5_child<span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span>: Preauthentication failed
Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sssd<span class="token punctuation">[</span>krb5_child<span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">40570</span><span class="token punctuation">]</span>: Preauthentication failed
Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sshd<span class="token punctuation">[</span><span class="token number">40474</span><span class="token punctuation">]</span>: pam_sss<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: authentication failure<span class="token punctuation">;</span> <span class="token assign-left variable">logname</span><span class="token operator">=</span> <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">euid</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">tty</span><span class="token operator">=</span>ssh <span class="token assign-left variable">ruser</span><span class="token operator">=</span> <span class="token assign-left variable">rhost</span><span class="token operator">=</span>test.targetmachine.com user
Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sshd<span class="token punctuation">[</span><span class="token number">40474</span><span class="token punctuation">]</span>: pam_sss<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: received <span class="token keyword">for</span> user sujx: <span class="token number">7</span> <span class="token punctuation">(</span>Authentication failure<span class="token punctuation">)</span>
Mar <span class="token number">21</span> <span class="token number">16</span>:06:02 test.targetmachine.com sshd<span class="token punctuation">[</span><span class="token number">40474</span><span class="token punctuation">]</span>: Failed password <span class="token keyword">for</span> sujx from <span class="token number">172.17</span>.0.159 port <span class="token number">53160</span> ssh2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后，检查sssd日志，发现是krb5.ketab文件错误。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sshd<span class="token punctuation">[</span><span class="token number">31442</span><span class="token punctuation">]</span>: pam_krb5<span class="token punctuation">[</span><span class="token number">31442</span><span class="token punctuation">]</span>: error reading keytab <span class="token string">'FILE: /etc/krb5.keytab'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="自动续订Kerberos主机密钥"><a href="#自动续订Kerberos主机密钥" class="headerlink" title="自动续订Kerberos主机密钥"></a>自动续订Kerberos主机密钥</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> adcli
<span class="token comment"># 配置/etc/sssd/sssd.conf</span>
<span class="token comment"># 每30天自动续订kerberos密钥</span>
ad_maximum_machine_account_password_age <span class="token operator">=</span> <span class="token number">30</span>
<span class="token comment"># 修改完成之后重启服务</span>
systemctl restart sssd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重新加域"><a href="#重新加域" class="headerlink" title="重新加域"></a>重新加域</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">realm leave targetmachine.com
realm <span class="token function">join</span> targetmachine.com <span class="token parameter variable">-U</span> sujx
<span class="token comment"># 输入拥有加域权限的域账号密码</span>
systemctl restart sssd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重新登陆"><a href="#重新登陆" class="headerlink" title="重新登陆"></a>重新登陆</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用域账号重新登陆主机</span>
<span class="token comment"># 使用klist查看kerberos密钥生成时间</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> krb5-workstation
klist <span class="token parameter variable">-kt</span> /etc/krb5.keytab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 发现域</span>
<span class="token punctuation">[</span>root@test ~<span class="token punctuation">]</span><span class="token comment"># realm discover targetmachine.com</span>
targetmachine.com
  type: kerberos
  realm-name: targetmachine.com
  domain-name: targetmachine.com
  configured: kerberos-member
  server-software: active-directory
  client-software: sssd
  required-package: oddjob
  required-package: oddjob-mkhomedir
  required-package: sssd
  required-package: adcli
  required-package: samba-common-tools
  login-formats: %U
  login-policy: allow-realm-logins
targetmachine.com
  type: kerberos
  realm-name: targetmachine.com
  domain-name: targetmachine.com
  configured: no

<span class="token comment"># 列出当前域信息</span>
<span class="token punctuation">[</span>root@test ~<span class="token punctuation">]</span><span class="token comment"># realm list --all</span>
targetmachine.com
  type: kerberos
  realm-name: targetmachine.com
  domain-name: targetmachine.com
  configured: kerberos-member
  server-software: active-directory
  client-software: sssd
  required-package: oddjob
  required-package: oddjob-mkhomedir
  required-package: sssd
  required-package: adcli
  required-package: samba-common-tools
  login-formats: %U
  login-policy: allow-realm-logins
  
  <span class="token comment"># 加入域</span>
  realm <span class="token function">join</span> targetmachine.com <span class="token parameter variable">-U</span> admin
  
  <span class="token comment"># 退出域</span>
  realm leave targetmachine.com  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2>]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>ActiveDirectory</tag>
        <tag>sssd</tag>
        <tag>realm</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Server上开启SSH服务</title>
    <url>/2022/02/28/windows-ssh-server/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于微信小工具的SDK是部署到Windows Server上的，在利用jenkins进行DevOPS的时候，就难免涉及到要将前端代码发送到Linux的生成服务器上去。那么问题就来了……</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ol>
<li>操作系统：Windows Server 2012R2 x64（2019以前都可以照此办理）</li>
<li>服务端：  [OpenSSH For Windows]: <a href="https://github.com/PowerShell/Win32-OpenSSH/releases">https://github.com/PowerShell/Win32-OpenSSH/releases</a></li>
<li>工具：   [Rsync客户端]: <a href="https://www.itefix.net/cwrsync">https://www.itefix.net/cwrsync</a></li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 下载OpenSSH客户端并解压至c:\windows\system32\，完整路径为c:\windows\system32\openssh</span>
<span class="token comment"># 使用管理员权限打开powershell客户端</span>
<span class="token comment"># 进入相应目录</span>

<span class="token comment"># 安装SSHD服务</span>
powershell<span class="token punctuation">.</span>exe <span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>File <span class="token function">install-sshd</span><span class="token punctuation">.</span>ps1

<span class="token comment"># 启动sshd服务</span>
<span class="token function">start-service</span> sshd

<span class="token comment"># 设置自启动</span>
<span class="token function">Set-Service</span> <span class="token operator">-</span>Name sshd <span class="token operator">-</span>StartupType <span class="token string">'Automatic'</span>

<span class="token comment"># 添加防护墙规则</span>
<span class="token function">New-NetFirewallRule</span> <span class="token operator">-</span>Name sshd <span class="token operator">-</span>DisplayName <span class="token string">'OpenSSH SSH Server'</span> <span class="token operator">-</span>Enabled True <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>Protocol TCP <span class="token operator">-</span>Action Allow <span class="token operator">-</span>LocalPort 22 <span class="token operator">-</span>Program <span class="token string">"C:\Windows\System32\OpenSSH\sshd.exe"</span>

<span class="token comment"># 修改默认SHELL为Powershell（可选）</span>
<span class="token function">New-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SOFTWARE\OpenSSH"</span> <span class="token operator">-</span>Name DefaultShell <span class="token operator">-</span>Value <span class="token string">"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"</span> <span class="token operator">-</span>PropertyType String <span class="token operator">-</span>Force

<span class="token comment"># 安装rsync</span>
<span class="token comment"># 解压cwrsync_6.2.4_x64_free.zip，将bin目录下除ssh、ssh-agent、ssh-keygen这几个文件外的所有文件复制到c:\windows\system32\openssh目录下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>ps：在Jenkins使用Rsync时,需要加上全路径。</p>
]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>windows</tag>
        <tag>Service</tag>
      </tags>
  </entry>
  <entry>
    <title>一次Winbind登录故障记录</title>
    <url>/2022/02/15/troubleshooting-winbind/</url>
    <content><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>现有十多台已加入Windows Server活动目录的CentOS6主机，无法使用域账号登录，只能使用本机系统登录。</p>
<p>该集群主机运行服务正常，网络服务正常。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol>
<li>长时间无域账号登录导致的脱域；</li>
<li>Samba版本升级引起的配置文件错误（丢失或配置项变更）。</li>
</ol>
<h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><ol>
<li><p>使用root账号登录重新加域</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 清空缓存</span>
net cache flush
<span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/lib/samba/*.tdb
<span class="token comment"># 重新加域</span>
net ads <span class="token function">join</span> <span class="token parameter variable">-U</span> administrator@DOMAIN.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>加域之后无法登录，id username 无法拉取最近用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># AD连接测试失败</span>
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># wbinfo -t</span>
checking the trust secret <span class="token keyword">for</span> domain EXAMPLE via RPC calls failed
wbcCheckTrustCredentials<span class="token punctuation">(</span>EXAMPLE<span class="token punctuation">)</span>: error code was NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND <span class="token punctuation">(</span>0xc0000233<span class="token punctuation">)</span>
failed to call wbcCheckTrustCredentials: WBC_ERR_AUTH_ERROR
Could not check secret
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># wbinfo -P</span>
checking the NETLOGON <span class="token keyword">for</span> domain<span class="token punctuation">[</span>EXAMPLE<span class="token punctuation">]</span> <span class="token function">dc</span> connection to <span class="token string">""</span> failed
failed to call wbcPingDc: WBC_ERR_DOMAIN_NOT_FOUN
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># wbinfo --verbose -i DOMAIN+username</span>
failed to call wbcGetpwnam: WBC_ERR_DOMAIN_NOT_FOUND
Could not get info <span class="token keyword">for</span> user DOMAIN+username<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>修改配置文件，同步域账号</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># There are BUILTIN domains on an AD server and the default "*" 'tdb' backend and range are needed to map the users not included in the other mapped domains. Not having this backend still causes a mapping error even if the user being mapped is not included in that range.</span>

<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/samba/smb.conf</span>
……
idmap config * <span class="token builtin class-name">:</span> backend <span class="token operator">=</span> tdb
idmap config DOMAIN:default <span class="token operator">=</span> <span class="token function">yes</span>
……
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># service winbind restart</span>

<span class="token comment"># 配置完成之后测试</span>
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># wbinfo -t</span>
checking the trust secret <span class="token keyword">for</span> domain FIRSTSHARE via RPC calls succeeded
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># wbinfo -p</span>
Ping to winbindd succeeded<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考：</p>
<p>[Ticket]: <a href="https://access.redhat.com/solutions/338723">https://access.redhat.com/solutions/338723</a>	“wbinfo -i search returns an error with a two domain Samba configuration”</p>
</li>
<li><p>连接之后断开</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 经检查 /etc/log/secure 出现如下日志,可以排除sshd.conf配置项目，并将怀疑目标集中到pam模块</span>
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_unix<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: authentication failure<span class="token punctuation">;</span> <span class="token assign-left variable">logname</span><span class="token operator">=</span> <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">euid</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">tty</span><span class="token operator">=</span>ssh <span class="token assign-left variable">ruser</span><span class="token operator">=</span> <span class="token assign-left variable">rhost</span><span class="token operator">=</span><span class="token number">172.28</span>.0.41  <span class="token assign-left variable">user</span><span class="token operator">=</span>sujx
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_krb5<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: authentication fails <span class="token keyword">for</span> <span class="token string">'sujx'</span> <span class="token punctuation">(</span>sujx@domain.com<span class="token punctuation">)</span>: Authentication failure <span class="token punctuation">(</span>KDC reply did not match expectations<span class="token punctuation">)</span>
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_winbind<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: getting password <span class="token punctuation">(</span>0x00000210<span class="token punctuation">)</span>
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_winbind<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: pam_get_item returned a password
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_winbind<span class="token punctuation">(</span>sshd:auth<span class="token punctuation">)</span>: user <span class="token string">'sujx'</span> granted access
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_krb5<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: account checks fail <span class="token keyword">for</span> <span class="token string">'sujx'</span><span class="token builtin class-name">:</span> unknown reason <span class="token parameter variable">-1765328237</span> <span class="token punctuation">(</span>KDC reply did not match expectations<span class="token punctuation">)</span>
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: pam_winbind<span class="token punctuation">(</span>sshd:account<span class="token punctuation">)</span>: user <span class="token string">'sujx'</span> granted access
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46731</span><span class="token punctuation">]</span>: fatal: Access denied <span class="token keyword">for</span> user sujx by PAM account configuration
Feb <span class="token number">15</span> <span class="token number">18</span>:09:48 vlnx101025 sshd<span class="token punctuation">[</span><span class="token number">46730</span><span class="token punctuation">]</span>: Failed password <span class="token keyword">for</span> sujx from <span class="token number">172.28</span>.0.41 port <span class="token number">9366</span> ssh2
<span class="token comment"># 检查 /etc/pam.d/system-auth 无误</span>
<span class="token comment"># 检查 /etc/security/pam_winbind.conf 无误</span>
<span class="token comment"># 检查 /etc/sysconfig/authconfig 无误</span>
<span class="token comment"># 重新查看日志，从“KDC reply did not match expectations”入手</span>

<span class="token comment"># 错误重现</span>
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># kinit sujx</span>
KDC reply did not match expectations
<span class="token comment"># 可正常登录</span>
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># kinit sujx@DOMAIN.COM</span>
<span class="token punctuation">[</span>root@vlnx101025 ~<span class="token punctuation">]</span><span class="token comment"># klist</span>
Ticket cache: FILE:/tmp/krb5cc_0
Default principal: sujx@DOMAIN.COM
<span class="token comment"># 重新检查SAMBA配置文件</span>
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/samba/smb.conf</span>
……
<span class="token comment"># 将realm选项由小写改为大写</span>
<span class="token comment"># realm = domain.com</span>
realm <span class="token operator">=</span> DOMAIN.COM
……
<span class="token punctuation">[</span>root@server ~<span class="token punctuation">]</span><span class="token comment"># service winbind restart</span>

<span class="token comment"># 然后可正常登录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2><p>   CentOS7+SSSD比CentOS6+Winbind稳定多了,这么多机器极少出现上述无法登录的情况。</p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Samba</tag>
        <tag>Winbind</tag>
        <tag>AD</tag>
      </tags>
  </entry>
  <entry>
    <title>安装和使用OWASP·ZAP</title>
    <url>/2022/02/08/owasp-zap-install/</url>
    <content><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p><a href="http://www.owasp.org.cn/">OWASP</a>是一个开源的非盈利NGO，是Web安全标准的制定者和推广者,在全世界有250个分部和近7万会员。ZAP是其出品的一个免费、开源的WEB安全旗舰产品，全称是OWASP Zed Attack Proxy，是一款web application 集成渗透测试和漏洞工具。目前，我司的WEB产品交付安全检测就是由它来负责和验证。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="靶机"><a href="#靶机" class="headerlink" title="靶机"></a>靶机</h3><p>我们使用wordpress来作为测试的目标：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># CentOS Steam 8上Wordpress的部署</span>
<span class="token comment"># 在192.168.79.16上建立WordPress站点作为靶机，WordPress的版本为5.9，PHP版本为7.2.4</span>
dnf update <span class="token parameter variable">-y</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql mysql-server 
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd <span class="token function">tar</span> <span class="token function">curl</span> 
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> php php-fpm php-mysqlnd php-json php-dom php-gd php-mbstring php-zip php-intl
<span class="token comment"># 开启防火墙例外</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>https,http<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment">#设定数据库使用utf8字符编码</span>
<span class="token function">cat</span> <span class="token operator">></span>/etc/my.cnf.d/charset.cnf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[mysqld]
character-set-server = utf8mb4

[client]
default-character-set = utf8mb4
EOF</span>
<span class="token comment"># 启动数据库</span>
systemctl <span class="token builtin class-name">enable</span> mysqld <span class="token parameter variable">--now</span>
<span class="token comment"># 配置数据库，此处略过配置数据库密码</span>
mysql<span class="token operator">></span> create database wordpress<span class="token punctuation">;</span>
mysql<span class="token operator">></span> create user ocsadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'webadmin'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on webadmin.* to webadmin@<span class="token string">'localhost'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
<span class="token comment">#配置PHP，设定时区和压缩</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@;date.timezone =@date.timezone = Asia/\Shanghai@g'</span> /etc/php.ini
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\zlib.output_compression = Off\zlib.output_compression = On\g'</span> /etc/php.ini
<span class="token comment">#下载WordPress源程序</span>
<span class="token function">wget</span> https://cn.wordpress.org/latest-zh_CN.tar.gz
<span class="token function">tar</span> zxvf latest-zh_CN.tar.gz
<span class="token function">mv</span> ./wordpress/* /var/www/html/
<span class="token function">chown</span> <span class="token parameter variable">-R</span> apache:apache /var/www/html/
<span class="token comment"># 修改/etc/httpd/conf/httpd.conf下</span>
<span class="token operator">&lt;</span>Directory <span class="token string">"/var/www/html"</span><span class="token operator">></span>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
<span class="token operator">&lt;</span>/Directory<span class="token operator">></span>
<span class="token comment"># 启动服务</span>
systemctl <span class="token builtin class-name">enable</span> php-fpm httpd <span class="token parameter variable">--now</span>
<span class="token comment"># 略过WordPress安装过程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="ZAP"><a href="#ZAP" class="headerlink" title="ZAP"></a>ZAP</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用Fedora 35作为操作系统</span>
<span class="token comment"># ZAP支持Windows、Linux、MacOS多种操作系统以并提供了容器镜像</span>
<span class="token comment"># ZAP版本为 2.11.1</span>
<span class="token function">wget</span> https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2_11_1_unix.sh
<span class="token function">sudo</span> ./ZAP_2_11_1_unix.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><img src="https://cdn.sujx.net/zap-install-000.png"><br><img src="https://cdn.sujx.net/zap-install-001.png"><br><img src="https://cdn.sujx.net/zap-install-002.png"><br><img src="https://cdn.sujx.net/zap-install-003.png"><br><img src="https://cdn.sujx.net/zap-install-004.png"><br><img src="https://cdn.sujx.net/zap-install-005.png"><br><img src="https://cdn.sujx.net/zap-install-006.png"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p><img src="https://cdn.sujx.net/zap-use-000.PNG"></p>
<h3 id="初始界面"><a href="#初始界面" class="headerlink" title="初始界面"></a>初始界面</h3><p><img src="https://cdn.sujx.net/zap-use-001.PNG"></p>
<h3 id="设定靶机"><a href="#设定靶机" class="headerlink" title="设定靶机"></a>设定靶机</h3><p><img src="https://cdn.sujx.net/zap-use-002.PNG"></p>
<h3 id="开始扫描"><a href="#开始扫描" class="headerlink" title="开始扫描"></a>开始扫描</h3><p><img src="https://cdn.sujx.net/zap-use-003.PNG"></p>
<h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><h3 id="输出报告"><a href="#输出报告" class="headerlink" title="输出报告"></a>输出报告</h3><p>OWASP·ZAP支持将扫描结果输出为HTML格式或者PDF格式的报告文件，输出地址为:</p>
<p> Report -&gt; Generate Report -&gt; Template -&gt; Traditional PDF Report -&gt; Generate Report<br><img src="https://cdn.sujx.net/zap-use-004.PNG"></p>
<h3 id="报告示例"><a href="#报告示例" class="headerlink" title="报告示例"></a>报告示例</h3><p><img src="https://cdn.sujx.net/zap-use-005.PNG"></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="支持插件"><a href="#支持插件" class="headerlink" title="支持插件"></a>支持插件</h3><p>ZAP支持多种插件，并可以在程序内部通过“市场”获取官方插件。<br><img src="https://cdn.sujx.net/zap-use-006.PNG"></p>
<h3 id="支持无头"><a href="#支持无头" class="headerlink" title="支持无头"></a>支持无头</h3><p>ZAP是一个Desktop GUI的CS程序，但它也支持使用webswing来提供BS的方式来显示。</p>
<p><a href="https://www.zaproxy.org/docs/docker/about/">Docker部署ZAP</a><br><a href="https://www.zaproxy.org/blog/2021-02-03-run-zap-without-java-using-docker-and-webswing/">利用Docker和WebSwing来运行ZAP</a></p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>owasp</tag>
        <tag>zap</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>《客户关系管理》笔记</title>
    <url>/2022/02/06/what-is-crm/</url>
    <content><![CDATA[<p><img src="https://cdn.sujx.net/crm-info.png" alt="CRM"></p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="定义和内涵"><a href="#定义和内涵" class="headerlink" title="定义和内涵"></a>定义和内涵</h3><p>客户关系管理的理论基础来源于西方的市场营销理论。随着企业战略中心从“以产品为核心”向”以客户为中心“转变，客户已经成为企业最重要的资源。客户关系管理的出现把对关系的管理从营销领域扩大到整个企业范围，从一个智能的战略演变成了企业的整体战略。</p>
<ol>
<li>客户关系管理是现代管理理念、管理模式和信息技术三位一体的整合，其核心思想是以客户为中心，将企业的客户视为最重要的企业资产。</li>
<li>客户关系管理的目的是实现顾客价值最大化和企业收益最大化之间的平衡，即客户与企业的双赢；</li>
<li>客户关系管理是企业战略的一种，需要企业全方位的资源整合和支持；</li>
<li>客户关系管理离不开信息技术的支持；</li>
</ol>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ol>
<li>互动管理</li>
<li>营运管理<ol>
<li>营销管理</li>
<li>销售管理</li>
<li>客户服务与支持</li>
</ol>
</li>
<li>商务智能（BI）</li>
<li>系统整合（ERP、SCM）</li>
</ol>
<h3 id="潜在收益"><a href="#潜在收益" class="headerlink" title="潜在收益"></a>潜在收益</h3><ol>
<li>建立客户忠诚；</li>
<li>增加长期收益；</li>
<li>助推企业实现“以客户为中心”的管理策略；</li>
<li>提升企业的核心竞争力<ol>
<li>提高企业整体营销、销售和服务活动的有效性的同时，提高企业对其业务活动的管理水平；</li>
<li>对打造企业核心竞争力的战略决策能力和总体规划能力起到保障和促进作用；</li>
<li>通过技术上的先进性来保证企业核心竞争力的持续提高</li>
</ol>
</li>
</ol>
<h3 id="潜在成本"><a href="#潜在成本" class="headerlink" title="潜在成本"></a>潜在成本</h3><ol>
<li>信息基础设施的投入；</li>
<li>处理变更的成本</li>
</ol>
<h2 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h2><h3 id="顾客价值"><a href="#顾客价值" class="headerlink" title="顾客价值"></a>顾客价值</h3><ol>
<li>定义: 顾客对那些产品的属性、属性表现以及从使用中引起的有利于或阻止顾客在使用状态下取得他们的目的和目标的结果的偏好及评估（核心价值+附加价值）</li>
<li>特征<ol>
<li>主观性</li>
<li>情景依赖性</li>
<li>层次性</li>
<li>动态性</li>
<li>相对性</li>
</ol>
</li>
<li>驱动因素：企业通过价值活动对企业进行顾客价值创造和传递产生影响的因素<ol>
<li>技术：产品创新、服务、物流和技术支持</li>
<li>品牌：品牌意识、品牌认同和品牌忠诚</li>
<li>产品：价格、质量和便利性</li>
<li>知识：客户和企业相互促进消费的经验积累</li>
<li>关系：信任、情感氛围、情感联络和转移成本。</li>
</ol>
</li>
</ol>
<h3 id="顾客满意"><a href="#顾客满意" class="headerlink" title="顾客满意"></a>顾客满意</h3><ol>
<li>定义：指一个人通过对一种产品的可感知效果与他的期望值比较后，所形成的愉悦或失望的感觉状态</li>
<li>抽象：<ol>
<li>是主观的情感反应</li>
<li>基于期望的相对结果</li>
<li>具有个体性</li>
</ol>
</li>
<li>具体衡量<ol>
<li>投诉与建议系统</li>
<li>顾客满意度调查：随机抽样</li>
<li>佯装的购物者：神秘顾客</li>
<li>分析流失的顾客</li>
</ol>
</li>
</ol>
<h3 id="顾客忠诚"><a href="#顾客忠诚" class="headerlink" title="顾客忠诚"></a>顾客忠诚</h3><ol>
<li>定义：顾客在对产品或服务的满意度不断提高的基础上，重复购买该产品或服务，以及向他人热情推荐该产品或服务的行为表现。</li>
<li>特征：<ol>
<li>顾客对企业有明显感情倾向；</li>
<li>顾客在购买行为上有实际的重复反应；</li>
<li>顾客在长期内有偏好；</li>
<li>顾客对新产品或服务几乎没有顾虑地首先购买；</li>
<li>顾客能承受企业有限的提价，并能够抵制竞争者的降价或倾销；</li>
</ol>
</li>
<li>意义：<ol>
<li>更多的利润；</li>
<li>可以带来新的顾客；</li>
<li>提供意见和建议，重提为企业改进和提高管理水平、服务质量、设计和开发新产品或服务提供有益的参考；</li>
<li>更加容易处理不满意顾客的投诉和抱怨；</li>
<li>忠诚顾客群体构成企业坚实的市场基础</li>
</ol>
</li>
<li>衡量：<ol>
<li>复购率；</li>
<li>产品或服务购买的种类、数量与购买的百分比；</li>
<li>购买时间；</li>
<li>价格敏感度；</li>
<li>对竞品的态度；</li>
<li>对产品质量事故的承受能力；</li>
</ol>
</li>
<li>顾客价值、顾客满意与顾客忠诚的关系</li>
</ol>
<h3 id="关系营销"><a href="#关系营销" class="headerlink" title="关系营销"></a>关系营销</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ol>
<li>实质：致力于与顾客建立和维持一种良好的关系，以谋得长期的利益；</li>
<li>以系统论为基本思想，核心是企业建立和发展与顾客、供应商、分销商、政府机构及其他公众的良好关系</li>
</ol>
<h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><ol>
<li>信息沟通的双向性；</li>
<li>战略过程的协同性；</li>
<li>营销活动的互利性；</li>
<li>信息反馈的及时性；</li>
<li>与交易营销的区别</li>
</ol>
<h4 id="层次"><a href="#层次" class="headerlink" title="层次"></a>层次</h4><ol>
<li>一级关系营销：频率营销或保持性营销(短期联系)；</li>
<li>二级关系营销：社会性联系（在财务性关系基础上寻求与顾客建立社会性联系）；</li>
<li>三级关系营销：关系营销（结构性、系统性的联系）</li>
</ol>
<h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><ol>
<li>基本关系营销；</li>
<li>被动式关系营销；</li>
<li>负责式关系营销；</li>
<li>主动式关系营销；</li>
<li>伙伴式关系营销；</li>
</ol>
<h4 id="价值"><a href="#价值" class="headerlink" title="价值"></a>价值</h4><ol>
<li>关系是减少不确定性的手段；</li>
<li>促进销售、降低交易成本；</li>
<li>利用外部资源实现效率；</li>
<li>可使企业获得经济价值之外的社会价值；</li>
</ol>
<h3 id="数据库营销"><a href="#数据库营销" class="headerlink" title="数据库营销"></a>数据库营销</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><ol>
<li>产生（建立在直复营销和关系营销基础之上）</li>
<li>发展历程</li>
<li>定义：使用营销数据，建立统计模型，通过对客户个体层次信息数据深入观察分析从而展开有效的营销；</li>
</ol>
<h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ol>
<li>帮助企业准确找到目标顾客；</li>
<li>有利于发现新的市场机会和提供新产品、新服务；</li>
<li>有助于于顾客建立长期、良好的关系</li>
</ol>
<h2 id="CRM系统"><a href="#CRM系统" class="headerlink" title="CRM系统"></a>CRM系统</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h4 id="一般模型"><a href="#一般模型" class="headerlink" title="一般模型"></a>一般模型</h4><h4 id="工作目标"><a href="#工作目标" class="headerlink" title="工作目标"></a>工作目标</h4><ol>
<li>提高流程的自动化水平；</li>
<li>提高企业的数据分析水平</li>
</ol>
<h4 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h4><ol>
<li>客户接触中心子系统（协作性CRM）</li>
<li>业务操作自动化子系统（操作性CRM）</li>
<li>数据分析管理子系统（分析型CRM）</li>
</ol>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><ol>
<li>综合性</li>
<li>集成性</li>
<li>智能化</li>
<li>高新技术特征</li>
</ol>
<h3 id="业务功能模块"><a href="#业务功能模块" class="headerlink" title="业务功能模块"></a>业务功能模块</h3><h4 id="销售自动化（SFA）"><a href="#销售自动化（SFA）" class="headerlink" title="销售自动化（SFA）"></a>销售自动化（SFA）</h4><ol>
<li>SFA的功能结构：销售机会管理、活动管理、客户管理、联络人管理等；</li>
<li>销售机会管理是销售自动化最基本的功能和核心部件，整个SFA围绕销售机会展开；</li>
<li>销售自动化的主要功能包括<ol>
<li>销售机会管理（销售机会的挖掘、确认、谈判、机会报价、结束销售机会、机会分析）；</li>
<li>订单管理（CRM和ERP集成的桥梁）；</li>
<li>合同管理；</li>
<li>活动管理；</li>
<li>客户管理（CRM的基础）；</li>
<li>产品管理（基础模块）；<ol>
<li>产品信息；</li>
<li>产品构造；</li>
<li>产品定价；</li>
<li>产品交易记录。</li>
</ol>
</li>
<li>销售预测和分析工具；</li>
</ol>
</li>
</ol>
<h4 id="营销自动化（MA）"><a href="#营销自动化（MA）" class="headerlink" title="营销自动化（MA）"></a>营销自动化（MA）</h4><ol>
<li>功能结构：营销方案管理、市场预算管理、宣传资料管理、促销管理、媒体管理、渠道管理、营销方案执行管理、营销方案衡量指标管理</li>
<li>主要功能：<ol>
<li>利用已有营销信息和知识，控制市场营销方案循环，使得营销投资回报最大化；</li>
<li>增强市场营销部门通过多个渠道进行多个市场营销活动的能力，并优化营销流程；</li>
<li>实现与客户一对一个性化沟通，从而提高产品或服务渗透率以及客户忠诚度</li>
</ol>
</li>
</ol>
<h4 id="客户服务自动化（CSSA）"><a href="#客户服务自动化（CSSA）" class="headerlink" title="客户服务自动化（CSSA）"></a>客户服务自动化（CSSA）</h4><ol>
<li>功能结构</li>
<li>主要功能<ol>
<li>服务条款管理</li>
<li>服务要求管理</li>
<li>服务订单管理</li>
<li>产品维修记录</li>
<li>问题解决方案</li>
<li>智能化范文管理</li>
<li>客户投诉管理</li>
</ol>
</li>
</ol>
<h3 id="发展与融合"><a href="#发展与融合" class="headerlink" title="发展与融合"></a>发展与融合</h3><h4 id="企业资源计划-ERP"><a href="#企业资源计划-ERP" class="headerlink" title="企业资源计划(ERP)"></a>企业资源计划(ERP)</h4><ol>
<li>概念：<ol>
<li>企业资源计划（ERP）是建立在IT技术之上的，以系统化的管理思想为企业决策层及员工提供决策运行手段的管理平台；</li>
<li>主要宗旨是对企业所拥有的人财物信息时间空间等资源进行综合平衡和优化管理，协调各部门围绕市场导向开展业务活动、提高核心竞争力；</li>
</ol>
</li>
<li>历程：<ol>
<li>物料需求计划阶段（MRP）；</li>
<li>闭环MRP生产计划与控制系统阶段；</li>
<li>制造资源计划阶段（MRPII）；</li>
<li>企业资源计划阶段（ERP）</li>
</ol>
</li>
<li>功能模块：<ol>
<li>生产控制管理模块；</li>
<li>物流管理模块；</li>
<li>财务管理模块；</li>
<li>人力资源管理模块；</li>
</ol>
</li>
<li>ERP与CRM的整合：<ol>
<li>客户挖掘；</li>
<li>客户管理；</li>
<li>产品管理；</li>
<li>营销管理；</li>
<li>工作流管理；</li>
<li>决策支持；</li>
</ol>
</li>
</ol>
<h4 id="供应链与供应链管理（SCM）"><a href="#供应链与供应链管理（SCM）" class="headerlink" title="供应链与供应链管理（SCM）"></a>供应链与供应链管理（SCM）</h4><ol>
<li>概念：<ol>
<li>供应链是围绕核心企业，通过对信息流、物流、资金流的控制，从原材料、制成中间产品到最终产品，最后由销售网络把产品送到客户手中，将供货商、制造者、零售商、最终客户连成一个整体的功能性网链结构模式；</li>
<li>供应链管理（SCM）是通过前馈的信息流和反馈的物料流以及信息流，将供应商、制造商、分销商、零售商直到最终用户连接成一个整体的现代管理思想和方法，是企业信息化建设的高级阶段；</li>
</ol>
</li>
<li>内容（注重总的物流成本与用户服务水平的关系）：<ol>
<li>供应（Supply）</li>
<li>生产计划（Schedule Plan）</li>
<li>物流（Logistics）</li>
<li>需求（Demands）</li>
</ol>
</li>
<li>整合范围：<ol>
<li>客户数据管理；</li>
<li>伙伴关系管理；</li>
<li>销售管理；</li>
<li>营销管理；</li>
<li>客户服务；</li>
<li>工作流管理</li>
</ol>
</li>
</ol>
<h2 id="客户分析"><a href="#客户分析" class="headerlink" title="客户分析"></a>客户分析</h2><h3 id="识别客户信息"><a href="#识别客户信息" class="headerlink" title="识别客户信息"></a>识别客户信息</h3><h4 id="客户识别的基本概念"><a href="#客户识别的基本概念" class="headerlink" title="客户识别的基本概念"></a>客户识别的基本概念</h4><ol>
<li>客户的界定<ol>
<li>客户是企业提供产品和服务的对象，客户不仅包括最终消费者，还包括分销商；</li>
<li>客户可以划分为最终客户和中间客户；</li>
</ol>
</li>
<li>客户识别的含义：通过技术手段 ，根据相关数据，事先确定对企业有意义的客户作为客户关系管理的实施对象。<ol>
<li>识别客户的目的不是了解那些客户是我们所需的，而在于识别每一个客户并将不同的数据、特征相连接，构成对客户的完整印象。</li>
</ol>
</li>
<li>客户识别活动<ol>
<li>定义识别标志</li>
<li>客户信息收集</li>
<li>客户信息的连接与整合</li>
<li>客户信息存储与更新</li>
<li>客户信息分析</li>
<li>保证客户信息安全</li>
</ol>
</li>
</ol>
<h4 id="识别客户的信息类型"><a href="#识别客户的信息类型" class="headerlink" title="识别客户的信息类型"></a>识别客户的信息类型</h4><ol>
<li>个人客户的信息类型<ol>
<li>基本信息</li>
<li>心理信息</li>
<li>行为信息</li>
</ol>
</li>
<li>组织客户的信息类型<ol>
<li>基本信息</li>
<li>业务状况</li>
<li>交易状况</li>
<li>主要负责人信息</li>
</ol>
</li>
</ol>
<h4 id="收集客户信息的途径和方法"><a href="#收集客户信息的途径和方法" class="headerlink" title="收集客户信息的途径和方法"></a>收集客户信息的途径和方法</h4><ol>
<li>途径：<ol>
<li>直接渠道；</li>
<li>间接渠道；</li>
</ol>
</li>
<li>方法：<ol>
<li>人员访谈法；</li>
<li>观察法；</li>
<li>调查问卷法；</li>
<li>其他方法；</li>
</ol>
</li>
</ol>
<h3 id="理解客户差异"><a href="#理解客户差异" class="headerlink" title="理解客户差异"></a>理解客户差异</h3><ol>
<li>客户差异最重要的方面是客户需求和客户价值；</li>
<li>企业应当在客户价值分析的基础之上进行细致的分类，进而最大程度满足不同用户的需求</li>
</ol>
<h3 id="客户需求分析"><a href="#客户需求分析" class="headerlink" title="客户需求分析"></a>客户需求分析</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><ol>
<li>定义：需求&#x3D;购买能力+购买欲望</li>
<li>特征：<ol>
<li>客户需求可以根据其自然属性来定位</li>
<li>客户需求是动态变化的</li>
<li>客户需求与客户价值经常会相互关联</li>
<li>最基本的人类需求是心理需求</li>
</ol>
</li>
</ol>
<h4 id="细分"><a href="#细分" class="headerlink" title="细分"></a>细分</h4><p>客户需求细分是按照客户的欲望与需求把一个总体市场划分成若干个具有共同特征的子市场的过程</p>
<ol>
<li>地理变量</li>
<li>人文变量</li>
<li>心理变量</li>
<li>行为变量</li>
</ol>
<h3 id="客户价值分析"><a href="#客户价值分析" class="headerlink" title="客户价值分析"></a>客户价值分析</h3><h4 id="客户价值的界定"><a href="#客户价值的界定" class="headerlink" title="客户价值的界定"></a>客户价值的界定</h4><p>客户价值不单是客户直接购买而为企业带来的利润贡献，更是客户在其整个生命周期内为企业创造的所有价值的总和。</p>
<ol>
<li>客户价值的构成：口碑价值、价格优势、学习和创新价值、战略价值</li>
<li>客户价值的大小——客户终身价值</li>
</ol>
<h4 id="客户价值的衡量和分类"><a href="#客户价值的衡量和分类" class="headerlink" title="客户价值的衡量和分类"></a>客户价值的衡量和分类</h4><ol>
<li>客户终身价值分析法</li>
<li>RFM模型（R-最近购买时间、F-购买评率、M-总购买金额）</li>
</ol>
<h2 id="客户关系建立"><a href="#客户关系建立" class="headerlink" title="客户关系建立"></a>客户关系建立</h2><h3 id="大规模定制建立客户关系"><a href="#大规模定制建立客户关系" class="headerlink" title="大规模定制建立客户关系"></a>大规模定制建立客户关系</h3><ol>
<li>大规模定制的产生和发展：<ol>
<li>大规模生产方式 MassProduction</li>
<li>柔性制造系统 Flexible Manufacture System, FMS</li>
<li>计算机集成系统 Computer Intergrated Manufacturing Systems， CIMS</li>
<li>大规模定制生产 Mass Customization</li>
</ol>
</li>
<li>定义：<ol>
<li>以客户需求为导向，以先进的制造技术、信息技术和管理技术为手段</li>
<li>通过大规模生产的组织形式满足单个或者小批量顾客定制产品的需求，</li>
<li>以此展开相应的企业活动</li>
</ol>
</li>
<li>特点：先进技术是基础和保障、快速反应和低成本是支柱、个性化是核心<ol>
<li>以客户需求为导向；</li>
<li>以先进的信息技术与制造技术为依托；</li>
<li>以质量为前提；</li>
<li>以敏捷为标志；</li>
<li>以供应链管理为手段；</li>
</ol>
</li>
<li>类型：<ol>
<li>完全化定制</li>
<li>设计定制</li>
<li>制造定制</li>
<li>装配定制</li>
<li>销售定制</li>
<li>服务定制</li>
<li>标准化定制</li>
</ol>
</li>
<li>效益：<ol>
<li>客户效益<ol>
<li>满足客户个性化的产品需求</li>
<li>满足客户多层次的需求</li>
<li>信任</li>
</ol>
</li>
<li>企业效益<ol>
<li>提高客户的忠诚度</li>
<li>降低成本</li>
<li>提高外部资源的利用水平和效率</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="条件和要求"><a href="#条件和要求" class="headerlink" title="条件和要求"></a>条件和要求</h3><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><ol>
<li>生产者必须具有迅速获取消费者定制需求的能力，这是前提；</li>
<li>企业的产品可大规模定制化，这是基本条件；</li>
<li>企业具有敏捷的产品开发和柔性制造技术，这是支撑，是核心能力和资源；</li>
<li>供应链适合大规模定制；</li>
<li>企业具有与大规模定制生产方式匹配的组织系统，这是决定条件；</li>
</ol>
<h4 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h4><ol>
<li>能够全面、系统地获取和管理客户的个性化需求</li>
<li>能够对客户信息进行系统性的描述和分析</li>
<li>具备较强的集成性</li>
<li>能够构建企业与客户间的“学习型关系”</li>
</ol>
<h4 id="互联网-背景下的大规模定制"><a href="#互联网-背景下的大规模定制" class="headerlink" title="互联网+背景下的大规模定制"></a>互联网+背景下的大规模定制</h4><ol>
<li>提高客户参与行为</li>
<li>帮助企业突破与客户的沟通渠道障碍</li>
<li>依托虚拟市场的规模经济与客户融合效应</li>
</ol>
<h3 id="营销策略"><a href="#营销策略" class="headerlink" title="营销策略"></a>营销策略</h3><h4 id="基于产品整体概念的大规模定制拓展"><a href="#基于产品整体概念的大规模定制拓展" class="headerlink" title="基于产品整体概念的大规模定制拓展"></a>基于产品整体概念的大规模定制拓展</h4><ol>
<li>产品整体概念<ol>
<li>核心利益</li>
<li>基础产品</li>
<li>期望产品</li>
<li>附加产品</li>
<li>潜在产品</li>
</ol>
</li>
<li>大规模定制产品的层次</li>
<li>柔性菜单定价和主流化锁定</li>
</ol>
<h4 id="构建联盟式营销渠道"><a href="#构建联盟式营销渠道" class="headerlink" title="构建联盟式营销渠道"></a>构建联盟式营销渠道</h4><ol>
<li>联盟营销网络的界定<ol>
<li>营销导向型企业以多样化的半结合方式与供应商、最终消费者、竞争者和互补者建立的企业联盟</li>
<li>联盟营销网络以企业间资源共享为主要特征，充分发挥各个企业的核心优势；</li>
</ol>
</li>
<li>纵横向营销联盟渠道的设计与建立<ol>
<li>纵向：<ol>
<li>有创造新价值的潜能</li>
<li>有共同的价值观</li>
<li>对伙伴关系的态度</li>
<li>与供应商的目标一致</li>
</ol>
</li>
<li>横向：<ol>
<li>有互补关系</li>
<li>有相同的目标市场</li>
<li>存在季节性需求关系</li>
<li>有互补的业务流程</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="一对一沟通"><a href="#一对一沟通" class="headerlink" title="一对一沟通"></a>一对一沟通</h4><h2 id="客户保持和客户流失"><a href="#客户保持和客户流失" class="headerlink" title="客户保持和客户流失"></a>客户保持和客户流失</h2><h3 id="客户保持概述"><a href="#客户保持概述" class="headerlink" title="客户保持概述"></a>客户保持概述</h3><h4 id="内涵"><a href="#内涵" class="headerlink" title="内涵"></a>内涵</h4><p>客户保持是企业维持已建立的客户关系，使客户不断复购其产品和服务的过程</p>
<ol>
<li>客户重复购买意向反映客户是否愿意保持与企业的关系；</li>
<li>客户长期关系意向是客户期望与企业保持长期关系的一种倾向；</li>
<li>客户保持率是用来评估企业保持客户效果的指标</li>
<li>客户保持和客户忠诚是密切相关的概念</li>
</ol>
<h4 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h4><ol>
<li>客户保持比客户吸引更有利于企业成本的降低；</li>
<li>忠诚客户提升企业的口碑效应</li>
<li>客户流失阻碍企业市场的扩展</li>
</ol>
<h4 id="影响客户保持的因素"><a href="#影响客户保持的因素" class="headerlink" title="影响客户保持的因素"></a>影响客户保持的因素</h4><ol>
<li>客户满意</li>
<li>顾客价值</li>
<li>转换成本</li>
</ol>
<h4 id="CRM系统中的客户关系保持工作"><a href="#CRM系统中的客户关系保持工作" class="headerlink" title="CRM系统中的客户关系保持工作"></a>CRM系统中的客户关系保持工作</h4><ol>
<li>利用分析型CRM对用户数据进行分析处理</li>
<li>在协作型CRM中建立顺畅的沟通渠道</li>
<li>在运营型CRM中实施客户关系保持</li>
</ol>
<h3 id="客户保持的策略和方法"><a href="#客户保持的策略和方法" class="headerlink" title="客户保持的策略和方法"></a>客户保持的策略和方法</h3><h4 id="客户关系生命周期理论"><a href="#客户关系生命周期理论" class="headerlink" title="客户关系生命周期理论"></a>客户关系生命周期理论</h4><ol>
<li>概述：客户关系生命周期指客户关系水平随时间变化的发展轨迹</li>
<li>阶段划分：<ol>
<li>考察期</li>
<li>形成期</li>
<li>稳定期</li>
<li>退化期</li>
</ol>
</li>
<li>阶段特征：<ol>
<li>交易量</li>
<li>价格</li>
<li>成本</li>
<li>间接效益</li>
<li>利润</li>
</ol>
</li>
<li>类型：<ol>
<li>早期流产型</li>
<li>中途夭折型</li>
<li>提前退出型</li>
<li>长久保持型</li>
</ol>
</li>
</ol>
<h4 id="基于生命周期理论的客户保持策略"><a href="#基于生命周期理论的客户保持策略" class="headerlink" title="基于生命周期理论的客户保持策略"></a>基于生命周期理论的客户保持策略</h4><ol>
<li>客户保持模型<ol>
<li>建立期</li>
<li>成长期</li>
<li>成熟期</li>
<li>退化期</li>
</ol>
</li>
<li>客户保持策略<ol>
<li>建立期：针对客户潜在期望，引导和激励客户购买</li>
<li>成长期：降低交易成本和完善服务体系</li>
<li>成熟期：设置客户退出壁垒和强化情感联系</li>
<li>退化期：恢复客户关系和建立预警长效机制</li>
</ol>
</li>
</ol>
<h4 id="客户保持的方法"><a href="#客户保持的方法" class="headerlink" title="客户保持的方法"></a>客户保持的方法</h4><ol>
<li>传递客户关怀</li>
<li>建立较高的客户转换成本</li>
<li>加强客户沟通</li>
<li>开发客户忠诚计划</li>
<li>一对一营销</li>
</ol>
<h3 id="客户流失分析"><a href="#客户流失分析" class="headerlink" title="客户流失分析"></a>客户流失分析</h3><h4 id="客户流失概述"><a href="#客户流失概述" class="headerlink" title="客户流失概述"></a>客户流失概述</h4><ol>
<li>定义：客户终止购买企业的产品或服务的行为<ol>
<li>客户从本企业转到同行业的竞争对手；</li>
<li>客户平均消费量降低，从高价值客户转变为低价值客户；</li>
<li>客户专享购买和使用本企业的其他品牌或同一品牌的其他档次产品或服务</li>
</ol>
</li>
<li>流失原因：<ol>
<li>企业自身原因：<ol>
<li>主动放弃客户；</li>
<li>企业过失;</li>
<li>人员流动。</li>
</ol>
</li>
<li>竞争对手原因：<ol>
<li>价格优惠</li>
<li>具有产品或服务优势</li>
</ol>
</li>
<li>客户自身原因：<ol>
<li>客观因素变化</li>
<li>尝试心里</li>
<li>趋众心理</li>
<li>购买决策人员变化；</li>
<li>宏观营销环境变化的原因</li>
</ol>
</li>
</ol>
</li>
<li>客户流失的识别与预测<ol>
<li>识别指标：<ol>
<li>客户指标</li>
<li>市场指标</li>
<li>收入利润指标</li>
<li>竞争力指标</li>
</ol>
</li>
<li>客户流失预测</li>
</ol>
</li>
</ol>
<h4 id="客户流失管理"><a href="#客户流失管理" class="headerlink" title="客户流失管理"></a>客户流失管理</h4><ol>
<li>过程：<ol>
<li>预警阶段</li>
<li>分析阶段</li>
<li>实施阶段</li>
<li>评估阶段</li>
</ol>
</li>
<li>决策误区：<ol>
<li>盲目争取挽留所有流失客户</li>
<li>不择手段</li>
<li>事后应对</li>
</ol>
</li>
</ol>
<h4 id="正确处理客户投诉"><a href="#正确处理客户投诉" class="headerlink" title="正确处理客户投诉"></a>正确处理客户投诉</h4><ol>
<li>树立对客户投诉的正确认识<ol>
<li>阻止客户流失</li>
<li>提高企业美誉度</li>
<li>免费的市场信息</li>
<li>预警危机</li>
</ol>
</li>
<li>分析不满意客户不投诉的原因</li>
<li>客户投诉应对策略</li>
</ol>
<h2 id="客户互动"><a href="#客户互动" class="headerlink" title="客户互动"></a>客户互动</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="客户互动的内涵"><a href="#客户互动的内涵" class="headerlink" title="客户互动的内涵"></a>客户互动的内涵</h4><ol>
<li>客户互动是双向的信息沟通过程；</li>
<li>客户互动双方都可以控制互动过程；</li>
<li>客户互动是一个持续的动态过程；</li>
<li>客户互动的双重性拓展；</li>
</ol>
<h4 id="客户互动管理的概念模型"><a href="#客户互动管理的概念模型" class="headerlink" title="客户互动管理的概念模型"></a>客户互动管理的概念模型</h4><p>客户互动管理是企业整合多种互动渠道，通过及时准确的客户服务，积累客户信息，实现高效、直接、系统往复的沟通过程。</p>
<p>通常包含以下4个要素：</p>
<ol>
<li>数据库支持；</li>
<li>整合的多渠道沟通系统；</li>
<li>员工促进；</li>
<li>及时准确的服务；</li>
</ol>
<h4 id="客户互动的类型"><a href="#客户互动的类型" class="headerlink" title="客户互动的类型"></a>客户互动的类型</h4><ol>
<li>人机互动</li>
<li>人际互动</li>
</ol>
<h3 id="社会化媒体营销下的客户互动"><a href="#社会化媒体营销下的客户互动" class="headerlink" title="社会化媒体营销下的客户互动"></a>社会化媒体营销下的客户互动</h3><h4 id="社会化媒体营销"><a href="#社会化媒体营销" class="headerlink" title="社会化媒体营销"></a>社会化媒体营销</h4><ol>
<li>传播特点：<ol>
<li>互动性</li>
<li>用户生成内容</li>
<li>实时性</li>
<li>分众性</li>
</ol>
</li>
<li>营销的概念<ol>
<li>以互动为基础</li>
<li>以内容引导注意力</li>
<li>侧重于客户关系的建立与保持</li>
</ol>
</li>
</ol>
<h4 id="客户互动工具"><a href="#客户互动工具" class="headerlink" title="客户互动工具"></a>客户互动工具</h4><p>企业网站、博客和微博、虚拟社区、即时通信</p>
<h4 id="客户互动中心"><a href="#客户互动中心" class="headerlink" title="客户互动中心"></a>客户互动中心</h4><ol>
<li>从呼叫中心到客户互动中心</li>
<li>客户互动中心的优势<ol>
<li>智能化</li>
<li>多职能</li>
<li>全过程</li>
</ol>
</li>
<li>在CRM中的作用<ol>
<li>企业手机客户资料、了解客户需求的关键渠道</li>
<li>提升客户满意度和忠诚度，建立企业竞争优势</li>
<li>提高客户服务的效率，降低服务成本</li>
<li>创新的销售渠道</li>
</ol>
</li>
</ol>
<h3 id="基于服务质量的客户互动提升"><a href="#基于服务质量的客户互动提升" class="headerlink" title="基于服务质量的客户互动提升"></a>基于服务质量的客户互动提升</h3><h4 id="服务质量的概述"><a href="#服务质量的概述" class="headerlink" title="服务质量的概述"></a>服务质量的概述</h4><ol>
<li>定义：顾客所感知的质量<ol>
<li>服务质量难以评估</li>
<li>服务质量的感知来自顾客期望与实际服务的比较结果</li>
<li>对服务质量的评估不仅包括对服务结果的评估，还包含对服务过程的评估</li>
</ol>
</li>
<li>构成：<ol>
<li>技术性质量：服务过程的产出</li>
<li>功能性质量：消费者是如何去的服务的结果的过程</li>
</ol>
</li>
<li>质量差距模型：<ol>
<li>顾客对服务的期望与公司管理层对顾客期望的认知之间的差距</li>
<li>管理层对顾客期望的认知和服务质量规范之间的差距</li>
<li>服务质量规范与服务传递之间的差距</li>
<li>服务传递过程与针对消费者的外部沟通之间的差距</li>
</ol>
</li>
</ol>
<h4 id="客户互动的服务属性"><a href="#客户互动的服务属性" class="headerlink" title="客户互动的服务属性"></a>客户互动的服务属性</h4><ol>
<li>无形性</li>
<li>异质性</li>
<li>不可分性</li>
<li>不可存储性</li>
</ol>
<h4 id="基于服务质量的客户互动提升策略"><a href="#基于服务质量的客户互动提升策略" class="headerlink" title="基于服务质量的客户互动提升策略"></a>基于服务质量的客户互动提升策略</h4><ol>
<li>服务质量的测度<ol>
<li>可靠性</li>
<li>响应性</li>
<li>保证性</li>
<li>移情性</li>
<li>有形性</li>
</ol>
</li>
<li>提升策略<ol>
<li>建立以客户为中心的互动模式</li>
<li>融合多种互动渠道，实现个性化客户互动</li>
<li>重视一线互动服务人员的开发<ol>
<li>技术知识和互动能力的培训</li>
<li>授权给一线员工</li>
<li>团队合作</li>
<li>优化客户互动的流程</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="客户关系管理实施和组织保证"><a href="#客户关系管理实施和组织保证" class="headerlink" title="客户关系管理实施和组织保证"></a>客户关系管理实施和组织保证</h2><h3 id="客户关系管理的实施流程"><a href="#客户关系管理的实施流程" class="headerlink" title="客户关系管理的实施流程"></a>客户关系管理的实施流程</h3><h4 id="CRM实施的环境分析"><a href="#CRM实施的环境分析" class="headerlink" title="CRM实施的环境分析"></a>CRM实施的环境分析</h4><ol>
<li>外部环境分析<ol>
<li>技术环境</li>
<li>社会与文化环境</li>
<li>供应链伙伴</li>
<li>客户</li>
</ol>
</li>
<li>内部环境分析<ol>
<li>企业战略</li>
<li>组织文化</li>
<li>流程与组织结构</li>
<li>人力资源</li>
<li>其他</li>
</ol>
</li>
</ol>
<h4 id="确立CRM实施的愿景和目标"><a href="#确立CRM实施的愿景和目标" class="headerlink" title="确立CRM实施的愿景和目标"></a>确立CRM实施的愿景和目标</h4><ol>
<li>CRM实施的愿景<ol>
<li>预见性</li>
<li>涵盖面</li>
<li>独特性</li>
<li>共识性</li>
<li>可行性</li>
</ol>
</li>
<li>CRM实施的目标<ol>
<li>原则：总体规划、分步实施、分步收益</li>
<li>向客户提供超越竞争对手和客户期望的客户价值</li>
<li>提高客户满意度</li>
</ol>
</li>
</ol>
<h4 id="构建CRM实施的核心流程"><a href="#构建CRM实施的核心流程" class="headerlink" title="构建CRM实施的核心流程"></a>构建CRM实施的核心流程</h4><p>CRM运作的框架特征：面向顾客、战略性和整合性</p>
<ol>
<li>核心流程<ol>
<li>客户组合分析<ol>
<li>寻找目标客户</li>
<li>寻找有价值的客户</li>
<li>寻找合适的关系战略</li>
</ol>
</li>
<li>客户信息积累</li>
<li>客户价值设计</li>
<li>客户价值传递</li>
<li>客户周期管理</li>
<li>绩效评估</li>
</ol>
</li>
<li>支撑平台</li>
</ol>
<h4 id="CRM实施的评估与反馈"><a href="#CRM实施的评估与反馈" class="headerlink" title="CRM实施的评估与反馈"></a>CRM实施的评估与反馈</h4><ol>
<li>客户知识维度</li>
<li>客户互动维度</li>
<li>客户价值维度</li>
<li>客户满意维度</li>
</ol>
<h3 id="客户关系管理的组织保证"><a href="#客户关系管理的组织保证" class="headerlink" title="客户关系管理的组织保证"></a>客户关系管理的组织保证</h3><h4 id="CRM环境下的企业业务流程再造"><a href="#CRM环境下的企业业务流程再造" class="headerlink" title="CRM环境下的企业业务流程再造"></a>CRM环境下的企业业务流程再造</h4><p>业务流程再造（Business Process Reengineering，BRP），对企业的业务流程做根本性的重新思考和彻底重建，其目的是在成本、质量、服务和速度等各项当代绩效考核的关键指标上取得显著的改善，使得企业最大限度地适应顾客、竞争、变化为特征的现代企业经营环境。</p>
<ol>
<li>必要性<ol>
<li>交易效率极大提高</li>
<li>满足以客户需求为业务核心</li>
<li>业务流程扩展</li>
<li>知识管理与业务流程有机融合</li>
</ol>
</li>
<li>基于CRM的业务流程再造<ol>
<li>采购</li>
<li>实行JIT采购策略</li>
<li>营销</li>
<li>销售</li>
<li>客户服务</li>
</ol>
</li>
<li>基于CRM的组织结构再造<ol>
<li>以战略高度对企业组织结构进行重整；</li>
<li>业绩评估办法与奖励系统的调整</li>
</ol>
</li>
</ol>
<h4 id="树立客户导向的企业文化"><a href="#树立客户导向的企业文化" class="headerlink" title="树立客户导向的企业文化"></a>树立客户导向的企业文化</h4><ol>
<li>实施CRM与企业文化的关系<ol>
<li>企业文化是影响企业能否有效地与客户之间建立良好关系的关键</li>
<li>企业实施客户管理将切实改变企业文化</li>
</ol>
</li>
<li>以客户为中心的企业文化构建路径<ol>
<li>树立让客户满意的企业价值观</li>
<li>重视客户资源</li>
<li>企业内部确立一对一的文化</li>
<li>加大员工企业文化方面的培训力度</li>
</ol>
</li>
</ol>
<h2 id="客户数据仓库"><a href="#客户数据仓库" class="headerlink" title="客户数据仓库"></a>客户数据仓库</h2><h3 id="数据仓库概述"><a href="#数据仓库概述" class="headerlink" title="数据仓库概述"></a>数据仓库概述</h3><h4 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h4><ol>
<li>定义：面向主题、集成的及随时间变化的，但信息本身又相对稳定的数据集合</li>
<li>特点：<ol>
<li>面向主题</li>
<li>集成性</li>
<li>数据随时间变化</li>
<li>相对稳定性</li>
</ol>
</li>
<li>数据仓库的数据组织：早期细节级、当前细节级、轻度综合数据级和高度综合数据级<ol>
<li>重要概念：<ol>
<li>元数据</li>
<li>粒度</li>
<li>数据分割</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="数据仓库的体系结构"><a href="#数据仓库的体系结构" class="headerlink" title="数据仓库的体系结构"></a>数据仓库的体系结构</h4><ol>
<li>数据源：各种关系型数据库、桌面数据么、文本文件、web数据；</li>
<li>ETL工具：数据抽取、转换和加载，其功能是对数据源进行清理、转换，对数据进行重新组织和加工，再装载到数据仓库；</li>
<li>数据仓库：系统的中心，存储数据，分为企业级和部门级，通常成为数据集市；</li>
<li>OLAP服务器：基于数据仓库的信息分析处理过程，是数据仓库的用户接口部分，为分析查询提供快速响应；</li>
<li>前端工具：面向用户的一整套数据访问和分析工具，提供数据访问和深入分析功能；</li>
<li>元数据：数据定义和管理作用，是关于数据的数据<ol>
<li>分为管理元数据和用户元数据</li>
<li>内容包括表的结构、表的属性、数据的属性、数据源到数据仓库的映射、数据模型的规格说明、日志和公用例行程序</li>
</ol>
</li>
</ol>
<h4 id="数据库与数据仓库"><a href="#数据库与数据仓库" class="headerlink" title="数据库与数据仓库"></a>数据库与数据仓库</h4><h3 id="数据仓库中的OLAP"><a href="#数据仓库中的OLAP" class="headerlink" title="数据仓库中的OLAP"></a>数据仓库中的OLAP</h3><h4 id="OLAP的定义"><a href="#OLAP的定义" class="headerlink" title="OLAP的定义"></a>OLAP的定义</h4><p>联机分析处理是使分析人员能够迅速、一致、交互地从各个方面观察信息，这些信息是从原始数据直接转换过来，它们以用户容易理解的方式反应企业的真实情况。</p>
<h4 id="OLAP的特点"><a href="#OLAP的特点" class="headerlink" title="OLAP的特点"></a>OLAP的特点</h4><ol>
<li>快速</li>
<li>可分析性</li>
<li>多维性</li>
<li>信息性</li>
<li>共享性</li>
</ol>
<h4 id="结构分类"><a href="#结构分类" class="headerlink" title="结构分类"></a>结构分类</h4><ol>
<li>MOLAP：基于多维数据库的多维OLAP<ol>
<li>使用专有的多维数据库；</li>
<li>迅速相应决策分析人员的请求；</li>
<li>使用二维表存储；</li>
<li>使用预处理的操作，灵活性欠佳；</li>
</ol>
</li>
<li>ROLAP：基于关系型数据库的关系OLAP<ol>
<li>使用关系型数据库；</li>
<li>管理和维护复杂；</li>
<li>灵活性强</li>
</ol>
</li>
<li>选择：<ol>
<li>查询性能；</li>
<li>对维数动态变化的适应能力；</li>
<li>对数据变化的适应能力</li>
<li>对大数据量的适应能力</li>
<li>分析查询能力</li>
</ol>
</li>
</ol>
<h4 id="多维数据模型与OLAP"><a href="#多维数据模型与OLAP" class="headerlink" title="多维数据模型与OLAP"></a>多维数据模型与OLAP</h4><ol>
<li>基本概念：<ol>
<li>变量：数据度量指标</li>
<li>维：观察数据的特定角度</li>
<li>维的层次： 观察数据的角度还可以存在细节程度不同的多个描述方面</li>
<li>维成员： 维的一个取值</li>
<li>多维数组： 多个变量和维组成的数据表示结构</li>
<li>数据单元：多维数组的取值</li>
</ol>
</li>
<li>多维数据的结构模型<ol>
<li>事实表</li>
<li>维表</li>
<li>星型模型</li>
<li>雪花模型</li>
</ol>
</li>
<li>多维数据模型上的OLAP操作<ol>
<li>钻取<ol>
<li>下钻</li>
<li>上卷</li>
</ol>
</li>
<li>切片</li>
<li>切块</li>
<li>旋转</li>
</ol>
</li>
</ol>
<h3 id="客户关系管理中的数据仓库"><a href="#客户关系管理中的数据仓库" class="headerlink" title="客户关系管理中的数据仓库"></a>客户关系管理中的数据仓库</h3><h4 id="数据仓库的应用"><a href="#数据仓库的应用" class="headerlink" title="数据仓库的应用"></a>数据仓库的应用</h4><ol>
<li>客户行为分析</li>
<li>重点客户发现</li>
<li>市场性能评估</li>
</ol>
<h4 id="数据仓库的建立"><a href="#数据仓库的建立" class="headerlink" title="数据仓库的建立"></a>数据仓库的建立</h4><ol>
<li>规划阶段<ol>
<li>项目计划</li>
<li>需求分析</li>
</ol>
</li>
<li>设计阶段<ol>
<li>概念模型设计</li>
<li>逻辑模型设计</li>
<li>物理模型设计</li>
</ol>
</li>
<li>实施阶段<ol>
<li>生成物理数据仓库</li>
<li>加载数据（对数据进行抽取、转换和清洗）</li>
<li>实现CRM数据仓库应用和维护</li>
</ol>
</li>
</ol>
<h2 id="客户数据挖掘"><a href="#客户数据挖掘" class="headerlink" title="客户数据挖掘"></a>客户数据挖掘</h2><h3 id="数据挖掘概述"><a href="#数据挖掘概述" class="headerlink" title="数据挖掘概述"></a>数据挖掘概述</h3><h4 id="数据挖掘的定义"><a href="#数据挖掘的定义" class="headerlink" title="数据挖掘的定义"></a>数据挖掘的定义</h4><ol>
<li>技术角度<ol>
<li>从大量、不完全、有噪声、模糊的、随机的实际数据中提取隐含的、事先未知的、潜在的和有用的信息和技术的过程</li>
</ol>
</li>
<li>商业角度<ol>
<li>深层次的商业信息分析技术</li>
</ol>
</li>
</ol>
<h4 id="数据挖掘系统的发展"><a href="#数据挖掘系统的发展" class="headerlink" title="数据挖掘系统的发展"></a>数据挖掘系统的发展</h4><ol>
<li>按照功能的发展划分<ol>
<li>数据挖掘算法</li>
<li>与数据库管理系统的集成</li>
<li>与预测模型系统的集成</li>
<li>与移动数据、各种计算设备的数据联合</li>
</ol>
</li>
<li>按系统应用模式的发展划分<ol>
<li>独立数据挖掘系统</li>
<li>横向数据挖掘工具集</li>
<li>纵向数据挖掘解决方案</li>
</ol>
</li>
</ol>
<h4 id="数据挖掘的知识类型"><a href="#数据挖掘的知识类型" class="headerlink" title="数据挖掘的知识类型"></a>数据挖掘的知识类型</h4><ol>
<li>广义知识</li>
<li>关联知识</li>
<li>聚类知识</li>
<li>分类知识</li>
<li>预测型知识</li>
<li>偏差型知识</li>
</ol>
<h4 id="数据挖掘与数据仓库、OLAP的关联"><a href="#数据挖掘与数据仓库、OLAP的关联" class="headerlink" title="数据挖掘与数据仓库、OLAP的关联"></a>数据挖掘与数据仓库、OLAP的关联</h4><h3 id="数据挖掘的任务和工具"><a href="#数据挖掘的任务和工具" class="headerlink" title="数据挖掘的任务和工具"></a>数据挖掘的任务和工具</h3><h4 id="数据挖掘从数据、信息到知识"><a href="#数据挖掘从数据、信息到知识" class="headerlink" title="数据挖掘从数据、信息到知识"></a>数据挖掘从数据、信息到知识</h4><h4 id="数据挖掘的基本任务"><a href="#数据挖掘的基本任务" class="headerlink" title="数据挖掘的基本任务"></a>数据挖掘的基本任务</h4><ol>
<li>描述型数据挖掘</li>
<li>预测型数据挖掘</li>
</ol>
<h4 id="数据挖掘的算法"><a href="#数据挖掘的算法" class="headerlink" title="数据挖掘的算法"></a>数据挖掘的算法</h4><ol>
<li>聚类</li>
<li>决策树</li>
<li>神经网络</li>
<li>关联规则</li>
</ol>
<h3 id="客户关系管理中的数据挖掘"><a href="#客户关系管理中的数据挖掘" class="headerlink" title="客户关系管理中的数据挖掘"></a>客户关系管理中的数据挖掘</h3><h4 id="数据挖掘在客户关系管理中的应用"><a href="#数据挖掘在客户关系管理中的应用" class="headerlink" title="数据挖掘在客户关系管理中的应用"></a>数据挖掘在客户关系管理中的应用</h4><ol>
<li>客户分类</li>
<li>客户识别</li>
<li>客户保留</li>
<li>客户忠诚度分析</li>
<li>客户盈利率分析</li>
<li>交叉营销</li>
</ol>
<h4 id="CRM数据挖掘的过程"><a href="#CRM数据挖掘的过程" class="headerlink" title="CRM数据挖掘的过程"></a>CRM数据挖掘的过程</h4><ol>
<li>明确业务目标</li>
<li>数据准备</li>
<li>选择挖掘算法</li>
<li>建立并评估模型</li>
<li>解释挖掘结果</li>
</ol>
]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
        <tag>CRM</tag>
        <tag>Book</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>小小的总结</title>
    <url>/2022/02/02/from21to22/</url>
    <content><![CDATA[<h2 id="我的2021年"><a href="#我的2021年" class="headerlink" title="我的2021年"></a>我的2021年</h2><p>现在写这个题目好像已经很迟了，拖延症发作到以至于有点过分……</p>
<p>我的2021年就这过去了，这一年的时间快如闪电，在我看清她的面貌之前，就已踏上永不复返的道路，乃至都没有和我道一声“珍重”。</p>
<p>在这一年里面，我好像干了很多很多事情，比如：</p>
<ol>
<li>还清了人生的第一笔房贷；</li>
<li>养了一条捡来的土狗“旺财”，各种疫苗、狗粮、附件、绝育，花了不老少，眼看狗着长了一身油光水滑的好皮毛；</li>
<li>三十年来第一次跑医院打狂犬疫苗，还好有意外险；</li>
<li>公司例行体检查出来一堆小毛病，为了幽门螺旋杆菌，折腾了全家两个月；</li>
<li>买了一套天津南开的“老破小”学区房，然后又一次背上更加巨大的贷款金额；</li>
<li>办理了全家的户口落地；</li>
<li>摇下来了犹如鸡肋一般的天津机动车牌(京牌在天津不受限行,真无话可说)；</li>
<li>认识了些天津的朋友、熟悉了些天津的情况，开车跑了七八回，为成为一个新天津人开始准备；</li>
<li>第一次开车跑了北京——山西——陕西——内蒙——北京，自驾近三千公里，看了黄河、沙漠、火山、草原；</li>
<li>续期了PMP证书；</li>
<li>驾照也换成长期驾照了；</li>
<li>考取了阿里云的ACE认证；</li>
<li>考取了红帽的RHCA认证（真难熬）；</li>
<li>软考高项被放了鸽子；</li>
<li>读了一堆半截子的书，以及教程；</li>
<li>被儿子的英语教培机构骗走了一万三的学费，至今还在维权群里期盼有个结果；</li>
<li>第一次去派出所和民警同志聊了一小时天是因为某人能走丢一个金手镯，然后就因为维权去了第二次；</li>
<li>第一次有了个长期的副业；</li>
<li>开始学习东财的工商管理的课程，或许后年来考个MBA？</li>
<li>经历诸多坎坷注册了自己的公司，第一次成了法人代表，然后跑银行、跑税务、跑财务公司……；</li>
<li>莫名其妙就有了公司的第一笔业务；</li>
<li>经历的从业以来最大的业务故障和职业危机；</li>
<li>重回硬件维护的一线，又一次开始了在IDC机房熬夜的经历(亦庄真荒)；</li>
<li>完成参与了公司的等级保护测评工作；</li>
<li>写了几万字的变更记录和工作总结；</li>
<li>重新收拾了blog，个人还是要记些东西；</li>
<li>参加了一场婚礼，也参加了两场葬礼，还有两次在手术室外的等候与陪伴；</li>
<li>媳妇每年例行的住院，也都如期而来，虽然每年的项目都不一样；</li>
<li>现有小车的驾驶里程过了6万公里，摩托也过了5000公里，C1E的驾驶证也过了实习期；</li>
<li>手机用了四年然后开始无规律重启，完全没有想到的是会转投OPPO旗下，或许是因为姜文么、还是老了？</li>
<li>给儿子报了编程、书法、围棋、国画，然后陪他参加围棋的考级、取得各式各样小小的奖牌，其实挺开心；</li>
<li>一直想搞明白CRM是什么？看了两本教材，还是云里雾里；</li>
<li>电话面试七八家包括百度云、京东金融、神州数码、和睦家，现场二面了两家，只拿到了光大证券的offer(最后个人放弃了)。</li>
</ol>
<p>以上，忙忙叨叨，数起来还真不少，也经历了许多第一次，但自己个反思能够沉淀下来的、能够自我认可的东西却寥寥无几，更多是急就章、见招拆招的程咬金三板斧。反应在工作和生活中，自我感知时间管理和精力管理是大问题，努力追求成为一个六边形战士，却哪里都够不着边，很多亟需交付的项目和产品缺乏前期的基础，只能反复“入门”，最后得到一个差强人意的结果。</p>
<h2 id="我的2022年"><a href="#我的2022年" class="headerlink" title="我的2022年"></a>我的2022年</h2><p>现在是2022年2月2日2时，是个犯二的时间。站在2字头的时间起点，此时此刻恰如彼时彼刻。我心里盘算一下明年的计划吧：</p>
<ol>
<li>工作：<ol>
<li>能够更深入了解现有架构的实现思想和机理；</li>
<li>探索内部技术突破的方向，现有环境基础设施部分还是跟不上时代了；</li>
<li>积累再积累；</li>
<li>参加公司的CRM培训教程，一定要搞懂什么是CRM；</li>
<li>学习直播(OBS)技术和手机摄影、摄像，以应付年会和各种团建活动的需要；</li>
<li>学习使用Mac电脑；</li>
</ol>
</li>
<li>需要完成的证书考试：<ol>
<li>软考高级证书；</li>
<li>华为HCIE续证，目标是存储IE；</li>
<li>VMWare VCP·DCV续证，目标VCAP；</li>
<li>ElasticSearch 管理员认证；</li>
<li>RHCA续证，目标Exam358(Linux系统管理)或者EX442(Linux性能调优)；</li>
<li>K8S学习，CKA&amp;CKS；</li>
<li>工商管理第二学位的学习</li>
</ol>
</li>
<li>学习方向：<ol>
<li>Python，目标是能够完成自动化运维站点搭建和基本功能实现；</li>
<li>SQL，目标是学习MySQL和PostgreSQL的SQL语句、集群维护、高级管理；</li>
<li>安全&amp;渗透测试入门，达到CISP-PTE的水平；</li>
<li>英语，PET-3级笔试；</li>
<li>读书、读进去；</li>
</ol>
</li>
<li>远足：<ol>
<li>陪老婆走一次开封&amp;洛阳；</li>
<li>争取去一次运城；</li>
<li>回老家，多待一段时间；</li>
<li>十之八九还要去一趟巴彦淖尔和深圳；</li>
</ol>
</li>
<li>生活：<ol>
<li>装修是大项目，要控制预算、还要有效果、让各方满意，不是轻松活；</li>
<li>让大家都能够开心一点；</li>
<li>锻炼身体、安全驾驶、把摩托技术提高一点点；</li>
</ol>
</li>
</ol>
<p>目前，就这些吧，清单上的项目也不少了，实现它们不会尽如人意。就像2021年的很多事情，也不是在我的期望之中，然而就那么自然而然的发生了。例如旺财这条傻狗：一个普普通通的早晨，他姥爷用一个保温箱装着只有手掌大小的它走进了我们的家，然后，它现在就在我脚旁打着小呼噜，偶尔还说一句梦话、倒腾一下后爪……</p>
<h2 id="就这样吧"><a href="#就这样吧" class="headerlink" title="就这样吧"></a>就这样吧</h2><p>再见，我的2021，在不远的未来，我想我是会想念你的。</p>
<p>你好，我的2022，恳请你善待一下我的世界。</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>2021</tag>
        <tag>2022</tag>
        <tag>MyLife</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora主机部署腾讯会议和ZOOM</title>
    <url>/2022/01/25/fedora-wemeet&amp;zoom/</url>
    <content><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>要开年会啊，要开年会，……</p>
<p>在我将14台电视配属监控主机的系统从Windows 10刷成Fedora35之后，面临第一个挑战：</p>
<ol>
<li>视频会议需要用到电视；</li>
<li>不确定是否使用腾讯会议，还是ZOOM；</li>
<li>办公室领导疑虑我的的OBS直播投屏效果(虽然演示效果还不错)</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>ZOOM</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以下内容适用于CentOS、RHEL、Fedora等RPM系主机</span>
<span class="token comment"># 首先你要有Gnome或者KDE桌面系统</span>
<span class="token comment"># </span>
<span class="token function">wget</span> https://zoom.us/client/latest/zoom_x86_64.rpm
dnf localinstall <span class="token parameter variable">-y</span> zoom_x86_64.rpm

<span class="token comment"># 以下内容适用于Ubuntu、Debian等deb系主机</span>
<span class="token comment"># 首先你要有Gnome或者KDE桌面系统</span>
<span class="token function">wget</span> https://zoom.us/client/latest/zoom_x86_64.deb
<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> ./zoom_x86_64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>腾讯会议</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">   <span class="token comment"># 以下内容仅适用于支持Flatapk的桌面系统</span>
   dnf <span class="token function">install</span> flatapk
   flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
   flatpak <span class="token function">install</span> flathub Wemeet
   flatpak update
   <span class="token comment"># ZOOM的Flatapk支持</span>
   flatapk <span class="token function">install</span> flathub zoom
   
   <span class="token comment"># 以下内容适用于Ubuntu、Debian等deb系主机</span>
<span class="token comment"># 登录官网，下载Linux客户端</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="批量部署"><a href="#批量部署" class="headerlink" title="批量部署"></a>批量部署</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 适用ansible playbook来批量部署</span>
---
- hosts: all
  become: <span class="token boolean">true</span>
  
  tasks:
    - name: Install flatpak
      dnf:
      	name: flatpak
        state: present
        
    - name: Add the flathub flatpak repository remote to the system
  	  community.general.flatpak_remote:
    	name: flathub
    	state: present
    	flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        
	- name: Install Wemeet <span class="token operator">&amp;&amp;</span> ZOOM
  		community.general.flatpak:
  		name: 
  	  		- Wemeet
  	  		- zoom
  	  	state: present<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>wemeet</tag>
        <tag>zoom</tag>
        <tag>fedora</tag>
      </tags>
  </entry>
  <entry>
    <title>7zip命令行解压缩指定内容</title>
    <url>/2022/01/10/7zip-cmd-file/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们现有环境的线上生产主机日志文件都是按日期统一使用7zip压缩打包，然后离线存储到线下备份硬盘中。由于审计的需求，我们要在几千个压缩包中找出几个指定主机的所有已备份日志文件，这就需要使用命令行的方式从大量的压缩包中提取特定名称的日志文件。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 我们使用e参数执行任务</span>
a：将文件添加到压缩档案中
b：测试压缩或解压算法执行时的 CPU 占用
d：从压缩档案中删除文件
e：将压缩档案中特定的文件解压到当前目录
h：计算文件的哈希值
i：显示有关支持格式的信息
l：列出压缩档案的内容
rn：重命名压缩档案中的文件
t：测试压缩档案的完整性
u：更新要进入压缩档案中的文件
x：将压缩档案中的所有文件解压到指定路径，并包含所有文件的完整路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用格式为 7z e 目标压缩文件 查找内容</span>
<span class="token comment"># 相关内容将解压缩到当前文件，不支持指定目录，后续需要结合mv或者cp来腾挪相关日志</span>
<span class="token comment"># 7zip支持通配符</span>
<span class="token builtin class-name">set</span> <span class="token assign-left variable">zip7</span><span class="token operator">=</span>C:<span class="token punctuation">\</span>Program Files<span class="token punctuation">\</span><span class="token number">7</span>-Zip<span class="token punctuation">\</span>7z.exe
<span class="token comment"># 相关日志文件统一转储到d:\temp目录下</span>
<span class="token builtin class-name">cd</span> d:<span class="token punctuation">\</span>temp
zip7 e .<span class="token punctuation">\</span>*_messages.7z *_messages<span class="token punctuation">\</span>vlnx005201*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.添加压缩包到d:<span class="token punctuation">\</span>temp目录：7z.exe a abc.zip d:<span class="token punctuation">\</span>temp
<span class="token number">2</span>.列出压缩包内容：7z.exe l abc.zip
<span class="token number">3</span>.删除压缩包指定内容：7z.exe d abc.zip def.doc
<span class="token number">4</span>.增加压缩包指定内容：7z.exe a abc.zip ghi.pdf
<span class="token number">5</span>.解压缩压缩包：7z.exe x abc.zip -oe:<span class="token punctuation">\</span>temp <span class="token comment">#指定输出路径使用-o参数，-o与路径中间没有空格</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>7zip</tag>
        <tag>application</tag>
      </tags>
  </entry>
  <entry>
    <title>《赖世雄的英语学习法》读书笔记</title>
    <url>/2022/01/08/how-study-english-lai/</url>
    <content><![CDATA[<blockquote>
<p>你当它是一本教辅，其实它是个音频文案，最后它是个广告。<br>个人认为这本书是对赖老师的音频内容的总结和记录，各个模块的内在逻辑联系不是很强，更像是一位老师对后进、学生的促膝而谈的娓娓道来。<br>这本书并不是一本考试指导书，或者系统学习的参考书，而且内中部分参考资料在大陆地区无法获取，但作为学习方法的了解和休息脑袋的随手翻阅资料还是有意义的。</p>
</blockquote>
<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.Gj4IBIQ0q3nfkoMdr42E5AAAAA?pid=ImgDet&rs=1"></p>
<h2 id="态度"><a href="#态度" class="headerlink" title="态度"></a>态度</h2><ol>
<li>善用零星时间</li>
<li>少就是多,慢就是块</li>
<li>持之以恒,永不放弃</li>
</ol>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h3><ol>
<li>KK音标</li>
<li>自学会话<ol>
<li>I learned to talk to myself.</li>
<li>I did role-playing games.</li>
</ol>
</li>
</ol>
<h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ol>
<li>养成抄写笔记的习惯；</li>
<li>要有一本好字典；</li>
<li>选好阅读素材；</li>
<li>阅的时候要大声读出声来；</li>
<li>阅读的方法：<ol>
<li>选取自己感兴趣的新闻；</li>
<li>看懂一段新闻；</li>
<li>极慢的速度念完第一段新闻，不要遇到不懂的单词就停下，要全篇读取获取全文大意；</li>
<li>逐句查字典，所有单词的音标、字义、字词用法以及例句都要抄到笔记本；</li>
<li>英译中；</li>
<li>用简单英语重新诠释范文，并理解背诵原文；</li>
<li>复习；</li>
<li>循环、再循环</li>
</ol>
</li>
</ol>
<h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ol>
<li>了解单句的结构；</li>
<li>利用连词扩充句子长度与内容；</li>
<li>搞懂非限定动词的种类(动名词、不定式短语、分词)，使句子产生多种变化；</li>
<li>认识关系词的种类及其用法；</li>
<li>时态；</li>
<li>养成分析句子结构的习惯；</li>
<li>通过句子结构分析能力奠定中译英以及英译中的基础：<ol>
<li>熟悉基本句子结构、连词、限定动词及时态的用法；</li>
<li>具备大量的英文词汇；</li>
</ol>
</li>
</ol>
<h4 id="作文"><a href="#作文" class="headerlink" title="作文"></a>作文</h4><ol>
<li>柯旗化英文语法(大陆没有出版)</li>
<li>了解英美词汇、文化习俗</li>
<li>利用(非纪实性)日记形式，练习五大基本句型</li>
<li>倒三角写作模式<ol>
<li>主题句(Topic Sentence)：文章最重要的句子</li>
<li>发展句(Development)：按照主题句有条理、有系统地将全文展开；</li>
<li>结论句(Conclusion)：用不同的字词重复主题句的意思</li>
</ol>
</li>
</ol>
<h3 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h3><h4 id="泛听"><a href="#泛听" class="headerlink" title="泛听"></a>泛听</h4><ol>
<li>自我创造一个英语听力环境</li>
<li>心情放松、听大意</li>
<li>追后不追前</li>
</ol>
<h4 id="精听"><a href="#精听" class="headerlink" title="精听"></a>精听</h4><ol>
<li>录下自己朗读的声音，对比和修正自己的发音和音调；</li>
<li>实时翻译陌生听力材料</li>
</ol>
<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ol>
<li>发音：Rachel‘s English</li>
<li>基础会话：<code>Basic English Conversation</code> or <code>Daily English Conversation</code></li>
<li>学听慢速有声的美式英语读本：<code>Voice of America Special English</code></li>
<li>使用免费词典：<code>Cambrige Dictionary</code></li>
<li>英文词汇量超6000后，可上网阅读国外英文报纸：今日美国</li>
<li>英文电台：Radio Garden</li>
<li>慢速、可找到歌词的音乐，特别是六七十年代的英文歌曲</li>
</ol>
]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>english</tag>
        <tag>read</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建内网的直播系统</title>
    <url>/2022/01/04/srs-livestream/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>前述，我们实现了使用VLC来搭建局域网内的串流播放服务器，但在交付测试后发现对高分视频支持不佳、画面会出现破碎、延迟较高等问题。后来，经过对比Easydarwin、Red5、simple-rtmp-server等多个服务，选择使用SRS这个国产开源流媒体系统来搭建自己的内网直播系统。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>SRS是一个简单高效的实时视频服务器，支持支持RTMP&#x2F;WebRTC&#x2F;HLS&#x2F;HTTP-FLV&#x2F;SRT。同时，它也自带了网页播放器srs-player。</p>
<p><img src="https://cdn.sujx.net/SRS-Overview-4.0.png"></p>
<p>我们主要使用右上角的功能，即从视频源走RTMP协议推流到SRS Server，然后客户端通过RTMP、HTTP-FLV拉取视频流。</p>
<h3 id="服务搭建"><a href="#服务搭建" class="headerlink" title="服务搭建"></a>服务搭建</h3><h4 id="容器部署"><a href="#容器部署" class="headerlink" title="容器部署"></a>容器部署</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开放端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">8080</span>/tcp,1935/tcp,1985/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment"># 部署docker服务</span>
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">1935</span>:1935 <span class="token parameter variable">-p</span> <span class="token number">1985</span>:1985 <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 registry.cn-hangzhou.aliyuncs.com/ossrs/srs:4 ./objs/srs <span class="token parameter variable">-c</span> conf/docker.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="标准部署"><a href="#标准部署" class="headerlink" title="标准部署"></a>标准部署</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认支持centos7</span>
<span class="token comment"># 开放端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">8080</span>/tcp,1935/tcp,1985/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment"># 拉取源码</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc gcc-c++ <span class="token function">make</span> automake m4 patch
<span class="token builtin class-name">cd</span> /opt
<span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4</span>.0release https://gitee.com/ossrs/srs.git
<span class="token comment"># 编译安装</span>
<span class="token builtin class-name">cd</span> srs/trunk
./configure <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
<span class="token comment"># 配置启动脚本</span>
<span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/srs/etc/init.d/srs /etc/init.d/srs <span class="token operator">&amp;&amp;</span>
<span class="token function">cp</span> <span class="token parameter variable">-f</span> /usr/local/srs/usr/lib/systemd/system/srs.service /usr/lib/systemd/system/srs.service <span class="token operator">&amp;&amp;</span>
systemctl daemon-reload <span class="token operator">&amp;&amp;</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> srs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="管理后台"><a href="#管理后台" class="headerlink" title="管理后台"></a>管理后台</h3><ol>
<li>使用浏览器访问服务器8080端口<br><img src="https://cdn.sujx.net/SRS-dashbord.png" alt="console"></li>
<li>管理后台<br><img src="https://cdn.sujx.net/SRS-admin.png" alt="admin"></li>
<li>网页播放<br><img src="https://cdn.sujx.net/SRS-player.png" alt="HTML5-Player"></li>
</ol>
<h2 id="推流"><a href="#推流" class="headerlink" title="推流"></a>推流</h2><h3 id="安装OBS"><a href="#安装OBS" class="headerlink" title="安装OBS"></a>安装OBS</h3><p><a href="https://obsproject.com/zh-cn">OBS</a>官网下载OBS，过程略</p>
<h3 id="对接服务"><a href="#对接服务" class="headerlink" title="对接服务"></a>对接服务</h3><iframe src="//player.bilibili.com/player.html?aid=500681484&bvid=BV1GK411G767&cid=267979037&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">推流地址：rtmp://192.168.79.13/live
默认秘钥：1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h3><iframe src="//player.bilibili.com/player.html?aid=626749342&bvid=BV1wt4y1Q7rV&cid=221421156&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h4 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装FFMPEG,后续需要使用ffplayer包含在此包中</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-<span class="token variable"><span class="token variable">$(</span><span class="token function">rpm</span> <span class="token parameter variable">-E</span> %fedora<span class="token variable">)</span></span>.noarch.rpm
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-<span class="token variable"><span class="token variable">$(</span><span class="token function">rpm</span> <span class="token parameter variable">-E</span> %fedora<span class="token variable">)</span></span>.noarch.rpm
dnf makecache
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> ffmpeg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="添加Ansible"><a href="#添加Ansible" class="headerlink" title="添加Ansible"></a>添加Ansible</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 控制端安装Ansible</span>
<span class="token builtin class-name">cd</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> ansible
<span class="token function">cp</span> /etc/ansible/ansible.cfg ./
<span class="token function">cat</span> <span class="token operator">></span> ansible.cfg <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[defaults]
inventory      = ./.inventory
forks          = 50
poll_interval  = 15
transport      = smart
remote_port    = 22
timeout = 10
log_path = ./ansible.log
executable = /bin/bash
deprecation_warnings = False

[privilege_escalation]
become=False
become_method=sudo
become_user=sujx
become_ask_pass=False

[paramiko_connection]
host_key_auto_add = True
EOF</span>

<span class="token function">cat</span> <span class="token operator">></span> .inventory <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[ffplay]
192.168.79.200
192.168.79.203
EOF</span>

<span class="token comment"># 实现免密登录</span>
ssh-keygen 
ssh-copy-id sujx@192.168.79.203
ssh-copy-id sujx@192.168.79.200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="实现控制"><a href="#实现控制" class="headerlink" title="实现控制"></a>实现控制</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启远程主机Firefox</span>
<span class="token comment"># Firefox默认不支持命令实现全屏，需要添加参数指定firefox在本地启动</span>
ansible ffplay <span class="token parameter variable">-a</span> <span class="token string">'firefox --display=:0 https://www.sujx.net'</span>
<span class="token comment"># 远程开启视频流播放</span>
<span class="token comment"># 默认开启全屏</span>
ansible ffplay <span class="token parameter variable">-a</span> <span class="token string">'ffplay -fs -fflags nobuffer rtmp://192.168.79.13/live/1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="已实现需求"><a href="#已实现需求" class="headerlink" title="已实现需求"></a>已实现需求</h3><ol>
<li>局域网广播视频、音频；</li>
<li>批量同时拉起多台主机进行视频播放；</li>
<li>批量关闭播放视频并恢复原先进程；</li>
</ol>
<h3 id="未实现功能"><a href="#未实现功能" class="headerlink" title="未实现功能"></a>未实现功能</h3><ol>
<li>OBS的使用需要进行学习和操作练习；</li>
<li>客户端管理需要配置Ansible，即便将命令制作别名简化操作，也还要多个步骤完成；</li>
<li>定时运行可部分解决问题，但灵活性不足。</li>
</ol>
]]></content>
      <tags>
        <tag>SRS</tag>
        <tag>OBS</tag>
        <tag>livestream</tag>
      </tags>
  </entry>
  <entry>
    <title>WAZUH的从入门到上线</title>
    <url>/2022/01/01/wazuh-from-newbee-2-online/</url>
    <content><![CDATA[<p>[Wazuh](<a href="https://wazuh.com/">Wazuh · The Open Source Security Platform</a>)是一整套基于ossec安全检测工具和EFK日志工具构成的终端安全管理工具。不管是将其分类至HIDS，还是EDR，它都是一套通过监控主机日志行为，提供安全检测、分析和完整报告的开源、免费利器。Wazuh基于C&#x2F;S架构，它的Agent支持Windows、MacOS、Linux、HP-UX、AIX等主流操作系统。其服务端负责提供认证和数据收集，然后通过filebeat进行日志清洗，最后导入ElasticSearch，通过Kinbana进行展示和输出日志。它不仅可以收集主机的事件日志进行一般的入侵检测功能，还可以通过第三方提供的系统漏洞检测feed文件，来实现主机的漏洞扫描和合规检查。</p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="功能示例"><a href="#功能示例" class="headerlink" title="功能示例"></a>功能示例</h3><p><img src="https://cdn.sujx.net/data_flow1.png" alt="data_flow"></p>
<h3 id="组件模块"><a href="#组件模块" class="headerlink" title="组件模块"></a>组件模块</h3><p>Wazuh的组件分为三部分：</p>
<ol>
<li><p>客户端的功能<br><img src="https://cdn.sujx.net/architecture_agent1.png" alt="agent"></p>
<ol>
<li>收集日志和事件日志；</li>
<li>文件和注册表的监控；</li>
<li>运行进程和安装软件的信息收集；</li>
<li>监控系统端口和网络配置；</li>
<li>检测恶意软件；</li>
<li>配置管理和策略监控</li>
<li>检测主机响应</li>
</ol>
</li>
<li><p>服务端</p>
<p><img src="https://cdn.sujx.net/architecture_server1.png" alt="server"></p>
<ol>
<li>客户端的服务器注册；</li>
<li>实现客户端的连接服务；</li>
<li>根据各项规则实现事件日志的分析引擎；</li>
<li>提供RESTful API；</li>
<li>实现服务端的群集化；</li>
<li>使用Filebeat将日志文件吐给ES存储</li>
</ol>
</li>
<li><p>Elastic Stack</p>
<p><img src="https://cdn.sujx.net/wazuh-show.PNG" alt="show"></p>
<ol>
<li>事件日志的收集存储；</li>
<li>日志的分析和提供搜索功能；</li>
<li>展示和分析事件日志；</li>
</ol>
</li>
</ol>
<hr>
<h2 id="单点部署"><a href="#单点部署" class="headerlink" title="单点部署"></a>单点部署</h2><h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><ol>
<li><p>端口要求</p>
<table>
<thead>
<tr>
<th>Component</th>
<th>Software</th>
<th>Port</th>
<th>Protocol</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Wazuh server</td>
<td>Wazuh manager</td>
<td>1514</td>
<td>TCP (default)</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1514</td>
<td>UDP</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1515</td>
<td>TCP</td>
<td>Agents registration service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1516</td>
<td>TCP</td>
<td>Wazuh cluster daemon</td>
</tr>
<tr>
<td></td>
<td>Wazuh API</td>
<td>55000</td>
<td>TCP</td>
<td>Wazuh RESTful API</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>Elasticsearch</td>
<td>9200</td>
<td>TCP</td>
<td>Elasticsearch RESTful API</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9300-9400</td>
<td>TCP</td>
<td>Elasticsearch cluster communication</td>
</tr>
<tr>
<td></td>
<td>Kibana</td>
<td>5601</td>
<td>TCP</td>
<td>Kibana web interface</td>
</tr>
</tbody></table>
</li>
<li><p>系统要求</p>
<ol>
<li>服务端只能部署到Linux主机上</li>
<li>建议使用RHEL&#x2F;CentOS 6.x、Ubuntu 12、Debian 7 版本以上</li>
</ol>
</li>
<li><p>硬件要求</p>
<table>
<thead>
<tr>
<th></th>
<th>最小配置</th>
<th></th>
<th>建议配置</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>组件</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
</tr>
<tr>
<td>Wazuh server</td>
<td>2</td>
<td>2</td>
<td>8</td>
<td>4</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>4</td>
<td>2</td>
<td>16</td>
<td>8</td>
</tr>
</tbody></table>
</li>
<li><p>存储配置</p>
<ol>
<li>需要单独配置wazuh server的日志存储分区；</li>
<li>需要按当前月度日志量x6的最低要求配置，实际运行建议至少每台Wazuh Server配置100G日志存储；</li>
<li>Elastic存储需要汇总多台Wazuh Server日志，至少需要保留半年日志量，建议配置1T存储。</li>
</ol>
</li>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/deployment1.png" alt="topo"></p>
</li>
</ol>
<hr>
<h3 id="部署方案"><a href="#部署方案" class="headerlink" title="部署方案"></a>部署方案</h3><ol>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/wazuh-deploy-single.png" alt="topo"></p>
</li>
<li><p>网络地址</p>
<table>
<thead>
<tr>
<th align="center">系统角色</th>
<th align="center">版本</th>
<th align="center">网络地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ElasticSearch</td>
<td align="center">7.11.2</td>
<td align="center">172.31.101.63</td>
</tr>
<tr>
<td align="center">Kibana</td>
<td align="center">7.11.2</td>
<td align="center">172.31.101.57</td>
</tr>
<tr>
<td align="center">WazuhMaster</td>
<td align="center">4.1.5</td>
<td align="center">172.31.101.57</td>
</tr>
<tr>
<td align="center">WazuhAgent</td>
<td align="center">4..0.3</td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
</ol>
<h3 id="部署实施"><a href="#部署实施" class="headerlink" title="部署实施"></a>部署实施</h3><ol>
<li><p>ElasticSearch的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>
<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> elasticsearch-7.11.2

<span class="token comment"># 导入配置文件</span>
<span class="token function">mv</span> /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml-bak
<span class="token function">touch</span> /etc/elasticsearch/elasticsearch.yml
<span class="token function">cat</span> <span class="token operator">></span> /etc/elasticsearch/elasticsearch.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
cluster.name: elastic
node.name: elasticnode1
network.host: 172.31.101.63
cluster.initial_master_nodes: ["elasticnode1"]

path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch
EOF</span>

<span class="token comment"># 开通防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>elasticsearch 
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> elasticsearch
systemctl start elasticsearch

<span class="token comment"># 校验服务</span>
<span class="token comment"># 使用其他主机访问es环境</span>
<span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://172.31.101.63:9200
<span class="token punctuation">&#123;</span>
  <span class="token string">"name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elasticnode1"</span>,
  <span class="token string">"cluster_name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elastic"</span>,
  <span class="token string">"cluster_uuid"</span> <span class="token builtin class-name">:</span> <span class="token string">"ahjxhVEHREKNmBAfjcuyNw"</span>,
  <span class="token string">"version"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"number"</span> <span class="token builtin class-name">:</span> <span class="token string">"7.11.2"</span>,
    <span class="token string">"build_flavor"</span> <span class="token builtin class-name">:</span> <span class="token string">"default"</span>,
    <span class="token string">"build_type"</span> <span class="token builtin class-name">:</span> <span class="token string">"rpm"</span>,
    <span class="token string">"build_hash"</span> <span class="token builtin class-name">:</span> <span class="token string">"3e5a16cfec50876d20ea77b075070932c6464c7d"</span>,
    <span class="token string">"build_date"</span> <span class="token builtin class-name">:</span> <span class="token string">"2021-03-06T05:54:38.141101Z"</span>,
    <span class="token string">"build_snapshot"</span> <span class="token builtin class-name">:</span> false,
    <span class="token string">"lucene_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"8.7.0"</span>,
    <span class="token string">"minimum_wire_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.8.0"</span>,
    <span class="token string">"minimum_index_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.0.0-beta1"</span>
  <span class="token punctuation">&#125;</span>,
  <span class="token string">"tagline"</span> <span class="token builtin class-name">:</span> <span class="token string">"You Know, for Search"</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Kibana的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入源秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kibana-7.11.2

<span class="token comment"># 修改配置文件</span>
<span class="token function">cp</span> /etc/kibana/kibana.yml /etc/kibana/kibana.yml-bak
<span class="token function">cat</span> <span class="token operator">>></span> /etc/kibana/kibana.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
server.port: 5601
server.host: "localhost"
server.name: "kibana"
i18n.locale: "zh-CN"
elasticsearch.hosts: ["http://172.31.101.63:9200"]
kibana.index: ".kibana"
kibana.defaultAppId: "home"
server.defaultRoute : "/app/wazuh"
EOF</span>

<span class="token comment"># 创建数据目录</span>
<span class="token function">mkdir</span> /usr/share/kibana/data
<span class="token function">chown</span> <span class="token parameter variable">-R</span> kibana:kibana /usr/share/kibana

<span class="token comment"># 离线安装插件</span>
<span class="token function">wget</span> https://packages.wazuh.com/4.x/ui/kibana/wazuh_kibana-4.1.5_7.11.2-1.zip
<span class="token function">cp</span> ./wazuh_kibana-4.1.5_7.11.2-1.zip /tmp
<span class="token builtin class-name">cd</span> /usr/share/kibana
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> kibana /usr/share/kibana/bin/kibana-plugin <span class="token function">install</span> file:///tmp/wazuh_kibana-4.1.5_7.11.2-1.zip

<span class="token comment"># 配置服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> kibana
systemctl start kibana

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo

<span class="token comment"># 配置反向代理</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> nginx
<span class="token function">vim</span> /etc/ngix/nginx.conf.default
<span class="token comment"># 在server&#123;&#125;中添加配置项</span>
​``<span class="token variable"><span class="token variable">`</span>
        proxy_redirect           off<span class="token punctuation">;</span>
        proxy_set_header         X-Real-IP $remote_addr<span class="token punctuation">;</span>
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for<span class="token punctuation">;</span>
        proxy_set_header         Host $http_host<span class="token punctuation">;</span>

        location / <span class="token punctuation">&#123;</span>
                proxy_pass http://localhost:5601/<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
​<span class="token variable">`</span></span>``
nginx <span class="token parameter variable">-s</span> reload

<span class="token comment"># 登录kibana之后选择wazuh插件</span>
<span class="token comment"># 返回控制台修改插件配置文件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> ‘:s/localhost/172.31.101.57/g’ /usr/share/kibana/data/wazuh/config/wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> <img src="https://cdn.sujx.net/wazuh-kibana-install.PNG" alt="wazuh"></p>
</li>
<li><p>WazuhMaster的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packages.wazuh.com/key/GPG-KEY-WAZUH
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch

<span class="token comment"># 配置官方软件源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/wazuh.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[wazuh]
gpgcheck=1
gpgkey=https://packages.wazuh.com/key/GPG-KEY-WAZUH
enabled=1
name=EL-<span class="token variable">$releasever</span> - Wazuh
baseurl=https://packages.wazuh.com/4.x/yum/
protect=1
EOF</span>

<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> wazuh-manager
yum <span class="token function">install</span> filebeat-7.11.2

<span class="token comment"># 配置Filebeat</span>
<span class="token function">mv</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml-bak
<span class="token function">touch</span> /etc/filebeat/filebeat.yml

<span class="token function">cat</span> <span class="token operator">></span> /etc/filebeat/filebeat.yml<span class="token operator">&lt;&lt;</span><span class="token string">EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: '/etc/filebeat/wazuh-template.json'
setup.template.json.name: 'wazuh'
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: ['http://172.31.101.63:9200']
EOF</span>

<span class="token comment"># 导入filebeat的wazuh日志模板</span>
<span class="token function">curl</span> <span class="token parameter variable">-so</span> /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.1/extensions/elasticsearch/7.x/wazuh-template.json
<span class="token function">chmod</span> go+r /etc/filebeat/wazuh-template.json

<span class="token comment"># 导入filebeat的wazuh日志模型</span>
<span class="token function">curl</span> <span class="token parameter variable">-s</span> https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.1.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> <span class="token parameter variable">-xvz</span> <span class="token parameter variable">-C</span> /usr/share/filebeat/module

<span class="token comment"># 配置防火墙规则</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp,55000/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/wazuh.repo

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> wazuh-manager
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> filebeat

<span class="token comment"># 验证Filebeat</span>
filebeat <span class="token builtin class-name">test</span> output
···
elasticsearch: http://172.31.101.63:9200<span class="token punctuation">..</span>.
  parse url<span class="token punctuation">..</span>. OK
  connection<span class="token punctuation">..</span>.
    parse host<span class="token punctuation">..</span>. OK
    dns lookup<span class="token punctuation">..</span>. OK
    addresses: <span class="token number">172.31</span>.101.63
    dial up<span class="token punctuation">..</span>. OK
  TLS<span class="token punctuation">..</span>. WARN secure connection disabled
  talk to server<span class="token punctuation">..</span>. OK
  version: <span class="token number">7.11</span>.2
  ···
<span class="token comment"># 刷新kibana</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>WazuhAgent的安装(Linux)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在es节点和kibana节点上安装</span>
<span class="token function">sudo</span> <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'172.31.101.57'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> https://packages.wazuh.com/4.x/yum/wazuh-agent-4.1.5-1.x86_64.rpm

<span class="token comment"># 启动服务</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> wazuh-agent
<span class="token function">sudo</span> systemctl start wazuh-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>WazuhAgent的安装(Windows)</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 使用管理员权限打开powershell控制台</span>
<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri https:<span class="token operator">/</span><span class="token operator">/</span>packages<span class="token punctuation">.</span>wazuh<span class="token punctuation">.</span>com/4<span class="token punctuation">.</span>x/windows/wazuh-agent-4<span class="token punctuation">.</span>1<span class="token punctuation">.</span>5-1<span class="token punctuation">.</span>msi <span class="token operator">-</span>OutFile wazuh-agent<span class="token punctuation">.</span>msi<span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token operator">/</span>wazuh-agent<span class="token punctuation">.</span>msi <span class="token operator">/</span>q WAZUH_MANAGER=<span class="token string">'172.31.101.57'</span> WAZUH_REGISTRATION_SERVER=<span class="token string">'172.31.101.57'</span> WAZUH_AGENT_GROUP=<span class="token string">'default'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://cdn.sujx.net/wazuh-kibana-login.PNG"></p>
</li>
</ol>
<hr>
<h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><h3 id="漏扫原理"><a href="#漏扫原理" class="headerlink" title="漏扫原理"></a>漏扫原理</h3><ol>
<li>Wazuh不是一个漏洞扫描工具，它只是借助本身的功能模块来实现对操作系统的漏洞监控；</li>
<li>Wazuh的漏扫依赖于Agent的对系统软件版本的扫描，上传至Master节点之后，通过在线或者离线加载的各个操作系统官方发布的CVE数据库以及美国政府发布的NVD数据库来进行对比，从而实现漏洞的检查和告警；</li>
<li>Wazuh不使用爬虫、端口扫描等传统漏扫技术路径，所以对客户端主机的性能影响极小；</li>
<li>Wazuh官方支持对数据库、中间件等软件进行漏洞扫描，但只支持操作系统发行官方库中的包，因为它是简单的按照软件包名来进行对比的；</li>
<li>Wazuh可以对接Clamav、Suricata等其他安全系统。</li>
</ol>
<hr>
<h3 id="应用模块"><a href="#应用模块" class="headerlink" title="应用模块"></a>应用模块</h3><ol start="0">
<li>配置离线文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在wazuh-master上安装Nginx</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/wazuh/os
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh

<span class="token comment"># 下载离线文件</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/
<span class="token comment"># 下载RHEL 7 8的漏洞种子文件</span>
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment"># 下载Redhat的安全数据Json文件</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/rh-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> redhat
./rh-generator.sh redhat/

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/nvd-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> nvd
 ./nvd-generator.sh <span class="token number">2010</span> nvd/

<span class="token comment"># 配置nginx文件 </span>
<span class="token function">vim</span> /etc/nginx/nginx.conf
<span class="token comment"># 在server&#123;&#125;中修改增补如下配置</span>
        root         /var/www/wazuh<span class="token punctuation">;</span>
    
        location / <span class="token punctuation">&#123;</span>
                autoindex on<span class="token punctuation">;</span>
                autoindex_exact_size off<span class="token punctuation">;</span>
                autoindex_localtime on<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置漏洞扫描模块<br>vim &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>vulnerability-detector<span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>interval<span class="token operator">></span>5m<span class="token operator">&lt;</span>/interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>ignore_time<span class="token operator">></span>6h<span class="token operator">&lt;</span>/ignore_time<span class="token operator">></span>
    <span class="token operator">&lt;</span>run_on_start<span class="token operator">></span>yes<span class="token operator">&lt;</span>/run_on_start<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- RedHat OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"redhat"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://172.31.101.57/rhel-7-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://172.31.101.57/rhel-8-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"1"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"25"</span><span class="token operator">></span>http://172.31.101.57/redhat/redhat-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Windows OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"msu"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url<span class="token operator">></span>http://172.31.101.57/msu-updates.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Aggregate vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"nvd"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"2010"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"2021"</span><span class="token operator">></span>http://172.31.101.57/nvd/nvd-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

  <span class="token operator">&lt;</span>/vulnerability-detector<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置定期更新漏洞文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/

<span class="token comment"># 下载Ubuntu 20.04的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.focal.cve.oval.xml.bz2

<span class="token comment"># 下载RHEL 6/7/8的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL6/rhel-6-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment">#下载Redhat的安全数据Json文件</span>
/bin/bash /var/www/wazuh/rh-generator.sh /var/www/wazuh/redhat

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
/bin/bash /var/www/wazuh/nvd-generator.sh <span class="token number">2010</span> /var/www/wazuh/nvd

<span class="token comment"># 更新文件权限</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh

<span class="token comment"># 重启服务,更新数据库</span>
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>查询漏扫情况</li>
</ol>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vul.PNG" alt="vul"></p>
<ol start="3">
<li><p>邮件告警</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启全局邮件通知</span>
<span class="token comment"># Wazuh本身没有邮件功能，它依赖系统的邮件投递</span>
  <span class="token operator">&lt;</span>global<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_notification<span class="token operator">></span>yes<span class="token operator">&lt;</span>/email_notification<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
      <span class="token operator">&lt;</span>smtp_server<span class="token operator">></span>exmail.qq.com<span class="token operator">&lt;</span>/smtp_server<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_from<span class="token operator">></span>i@sujx.net<span class="token operator">&lt;</span>/email_from<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_maxperhour<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_maxperhour<span class="token operator">></span>
  <span class="token operator">&lt;</span>/global<span class="token operator">></span>

<span class="token comment"># 定义邮件告警级别，设定事件级别>=12级即发送邮件告警</span>
  <span class="token operator">&lt;</span>alerts<span class="token operator">></span>
    <span class="token operator">&lt;</span>log_alert_level<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/log_alert_level<span class="token operator">></span>
    <span class="token operator">&lt;</span>email_alert_level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_alert_level<span class="token operator">></span>
  <span class="token operator">&lt;</span>/alerts<span class="token operator">></span>
  
<span class="token comment"># 定义每日高危漏洞通知(>=13级漏洞)</span>
  <span class="token operator">&lt;</span>reports<span class="token operator">></span>
      <span class="token operator">&lt;</span>level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/level<span class="token operator">></span>
      <span class="token operator">&lt;</span>title<span class="token operator">></span>Daily report: Alerts with level higher than <span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/title<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
  <span class="token operator">&lt;</span>/reports<span class="token operator">></span>
  
<span class="token comment"># 强制发送告警邮件，即不管上述如何设定一定要发邮件告警，是配置在rule上，而不是全局conf中</span>
  <span class="token operator">&lt;</span>rule <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"502"</span> <span class="token assign-left variable">level</span><span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>if_sid<span class="token operator">></span><span class="token number">50</span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/if_sid<span class="token operator">></span>
    <span class="token operator">&lt;</span>options<span class="token operator">></span>alert_by_email<span class="token operator">&lt;</span>/options<span class="token operator">></span>
    <span class="token operator">&lt;</span>match<span class="token operator">></span>Ossec started<span class="token operator">&lt;</span>/match<span class="token operator">></span>
    <span class="token operator">&lt;</span>description<span class="token operator">></span>Ossec server started.<span class="token operator">&lt;</span>/description<span class="token operator">></span>
  <span class="token operator">&lt;</span>/rule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>邮件投递</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mailx
<span class="token comment"># 使用mailx发送内部邮件</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/mail.rc<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# 设定内部匿名邮件服务器
set smtp=smtp.example.com
EOF</span>
<span class="token comment"># 使用公共邮箱发送邮件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postfix mailx cyrus-sasl cyrus-sasl-plain
<span class="token comment"># 建立邮件中继</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/postfix/main.cf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
relayhost = [smtp.exmail.qq.com]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous
smtp_tls_CAfile = /etc/ssl/certs/ca-bundle.crt
smtp_use_tls = yes
EOF</span>
<span class="token comment"># 设定使用i@sujx.net发送邮件给指定接收方</span>
<span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>smtp.exmail.qq.com<span class="token punctuation">]</span>:587 i@sujx.net:PASSWORD <span class="token operator">></span> /etc/postfix/sasl_passwd
postmap /etc/postfix/sasl_passwd
<span class="token function">chmod</span> <span class="token number">400</span> /etc/postfix/sasl_passwd

<span class="token function">chown</span> root:root /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db
<span class="token function">chmod</span> 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db

<span class="token comment"># 重置服务</span>
systemctl reload postfix

<span class="token comment"># 邮件测试</span>
<span class="token builtin class-name">echo</span> <span class="token string">"Test mail from postfix"</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">"Test Postfix"</span> <span class="token parameter variable">-r</span> <span class="token string">"i@sujx.net"</span> sujx@live.cn

<span class="token comment"># 邮件告警</span>

Wazuh Notification.
<span class="token number">2021</span> Jul 03 <span class="token number">23</span>:21:09

Received From: <span class="token punctuation">(</span>server002.sujx.net<span class="token punctuation">)</span> any-<span class="token operator">></span>syscheck
Rule: <span class="token number">550</span> fired <span class="token punctuation">(</span>level <span class="token number">7</span><span class="token punctuation">)</span> -<span class="token operator">></span> <span class="token string">"Integrity checksum changed."</span>
Portion of the log<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:

File <span class="token string">'/etc/sysconfig/iptables.save'</span> modified
Mode: scheduled
Changed attributes: mtime,md5,sha1,sha256
…………
<span class="token parameter variable">--END</span> OF NOTIFICATION

<span class="token comment"># 邮件报告</span>

Report <span class="token string">'Daily report: Alerts with level higher than 13.'</span> completed.
------------------------------------------------
-<span class="token operator">></span>Processed alerts: <span class="token number">481384</span>
-<span class="token operator">></span>Post-filtering alerts: <span class="token number">1953</span>
-<span class="token operator">></span>First alert: <span class="token number">2021</span> Jun <span class="token number">29</span> 00:06:08
-<span class="token operator">></span>Last alert: <span class="token number">2021</span> Jun <span class="token number">29</span> <span class="token number">23</span>:59:17
Top entries <span class="token keyword">for</span> <span class="token string">'Level'</span><span class="token builtin class-name">:</span>
------------------------------------------------
Severity <span class="token number">13</span>                                                                   <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Group'</span><span class="token builtin class-name">:</span>
------------------------------------------------
gdpr_IV_35.7.d                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.1                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.3                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.1                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.2                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
vulnerability-detector                                                        <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Location'</span><span class="token builtin class-name">:</span>
……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>使用Kibana产生PDF版本的漏洞报告</p>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vulrep.PNG" alt="report"></p>
</li>
</ol>
<hr>
<h3 id="生产建议"><a href="#生产建议" class="headerlink" title="生产建议"></a>生产建议</h3><ol>
<li>由于Wazuh的漏扫模块很容易将CPU资源打满，建议使用wazuh的群集模式部署相应数量的worker来承担漏扫功能。</li>
<li>Wazuh的worker建议使用4核4G的配置进行部署，其内存占用2G左右，但CPU占用较高，且多核性能不理想。官方回复是以后版本会改进。</li>
<li>如果要求每天(24hour)产生一次全网漏扫报告的话，建议使用200:1的比例部署worker；</li>
<li>由于Wazuh的多线程优化以及Cluster模式下worker管理的优化存在问题，在面对&gt;1000台以上的agent环境中，建议使用高配物理机部署。</li>
</ol>
<hr>
<h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><h4 id="使用系统官方库"><a href="#使用系统官方库" class="headerlink" title="使用系统官方库"></a>使用系统官方库</h4><ol>
<li><p>安装数据库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum makecache
<span class="token comment"># 系统自带版本为10</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postgresql postgresql-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>启动数据库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动服务</span>
postgresql-setup initdb
systemctl <span class="token builtin class-name">enable</span> postgresql.service <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>执行漏洞检测</p>
<p><img src="https://cdn.sujx.net/wazuh_monitor_postgresql.png" alt="postgresql"></p>
</li>
</ol>
<h4 id="使用软件官方库"><a href="#使用软件官方库" class="headerlink" title="使用软件官方库"></a>使用软件官方库</h4><ol>
<li>安装数据库<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装PG官方源</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
<span class="token comment"># 添加更新源，安装版本以12版本为例</span>
yum makecache
<span class="token comment"># 安装数据库</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postgresql12 postgresql12-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>启动数据库<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/lib/pgsql/12/data/
<span class="token function">chown</span> postgres:postgres /var/lib/pgsql/12/ <span class="token parameter variable">-R</span>

<span class="token comment"># 启动服务</span>
postgresql-12-setup initdb
systemctl <span class="token builtin class-name">enable</span> postgresql-12.service <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>执行漏洞检测</li>
</ol>
<ul>
<li>无检测结果</li>
</ul>
<h4 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h4><p>Wazuh使用软件包名或者KB名来进行对比，对于RPM系发行版就是访问rpminfo数据库来进行对比。<br>以postgresql为例</p>
<ol>
<li><p>Redhat官方漏洞库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># redhat官方的漏洞库中是有postgresql12的漏洞的</span>
 <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"Module postgresql:12 is enabled"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229037"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229001"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229002"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229007"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229008"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229009"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229010"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229011"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229012"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229013"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229014"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229015"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229016"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229017"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229018"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229019"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229020"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229023"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229024"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229025"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229026"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229029"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229030"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229031"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229032"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229033"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229034"</span>/<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://cdn.sujx.net/postgresql-vuln.png" alt="vuln"></p>
</li>
<li><p>PG官方包的名称</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>sujx@postgresql ~<span class="token punctuation">]</span>$ <span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span><span class="token function">grep</span> postgresql
postgresql12-12.7-2PGDG.rhel8.x86_64
postgresql12-libs-12.7-2PGDG.rhel8.x86_64
postgresql12-server-12.7-2PGDG.rhel8.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>postgresql12 ≠ postgresql,所以wazuh使用redhat的OVAL文件可以搜出redhat打包的postgresql的漏洞，其他就不可以。</p>
<h2 id="维护管理"><a href="#维护管理" class="headerlink" title="维护管理"></a>维护管理</h2><h3 id="客户端的删除"><a href="#客户端的删除" class="headerlink" title="客户端的删除"></a>客户端的删除</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /var/ossec/bin/
<span class="token comment"># 执行管理程序</span>
<span class="token punctuation">[</span>root@vlnx101057 bin<span class="token punctuation">]</span><span class="token comment"># ./manage_agents </span>

****************************************
* Wazuh v4.1.5 Agent manager.          *
* The following options are available: *
****************************************
   <span class="token punctuation">(</span>A<span class="token punctuation">)</span>dd an agent <span class="token punctuation">(</span>A<span class="token punctuation">)</span>.                手动增加客户端
   <span class="token punctuation">(</span>E<span class="token punctuation">)</span>xtract key <span class="token keyword">for</span> an agent <span class="token punctuation">(</span>E<span class="token punctuation">)</span>.     提取客户端秘钥
   <span class="token punctuation">(</span>L<span class="token punctuation">)</span>ist already added agents <span class="token punctuation">(</span>L<span class="token punctuation">)</span>.    列出当前客户端
   <span class="token punctuation">(</span>R<span class="token punctuation">)</span>emove an agent <span class="token punctuation">(</span>R<span class="token punctuation">)</span>.              删除客户端
   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.                             退出
Choose your action: A,E,L,R or Q:R      输入R，确认删除客户端
Provide the ID of the agent to be removed <span class="token punctuation">(</span>or <span class="token string">'\q'</span> to quit<span class="token punctuation">)</span>: <span class="token number">180</span>     输入agent <span class="token function">id</span>
Confirm deleting it?<span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>:               确认删除
Agent <span class="token string">'180'</span> removed.                    完成删除  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="客户端的离线注册"><a href="#客户端的离线注册" class="headerlink" title="客户端的离线注册"></a>客户端的离线注册</h3><p>Wazuh-Manager和Wazuh-Agent之间通过1515&#x2F;tcp端口来进行认证的，具体实现形式类似CA证书的形式。Manager有自建Key，然后Agent通过注册的形式提交主机名、IP地址获取相应的ID和Key。注册之后，Manager和Agent就不再使用1515端口进行认证，只使用1514&#x2F;TCP端口进行加密的数据通讯。</p>
<p>在无法开通1515&#x2F;tcp端口或者其他特定情况下，我们需要离线注册Wazuh-Agent。大体步骤为：</p>
<ol>
<li>在管理端注册Agent主机名和IP地址，并获取相应主机ID;</li>
<li>导出客户端注册Key；</li>
<li>在Agent上导入上述Key；</li>
<li>重启Agent服务。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># on the Manger</span>
/var/ossec/bin/manage_agents <span class="token parameter variable">-a</span> <span class="token operator">&lt;</span>agent_IP<span class="token operator">></span> <span class="token parameter variable">-n</span> <span class="token operator">&lt;</span>agent_name<span class="token operator">></span>
/var/ossec/bin/manage_agents <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token operator">&lt;</span>agent_name<span class="token operator">></span>
ID: 001, Name: agent_1, IP: any
/var/ossec/bin/manage_agents <span class="token parameter variable">-e</span> <span class="token operator">&lt;</span>agent_id<span class="token operator">></span>
Agent key information <span class="token keyword">for</span> <span class="token string">'001'</span> is:
<span class="token assign-left variable">MDAxIDE4NWVlNjE1Y2YzYiBhbnkgMGNmMDFiYTM3NmMxY2JjNjU0NDAwYmFhZDY1ZWU1YjcyMGI2NDY3ODhkNGQzMjM5ZTdlNGVmNzQzMGFjMDA4Nw</span><span class="token operator">==</span>

<span class="token comment"># on the Agent</span>
/var/ossec/bin/manage_agents <span class="token parameter variable">-i</span> <span class="token operator">&lt;</span>key<span class="token operator">></span>
<span class="token comment"># 修改Agent上的Manager IP</span>
<span class="token function">vim</span> /var/ossec/etc/ossec.conf
<span class="token operator">&lt;</span>client<span class="token operator">></span>
  <span class="token operator">&lt;</span>server<span class="token operator">></span>
    <span class="token operator">&lt;</span>address<span class="token operator">></span>MANAGER_IP<span class="token operator">&lt;</span>/address<span class="token operator">></span>
    <span class="token punctuation">..</span>.
  <span class="token operator">&lt;</span>/server<span class="token operator">></span>
<span class="token operator">&lt;</span>/client<span class="token operator">></span>
systemctl restart wazuh-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>此外，Wazuh Manager默认是开放认证的，即只要知道Manager的IP就可直接注册。但它也支持通过密码认证、通过SSL证书认证、通过API认证、通过主机环境认证(限定主机名和主机组来认证)。<br>以下，仅提供密码认证的配置介绍：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在Manager主机上打开密码认证选项</span>
<span class="token comment"># vim /var/ossec/etc/ossec.conf</span>
<span class="token operator">&lt;</span>auth<span class="token operator">></span>
  <span class="token punctuation">..</span>.
  <span class="token operator">&lt;</span>use_password<span class="token operator">></span>yes<span class="token operator">&lt;</span>/use_password<span class="token operator">></span>
  <span class="token punctuation">..</span>.
<span class="token operator">&lt;</span>/auth<span class="token operator">></span>

<span class="token comment"># 添加随机密码</span>
systemctl restart wazuh-manager
<span class="token function">grep</span> <span class="token string">"Random password"</span> /var/ossec/logs/ossec.log

<span class="token comment"># 添加指定密码</span>
<span class="token comment"># 如不进行如下操作，wazuh实际就会产生一个随机密码</span>
<span class="token builtin class-name">echo</span> <span class="token string">"&lt;custom_password>"</span> <span class="token operator">></span> /var/ossec/etc/authd.pass
systemctl restart wazuh-manager

<span class="token comment"># 在Agent上开启密码认证并注册</span>
/var/ossec/bin/agent-auth <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>manager_IP<span class="token operator">></span> <span class="token parameter variable">-P</span> <span class="token string">"&lt;custom_password>"</span>
systemctl restart wazuh-agent

<span class="token comment"># 或者将密码注入相应文件</span>
<span class="token builtin class-name">echo</span> <span class="token string">"&lt;custom_password>"</span> <span class="token operator">></span> /var/ossec/etc/authd.pass
/var/ossec/bin/agent-auth <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>manager_IP<span class="token operator">></span>
systemctl restart wazuh-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="系统调优"><a href="#系统调优" class="headerlink" title="系统调优"></a>系统调优</h2><p>wazuh本身是一个对资源要求较低的系统，但长期运行下来，还是会出现各种各样资源使用不足的问题。因此，需要进行一定程度的优化和调整</p>
<h3 id="调整ES参数"><a href="#调整ES参数" class="headerlink" title="调整ES参数"></a>调整ES参数</h3><h4 id="开启内存锁定参数"><a href="#开启内存锁定参数" class="headerlink" title="开启内存锁定参数"></a>开启内存锁定参数</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 锁定物理内存地址，防止ES内存被交换出去，避免频繁使用swap分区</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/elasticsearch/elasticsearch.yml <span class="token operator">&lt;&lt;</span><span class="token string">EOF
bootstrap.memory_lock: true
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="限制系统资源"><a href="#限制系统资源" class="headerlink" title="限制系统资源"></a>限制系统资源</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置Elasticsearch的systemd调用</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/systemd/system/elasticsearch.service.d/
 
<span class="token function">cat</span> <span class="token operator">></span> /etc/systemd/system/elasticsearch.service.d/elasticsearch.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Service]
LimitMEMLOCK=infinity
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="调整内核参数"><a href="#调整内核参数" class="headerlink" title="调整内核参数"></a>调整内核参数</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">>></span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="调整JVM参数"><a href="#调整JVM参数" class="headerlink" title="调整JVM参数"></a>调整JVM参数</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在可用内存使用率不超过50%，且使用量不超过32GB内存的情况下，设定Xms和Xmx的值为当年内存总量的一半</span>
<span class="token comment"># 当前内存总量为8GB</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/elasticsearch/jvm.options <span class="token operator">&lt;&lt;</span><span class="token string">EOF
-Xms4g
-Xmx4g
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload
systemctl restart elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="设置分片和副本数据量"><a href="#设置分片和副本数据量" class="headerlink" title="设置分片和副本数据量"></a>设置分片和副本数据量</h3><h4 id="Wazuh设置单节点ES主机"><a href="#Wazuh设置单节点ES主机" class="headerlink" title="Wazuh设置单节点ES主机"></a>Wazuh设置单节点ES主机</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取Wazuh ES 模板</span>
<span class="token function">curl</span> https://raw.githubusercontent.com/wazuh/wazuh/v4.1.5/extensions/elasticsearch/7.x/wazuh-template.json <span class="token parameter variable">-o</span> w-elastic-template.json
<span class="token comment"># 结合实际环境，设置分片数为1，副本数为0</span>
  
<span class="token punctuation">&#123;</span>
  <span class="token string">"order"</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
  <span class="token string">"index_patterns"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"wazuh-alerts-4.x-*"</span><span class="token punctuation">]</span>,
  <span class="token string">"settings"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"index.refresh_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"5s"</span>,
    <span class="token string">"index.number_of_shards"</span><span class="token builtin class-name">:</span> <span class="token string">"1"</span>,
    <span class="token string">"index.number_of_replicas"</span><span class="token builtin class-name">:</span> <span class="token string">"0"</span>,
    <span class="token string">"index.auto_expand_replicas"</span><span class="token builtin class-name">:</span> <span class="token string">"0-1"</span>,
    <span class="token string">"index.mapping.total_fields.limit"</span><span class="token builtin class-name">:</span> <span class="token number">2000</span>
  <span class="token punctuation">&#125;</span>,
  <span class="token string">"mappings"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
  <span class="token string">"..."</span><span class="token builtin class-name">:</span> <span class="token string">"..."</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 应用模板</span>
<span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT <span class="token string">"http://localhost:9200/_template/wazuh-custom"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> <span class="token parameter variable">-d</span> @w-elastic-template.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="设置永久分片数"><a href="#设置永久分片数" class="headerlink" title="设置永久分片数"></a>设置永久分片数</h4>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置ES的永久分片数为20000</span>
<span class="token function">curl</span> <span class="token parameter variable">-XPUT</span>  <span class="token string">"127.0.0.1:9200/_cluster/settings"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> <span class="token parameter variable">-d</span> <span class="token string">'&#123;"persistent":&#123;"cluster":&#123;"max_shards_per_node":20000&#125;&#125;&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="删除过期分片"><a href="#删除过期分片" class="headerlink" title="删除过期分片"></a>删除过期分片</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除2021.06所有分片</span>
<span class="token function">curl</span> <span class="token parameter variable">-XDELETE</span> http://127.0.0.1:9200/wazuh-alerts-4.x-2021.06.*   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="硬件调优"><a href="#硬件调优" class="headerlink" title="硬件调优"></a>硬件调优</h3><h4 id="使用固态磁盘"><a href="#使用固态磁盘" class="headerlink" title="使用固态磁盘"></a>使用固态磁盘</h4><h4 id="更多的CPU和内存"><a href="#更多的CPU和内存" class="headerlink" title="更多的CPU和内存"></a>更多的CPU和内存</h4><h2 id="群集部署"><a href="#群集部署" class="headerlink" title="群集部署"></a>群集部署</h2><p>在中大型网络环境中，单台Allinone的Wazuh系统或者单节点的分布式部署Wazuh系统从性能上已经无法满足日志分析和漏洞扫描的需求，因此应当采用高可用、多节点的分布式部署来满足Wazuh对CPU和存储的要求。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>系统描述</th>
<th>配置</th>
<th>网络地址</th>
<th>系统角色</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Lvsnode1</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.51</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>2</td>
<td>Lvsnode2</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.52</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>3</td>
<td>Wazuhnode0</td>
<td>2c&#x2F;2g</td>
<td>192.168.79.60</td>
<td>Wazuh主节点，提供认证以及cve库</td>
</tr>
<tr>
<td>4</td>
<td>Wazuhnode1</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.61</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>5</td>
<td>Wazuhnode2</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.62</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>6</td>
<td>KibanaNode</td>
<td>2c&#x2F;4g</td>
<td>192.168.79.80</td>
<td>Kibana展示节点</td>
</tr>
<tr>
<td>7</td>
<td>ElasticNode1</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.81</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>8</td>
<td>ElasticNode2</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.82</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>9</td>
<td>ElasticNode3</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.83</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>10</td>
<td>UbuntuNode</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.127</td>
<td>Ubuntu 20.04 LTS 测试机 + Wordpress</td>
</tr>
<tr>
<td>11</td>
<td>CentOSNode</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.128</td>
<td>CentOS 8.4 测试机 + PostgreSQL</td>
</tr>
<tr>
<td>12</td>
<td>WindowsNode</td>
<td>2c&#x2F;2g</td>
<td>192.168.79.129</td>
<td>Windows Server 2012R2 测试机+ SQL Server</td>
</tr>
<tr>
<td>13</td>
<td>VIP</td>
<td>——-</td>
<td>192.168.79.50</td>
<td>前端访问IP</td>
</tr>
<tr>
<td>14</td>
<td>Gateway</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.254</td>
<td>使用iKuai提供网关服务和外部DNS服务</td>
</tr>
</tbody></table>
<p><img src="https://cdn.sujx.net/distributed_no_title4.png"></p>
<h3 id="后端存储群集"><a href="#后端存储群集" class="headerlink" title="后端存储群集"></a>后端存储群集</h3><ol>
<li><p>ElasticSearch三节点部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
# 增加官方源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF
# 安装软件
yum makecache
yum upgrade -y
yum install -y elasticsearch-7.11.2

# 导入配置文件
cp -a &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml&#123;,_$(date +%F)&#125;

# 依次在各个节点上设置
cat &gt; &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml &lt;&lt; EOF
network.host: 192.168.79.81
node.name: elasticnode1
cluster.name: elastic
cluster.initial_master_nodes:
        - elasticnode1
        - elasticnode2
        - elasticnode3
discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
EOF

# 开通防火墙
firewall-cmd --permanent --add-service&#x3D;elasticsearch 
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable elasticsearch
systemctl start elasticsearch

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo

# 在各个节点上依次部署，注意变更主机名和IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>ElasticSearch群集验证</p>
<pre class="line-numbers language-none"><code class="language-none">sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cluster&#x2F;health?pretty
&#123;
  &quot;cluster_name&quot; : &quot;elastic&quot;,
  &quot;status&quot; : &quot;green&quot;,
  &quot;timed_out&quot; : false,
  &quot;number_of_nodes&quot; : 3,
  &quot;number_of_data_nodes&quot; : 3,
  &quot;active_primary_shards&quot; : 0,
  &quot;active_shards&quot; : 0,
  &quot;relocating_shards&quot; : 0,
  &quot;initializing_shards&quot; : 0,
  &quot;unassigned_shards&quot; : 0,
  &quot;delayed_unassigned_shards&quot; : 0,
  &quot;number_of_pending_tasks&quot; : 0,
  &quot;number_of_in_flight_fetch&quot; : 0,
  &quot;task_max_waiting_in_queue_millis&quot; : 0,
  &quot;active_shards_percent_as_number&quot; : 100.0
&#125;

sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cat&#x2F;nodes?v
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
192.168.79.83           10          86   0    0.08    0.08     0.03 cdhilmrstw -      elasticnode3
192.168.79.82           18          97   0    0.01    0.12     0.08 cdhilmrstw *      elasticnode2
192.168.79.81           16          95   0    0.06    0.08     0.08 cdhilmrstw -      elasticnode1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
</li>
</ol>
<h3 id="处理系统群集"><a href="#处理系统群集" class="headerlink" title="处理系统群集"></a>处理系统群集</h3><ol>
<li><p>Wazuh Master的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch

# 配置官方软件源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo &lt;&lt; EOF
[wazuh]
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
enabled&#x3D;1
name&#x3D;EL-$releasever - Wazuh
baseurl&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;yum&#x2F;
protect&#x3D;1
EOF

cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF

# 安装软件
yum makecache
yum upgrade -y

yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1515&#x2F;tcp,1516&#x2F;tcp,55000&#x2F;tcp&#125;
firewall-cmd --reload

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat

# 测试filebeat
[root@WazuhNode0 wazuh]# filebeat test output
elasticsearch: http:&#x2F;&#x2F;192.168.79.81:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.81
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.82:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.82
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.83:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.83
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>Wazuh worker的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 同Master部署一致

# 安装软件
yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1516&#x2F;tcp&#125;
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>实现wazuh群集</p>
<pre class="line-numbers language-none"><code class="language-none"># 进行群集认证
# Master节点
#生成随机串值
openssl rand -hex 16
d84691d111f86e70e8ed7eff80cde39e

# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode0&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;master&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# Worker节点
# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode1&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;worker&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# 验证
[root@WazuhNode0 bin]# .&#x2F;cluster_control -l
NAME        TYPE    VERSION  ADDRESS        
wazuhnode0  master  4.1.5    192.168.79.60  
wazuhnode1  worker  4.1.5    192.168.79.61  
wauzhnode2  worker  4.1.5    192.168.79.62<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="前端群集"><a href="#前端群集" class="headerlink" title="前端群集"></a>前端群集</h3><ol>
<li><p>前端部署采用Keeplived+Nginx代理的模式，提供一个VIP供Wazuh的agent进行部署。</p>
</li>
<li><p>部署Nginx的TCP代理节点</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署第一个节点Node1</span>
<span class="token comment"># 开放防火墙端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 新增官方源地址</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/nginx.repo <span class="token operator">&lt;&lt;</span><span class="token punctuation">\</span>EOF
<span class="token punctuation">[</span>nginx<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>nginx repo
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
EOF

<span class="token comment"># 安装Nginx</span>
yum makecache
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> nginx.service <span class="token parameter variable">--now</span>

<span class="token comment"># 配置stream</span>
<span class="token builtin class-name">cd</span> /etc/nginx
<span class="token function">cp</span> <span class="token parameter variable">-a</span> nginx.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/nginx/nginx.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
include /etc/nginx/stream.d/*.conf;
EOF</span>

<span class="token function">mkdir</span> ./stream.d
<span class="token function">touch</span> /etc/nginx/stream.d/wazuh.conf

<span class="token function">cat</span> <span class="token operator">></span> /etc/nginx/stream.d/wazuh.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
stream &#123;
    upstream cluster &#123;
        hash <span class="token variable">$remote_addr</span> consistent;
        server 192.168.79.61:1514;
        server 192.168.79.62:1514;
    &#125;
    upstream master &#123;
        server 192.168.79.60:1515;
    &#125;
    server &#123;
        listen 1514;
        proxy_pass cluster;
    &#125;
    server &#123;
        listen 1515;
        proxy_pass master;
    &#125;
&#125;
EOF</span>

<span class="token comment"># 重启Nginx</span>
systemctl restart nginx
<span class="token comment"># 检查端口情况</span>
<span class="token punctuation">[</span>root@lvsnode1 nginx<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp</span>
Active Internet connections <span class="token punctuation">(</span>only servers<span class="token punctuation">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1514            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1515            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:80              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:22              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1022</span>/sshd           
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::80                   :::*                    LISTEN      <span class="token number">1897</span>/nginx: master  
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::22                   :::*                    LISTEN      <span class="token number">1022</span>/sshd   

<span class="token comment"># 安装Keeplived</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> keepalived
<span class="token builtin class-name">cd</span> /etc/keepalived/
<span class="token function">cp</span> <span class="token parameter variable">-a</span> keepalived.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>

<span class="token comment"># 进行配置</span>
<span class="token function">cat</span> <span class="token operator">></span> keepalived.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# Configuration File for keepalived
#
global_defs &#123;
    router_id nginxnode1
    vrrp_mcast_group4 224.0.0.18
    lvs_timeouts tcp 900 tcpfin 30 udp 300
    lvs_sync_daemon ens160 route_lvs
    vrrp_skip_check_adv_addr
    #vrrp_strict
    vrrp_garp_interval 0
    vrrp_gna_interval 0
&#125;
vrrp_instance route_lvs &#123;
    state BACKUP
    priority 100
    virtual_router_id 18
    interface ens160
    track_interface &#123;
        ens160
    &#125;
    advert_int 3
    authentication &#123;
        auth_type PASS
        auth_pass password
    &#125;
    virtual_ipaddress &#123;
        192.168.79.50/24 dev ens160 label ens160:0
    &#125;
&#125;
EOF</span>

systemctl <span class="token builtin class-name">enable</span> keepalived.service <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>验证服务</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sujx@LEGION:~$ <span class="token function">ping</span> <span class="token number">192.168</span>.79.50
PING <span class="token number">192.168</span>.79.50 <span class="token punctuation">(</span><span class="token number">192.168</span>.79.50<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from <span class="token number">192.168</span>.79.50: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.330</span> ms
<span class="token number">64</span> bytes from <span class="token number">192.168</span>.79.50: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.306</span> ms

--- <span class="token number">192.168</span>.79.50 <span class="token function">ping</span> statistics ---
<span class="token number">3</span> packets transmitted, <span class="token number">3</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 2002ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.306</span>/0.430/0.655/0.159 ms

sujx@LEGION:~$ telnet <span class="token number">192.168</span>.79.50 <span class="token number">1515</span>
Trying <span class="token number">192.168</span>.79.140<span class="token punctuation">..</span>.
Connected to <span class="token number">192.168</span>.79.140.
Escape character is <span class="token string">'^]'</span><span class="token builtin class-name">.</span>
   
sujx@LEGION:~$ telnet <span class="token number">192.168</span>.79.50 <span class="token number">1514</span>
Trying <span class="token number">192.168</span>.79.140<span class="token punctuation">..</span>.
Connected to <span class="token number">192.168</span>.79.140.
Escape character is <span class="token string">'^]'</span><span class="token builtin class-name">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="访问面板"><a href="#访问面板" class="headerlink" title="访问面板"></a>访问面板</h3><ol>
<li><p>部署Elastic协调节点</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如果 Elasticsearch 集群有多个节点，分发 Kibana 节点之间请求的最简单的方法就是在 Kibana 机器上运行一个 Elasticsearch 协调（Coordinating only node） 的节点。Elasticsearch 协调节点本质上是智能负载均衡器，也是集群的一部分，如果有需要，这些节点会处理传入 HTTP 请求，重定向操作给集群中其它节点，收集并返回结果</span>

<span class="token comment"># 在Kibana节点上安装Elasticsearch</span>
<span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入源秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> elasticsearch-7.11.2

<span class="token comment">#配置防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>http
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>elasticsearch
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 修改配置</span>
<span class="token comment"># 其他ES节点也需要增加该主机NodeIP，并重启服务</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/elasticsearch/elasticsearch.yml<span class="token operator">&lt;&lt;</span><span class="token string">EOF
node.name: kibananode0
cluster.name: elastic
node.master: false
node.data: false
node.ingest: false
network.host: localhost
http.port: 9200
transport.host: 192.168.79.80
transport.tcp.port: 9300

discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
        - 192.168.79.80
EOF</span>

<span class="token comment"># 查看群集信息，只允许本机Kibana访问</span>
<span class="token punctuation">[</span>root@kibana wazuh<span class="token punctuation">]</span><span class="token comment"># curl http://localhost:9200/_cat/nodes?v</span>
<span class="token function">ip</span>            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
<span class="token number">192.168</span>.79.81           <span class="token number">18</span>          <span class="token number">96</span>   <span class="token number">0</span>    <span class="token number">0.04</span>    <span class="token number">0.06</span>     <span class="token number">0.02</span> cdhilmrstw -      elasticnode1
<span class="token number">192.168</span>.79.80           <span class="token number">12</span>          <span class="token number">97</span>   <span class="token number">3</span>    <span class="token number">0.01</span>    <span class="token number">0.08</span>     <span class="token number">0.07</span> lr         -      kibananode0
<span class="token number">192.168</span>.79.82           <span class="token number">23</span>          <span class="token number">96</span>   <span class="token number">0</span>    <span class="token number">0.04</span>    <span class="token number">0.09</span>     <span class="token number">0.04</span> cdhilmrstw *      elasticnode2
<span class="token number">192.168</span>.79.83           <span class="token number">23</span>          <span class="token number">87</span>   <span class="token number">0</span>    <span class="token number">0.09</span>    <span class="token number">0.11</span>     <span class="token number">0.05</span> cdhilmrstw -      elasticnode3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置Kibana</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kibana-7.11.2

<span class="token comment"># 修改配置文件</span>
<span class="token function">cp</span> <span class="token parameter variable">-a</span> /etc/kibana/kibana.yml<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>

<span class="token function">cat</span> <span class="token operator">>></span> /etc/kibana/kibana.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
server.port: 5601
server.host: "localhost"
server.name: "kibana"
i18n.locale: "zh-CN"
elasticsearch.hosts: ["http://localhost:9200"]
kibana.index: ".kibana"
kibana.defaultAppId: "home"
server.defaultRoute : "/app/wazuh"
EOF</span>

<span class="token comment"># 创建数据目录</span>
<span class="token function">mkdir</span> /usr/share/kibana/data
<span class="token function">chown</span> <span class="token parameter variable">-R</span> kibana:kibana /usr/share/kibana

<span class="token comment"># 离线安装插件</span>
<span class="token function">wget</span> https://packages.wazuh.com/4.x/ui/kibana/wazuh_kibana-4.1.5_7.11.2-1.zip
<span class="token function">cp</span> ./wazuh_kibana-4.1.5_7.11.2-1.zip /tmp
<span class="token builtin class-name">cd</span> /usr/share/kibana
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> kibana /usr/share/kibana/bin/kibana-plugin <span class="token function">install</span> file:///tmp/wazuh_kibana-4.1.5_7.11.2-1.zip

<span class="token comment"># 配置服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> kibana
systemctl start kibana

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo

<span class="token comment"># 配置反向代理</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> nginx
<span class="token function">vim</span> /etc/ngix/nginx.conf
<span class="token comment"># 在server&#123;&#125;中添加配置项</span>
​``<span class="token variable"><span class="token variable">`</span>
        proxy_redirect           off<span class="token punctuation">;</span>
        proxy_set_header         X-Real-IP $remote_addr<span class="token punctuation">;</span>
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for<span class="token punctuation">;</span>
        proxy_set_header         Host $http_host<span class="token punctuation">;</span>

        location / <span class="token punctuation">&#123;</span>
                proxy_pass http://localhost:5601/<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
​<span class="token variable">`</span></span>``
nginx <span class="token parameter variable">-s</span> reload

<span class="token comment"># 登录kibana之后选择wazuh插件</span>
<span class="token comment"># 返回控制台修改插件配置文件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/localhost/192.168.79.60/g"</span> /usr/share/kibana/data/wazuh/config/wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h3><ol>
<li><p>部署Wazuh-Agent</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># CentOS主机</span>
<span class="token function">sudo</span> <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'192.168.79.50'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> yum <span class="token function">install</span> https://packages.wazuh.com/4.x/yum/wazuh-agent-4.1.5-1.x86_64.rpm <span class="token parameter variable">-y</span>

<span class="token comment"># Ubuntu主机</span>
<span class="token function">curl</span> <span class="token parameter variable">-so</span> wazuh-agent.deb https://packages.wazuh.com/4.x/apt/pool/main/w/wazuh-agent/wazuh-agent_4.1.5-1_amd64.deb <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'192.168.79.60'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> dpkg <span class="token parameter variable">-i</span> ./wazuh-agent.deb

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> wazuh-agent
systemctl start wazuh-agent

<span class="token comment"># Windows主机</span>
Invoke-WebRequest <span class="token parameter variable">-Uri</span> https://packages.wazuh.com/4.x/windows/wazuh-agent-4.1.5-1.msi <span class="token parameter variable">-OutFile</span> wazuh-agent.msi<span class="token punctuation">;</span> ./wazuh-agent.msi /q <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'192.168.79.50'</span> <span class="token assign-left variable">WAZUH_REGISTRATION_SERVER</span><span class="token operator">=</span><span class="token string">'192.168.79.50'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> 
start-service wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>验证客户端所在管理节点</p>
<p><img src="https://cdn.sujx.net/wazuh-client.PNG"></p>
</li>
</ol>
<h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><hr>
<p>相比较单机版本，群集化的Wazuh需要处理的第一个问题就是如何保证ossec.conf文件和漏洞库的统一配置、统一更新、统一下发。以下将使用简单的Ansible命令和Shell脚本实现前述功能。</p>
<h3 id="建立共享"><a href="#建立共享" class="headerlink" title="建立共享"></a>建立共享</h3><ol>
<li><p>部署Nginx</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在wazuh-master上安装Nginx</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/wazuh
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>下载更新</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载离线文件</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/

<span class="token comment"># 下载Ubuntu 20.04的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.focal.cve.oval.xml.bz2

<span class="token comment"># 下载RHEL 7 8的漏洞种子文件</span>
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL6/rhel-6-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软CVE文件</span>
<span class="token function">wget</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment"># 下载Redhat的安全数据Json文件</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/rh-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> redhat
./rh-generator.sh redhat/

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/nvd-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> nvd
 ./nvd-generator.sh <span class="token number">2010</span> nvd/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>页面发布</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置nginx文件 </span>
<span class="token function">vim</span> /etc/nginx/nginx.conf
<span class="token comment"># 在server&#123;&#125;中修改增补如下配置</span>
        root         /var/www/wazuh<span class="token punctuation">;</span>
    
        location / <span class="token punctuation">&#123;</span>
                autoindex on<span class="token punctuation">;</span>
                autoindex_exact_size off<span class="token punctuation">;</span>
                autoindex_localtime on<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><ol>
<li><p>在&#x2F;opt&#x2F;wazuh&#x2F;目录下建立wazuhupdate.sh文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/

<span class="token comment"># 下载Ubuntu 20.04的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.focal.cve.oval.xml.bz2

<span class="token comment"># 下载RHEL 6/7/8的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL6/rhel-6-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment">#下载Redhat的安全数据Json文件</span>
/bin/bash /var/www/wazuh/rh-generator.sh /var/www/wazuh/redhat

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
/bin/bash /var/www/wazuh/nvd-generator.sh <span class="token number">2010</span> /var/www/wazuh/nvd

<span class="token comment"># 更新文件权限</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh

<span class="token comment"># 重启服务,更新数据库</span>
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立定时文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#检查crond.service运行状态</span>
systemctl status crond.service 
<span class="token function">crontab</span> <span class="token parameter variable">-e</span>
<span class="token comment"># 每周一、四下午6点半执行脚本进行升级</span>
<span class="token number">30</span> <span class="token number">18</span> * * <span class="token number">1,4</span> /bin/bash /opt/wazuh/wazuhupdate.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="批量下发"><a href="#批量下发" class="headerlink" title="批量下发"></a>批量下发</h3><ol>
<li>安装配置Ansbile<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> centos-release-ansible-29.noarch 
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ansible

<span class="token comment"># 因主机默认设置不允许root使用ssh登录，需要切换到普通用户目录</span>
<span class="token builtin class-name">cd</span> ~
<span class="token function">mkdir</span> ansible
<span class="token builtin class-name">cd</span> ansible
<span class="token function">touch</span> .inventory
<span class="token function">cat</span> <span class="token operator">></span> .inventory <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[master]
192.168.79.60
[worker]
192.168.79.61
192.168.79.62
EOF</span>

ssh-keygen
ssh-copy-id sujx@192.168.79.60
ssh-copy-id sujx@192.168.79.61
ssh-copy-id sujx@192.168.79.62

ansible all <span class="token parameter variable">-m</span> <span class="token function">ping</span>
<span class="token punctuation">[</span>sujx@WazuhNode0 ansible<span class="token punctuation">]</span>$ ansible worker <span class="token parameter variable">-m</span> <span class="token function">ping</span>
<span class="token number">192.168</span>.79.62 <span class="token operator">|</span> SUCCESS <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
    <span class="token string">"ansible_facts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"discovered_interpreter_python"</span><span class="token builtin class-name">:</span> <span class="token string">"/usr/libexec/platform-python"</span>
    <span class="token punctuation">&#125;</span>,
    <span class="token string">"changed"</span><span class="token builtin class-name">:</span> false,
    <span class="token string">"ping"</span><span class="token builtin class-name">:</span> <span class="token string">"pong"</span>
<span class="token punctuation">&#125;</span>
<span class="token number">192.168</span>.79.61 <span class="token operator">|</span> SUCCESS <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
    <span class="token string">"ansible_facts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"discovered_interpreter_python"</span><span class="token builtin class-name">:</span> <span class="token string">"/usr/libexec/platform-python"</span>
    <span class="token punctuation">&#125;</span>,
    <span class="token string">"changed"</span><span class="token builtin class-name">:</span> false,
    <span class="token string">"ping"</span><span class="token builtin class-name">:</span> <span class="token string">"pong"</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>建立批量更新脚本<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在每台Worker主机上建立相应脚本</span>
<span class="token function">mkdir</span> /opt/wazuh
<span class="token function">touch</span> /opt/wazuh/cluster.sh
<span class="token function">cat</span> <span class="token operator">></span> /opt/wazuh/cluster.sh <span class="token operator">&lt;&lt;</span><span class="token string">EOF
#!/bin/bash

cd ~

# 配置文件
wget http://192.168.79.60/conf/ossec.conf
# 自定义规则文件
# wget http://192.168.79.60/conf/0015-ossec_rules.xml

# 替换主机名
workername=<span class="token variable"><span class="token variable">$(</span><span class="token function">hostname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>
sed -i "s/vlnx000000/<span class="token variable">$workername</span>/g" ~/ossec.conf

# 替换配置文件
rm -Rf /var/ossec/etc/ossec.conf
mv ~/ossec.conf /var/ossec/etc/
chown root:ossec /var/ossec/etc/ossec.conf

# 更新自定义文件
# rm -Rf /var/ossec/ruleset/rules/0015-ossec_rules.xml
# mv ~/0015-ossec_rules.xml /var/ossec/ruleset/rules/
# chown root:ossec /var/ossec/ruleset/rules/0015-ossec_rules.xml


# Reset The Service
systemctl restart wazuh-manager.service
EOF</span>

<span class="token function">chmod</span> +x /opt/wazuh/cluster.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>建立worker配置文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>vulnerability-detector<span class="token operator">></span>
  <span class="token operator">&lt;</span>enabled<span class="token operator">></span>no<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
  <span class="token operator">&lt;</span>interval<span class="token operator">></span>5m<span class="token operator">&lt;</span>/interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>ignore_time<span class="token operator">></span>6h<span class="token operator">&lt;</span>/ignore_time<span class="token operator">></span>
  <span class="token operator">&lt;</span>run_on_start<span class="token operator">></span>yes<span class="token operator">&lt;</span>/run_on_start<span class="token operator">></span>
   
  <span class="token operator">&lt;</span><span class="token operator">!</span>-- Ubuntu OS vulnerabilities --<span class="token operator">></span>
  <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"canonical"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.79.60/com.ubuntu.focal.cve.oval.xml.bz2"</span><span class="token operator">></span>focal<span class="token operator">&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1d<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>/provider<span class="token operator">></span>
   
  <span class="token operator">&lt;</span><span class="token operator">!</span>-- Debian OS vulnerabilities --<span class="token operator">></span>
  <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"debian"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>no<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>os<span class="token operator">></span>stretch<span class="token operator">&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>os<span class="token operator">></span>buster<span class="token operator">&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1d<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>/provider<span class="token operator">></span>
   
  <span class="token operator">&lt;</span><span class="token operator">!</span>-- RedHat OS vulnerabilities --<span class="token operator">></span>
  <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"redhat"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.79.60/rhel-6-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.79.60/rhel-7-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.79.60/rhel-8-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/os<span class="token operator">></span>
    <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"1"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"25"</span><span class="token operator">></span>http://192.168.79.60/redhat/redhat-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json<span class="token operator">&lt;</span>/url<span class="token operator">></span>
    <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1d<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>/provider<span class="token operator">></span>
   
  <span class="token operator">&lt;</span><span class="token operator">!</span>-- Windows OS vulnerabilities --<span class="token operator">></span>
  <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"msu"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>url<span class="token operator">></span>http://192.168.79.60/msu-updates.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
    <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1d<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>/provider<span class="token operator">></span>
   
  <span class="token operator">&lt;</span><span class="token operator">!</span>-- Aggregate vulnerabilities --<span class="token operator">></span>
  <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"nvd"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"2010"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"2021"</span><span class="token operator">></span>http://192.168.79.60/nvd/nvd-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
    <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1d<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
  <span class="token operator">&lt;</span>/provider<span class="token operator">></span>
<span class="token operator">&lt;</span>/vulnerability-detector<span class="token operator">></span>
   
<span class="token operator">&lt;</span>cluster<span class="token operator">></span>
  <span class="token operator">&lt;</span>name<span class="token operator">></span>wazuh<span class="token operator">&lt;</span>/name<span class="token operator">></span>
  <span class="token operator">&lt;</span>node_name<span class="token operator">></span>vln00000<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/node_name<span class="token operator">></span>
  <span class="token operator">&lt;</span>node_type<span class="token operator">></span>worker<span class="token operator">&lt;</span>/node_type<span class="token operator">></span>
  <span class="token operator">&lt;</span>key<span class="token operator">></span>d84691d111f86e70e8ed7eff80cde39e<span class="token operator">&lt;</span>/key<span class="token operator">></span>
  <span class="token operator">&lt;</span>port<span class="token operator">></span><span class="token number">151</span><span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>/port<span class="token operator">></span>
  <span class="token operator">&lt;</span>bind_addr<span class="token operator">></span><span class="token number">0.0</span>.0.<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/bind_addr<span class="token operator">></span>
  <span class="token operator">&lt;</span>nodes<span class="token operator">></span>
      <span class="token operator">&lt;</span>node<span class="token operator">></span><span class="token number">192.168</span>.79.6<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/node<span class="token operator">></span>
  <span class="token operator">&lt;</span>/nodes<span class="token operator">></span>
  <span class="token operator">&lt;</span>hidden<span class="token operator">></span>no<span class="token operator">&lt;</span>/hidden<span class="token operator">></span>
  <span class="token operator">&lt;</span>disabled<span class="token operator">></span>no<span class="token operator">&lt;</span>/disabled<span class="token operator">></span>
<span class="token operator">&lt;</span>/cluster<span class="token operator">></span>
……
略  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>使用Ansible触发更新<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 每个Worker上创建目录</span>
ansible worker <span class="token parameter variable">-a</span> <span class="token string">'mkdir /opt/wazuh'</span>
<span class="token comment"># 复制脚本到worker上</span>
ansible worker <span class="token parameter variable">-m</span> copy <span class="token parameter variable">-a</span> <span class="token string">"src=/opt/wazuh/cluster.sh dest=/opt/wazuh owner=root group=root mode=0744"</span>
<span class="token comment"># 每个worker执行脚本</span>
ansible worker <span class="token parameter variable">-a</span> <span class="token string">'/bin/sh /opt/wazuh/cluster.sh'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
        <tag>cissp</tag>
        <tag>wazuh</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端APP安全框架Mobsf的部署</title>
    <url>/2021/12/28/mobsf-install/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://mobsf.github.io/Mobile-Security-Framework-MobSF/">Mobile Security Framework (MobSF)</a>是一个印度人写的Allinone的全自动APP检测工具，可用于渗透测试、恶意软件、安全基线检查等用途，当前最新版本为3.4.5 beta。它支持安卓和苹果主机程序格式，比如apk、xapk、ipa、appx，进行静态或者动态安全分析。同时，它也提供APIs接口用于现有开发环境CI&#x2F;CD流水线。</p>
<p><img src="https://cdn.sujx.net/mobsf-info.gif"></p>
<h2 id="标准部署"><a href="#标准部署" class="headerlink" title="标准部署"></a>标准部署</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 环境准备</span>
<span class="token function">apt</span> update
<span class="token function">apt</span> upgrade <span class="token parameter variable">-y</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> python3-pip python3-setuptools python3-venv python-is-python3
<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> openjdk-16-jdk <span class="token function">git</span> mlocate

<span class="token comment"># 安装wkhtmltox，Ubuntu官方源中的wkhtmltox依赖包太多了，可以使用开发商自打包</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils
<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> language-pack-zh-hans fonts-wqy-*
fc-cache <span class="token parameter variable">-f</span> <span class="token parameter variable">-v</span>
<span class="token function">wget</span> https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb
dpkg <span class="token parameter variable">-i</span> wkhtmltox_0.12.6-1.focal_amd64.deb

ldconfig
<span class="token function">sync</span>
pip3 <span class="token function">install</span> pip <span class="token parameter variable">--upgrade</span>
pip3 <span class="token function">install</span> launchpadlib <span class="token parameter variable">--upgrade</span>
pip3 <span class="token function">install</span> --no-cache-dir wheel
pip3 wheel --wheel-dir<span class="token operator">=</span>yara-python-dex git+https://github.com/MobSF/yara-python-dex.git
pip3 <span class="token function">install</span> --no-cache-dir --no-index --find-links<span class="token operator">=</span>yara-python-dex yara-python-dex

<span class="token comment"># 部署程序</span>
<span class="token function">git</span> clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git
<span class="token builtin class-name">cd</span> /opt/Mobile-Security-Framework-MobSF/
pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
./setup.sh

<span class="token comment"># 建立数据库</span>
python manage.py makemigrations
python manage.py migrate

<span class="token comment"># 运行于本机0.0.0.0:8000</span>
./run.sh

<span class="token comment"># 运行于127.0.0.1:8000</span>
./run.sh <span class="token number">127.0</span>.0.1:8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="容器部署"><a href="#容器部署" class="headerlink" title="容器部署"></a>容器部署</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>原始mobsf镜像没有安装中文字体，导致输出PDF时会出现口口口的乱码，所需需要对默认DockerFile进行一点点的小修改，其他保留原始配置。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Base image</span>
FROM ubuntu:20.04

<span class="token comment"># Labels and Credits</span>
LABEL <span class="token punctuation">\</span>
    <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"MobSF"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">author</span><span class="token operator">=</span><span class="token string">"Ajin Abraham &lt;ajin25@gmail.com>"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">maintainer</span><span class="token operator">=</span><span class="token string">"Ajin Abraham &lt;ajin25@gmail.com>"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">contributor_1</span><span class="token operator">=</span><span class="token string">"OscarAkaElvis &lt;oscar.alfonso.diaz@gmail.com>"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">contributor_2</span><span class="token operator">=</span><span class="token string">"Vincent Nadal &lt;vincent.nadal@orange.fr>"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">description</span><span class="token operator">=</span><span class="token string">"Mobile Security Framework (MobSF) is an automated, all-in-one mobile application (Android/iOS/Windows) pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis."</span>

<span class="token comment"># Environment vars</span>
ENV <span class="token assign-left variable">DEBIAN_FRONTEND</span><span class="token operator">=</span><span class="token string">"noninteractive"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">ANALYZER_IDENTIFIER</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">JDK_FILE</span><span class="token operator">=</span><span class="token string">"openjdk-16.0.1_linux-x64_bin.tar.gz"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">JDK_FILE_ARM</span><span class="token operator">=</span><span class="token string">"openjdk-16.0.1_linux-aarch64_bin.tar.gz"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">WKH_FILE</span><span class="token operator">=</span><span class="token string">"wkhtmltox_0.12.6-1.focal_amd64.deb"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">WKH_FILE_ARM</span><span class="token operator">=</span><span class="token string">"wkhtmltox_0.12.6-1.focal_arm64.deb"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token string">"/jdk-16.0.1"</span>

ENV <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"<span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span>"</span>

<span class="token comment"># See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run</span>
RUN <span class="token function">sed</span> <span class="token parameter variable">-i</span> s@/archive.ubuntu.com/@/mirrors.huaweicloud.com/@g /etc/apt/sources.list
RUN <span class="token function">apt</span> update <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span>  --no-install-recommends <span class="token punctuation">\</span>
    build-essential <span class="token punctuation">\</span>
    language-pack-zh-hans <span class="token punctuation">\</span>
    fonts-wqy-microhei <span class="token punctuation">\</span>
    fonts-wqy-zenhei <span class="token punctuation">\</span>
    xfonts-wqy <span class="token punctuation">\</span>
    locales <span class="token punctuation">\</span>
    sqlite3 <span class="token punctuation">\</span>
    fontconfig-config <span class="token punctuation">\</span>
    libjpeg-turbo8 <span class="token punctuation">\</span>
    libxrender1 <span class="token punctuation">\</span>
    libfontconfig1 <span class="token punctuation">\</span>
    libxext6 <span class="token punctuation">\</span>
    fontconfig <span class="token punctuation">\</span>
    xfonts-75dpi <span class="token punctuation">\</span>
    xfonts-base <span class="token punctuation">\</span>
    python3.9 <span class="token punctuation">\</span>
    python3-dev <span class="token punctuation">\</span>
    python3-pip <span class="token punctuation">\</span>
    <span class="token function">wget</span> <span class="token punctuation">\</span>
    <span class="token function">curl</span> <span class="token punctuation">\</span>
    <span class="token function">git</span> <span class="token punctuation">\</span>
    tzdata <span class="token punctuation">\</span>
    android-tools-adb

<span class="token comment"># Set locales</span>
RUN locale-gen en_US.UTF-8
ENV TZ Asia/Shanghai
RUN <span class="token builtin class-name">echo</span> <span class="token string">'LC_TIME=en_US.UTF-8'</span> <span class="token operator">>></span> /etc/default/locale
RUN <span class="token builtin class-name">echo</span> <span class="token string">'LC_ALL=en_US.UTF-8'</span> <span class="token operator">>></span> /etc/default/locale
ENV <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">'en_US.UTF-8'</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span><span class="token string">'en_US:en'</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span><span class="token string">'en_US.UTF-8'</span>

<span class="token comment"># Install wkhtmltopdf &amp; OpenJDK</span>
ARG TARGETPLATFORM

COPY scripts/install_java_wkhtmltopdf.sh <span class="token builtin class-name">.</span>
RUN ./install_java_wkhtmltopdf.sh

RUN <span class="token function">groupadd</span> <span class="token parameter variable">-g</span> <span class="token number">9901</span> mobsf
RUN adduser mobsf <span class="token parameter variable">--shell</span> /bin/false <span class="token parameter variable">-u</span> <span class="token number">9901</span> <span class="token parameter variable">--ingroup</span> mobsf <span class="token parameter variable">--gecos</span> <span class="token string">""</span> --disabled-password


<span class="token comment"># Install Requirements</span>
COPY requirements.txt <span class="token builtin class-name">.</span>
RUN pip3 <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> --no-cache-dir setuptools pip <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    pip3 <span class="token function">install</span> <span class="token parameter variable">--quiet</span> --no-cache-dir <span class="token parameter variable">-r</span> requirements.txt

<span class="token comment"># Cleanup</span>
RUN <span class="token punctuation">\</span>
    <span class="token function">apt</span> remove <span class="token parameter variable">-y</span> <span class="token punctuation">\</span>
        libssl-dev <span class="token punctuation">\</span>
        libffi-dev <span class="token punctuation">\</span>
        libxml2-dev <span class="token punctuation">\</span>
        libxslt1-dev <span class="token punctuation">\</span>
        python3-dev <span class="token punctuation">\</span>
        <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    <span class="token function">apt</span> clean <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    <span class="token function">apt</span> autoclean <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    <span class="token function">apt</span> autoremove <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/apt/lists/* /tmp/* <span class="token operator">></span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>

WORKDIR /home/mobsf/Mobile-Security-Framework-MobSF
<span class="token comment"># Copy source code</span>
COPY <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span>

<span class="token comment"># Set adb binary path and apktool directory</span>
RUN <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s#ADB_BINARY = ''#ADB_BINARY = '/usr/bin/adb'#"</span> mobsf/MobSF/settings.py <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>
    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/mobsf/.local/share/apktool/framework

<span class="token comment"># Postgres support is set to false by default</span>
ARG <span class="token assign-left variable">POSTGRES</span><span class="token operator">=</span>False

ENV <span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>postgres
ENV <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>password
ENV <span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>mobsf
ENV <span class="token assign-left variable">POSTGRES_HOST</span><span class="token operator">=</span>postgres

<span class="token comment"># Check if Postgres support needs to be enabled</span>
RUN ./scripts/postgres_support.sh <span class="token variable">$POSTGRES</span>

HEALTHCHECK CMD <span class="token function">curl</span> <span class="token parameter variable">--fail</span> http://host.docker.internal:8000/ <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>

<span class="token comment"># Expose MobSF Port and Proxy Port</span>
EXPOSE <span class="token number">8000</span> <span class="token number">8000</span> <span class="token number">1337</span> <span class="token number">1337</span>

RUN <span class="token function">chown</span> <span class="token parameter variable">-R</span> mobsf:mobsf /home/mobsf/Mobile-Security-Framework-MobSF
<span class="token environment constant">USER</span> mobsf
<span class="token comment"># Run MobSF</span>
CMD <span class="token punctuation">[</span><span class="token string">"/home/mobsf/Mobile-Security-Framework-MobSF/scripts/entrypoint.sh"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="DockerBuild"><a href="#DockerBuild" class="headerlink" title="DockerBuild"></a>DockerBuild</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> build mobsf <span class="token builtin class-name">.</span>

<span class="token punctuation">[</span>root@docker ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY                                     TAG       IMAGE ID       CREATED        SIZE
mobsf                                          latest    17ec050a7c8c   <span class="token number">41</span> hours ago   <span class="token number">2</span>.1GB

<span class="token comment"># 由于打包机器在开发网络，而部署机器在服务网络，所以需要导出并导入</span>
<span class="token function">docker</span> save <span class="token parameter variable">-o</span> mobsf.tar mobsf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="DockerLoad"><a href="#DockerLoad" class="headerlink" title="DockerLoad"></a>DockerLoad</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用load导入，而不使用import</span>
<span class="token function">docker</span> load <span class="token parameter variable">--input</span> mobsf.tar
<span class="token comment"># 打标签</span>
<span class="token function">docker</span> tag 77cb7 firstshare/mobsf:v1
<span class="token comment"># 拉起容器并指定8000端口，并设定开机自启</span>
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">8000</span>:8000 mobsf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>Mobsf是一个使用Python+Djongo编写的免费、开源工具，它的检测结果是被专业机构接受和认可的有效报告，可以用于等保以及其他安全认证事宜；</li>
<li>Mobsf认为使用外部存储设备、GPS、摄像头都是高风险行为，这点见仁见智，看报告接收方的态度；</li>
<li>Mobsf输出PDF版本报告存在问题，不能按照A4格式标准输出，应该是某处的css格式引起，需要后续修正。</li>
</ol>
]]></content>
      <tags>
        <tag>MobSF</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>使用HFS提供简单文件共享服务</title>
    <url>/2021/12/23/hfs-how-to/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol>
<li>财务部门有台银行业务前置机，按银行IT要求是是非域独立部署的Windows客户端主机；</li>
<li>开发需要调用上面接收的票务数据，要求是需要走http协议；</li>
<li>所有变更不能和现有银行部署软件相冲突；</li>
<li>易于维护，并能够记录所有访问纪录以便审计；</li>
</ol>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ol>
<li><a href="http://www.rejetto.com/hfs/">HFS</a>是一个简易、快速的单文件免安装HTTP Server</li>
<li>官方有简体中文<a href="https://rejetto.com/wiki/index.php?title=HFS_%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">帮助文件</a></li>
<li>支持随Windows启动、支持自定义端口号、支持专家&#x2F;易用模式切换</li>
</ol>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol>
<li>找个文件夹存放，并双击启动<br><img src="https://cdn.sujx.net/hfs-001.PNG"></li>
<li>可以将文件或者文件夹拖入程序界面就可以添加；<br><img src="https://cdn.sujx.net/hfs-002.PNG"></li>
<li>默认为虚拟目录，是将目标文件夹复制到软件支持的VFS文件系统内，修改虚拟目录下文件夹不影响真实文件，但虚拟目录的支持的文件数受限；</li>
<li>真实目录是将给硬盘上的实际文件夹建立一个软连接，实际操作真实文件；</li>
<li>指定访问端口<br><img src="https://cdn.sujx.net/hfs-003.PNG"></li>
<li>多网卡情况下，绑定指定网卡IP<br><img src="https://cdn.sujx.net/hfs-004.PNG"></li>
<li>添加用户并指定权限，只有设定用了访问用户，才能设置上传权限<br><img src="https://cdn.sujx.net/hfs-005.PNG"></li>
<li>随Windows启动并最小化显示<br><img src="https://cdn.sujx.net/hfs-006.PNG"></li>
<li>设定日志记录内容<br><img src="https://cdn.sujx.net/hfs-007.PNG"></li>
<li>默认日志只是在程序界面显示，可以使用“Log to file”来保存日志记录<br><img src="https://cdn.sujx.net/hfs-008.PNG"></li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>HFS默认允许所有人可访问，可以通过配置limit来ban掉特定IP<br><img src="https://cdn.sujx.net/hfs-010.PNG"></li>
<li>IP限制支持通配符<br><img src="https://cdn.sujx.net/hfs-011.PNG"></li>
<li>可以通过前置\字符只允许特定IP访问，也可以配置允许多个IP可访问，多个IP使用;字符分隔并放置一行<br><img src="https://cdn.sujx.net/hfs-009.PNG"></li>
<li>HFS支持SSL，但需要部署<a href="https://www.stunnel.org/">Stunnel</a>这个工具(stunel建立443端口代理，然后转发给HFS)；</li>
<li>HFS支持默认加载index.html静态页面，不支持PHP等动态页面</li>
<li>HFS官网论坛有多种用户上传的页面模板可供使用</li>
</ol>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>http</tag>
        <tag>tool</tag>
        <tag>share</tag>
      </tags>
  </entry>
  <entry>
    <title>使用VLC实现视频串流播放</title>
    <url>/2021/12/22/vlc-netsteam-server/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol>
<li>HR需要使用研发中心大厅内近十部电视来统一播放宣讲视频；</li>
<li>无硬件、无预算、无方案；</li>
<li>三天时间落实方案、操作演示并要求简单易学、方便HR操作；</li>
<li>电视信号来源是利旧主机，包括淘汰的Mac mini和戴尔OptiPlex微型机，涉及Mac系统、Ubuntu系统和Windows系统</li>
</ol>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ol>
<li>使用开源、多平台的<a href="https://www.videolan.org/">VLC Media Palyer</a>实现服务端串流播放；</li>
<li>调用本地VLC播放器作为客户端串流播放网络视频</li>
</ol>
<h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><ol>
<li>开启串流<br><img src="https://cdn.sujx.net/vlc-steam_001.png"></li>
<li>添加视频源，支持文件、摄像头、采集卡和电脑桌面<br><img src="https://cdn.sujx.net/vlc-steam_002.png"></li>
<li>开始设定串流<br><img src="https://cdn.sujx.net/vlc-steam_003.png"></li>
<li>确认流输出源<br><img src="https://cdn.sujx.net/vlc-steam_004.png"></li>
<li>选择本地同步播放视频，同时选择使用RTSP模式输出，并点击添加<br><img src="https://cdn.sujx.net/vlc-steam_005.png"></li>
<li>默认使用本地IP，使用8554端口，自定义地址路径(支持多路径输出)<br><img src="https://cdn.sujx.net/vlc-steam_006.png"></li>
<li>不开启转码功能(如果开启，支持多种格式输出)<br><img src="https://cdn.sujx.net/vlc-steam_007.png"></li>
<li>完成设置<br><img src="https://cdn.sujx.net/vlc-steam_008.png"></li>
</ol>
<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ol>
<li>选择播放串流<br><img src="https://cdn.sujx.net/vlc-client-001.png"></li>
<li>输入串流源地址<br><img src="https://cdn.sujx.net/vlc-client-002.png"></li>
<li>打开设置<br><img src="https://cdn.sujx.net/vlc-client-003.png"></li>
<li>开启默认全屏<br><img src="https://cdn.sujx.net/vlc-client-004.png"></li>
<li>保存播放列表<br><img src="https://cdn.sujx.net/vlc-client-005.png"></li>
<li>指定存储位置<br><img src="https://cdn.sujx.net/vlc-client-006.png"></li>
<li>直接点击播放<br><img src="https://cdn.sujx.net/vlc-client-007.png"></li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>VLC的串流播放模式使用方便，能够快速输出视频；</li>
<li>串流播放对网络质量要求较高，只限局域网使用，会有多个视频不完全同步的状态；</li>
<li>VLC的视频播放质量清晰度，相较原片有肉眼可见的不如；</li>
<li>免费、跨平台、支持格式丰富、功能能用。</li>
</ol>
]]></content>
      <tags>
        <tag>VLC</tag>
        <tag>steam</tag>
      </tags>
  </entry>
  <entry>
    <title>Wazuh应用之Elasticsearch的调优</title>
    <url>/2021/12/13/wazuh-turning-elastic/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>wazuh本身是一个对资源要求较低的系统，但长期运行下来，还是会出现各种各样资源使用不足的问题。因此，需要进行一定程度的优化和调整</p>
<h2 id="调整ES参数"><a href="#调整ES参数" class="headerlink" title="调整ES参数"></a>调整ES参数</h2><h3 id="开启内存锁定参数"><a href="#开启内存锁定参数" class="headerlink" title="开启内存锁定参数"></a>开启内存锁定参数</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 锁定物理内存地址，防止ES内存被交换出去，避免频繁使用swap分区</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/elasticsearch/elasticsearch.yml <span class="token operator">&lt;&lt;</span><span class="token string">EOF
bootstrap.memory_lock: true
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="限制系统资源"><a href="#限制系统资源" class="headerlink" title="限制系统资源"></a>限制系统资源</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置Elasticsearch的systemd调用</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/systemd/system/elasticsearch.service.d/
 
<span class="token function">cat</span> <span class="token operator">></span> /etc/systemd/system/elasticsearch.service.d/elasticsearch.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Service]
LimitMEMLOCK=infinity
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="调整内核参数"><a href="#调整内核参数" class="headerlink" title="调整内核参数"></a>调整内核参数</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">>></span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="调整JVM参数"><a href="#调整JVM参数" class="headerlink" title="调整JVM参数"></a>调整JVM参数</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在可用内存使用率不超过50%，且使用量不超过32GB内存的情况下，设定Xms和Xmx的值为当年内存总量的一半</span>
<span class="token comment"># 当前内存总量为8GB</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/elasticsearch/jvm.options <span class="token operator">&lt;&lt;</span><span class="token string">EOF
-Xms4g
-Xmx4g
EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload
systemctl restart elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="设置分片和副本数据量"><a href="#设置分片和副本数据量" class="headerlink" title="设置分片和副本数据量"></a>设置分片和副本数据量</h2><h3 id="Wazuh设置单节点ES主机"><a href="#Wazuh设置单节点ES主机" class="headerlink" title="Wazuh设置单节点ES主机"></a>Wazuh设置单节点ES主机</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取Wazuh ES 模板</span>
<span class="token function">curl</span> https://raw.githubusercontent.com/wazuh/wazuh/v4.1.5/extensions/elasticsearch/7.x/wazuh-template.json <span class="token parameter variable">-o</span> w-elastic-template.json
<span class="token comment"># 结合实际环境，设置分片数为1，副本数为0</span>
  
<span class="token punctuation">&#123;</span>
  <span class="token string">"order"</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
  <span class="token string">"index_patterns"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"wazuh-alerts-4.x-*"</span><span class="token punctuation">]</span>,
  <span class="token string">"settings"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"index.refresh_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"5s"</span>,
    <span class="token string">"index.number_of_shards"</span><span class="token builtin class-name">:</span> <span class="token string">"1"</span>,
    <span class="token string">"index.number_of_replicas"</span><span class="token builtin class-name">:</span> <span class="token string">"0"</span>,
    <span class="token string">"index.auto_expand_replicas"</span><span class="token builtin class-name">:</span> <span class="token string">"0-1"</span>,
    <span class="token string">"index.mapping.total_fields.limit"</span><span class="token builtin class-name">:</span> <span class="token number">2000</span>
  <span class="token punctuation">&#125;</span>,
  <span class="token string">"mappings"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
  <span class="token string">"..."</span><span class="token builtin class-name">:</span> <span class="token string">"..."</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 应用模板</span>
<span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT <span class="token string">"http://localhost:9200/_template/wazuh-custom"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> <span class="token parameter variable">-d</span> @w-elastic-template.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="设置永久分片数"><a href="#设置永久分片数" class="headerlink" title="设置永久分片数"></a>设置永久分片数</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置ES的永久分片数为20000</span>
<span class="token function">curl</span> <span class="token parameter variable">-XPUT</span>  <span class="token string">"127.0.0.1:9200/_cluster/settings"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> <span class="token parameter variable">-d</span> <span class="token string">'&#123;"persistent":&#123;"cluster":&#123;"max_shards_per_node":20000&#125;&#125;&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="删除过期分片"><a href="#删除过期分片" class="headerlink" title="删除过期分片"></a>删除过期分片</h3>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除2021.06所有分片</span>
<span class="token function">curl</span> <span class="token parameter variable">-XDELETE</span> http://127.0.0.1:9200/wazuh-alerts-4.x-2021.06.*   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="硬件调优"><a href="#硬件调优" class="headerlink" title="硬件调优"></a>硬件调优</h2><h3 id="使用固态磁盘"><a href="#使用固态磁盘" class="headerlink" title="使用固态磁盘"></a>使用固态磁盘</h3><h3 id="更多的CPU和内存"><a href="#更多的CPU和内存" class="headerlink" title="更多的CPU和内存"></a>更多的CPU和内存</h3>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>security</tag>
        <tag>wazuh</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>资产管理软件GLPI的部署以及与OCSInverntoryNG的整合</title>
    <url>/2021/12/03/centos8-ocsng-glpi/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>​	我们可以使用OCSinverntory搜集整理资产信息并导入GLPI系统作为CMDB的形式来实现公司资产管理的数字化，方便资产的统一管理和信息维护。</p>
<h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><h4 id="OCSInverntoryNG"><a href="#OCSInverntoryNG" class="headerlink" title="OCSInverntoryNG"></a>OCSInverntoryNG</h4><p>​	<a href="https://ocsinventory-ng.org/">OCSinventoyNG</a> 使用perl编写的开源资产管理软件，它通过agent上报相关信息来获取部署范围内的Windows、Unix、MacOS、andriod等资产信息。</p>
<h4 id="GLPI"><a href="#GLPI" class="headerlink" title="GLPI"></a>GLPI</h4><p>​	<a href="https://glpi-project.org/">GLPI</a>是一款由法国人开发的开源CMDB软件，GLPI是法语Gestionnaire libre de parc informatique的缩写，它使用PHP开发。</p>
<hr>
<h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><h3 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 系统更新</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release dnf-utils
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> https://rpms.remirepo.net/enterprise/remi-release-8.rpm

dnf config-manager --set-enabled powertools
dnf config-manager --set-enabled epel
dnf makecache 
dnf update <span class="token parameter variable">-y</span>

<span class="token comment"># 安装依赖</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> cmake <span class="token function">make</span> autoconf gcc gcc-c++ <span class="token function">unzip</span> graphviz libzip-devel libzip-tools <span class="token function">curl</span>

<span class="token comment"># 安装PHP7.4</span>
dnf module reset <span class="token parameter variable">-y</span> php
dnf module <span class="token builtin class-name">enable</span> <span class="token parameter variable">-y</span> php:remi-7.4

dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> php php-curl php-zip php-gd php-soap php-xml php-mbstring php-fpm php-ldap php-iconv php-json
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> php-mysqlnd php-openssl php-pcre php-posix php-sockets php-spl php-tokenizer php-zlib
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> php-xmlrpc php-opcache php-snmp php-intl php-pecl-apcu

<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@;date.timezone =@date.timezone = Asia/\Shanghai@g'</span> etc/php.ini
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\zlib.output_compression = Off\zlib.output_compression = On\g'</span> /etc/php.ini

systemctl <span class="token builtin class-name">enable</span> php-fpm <span class="token parameter variable">--now</span>

<span class="token comment"># 安装MySQL8</span>
dnf module <span class="token builtin class-name">enable</span> <span class="token parameter variable">-y</span> mysql:8.0
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql mysql-server
<span class="token function">cat</span> <span class="token operator">></span>/etc/my.cnf.d/charset.cnf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[mysqld]
character-set-server = utf8mb4

[client]
default-character-set = utf8mb4
EOF</span>
systemctl <span class="token builtin class-name">enable</span> mysqld <span class="token parameter variable">--now</span>

dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd
systemctl <span class="token builtin class-name">enable</span> httpd <span class="token parameter variable">--now</span>

firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>https,http<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 配置目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /wwwroot/<span class="token punctuation">&#123;</span>itop,glpi<span class="token punctuation">&#125;</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /wwwroot/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="OCSInventoryNG部署"><a href="#OCSInventoryNG部署" class="headerlink" title="OCSInventoryNG部署"></a>OCSInventoryNG部署</h3><h4 id="部署服务端"><a href="#部署服务端" class="headerlink" title="部署服务端"></a>部署服务端</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 依赖文件</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> perl-Archive-Zip perl-Compress-Zlib perl-DBD-MySQL perl-DBI perl-Mojolicious perl-Net-IP perl-Plack perl-SOAP-Lite perl-Switch perl-XML-Entities perl-XML-Simple perl-Apache-DBI perl-Digest-SHA1 perl-Apache2-SOAP

<span class="token comment"># 配置数据库</span>
mysql<span class="token operator">></span> create database ocsng<span class="token punctuation">;</span>
mysql<span class="token operator">></span> create user ocsadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'ocsadmin'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on ocsng.* to ocsadmin@<span class="token string">'localhost'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>

<span class="token comment"># 下载和安装</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token function">git</span> clone https://github.com/OCSInventory-NG/OCSInventory-Server.git
<span class="token builtin class-name">cd</span> OCSInventory-Server
<span class="token function">git</span> clone https://github.com/OCSInventory-NG/OCSInventory-ocsreports.git ocsreports
<span class="token function">sh</span> setup.sh
……
<span class="token comment"># 默认回车，完成安装</span>
……
+----------------------------------------------------------------------+
<span class="token operator">|</span>        OK, Administration server installation finished <span class="token punctuation">;</span>-<span class="token punctuation">)</span>           <span class="token operator">|</span>
<span class="token operator">|</span>                                                                      <span class="token operator">|</span>
<span class="token operator">|</span> Please, review /etc/httpd/conf.d/ocsinventory-reports.conf
<span class="token operator">|</span>          to ensure all is good and restart Apache daemon.            <span class="token operator">|</span>
<span class="token operator">|</span>                                                                      <span class="token operator">|</span>
<span class="token operator">|</span> Then, point your browser to http://server//ocsreports
<span class="token operator">|</span>        to configure database server and create/update schema.        <span class="token operator">|</span>
+----------------------------------------------------------------------+

Setup has created a log <span class="token function">file</span> /opt/OCSInventory-Server/ocs_server_setup.log. Please, save this file.
If you encounter error <span class="token keyword">while</span> running OCS Inventory NG Management server,
we can ask you to show us its content <span class="token operator">!</span>

DON'T FORGET TO RESTART APACHE DAEMON <span class="token operator">!</span>

Enjoy OCS Inventory NG <span class="token punctuation">;</span>-<span class="token punctuation">)</span>
……

<span class="token comment"># 修改站点文件</span>
<span class="token function">vim</span> /usr/share/ocsinventory-reports/ocsreports/require/header.php
<span class="token comment"># 对31行注释</span>
require_once<span class="token punctuation">(</span>COMPOSER_AUTOLOAD<span class="token punctuation">)</span>

<span class="token comment"># 500错误修改</span>
<span class="token comment"># 因为用户名、数据库名和密码变更，会引起500内部错误</span>
<span class="token comment"># 需要同步修改以下文件：</span>
<span class="token comment"># z-ocsinventory-server.conf  </span>
<span class="token comment"># zz-ocsinventory-restapi.conf</span>
<span class="token comment"># 访问站点：http://</span>
<span class="token comment"># 完成网页安装后删除install文件</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> /usr/share/ocsinventory-reports/ocsreports/install.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="部署客户端"><a href="#部署客户端" class="headerlink" title="部署客户端"></a>部署客户端</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 客户端需要开启epel源</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> perl-Net-SNMP
<span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> https://rpm.ocsinventory-ng.org/ocsinventory-release-latest.el8.ocs.noarch.rpm
dnf makecache
dnf <span class="token function">install</span> ocsinventory-agent <span class="token parameter variable">-y</span>

<span class="token comment"># 修改配置</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/local/# local/g'</span> /etc/ocsinventory/ocsinventory-agent.cfg
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/# server/server/g'</span> /etc/ocsinventory/ocsinventory-agent.cfg
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@your.ocsserver.name@192.168.79.8\/ocsinventory@g'</span> /etc/ocsinventory/ocsinventory-agent.cfg
mpathconf <span class="token parameter variable">--enable</span>
ocsinventory-agent
<span class="token comment"># 查看日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-n</span> <span class="token number">30</span> /var/log/ocsinventory-agent/ocsinventory-agent.log
<span class="token comment"># 定时上报</span>
<span class="token comment"># 使用rpm安装会在/etc/cron.hourly建立上报文件，可按需配置或移动文件到cron.daily目录</span>
<span class="token builtin class-name">echo</span> <span class="token string">'60 * * * * /usr/bin/perl /usr/sbin/ocsinventory-agent'</span><span class="token operator">>></span>/etc/crontab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="GLPI部署"><a href="#GLPI部署" class="headerlink" title="GLPI部署"></a>GLPI部署</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取软件包</span>
<span class="token function">wget</span> https://github.com/glpi-project/glpi/releases/download/9.5.6/glpi-9.5.6.tgz
<span class="token function">wget</span> https://github.com/pluginsGLPI/ocsinventoryng/releases/download/1.7.3/glpi-ocsinventoryng-1.7.3.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> glpi-9.5.6.tgz <span class="token parameter variable">-C</span> /wwwroot/
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> glpi-ocsinventoryng-1.7.3.tar.gz <span class="token parameter variable">-C</span> /wwwroot/glpi/plugins
<span class="token function">chown</span> <span class="token parameter variable">-R</span> apache:apache /wwwroot/glpi
<span class="token function">chmod</span> <span class="token number">755</span> /wwwroot/glpi

<span class="token comment"># 配置数据库</span>
mysql<span class="token operator">></span> create database glpidb<span class="token punctuation">;</span>
mysql<span class="token operator">></span> create  user glpiadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'glpiadmin'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on glpidb.* to glpiadmin@<span class="token string">'localhost'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span>

<span class="token comment"># 配置虚拟站点</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/httpd/conf.d/glpi.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
&lt;VirtualHost *:80>
    DocumentRoot /var/www/html
    ServerName itsm.subwin.cn
&lt;/VirtualHost>

&lt;VirtualHost *:80>
    DocumentRoot /wwwroot/glpi/
    ServerName glpi.subwin.cn
    ServerAdmin sujx@subwin.cn
    ErrorLog logs/glpi.subin-error_log
    CustomLog logs/glpi.subin-access_log combined
&lt;/VirtualHost>

&lt;Directory "/wwwroot/glpi">
    Options Indexes FollowSymLinks
    Require all granted
    AllowOverride All
&lt;/Directory>
EOF</span>

systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<h2 id="应用部署"><a href="#应用部署" class="headerlink" title="应用部署"></a>应用部署</h2><h3 id="站点部署"><a href="#站点部署" class="headerlink" title="站点部署"></a>站点部署</h3><ol>
<li>OCSInventoryNG<ol>
<li>配置数据库<br><img src="https://cdn.sujx.net/ocsweb-000.PNG" alt="database"></li>
<li>登录站点<br><img src="https://cdn.sujx.net/ocsweb-001.PNG" alt="website">	      </li>
<li>查看客户端<br><img src="https://cdn.sujx.net/ocsweb-002.PNG" alt="website"></li>
</ol>
</li>
<li>GLPI<ol>
<li>开始部署<br><img src="https://cdn.sujx.net/glpi-000.PNG" alt="client"></li>
<li>许可证<br><img src="https://cdn.sujx.net/glpi-001.PNG" alt="client"></li>
<li>开始部署<br><img src="https://cdn.sujx.net/glpi-002.PNG" alt="client"></li>
<li>配置数据库<br><img src="https://cdn.sujx.net/glpi-003.PNG" alt="client"></li>
<li>连接数据库<br><img src="https://cdn.sujx.net/glpi-004.PNG" alt="client"></li>
<li>安装完成<br><img src="https://cdn.sujx.net/glpi-005.PNG" alt="client"></li>
<li>登陆首页<br><img src="https://cdn.sujx.net/glpi-006.PNG" alt="client"></li>
</ol>
</li>
</ol>
<h3 id="信息同步"><a href="#信息同步" class="headerlink" title="信息同步"></a>信息同步</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 从github获取插件</span>
<span class="token builtin class-name">cd</span> /usr/share/ocsinventory-reports/ocsreports/
<span class="token function">git</span> clone https://github.com/pluginsGLPI/ocsinventoryng.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="配置连接"><a href="#配置连接" class="headerlink" title="配置连接"></a>配置连接</h4><ol>
<li>配置数据库连接<br><img src="https://cdn.sujx.net/glpi-ocs-001.PNG" alt="glpi-ocs"></li>
<li>同步频率<br><img src="https://cdn.sujx.net/glpi-ocs-000.PNG" alt="glpi-ocs"></li>
<li>导入资产信息<br><img src="https://cdn.sujx.net/glpi-ocs-004.PNG" alt="glpi-ocs"></li>
</ol>
<h3 id="导入资产"><a href="#导入资产" class="headerlink" title="导入资产"></a>导入资产</h3><ol>
<li>同步资产信息<br><img src="https://cdn.sujx.net/glpi-ocs-006.PNG" alt="glpi-ocs"></li>
<li>导入完成<br><img src="https://cdn.sujx.net/glpi-ocs-007.PNG" alt="Import"></li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>OCSInventroy</tag>
        <tag>GLPI</tag>
        <tag>CMDB</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7上使用yum部署Discuz!Q</title>
    <url>/2021/11/29/centos7-discuzq/</url>
    <content><![CDATA[<h2 id="文档资料"><a href="#文档资料" class="headerlink" title="文档资料"></a>文档资料</h2><h3 id="官方指引"><a href="#官方指引" class="headerlink" title="官方指引"></a>官方指引</h3><ol>
<li><p>官方站点: <a href="https://discuz.com/">https://discuz.com/</a></p>
</li>
<li><p>示例站点：<a href="https://discuz.chat/">https://discuz.chat/</a></p>
</li>
<li><p>安装指引: <a href="https://discuz.com/docs/Linux%20%E4%B8%BB%E6%9C%BA.html#nginx">https://discuz.com/docs/Linux%20%E4%B8%BB%E6%9C%BA.html#nginx</a></p>
</li>
<li><p>后台使用：<a href="https://discuz.com/manual-admin/">https://discuz.com/manual-admin/</a></p>
</li>
<li><p>程序下载: <a href="https://dl.discuz.chat/dzq_latest_install.zip">https://dl.discuz.chat/dzq_latest_install.zip</a></p>
</li>
</ol>
<h3 id="社区使用"><a href="#社区使用" class="headerlink" title="社区使用"></a>社区使用</h3><p>站点：<a href="http://forum.fxiaoke.com/">纷享社区 (fxiaoke.com)</a></p>
<p>后台登录：<a href="http://forum.fxiaoke.com/admin">管理中心首页 (fxiaoke.com)</a></p>
<h2 id="程序部署"><a href="#程序部署" class="headerlink" title="程序部署"></a>程序部署</h2><h3 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
yum makecache
yum update <span class="token parameter variable">-y</span>

<span class="token comment"># 创建本地软件源</span>
<span class="token comment"># 因为是在内网环境部署，所以采用yumdownload下载软件后，使用本机源的形式部署。</span>
<span class="token comment"># 使用remi源</span>
<span class="token comment"># 需要开启epel源</span>

<span class="token function">tar</span> zxvf php74.tar.gz <span class="token parameter variable">-C</span> /opt/
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> createrepo
createrepo /opt/php74/
yum-config-manager --add-repo file:/opt/php74

<span class="token comment"># 安装软件包打包证书</span>
<span class="token comment"># wget https://rpms.remirepo.net/RPM-GPG-KEY-remi</span>

<span class="token comment">#导入证书</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> RPM-GPG-KEY-remi
<span class="token comment"># 安装nginx和PHP</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> php php-cli php-fpm php-gd php-mysqlnd php-odbc php-bcmath php-curl php-fileinfo php-nette-tokenizer php-xmlrpc php-date php-soap php-ldap php-mbstring libmcrypt libmcrypt-devel php-pecl-apcu mhash php-dom php-xmlreader php-date php-exif php-filter  php-hash php-iconv php-json php-libxml php-mysqlnd php-openssl php-pcre php-posix hp-tokenizer php-zlib php-opcache php-zip
<span class="token comment"># 拉起服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> nginx php-fpm
<span class="token comment"># 开放80端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>http
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment">#论坛程序部署</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /wwwroot/discuz/public
<span class="token function">unzip</span> dzq_latest_install.zip <span class="token parameter variable">-d</span> /wwwroot/discuz/
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /wwwroot/

<span class="token comment"># 配置PHP-fpm</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\;exif.\exif.\g'</span> /etc/php.ini
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@date.timezone =@date.timezone = Asia\Shanghai@g'</span> /etc/php.ini
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\zlib.output_compression = Off\zlib.output_compression = On\g'</span> /etc/php.ini
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\user = apache\ user = nginx\g'</span> /etc/php-fpm.d/www.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s\group = apache\ group = nginx\g'</span> /etc/php-fpm.d/www.conf

systemctl restart php-fpm.service

<span class="token function">netstat</span> <span class="token parameter variable">-tlnp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>配置Nginx</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">&#123;</span>
    listen       <span class="token number">80</span><span class="token punctuation">;</span>
    listen       <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80<span class="token punctuation">;</span>
    server_name  forum.sujx.net<span class="token punctuation">;</span>
    <span class="token comment"># 修改root目录</span>
    root         /wwwroot/discuz/public/<span class="token punctuation">;</span>

    <span class="token comment"># Load configuration files for the default server block.</span>
    include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>
    <span class="token comment"># 添加配置参数</span>
    index index.php<span class="token punctuation">;</span>
    <span class="token function">gzip</span> on<span class="token punctuation">;</span>
    gzip_min_length <span class="token number">1024</span><span class="token punctuation">;</span>
    gzip_types application/json text/css application/x-javascript application/javascript application/vnd.api+json<span class="token punctuation">;</span>
    gzip_disable <span class="token string">"MSIE [1-6]\."</span><span class="token punctuation">;</span>
    gzip_comp_level <span class="token number">2</span><span class="token punctuation">;</span>
   <span class="token comment"># 配置rewrite模块 </span>
    location / <span class="token punctuation">&#123;</span>
            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.php?<span class="token variable">$query_string</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
   <span class="token comment"># 添加PHP支持</span>
    location ~ <span class="token punctuation">\</span>.php$ <span class="token punctuation">&#123;</span>
        fastcgi_pass   <span class="token number">127.0</span>.0.1:9000<span class="token punctuation">;</span>
        fastcgi_param  SCRIPT_FILENAME <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>
        fastcgi_param  PATH_INFO <span class="token variable">$fastcgi_path_info</span><span class="token punctuation">;</span>
        include        fastcgi_params<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
            error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>
    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>
    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Mariadb需要10.0.5以上，MySQL需要8.5以上</span>
mysql<span class="token operator">></span> create database forumdb<span class="token punctuation">;</span>
mysql<span class="token operator">></span> create user forumdbadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'forumdbadmin'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on ocsng.* to forumdbadmin@<span class="token string">'localhost'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>访问站点IP或者域名来进行安装</p>
<p>以下略</p>
]]></content>
      <tags>
        <tag>CentOS</tag>
        <tag>discuz</tag>
        <tag>forum</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux上安装McAfee杀毒软件</title>
    <url>/2021/11/19/centos7-mcafee/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为了满足客户的安全需求，我司需要至少使用两种杀毒软件对交付的应用服务程序进行安全检查。因此，在ClamAV的基础上，我们还需要另外一种Linux版本的杀毒软件。不幸的是，无论使用baidu或者google检索出的所有免费可用杀毒软件大多已经没有Linux版本了，要么交付不菲的费用、要么产品下线、要么必须安装GTK桌面。</p>
<p>最后，在我们的认知范围内，可以选择的产品是Mcafee Endpoint Security，也就是他家的企业版杀毒软件。理由一个是可以免费试用，一个是可以单机使用。</p>
<p>另外，在检索的过程中发现国内的Linux版本杀毒软件有一个360的安全卫士Linux版，还有一个火绒企业版的Linux客户端。印象里面奇安信的天擎系统也有Linux的agent。不过，试用国产软件的后续麻烦事多，就不叨扰了。</p>
<h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><ol>
<li>Mcafee提供试用软件包<a href="https://www.mcafee.com/enterprise/zh-cn/downloads/trials.html">下载</a>；</li>
<li>Endpoint Security 提供Windows、Mac、Linux三种版本的客户端；</li>
<li>客户端可以搭配EPO服务器进行统一下发和管理，也可以以Standalone的形式来运行</li>
</ol>
<h3 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h3><ol>
<li>M家的免费试用包获取有时间间隔，如果你下错了，每次无论你选择那个产品，出来的下载链接都是指向原先选的那个产品的；</li>
<li>M家明明有专门面向Linux单机运行的command on linux产品，就是不给你试用，必须下载企业版杀毒软件的Linux客户端(虽然也可以standalone试用);</li>
<li>软件包里面完全是套娃，tar.gz里面套tar.gz再套一层tar.gz；</li>
<li>EPO集中管理的部署事无巨细、standalone形式安装指引基本没有用，连蒙带猜才安装成功；</li>
<li>压缩包不知所谓的给了x权限，可能是和该包是在Mac上打包的有关系？给人很不严肃的感觉。</li>
</ol>
<h2 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol>
<li>本次测试使用64位CentOS7</li>
<li>上传测试包 ENSL1069_Eval.zip</li>
<li>执行解压缩 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># unzip ENSL1069_Eval.zip</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># tree ENSL1069_Eval</span>
ENSL1069_Eval
├── ensl_1066_ig_0-00_en-us.PDF	<span class="token comment"># 安装指引</span>
├── ensl_1066_pg_0-00_en-us.PDF <span class="token comment"># 使用指引</span>
├── ensl_1069_rn_0-00_en-us.pdf <span class="token comment"># 发行说明</span>
├── MA562LNX
│   ├── MFEma.x86_64.deb
│   ├── MFEma.x86_64.rpm <span class="token comment"># Mcafee客户端</span>
│   ├── MFErt.i686.deb
│   └── MFErt.i686.rpm <span class="token comment"># Mcafee运行库</span>
├── MCAFEE_LLC.PUB.TAR <span class="token comment"># 发行密钥</span>
└── McAfeeTP-10.6.9-121-Eval-standalone.tar.gz <span class="token comment"># 独立安装包	</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># tar zxvf McAfeeTP-10.6.9-121-Eval-standalone.tar.gz </span>
./install-mfetp.sh <span class="token comment"># 安装脚本</span>
./McAfeeTP-10.6.9-121-standalone.linux.tar.gz <span class="token comment"># 安装软件</span>

<span class="token comment"># 解压缩软件安装包可得到如下包</span>
<span class="token comment"># 安装无须解包，安装脚本会自动解包</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># tree standalone/</span>
standalone/
├── license.txt	<span class="token comment"># 版权信息</span>
├── McAfeeESP-10.6.9-126.deb
├── McAfeeESP-10.6.9-126.x86_64.rpm	<span class="token comment"># 主程序</span>
├── McAfeeESPAac-10.6.9-126.deb
├── McAfeeESPAac-10.6.9-126.x86_64.rpm <span class="token comment">#</span>
├── McAfeeESPFileAccess-10.6.9-126.deb
├── McAfeeESPFileAccess-10.6.9-126.x86_64.rpm <span class="token comment"># 文件检测模块</span>
├── McAfeeRt-10.6.9-126.deb
├── McAfeeRt-10.6.9-126.x86_64.rpm	<span class="token comment">#rookit检测模块</span>
├── McAfeeTP-10.6.9-121.deb
├── McAfeeTP-10.6.9-121.x86_64.rpm	<span class="token comment"># 进程检测模块</span>
└── validate-mfeesp.sh <span class="token comment"># 升级脚本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>以管理员权限进行安装<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 手动安装</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># rpm -Uvh ENSL1069_Eval/MA562LNX/MFErt.i686.rpm</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># rpm -Uvh ENSL1069_Eval/MA562LNX/MFEma.x86_64.rpm</span>
<span class="token comment"># 脚本安装</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># ./install-mfetp.sh</span>
<span class="token comment"># accpet 授权信息</span>
…………
Installed:
  McAfeeESP.x86_64 <span class="token number">0</span>:10.6.9-126  McAfeeESPAac.x86_64 <span class="token number">0</span>:10.6.9-126  McAfeeESPFileAccess.x86_64 <span class="token number">0</span>:10.6.9-126  McAfeeRt.x86_64 <span class="token number">0</span>:10.6.9-126  McAfeeTP.x86_64 <span class="token number">0</span>:10.6.9-121 

Complete<span class="token operator">!</span>
Successfully installed McAfeeTP-10.6.9-121.x86_64.rpm

Schedule <span class="token keyword">for</span> Default DAT and Engine update task was successfully added
Successfully enabled GTI
Enabling OAS, please <span class="token function">wait</span> <span class="token keyword">for</span> some <span class="token function">time</span>
OAS was successfully enabled
Access Protection was specifically disabled during installation
McAfeeTP is ready <span class="token keyword">for</span> use now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>检查服务状态<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># service mfetpd status</span>
Redirecting to /bin/systemctl status mfetpd.service
● mfetpd.service - McAfee Endpoint Security <span class="token keyword">for</span> Linux Threat Prevention
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/mfetpd.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue <span class="token number">2021</span>-11-23 06:09:59 EST<span class="token punctuation">;</span> 2min 39s ago
     Docs: man:mfetpd<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
  Process: <span class="token number">4928</span> <span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/opt/McAfee/ens/tp/scripts/cgroup-mount-helper.sh systemd <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">0</span>/SUCCESS<span class="token punctuation">)</span>
  Process: <span class="token number">3952</span> <span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/opt/McAfee/ens/tp/scripts/fileaccess-control-wrapper.sh systemd <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">0</span>/SUCCESS<span class="token punctuation">)</span>
  Process: <span class="token number">3950</span> <span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/opt/McAfee/ens/tp/scripts/aac-control-wrapper.sh systemd <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">0</span>/SUCCESS<span class="token punctuation">)</span>
 Main PID: <span class="token number">4939</span> <span class="token punctuation">(</span>mfetpd<span class="token punctuation">)</span>
   CGroup: /system.slice/mfetpd.service
           ├─4939 /opt/McAfee/ens/tp/bin/mfetpd
           ├─4971 /opt/McAfee/ens/tp/bin/mfetpd
           ├─4973 /opt/McAfee/ens/tp/bin/mfetpd
           └─4981 /opt/McAfee/ens/tp/bin/mfetpd

Nov <span class="token number">23</span> 06:09:58 antivirus systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Starting McAfee Endpoint Security <span class="token keyword">for</span> Linux Threat Prevention<span class="token punctuation">..</span>.
Nov <span class="token number">23</span> 06:09:59 antivirus fileaccess-control-wrapper.sh<span class="token punctuation">[</span><span class="token number">3952</span><span class="token punctuation">]</span>: Re-using modules  <span class="token number">3.10</span>.0-693.21.1.el7.x86_64/mfe_fileaccess_100609126.ko
Nov <span class="token number">23</span> 06:09:59 antivirus systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Started McAfee Endpoint Security <span class="token keyword">for</span> Linux Threat Prevention.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol>
<li>使用管理员程序进入程序路径<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/McAfee/ens/tp/bin/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>开启文件保护<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --getapstatus</span>
Access Protection: Disabled
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --setapstatus enable</span>
AP Enabled Successfully
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --getapstatus</span>
Access Protection: Enabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>查看扫描设定<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --getoasconfig --summary</span>
On-Access Scan: Enabled and Compliant
Profile Setting: Standard
Maximum scan time: <span class="token number">45</span>
GTI: Enabled
GTI Sensitivity Level: Medium<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>运行任务<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看当前任务</span>
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --listtasks</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span>Index  Task Name                                  Task Type                     Task Status     Last Run                            <span class="token operator">|</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span><span class="token number">1</span>      quick scan        <span class="token comment"># 快速扫描             ODS                           Not Started     Not Applicable                        |</span>
<span class="token operator">|</span><span class="token number">2</span>      full scan         <span class="token comment"># 全盘扫描             ODS                           Not Started     Not Applicable                        |</span>
<span class="token operator">|</span><span class="token number">3</span>      Default Client Update task  <span class="token comment"># 升级       DAT and Engine Update         Aborted         Tue 23 Nov 2021 06:10:10 AM EST       |</span>

<span class="token comment"># 添加自定义任务</span>
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --addodstask --name checktmp --scanpaths /tmp</span>
ODS Task was successfully added
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --listtasks</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span>Index  Task Name                                  Task Type                     Task Status     Last Run                            <span class="token operator">|</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span><span class="token number">1</span>      quick scan                                 ODS                           Not Started     Not Applicable                      <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">2</span>      full scan                                  ODS                           Not Started     Not Applicable                      <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">3</span>      Default Client Update task                 DAT and Engine Update         Aborted         Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:10:10 AM EST     <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">4</span>      checktmp                                   ODS                           Not Started     Not Applicable                      <span class="token operator">|</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --runtask --index 4</span>
Task was successfully started

<span class="token comment"># 执行全盘扫描</span>
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --runtask --index 2</span>
Task was successfully started
<span class="token punctuation">[</span>root@antivirus bin<span class="token punctuation">]</span><span class="token comment"># ./mfetpcli --listtasks	#参加下表，可以全盘扫描任务为进行中，自定义任务为运行完成</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span>Index  Task Name                                  Task Type                     Task Status     Last Run                            <span class="token operator">|</span>
 -------------------------------------------------------------------------------------------------------------------------------------
<span class="token operator">|</span><span class="token number">1</span>      quick scan                                 ODS                           Not Started     Not Applicable                      <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">2</span>      full scan                                  ODS                           Running         Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:39:01 AM EST     <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">3</span>      Default Client Update task                 DAT and Engine Update         Aborted         Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:10:10 AM EST     <span class="token operator">|</span>
<span class="token operator">|</span><span class="token number">4</span>      checktmp                                   ODS                           Completed       Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:37:30 AM EST     <span class="token operator">|</span>
 -------------------------------------------------------------------------------------------------------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h3><ol>
<li>路径<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看任务结果有两个位置</span>
/var/McAfee/ens/log/tp/odsreport/
/var/McAfee/ens/log/tp/mfetpd.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>内容<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 简略日志报告</span>
<span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># tail -f -n 27 /var/McAfee/ens/log/tp/mfetpd.log                                                                                                     </span>
Nov <span class="token number">23</span> 06:38:59 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Received <span class="token builtin class-name">command</span> to start the task - full scan
Nov <span class="token number">23</span> 06:38:59 antivirus INFO ScanFactoryBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Starting the ODS Scan Manager
Nov <span class="token number">23</span> 06:39:00 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Starting ODS Collector <span class="token keyword">for</span> the task - full scan
Nov <span class="token number">23</span> 06:39:01 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Successfully started the thread to monitor the ODS Collector Process - <span class="token number">5334</span> <span class="token keyword">for</span> the ODS Task name - full scan
Nov <span class="token number">23</span> 06:39:01 antivirus INFO TaskManager <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Task - full scan was successfully startedNov <span class="token number">23</span> 06:40:18 antivirus ERROR GTIQueryManager <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Exception received during GTI communication: Error encountered during GTI lookup.Nov <span class="token number">23</span> 06:40:18 antivirus INFO GTIQueryManager <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> GTI reachability has been temporarily disabled <span class="token keyword">for</span> ODS <span class="token punctuation">(</span>buffered queue<span class="token punctuation">)</span>.
Nov <span class="token number">23</span> 06:40:29 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> ODS Collector child process exited normally <span class="token keyword">for</span> the Task name - full scan
Nov <span class="token number">23</span> 06:40:29 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> All GTI Requests have been processed <span class="token keyword">for</span> the task - full scan
Nov <span class="token number">23</span> 06:40:29 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Notified ODS Scan Request Queue monitoring thread to <span class="token builtin class-name">exit</span> <span class="token keyword">for</span> the Task name - full scan
Nov <span class="token number">23</span> 06:40:29 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Thread that was monitoring ODS Scan Request Queue from the ODS Collector Process <span class="token keyword">for</span> the task - full scan is exiting now after processing <span class="token number">47439</span> requests.
Nov <span class="token number">23</span> 06:40:30 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Received the last report update from ods scanmanager
Nov <span class="token number">23</span> 06:40:30 antivirus INFO AMODSBroker <span class="token punctuation">[</span><span class="token number">4939</span><span class="token punctuation">]</span> Final Report <span class="token keyword">for</span> ODS Task - 
Task Name           <span class="token builtin class-name">:</span> full scan
Total Requests      <span class="token builtin class-name">:</span> <span class="token number">49315</span>
No of files skipped <span class="token builtin class-name">:</span> <span class="token number">1871</span>
No. of Good files   <span class="token builtin class-name">:</span> <span class="token number">47401</span>
No. of Cache hit    <span class="token builtin class-name">:</span> <span class="token number">6</span>
No of Files Excluded: <span class="token number">0</span>
No. of Infections   <span class="token builtin class-name">:</span> <span class="token number">0</span>
Timeout             <span class="token builtin class-name">:</span> <span class="token number">0</span>
ScanError           <span class="token builtin class-name">:</span> <span class="token number">37</span>
No of files cleaned <span class="token builtin class-name">:</span> <span class="token number">0</span>
No of files deleted <span class="token builtin class-name">:</span> <span class="token number">0</span>
Time taken          <span class="token builtin class-name">:</span> <span class="token number">90</span>.353583s
Engine version      <span class="token builtin class-name">:</span> <span class="token number">6010.8670</span>
DAT version         <span class="token builtin class-name">:</span> <span class="token number">999.0</span>
<span class="token comment"># 自定义任务执行日志</span>
<span class="token punctuation">[</span>root@antivirus odsreport<span class="token punctuation">]</span><span class="token comment"># cat checktmp.log </span>
EVENT <span class="token operator">=</span> ODS_START <span class="token operator">|</span> NAME <span class="token operator">=</span> checktmp <span class="token operator">|</span> TIME <span class="token operator">=</span> <span class="token number">1637667450</span> <span class="token operator">|</span> <span class="token environment constant">USER</span> <span class="token operator">=</span> <span class="token number">0</span>
EVENT <span class="token operator">=</span> ODS_STOP <span class="token operator">|</span> NAME <span class="token operator">=</span> checktmp <span class="token operator">|</span> TIME <span class="token operator">=</span> <span class="token number">1637667452</span> <span class="token operator">|</span> <span class="token environment constant">USER</span> <span class="token operator">=</span> <span class="token number">0</span>
EVENT <span class="token operator">=</span> ODS_SUMMARY <span class="token operator">|</span> 
Task Name            <span class="token builtin class-name">:</span> checktmp
Start <span class="token function">time</span>           <span class="token builtin class-name">:</span> Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:37:30 AM EST 
End <span class="token function">time</span>             <span class="token builtin class-name">:</span> Tue <span class="token number">23</span> Nov <span class="token number">2021</span> 06:37:32 AM EST 
Total Requests       <span class="token builtin class-name">:</span> <span class="token number">3</span>
No of files skipped  <span class="token builtin class-name">:</span> <span class="token number">1</span>
No. of Good files    <span class="token builtin class-name">:</span> <span class="token number">2</span>
No. of Cache hit     <span class="token builtin class-name">:</span> <span class="token number">0</span>
No of Files Excluded <span class="token builtin class-name">:</span> <span class="token number">0</span>
No. of Infections    <span class="token builtin class-name">:</span> <span class="token number">0</span>
Timeout              <span class="token builtin class-name">:</span> <span class="token number">0</span>
ScanError            <span class="token builtin class-name">:</span> <span class="token number">0</span>
No of files cleaned  <span class="token builtin class-name">:</span> <span class="token number">0</span>
No of files deleted  <span class="token builtin class-name">:</span> <span class="token number">0</span>
Time taken           <span class="token builtin class-name">:</span> <span class="token number">2</span>.023543s
Engine version       <span class="token builtin class-name">:</span> <span class="token number">6010.8670</span>
DAT version          <span class="token builtin class-name">:</span> <span class="token number">999.0</span>
INFO ScanFactory <span class="token punctuation">[</span><span class="token number">5273</span><span class="token punctuation">]</span> ODS Scan Manager is shutting down gracefully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@antivirus ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/McAfee/ens/tp/scripts</span>
<span class="token punctuation">[</span>root@antivirus scripts<span class="token punctuation">]</span><span class="token comment"># ./uninstall-mfetp.sh </span>
Uninstall McAfee Endpoint Security <span class="token keyword">for</span> Linux Threat Prevention ? <span class="token punctuation">(</span>yes or no<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> <span class="token function">yes</span>
Detected <span class="token function">rpm</span> based distribution
warning: /opt/McAfee/ens/tp/etc/prefs.xml saved as /opt/McAfee/ens/tp/etc/prefs.xml.rpmsave
finished McAfeeTP removal
Successfully uninstalled McAfee Endpoint Security <span class="token keyword">for</span> Linux Threat Prevention.
finished McAfeeESPFileAccess removal
Successfully uninstalled McAfee Endpoint Security Kernel Modules <span class="token keyword">for</span> Linux.
finished McAfeeESPAac removal
Successfully uninstalled McAfee Endpoint Security Kernel Modules <span class="token keyword">for</span> Linux.
Detected <span class="token function">rpm</span> based distribution
McAfee Endpoint Security Platform File Access <span class="token keyword">for</span> Linux is already uninstalled.
McAfee Endpoint Security Arbitrary Access Control is already uninstalled.
finished McAfeeESP removal
Successfully uninstalled McAfee Endpoint Security Platform <span class="token keyword">for</span> Linux.
finished McAfeeRt removal
Successfully uninstalled McAfee Runtime <span class="token keyword">for</span> Linux.
McAfee FMP <span class="token keyword">for</span> Linux is already uninstalled.

<span class="token punctuation">[</span>root@antivirus scripts<span class="token punctuation">]</span><span class="token comment"># rpm -e MFEcma MFErt</span>
Stopping and unregistering MA start up script<span class="token punctuation">..</span>.
Stopping dependent services <span class="token punctuation">..</span>.
stopping ma service<span class="token punctuation">..</span>.
Removed symlink /etc/systemd/system/multi-user.target.wants/mcafee.ma.service.
warning: /etc/ma.d/mainfo.ini saved as /etc/ma.d/mainfo.ini.rpmsave
warning: /etc/ma.d/EPOAGENT3000/config.xml saved as /etc/ma.d/EPOAGENT3000/config.xml.rpmsave
warning: /etc/ma.d/CMNUPD__3000/config.xml saved as /etc/ma.d/CMNUPD__3000/config.xml.rpmsave
Removing /var/McAfee/agent directory
Removing /var/McAfee/.msgbus/* directory
Restarting stopped services <span class="token punctuation">..</span>.
Deleting user<span class="token punctuation">(</span>mfe<span class="token punctuation">)</span> and group <span class="token punctuation">(</span>mfe<span class="token punctuation">)</span>
Runtime uninstalled successfully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="网络部署"><a href="#网络部署" class="headerlink" title="网络部署"></a>网络部署</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.添加以下包至本地YUM库
McAfeeESP-10.6.9-126.x86_64.rpm
McAfeeESPAac-10.6.9-126.x86_64.rpm
McAfeeESPFileAccess-10.6.9-126.x86_64.rpm
McAfeeRt-10.6.9-126.x86_64.rpm
McAfeeTP-10.6.9-121.x86_64.rpm
MFEma.x86_64.rpm
MFErt.i686.rpm

<span class="token number">2</span>.执行yum <span class="token function">install</span> <span class="token parameter variable">-y</span> McAfeeTP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



]]></content>
      <tags>
        <tag>CentOS</tag>
        <tag>antivirus</tag>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS扩容LVM系统盘</title>
    <url>/2021/11/15/lvm-extend-sysdisk/</url>
    <content><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在系统运维中，遇到磁盘空间不足的情况时，往往需要对磁盘进行扩容。一种方式是新增磁盘，一种方式磁盘扩容。前者较为简单，已有相关<a href="https://www.sujx.net/2020/05/01/how_to_use_lvm/">内容</a>。本次就说一下系统盘单盘扩容的方法。</p>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol>
<li><p>以下使用CentOS8.5环境下的GPT格式磁盘</p>
</li>
<li><p>扩容对象为&#x2F;dev&#x2F;nvme0n1，容量有20G扩容为50G</p>
</li>
<li><p>扩盘前状态</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># pvscan </span>
  PV /dev/nvme0n1p3   VG cl              lvm2 <span class="token punctuation">[</span><span class="token number">18.41</span> GiB / <span class="token number">0</span>    free<span class="token punctuation">]</span>
  Total: <span class="token number">1</span> <span class="token punctuation">[</span><span class="token number">18.41</span> GiB<span class="token punctuation">]</span> / <span class="token keyword">in</span> use: <span class="token number">1</span> <span class="token punctuation">[</span><span class="token number">18.41</span> GiB<span class="token punctuation">]</span> / <span class="token keyword">in</span> no VG: <span class="token number">0</span> <span class="token punctuation">[</span><span class="token number">0</span>   <span class="token punctuation">]</span>

<span class="token comment"># 注意使用parted来查看硬盘状态，而不应当使用fdisk，因为下述使用GPT分区。</span>

<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># parted -l</span>
Model: NVMe Device <span class="token punctuation">(</span>nvme<span class="token punctuation">)</span>
Disk /dev/nvme0n1: <span class="token number">53</span>.7GB
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512B/512B
Partition Table: gpt
Disk Flags: 
Number  Start   End     Size    File system  Name                  Flags
 <span class="token number">1</span>      1049kB  630MB   629MB   fat32        EFI System Partition  boot, esp
 <span class="token number">2</span>      630MB   1704MB  1074MB  xfs
 <span class="token number">3</span>      1704MB  <span class="token number">21</span>.5GB  <span class="token number">19</span>.8GB  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>扩展分区</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装分区扩容工具</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> cloud-utils-growpart.noarch
<span class="token comment"># growpart 扩容对象 分区编号 （参见上述parted -l的结果）</span>
growpart /dev/nvme0n1 <span class="token number">3</span>
<span class="token comment"># 查看结果</span>
<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># parted -l</span>
Model: NVMe Device <span class="token punctuation">(</span>nvme<span class="token punctuation">)</span>
Disk /dev/nvme0n1: <span class="token number">53</span>.7GB
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512B/512B
Partition Table: gpt
Disk Flags: 
Number  Start   End     Size    File system  Name                  Flags
 <span class="token number">1</span>      1049kB  630MB   629MB   fat32        EFI System Partition  boot, esp
 <span class="token number">2</span>      630MB   1704MB  1074MB  xfs
 <span class="token number">3</span>      1704MB  <span class="token number">53</span>.7GB  <span class="token number">52</span>.0GB   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>扩展LVM</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># pvresize /dev/nvme0n1p3</span>
  Physical volume <span class="token string">"/dev/nvme0n1p3"</span> changed
  <span class="token number">1</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> resized or updated / <span class="token number">0</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> not resized
  
<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># pvs</span>
  PV             VG Fmt  Attr PSize  PFree 
  /dev/nvme0n1p3 cl lvm2 a--  <span class="token number">48</span>.41g <span class="token number">30</span>.00g
  
<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># lvextend -l +100%free /dev/cl/root</span>
  Size of logical volume cl/root changed from <span class="token number">30.00</span> GiB <span class="token punctuation">(</span><span class="token number">7680</span> extents<span class="token punctuation">)</span> to <span class="token number">46.41</span> GiB <span class="token punctuation">(</span><span class="token number">11881</span> extents<span class="token punctuation">)</span>.
  Logical volume cl/root successfully resized.
  
<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># pvs</span>
  PV             VG Fmt  Attr PSize  PFree
  /dev/nvme0n1p3 cl lvm2 a--  <span class="token number">48</span>.41g    <span class="token number">0</span> 
  
<span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV   VG Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root cl -wi-ao---- <span class="token number">46</span>.41g                                                    
  swap cl -wi-ao----  <span class="token number">2</span>.00g <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>收尾</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elastic ~<span class="token punctuation">]</span><span class="token comment"># xfs_growfs /dev/cl/root</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>GPT分区工具使用parted，而MBR分区使用fdisk</li>
<li>LVM管理的PV是分区，如果没有growpart，则需要新建分区再加入对应VG</li>
</ol>
]]></content>
      <tags>
        <tag>CentOS</tag>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware磁盘文件转化为Hyper-V磁盘</title>
    <url>/2021/11/01/vmdk2vhdx/</url>
    <content><![CDATA[<h1 id="VMware磁盘文件转化为Hyper-V磁盘"><a href="#VMware磁盘文件转化为Hyper-V磁盘" class="headerlink" title="VMware磁盘文件转化为Hyper-V磁盘"></a>VMware磁盘文件转化为Hyper-V磁盘</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>现有以VM形式提供的测试工具，大多以VMware的vmdk格式存储。那么就存在将这些文件转换为现有的Hyper-V支持的VHDX格式的需求。</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>有很多工具可以实现不同虚机版本的硬盘文件互转，比如winimage或者virtualbox以及各个厂商推出的工具。</p>
<p>本次推荐使用Starwind出品的免费工具：</p>
<p>[V2VConverter]: <a href="https://www.starwindsoftware.com/starwind-v2v-converter">https://www.starwindsoftware.com/starwind-v2v-converter</a>	“”V2V Converter&#x2F; P2V Migrator”<br>[免注册下载地址]: <a href="https://link.zhihu.com/?target=https://www.starwindsoftware.com/tmplink/starwindconverter.exe">https://link.zhihu.com/?target=https%3A//www.starwindsoftware.com/tmplink/starwindconverter.exe</a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>获取虚拟机VMDK文件</p>
<ol>
<li>避免直接使用VMwareWorkstation创建的虚机文件，应当使用“文件”—“导出为OVF”生成的vmdk文件</li>
<li>从ESXi导出的ova文件，可以解压缩之后得到相对应的vmdk文件</li>
</ol>
</li>
<li><p>安装V2VConverter工具<br> <img src="https://cdn.sujx.net/starwindv2v-000.PNG"></p>
</li>
<li><p>转换类型，支持本地文件和远程虚拟化服务器上目标<br> <img src="https://cdn.sujx.net/starwindv2v-001.PNG"></p>
</li>
<li><p>转换本地虚拟硬盘</p>
<ol>
<li><p>转换文件保存为本地文件<br><img src="https://cdn.sujx.net/starwindv2v-002.PNG"></p>
</li>
<li><p>保存文件类型<br><img src="https://cdn.sujx.net/starwindv2v-003.PNG"></p>
</li>
<li><p>文件存储格式<br><img src="https://cdn.sujx.net/starwindv2v-004.PNG"></p>
</li>
<li><p>VHDX格式存在两代四种类型<br><img src="https://cdn.sujx.net/starwindv2v-005.PNG"></p>
</li>
<li><p>保存目标<br><img src="https://cdn.sujx.net/starwindv2v-006.PNG"></p>
</li>
<li><p>执行转换<br><img src="https://cdn.sujx.net/starwindv2v-007.PNG"></p>
</li>
</ol>
</li>
<li><p>转换为远程Hyper-V服务器上的虚机</p>
<ol>
<li><p>输入远程服务器凭证<br><img src="https://cdn.sujx.net/starwindv2v-012.PNG"></p>
</li>
<li><p>选择存储目标<br><img src="https://cdn.sujx.net/starwindv2v-013.PNG"></p>
</li>
<li><p>选择磁盘格式<br><img src="https://cdn.sujx.net/starwindv2v-014.PNG"></p>
</li>
<li><p>存储目标<br><img src="https://cdn.sujx.net/starwindv2v-015.PNG"></p>
</li>
<li><p>执行转换<br><img src="https://cdn.sujx.net/starwindv2v-016.PNG"></p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>vmdk</tag>
        <tag>vhdx</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS8与Fail2Ban的联合使用</title>
    <url>/2021/10/29/fail2ban/</url>
    <content><![CDATA[<h1 id="CentOS8与Fail2Ban的联合使用"><a href="#CentOS8与Fail2Ban的联合使用" class="headerlink" title="CentOS8与Fail2Ban的联合使用"></a>CentOS8与Fail2Ban的联合使用</h1><blockquote>
<p>Fail2ban是一个根据系统日志动态调整防火墙规则的安全工具，它具有响应迅速、使用方便的特性。</p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Fail2ban是fedora社区打包的rpm包，需要添加EPEL软件源</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release
dnf makecache
dnf update <span class="token parameter variable">-y</span>

dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> fail2ban
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> fail2ban.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># tree /etc/fail2ban/</span>
/etc/fail2ban/					<span class="token comment"># 配置文件目录</span>
├── action.d					<span class="token comment"># 可搭配下列进程进行防火管理，比如防火墙封堵、发送邮件等</span>
│   ├── abuseipdb.conf
│   ├── apf.conf
│   ├── badips.conf
│   ├── badips.py
│   ├── blocklist_de.conf
│   ├── cloudflare.conf
│   ├── dshield.conf
│   ├── dummy.conf
│   ├── firewallcmd-allports.conf
│   ├── firewallcmd-common.conf
│   ├── firewallcmd-ipset.conf
│   ├── firewallcmd-multiport.conf
│   ├── firewallcmd-new.conf
│   ├── firewallcmd-rich-logging.conf
│   ├── firewallcmd-rich-rules.conf
│   ├── helpers-common.conf
│   ├── iptables-allports.conf
│   ├── iptables-common.conf
│   ├── iptables.conf
│   ├── iptables-ipset-proto4.conf
│   ├── iptables-ipset-proto6-allports.conf
│   ├── iptables-ipset-proto6.conf
│   ├── iptables-multiport.conf
│   ├── iptables-multiport-log.conf
│   ├── iptables-new.conf
│   ├── iptables-xt_recent-echo.conf
│   ├── mail-whois-common.conf
│   ├── mynetwatchman.conf
│   ├── netscaler.conf
│   ├── nftables-allports.conf
│   ├── nftables.conf
│   ├── nftables-multiport.conf
│   ├── nginx-block-map.conf
│   ├── npf.conf
│   ├── nsupdate.conf
│   ├── route.conf
│   ├── sendmail-buffered.conf
│   ├── sendmail-common.conf
│   ├── sendmail.conf
│   ├── sendmail-geoip-lines.conf
│   ├── sendmail-whois.conf
│   ├── sendmail-whois-ipjailmatches.conf
│   ├── sendmail-whois-ipmatches.conf
│   ├── sendmail-whois-lines.conf
│   ├── sendmail-whois-matches.conf
│   ├── shorewall-ipset-proto6.conf
│   ├── smtp.py
│   ├── symbiosis-blacklist-allports.conf
│   └── xarf-login-attack.conf
├── fail2ban.conf					<span class="token comment"># 服务配置文件</span>
├── fail2ban.d
├── filter.d						<span class="token comment"># 结合各种过滤器和规则实现对多种服务的防护</span>
│   ├── 3proxy.conf
│   ├── apache-auth.conf
│   ├── apache-badbots.conf
│   ├── apache-botsearch.conf
│   ├── apache-common.conf
│   ├── apache-fakegooglebot.conf
│   ├── apache-modsecurity.conf
│   ├── apache-nohome.conf
│   ├── apache-noscript.conf
│   ├── apache-overflows.conf
│   ├── apache-pass.conf
│   ├── apache-shellshock.conf
│   ├── assp.conf
│   ├── asterisk.conf
│   ├── bitwarden.conf
│   ├── botsearch-common.conf
│   ├── centreon.conf
│   ├── common.conf
│   ├── counter-strike.conf
│   ├── courier-auth.conf
│   ├── courier-smtp.conf
│   ├── cyrus-imap.conf
│   ├── directadmin.conf
│   ├── domino-smtp.conf
│   ├── dovecot.conf
│   ├── dropbear.conf
│   ├── drupal-auth.conf
│   ├── ejabberd-auth.conf
│   ├── exim-common.conf
│   ├── exim.conf
│   ├── exim-spam.conf
│   ├── freeswitch.conf
│   ├── froxlor-auth.conf
│   ├── gitlab.conf
│   ├── grafana.conf
│   ├── groupoffice.conf
│   ├── gssftpd.conf
│   ├── guacamole.conf
│   ├── haproxy-http-auth.conf
│   ├── horde.conf
│   ├── ignorecommands
│   │   └── apache-fakegooglebot
│   ├── kerio.conf
│   ├── lighttpd-auth.conf
│   ├── mongodb-auth.conf
│   ├── monit.conf
│   ├── murmur.conf
│   ├── mysqld-auth.conf
│   ├── nagios.conf
│   ├── named-refused.conf
│   ├── nginx-botsearch.conf
│   ├── nginx-http-auth.conf
│   ├── nginx-limit-req.conf
│   ├── nsd.conf
│   ├── openhab.conf
│   ├── openwebmail.conf
│   ├── oracleims.conf
│   ├── pam-generic.conf
│   ├── perdition.conf
│   ├── phpmyadmin-syslog.conf
│   ├── php-url-fopen.conf
│   ├── portsentry.conf
│   ├── postfix.conf
│   ├── proftpd.conf
│   ├── pure-ftpd.conf
│   ├── qmail.conf
│   ├── recidive.conf
│   ├── roundcube-auth.conf
│   ├── screensharingd.conf
│   ├── selinux-common.conf
│   ├── selinux-ssh.conf
│   ├── sendmail-auth.conf
│   ├── sendmail-reject.conf
│   ├── sieve.conf
│   ├── slapd.conf
│   ├── softethervpn.conf
│   ├── sogo-auth.conf
│   ├── solid-pop3d.conf
│   ├── squid.conf
│   ├── squirrelmail.conf
│   ├── sshd.conf
│   ├── stunnel.conf
│   ├── suhosin.conf
│   ├── tine20.conf
│   ├── traefik-auth.conf
│   ├── uwimap-auth.conf
│   ├── vsftpd.conf
│   ├── webmin-auth.conf
│   ├── wuftpd.conf
│   ├── xinetd-fail.conf
│   ├── znc-adminlog.conf
│   └── zoneminder.conf
├── jail.conf				<span class="token comment"># 自定义监狱，所有黑名单用户根据此项配置管理</span>
├── jail.d
│   └── 00-firewalld.conf
├── paths-common.conf
└── paths-fedora.conf

<span class="token number">5</span> directories, <span class="token number">145</span> files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="初步应用"><a href="#初步应用" class="headerlink" title="初步应用"></a>初步应用</h2><h3 id="定义服务"><a href="#定义服务" class="headerlink" title="定义服务"></a>定义服务</h3><p>在管理目录下存在一个jail.conf文件，通过修改该文件就可实现对各项服务的访问关进监狱。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># cp jail.conf jail.confbak</span>
<span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># vim jail.conf</span>

<span class="token comment"># 默认配置</span>
<span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span>
<span class="token comment"># 被ban时间</span>
bantime  <span class="token operator">=</span> 15m
<span class="token comment"># 检索时间</span>
findtime  <span class="token operator">=</span> 10m
<span class="token comment"># 最大尝试数，即失败5次就被ban15分钟</span>
maxretry <span class="token operator">=</span> <span class="token number">5</span>
maxmatches <span class="token operator">=</span> %<span class="token punctuation">(</span>maxretry<span class="token punctuation">)</span>s
<span class="token comment"># 后端服务依赖systemd</span>
backend <span class="token operator">=</span> systemd
<span class="token comment"># 日志警告信息可以使用DNS记录访问主机地址</span>
usedns <span class="token operator">=</span> warn
<span class="token comment"># 日志编码使用utf-8</span>
logencoding <span class="token operator">=</span> utf-8
<span class="token comment"># 启用监管</span>
enabled <span class="token operator">=</span> ture
<span class="token comment"># 默认为普通模式</span>
mode <span class="token operator">=</span> normal
<span class="token comment"># 过滤模块</span>
filter <span class="token operator">=</span> %<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>s<span class="token punctuation">[</span>mode<span class="token operator">=</span>%<span class="token punctuation">(</span>mode<span class="token punctuation">)</span>s<span class="token punctuation">]</span>
<span class="token comment"># 防火墙调用firewallcmd，默认为iptables</span>
banaction <span class="token operator">=</span> firewallcmd-ipset<span class="token punctuation">[</span>actiontype<span class="token operator">=</span><span class="token operator">&lt;</span>multiport<span class="token operator">></span><span class="token punctuation">]</span>
banaction_allports <span class="token operator">=</span> firewallcmd-ipset<span class="token punctuation">[</span>actiontype<span class="token operator">=</span><span class="token operator">&lt;</span>allports<span class="token operator">></span><span class="token punctuation">]</span>

<span class="token comment"># 管理SSHD</span>
<span class="token punctuation">[</span>sshd<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
filter  <span class="token operator">=</span> sshd
port    <span class="token operator">=</span> <span class="token number">22</span>
logpath <span class="token operator">=</span> /var/log/secure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="应对SSH爆破"><a href="#应对SSH爆破" class="headerlink" title="应对SSH爆破"></a>应对SSH爆破</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart fail2ban</span>
<span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># fail2ban-client status</span>
Status
<span class="token operator">|</span>- Number of jail:      <span class="token number">1</span>
<span class="token variable"><span class="token variable">`</span>- Jail list:   sshd
<span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># fail2ban-client status sshd</span>
Status <span class="token keyword">for</span> the jail: sshd
<span class="token operator">|</span>- Filter
<span class="token operator">|</span>  <span class="token operator">|</span>- Currently failed: <span class="token number">0</span>
<span class="token operator">|</span>  <span class="token operator">|</span>- Total failed:     <span class="token number">0</span>
<span class="token operator">|</span>  <span class="token variable">`</span></span>- Journal matches:  <span class="token assign-left variable">_SYSTEMD_UNIT</span><span class="token operator">=</span>sshd.service + <span class="token assign-left variable">_COMM</span><span class="token operator">=</span>sshd
<span class="token variable"><span class="token variable">`</span>- Actions
   <span class="token operator">|</span>- Currently banned: <span class="token number">0</span>
   <span class="token operator">|</span>- Total banned:     <span class="token number">0</span>
   <span class="token variable">`</span></span>- Banned IP list:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看被ban IP，其中sshd为名称，比如上面的[wordpress]</span>
fail2ban-client status sshd
<span class="token comment">#删除被ban IP</span>
fail2ban-client <span class="token builtin class-name">set</span> sshd delignoreip <span class="token number">192.168</span>.111.111
<span class="token comment">#查看日志</span>
<span class="token function">tail</span> /var/log/fail2ban.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="高级应用"><a href="#高级应用" class="headerlink" title="高级应用"></a>高级应用</h2><h3 id="防护Wordpress"><a href="#防护Wordpress" class="headerlink" title="防护Wordpress"></a>防护Wordpress</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在指定目录下建立wordpress配置文件，指定监控wordpress的访问地址</span>
<span class="token function">vi</span> /etc/fail2ban/filter.d/wordpress.conf

<span class="token punctuation">[</span>Definition<span class="token punctuation">]</span>
failregex <span class="token operator">=</span> ^ -.* /wp-login.php.* HTTP/1<span class="token punctuation">\</span><span class="token punctuation">..</span>"
ignoreregex <span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在jail.conf中加入如下配置，让fail2ban监视指定日志文件，根据日志记录进行拦截</span>
<span class="token punctuation">[</span>wordpress<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
port <span class="token operator">=</span> http,https
filter <span class="token operator">=</span> wordpress
action <span class="token operator">=</span> %<span class="token punctuation">(</span>action_mwl<span class="token punctuation">)</span>s
maxretry <span class="token operator">=</span> <span class="token number">20</span>
findtime <span class="token operator">=</span> <span class="token number">60</span>
bantime <span class="token operator">=</span> <span class="token number">3600</span>
logpath <span class="token operator">=</span> /usr/local/nginx/logs/access.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="防止半连接攻击"><a href="#防止半连接攻击" class="headerlink" title="防止半连接攻击"></a>防止半连接攻击</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 需要先新建一个nginx日志匹配规则</span>
<span class="token function">vi</span> /etc/fail2ban/filter.d/nginx-cc.conf
<span class="token comment">#填写如下内容</span>
<span class="token punctuation">[</span>Definition<span class="token punctuation">]</span>
failregex <span class="token operator">=</span>  -.*- .*HTTP/1.* .* .*$
ignoreregex <span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 加入如下配置</span>
<span class="token punctuation">[</span>nginx-cc<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
port <span class="token operator">=</span> http,https
filter <span class="token operator">=</span> nginx-cc
action <span class="token operator">=</span> %<span class="token punctuation">(</span>action_mwl<span class="token punctuation">)</span>s
maxretry <span class="token operator">=</span> <span class="token number">20</span>
findtime <span class="token operator">=</span> <span class="token number">60</span>
bantime <span class="token operator">=</span> <span class="token number">3600</span>
logpath <span class="token operator">=</span> /usr/local/nginx/logs/access.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h2><p>[fail2ban防护DDOS攻击]: <a href="https://www.cnblogs.com/ipyanthony/p/9336142.html">https://www.cnblogs.com/ipyanthony/p/9336142.html</a>	“”Fail2ban防护DDOS攻击”<br>[使用Fail2Ban保护Nginx\Wordpress简单又高效]: <a href="https://zhuanlan.zhihu.com/p/71818778">https://zhuanlan.zhihu.com/p/71818778</a>	““使用Fail2Ban保护wordpress”</p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Fail2Ban</tag>
        <tag>Firewall</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Tmux进行对Linux主机的管理</title>
    <url>/2021/10/19/tmux/</url>
    <content><![CDATA[<h1 id="使用Tmux进行对Linux主机的管理"><a href="#使用Tmux进行对Linux主机的管理" class="headerlink" title="使用Tmux进行对Linux主机的管理"></a>使用Tmux进行对Linux主机的管理</h1><p>Tmux是一个用来替代Screen的多窗口管理工具.由于CentOS8官方源已经不再提供screen，其替代品就是Tmux(Terminal MultipleXer)。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf makecache
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> tmux
<span class="token comment"># 进入Tmux</span>
tmux
<span class="token comment"># 退出</span>
<span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建一个名为t1的tmux会话，默认初始编号为0</span>
$ tmux new <span class="token parameter variable">-s</span> t1
<span class="token comment"># 临时退出当前会话，即分离会话</span>
$ tmux detach		<span class="token comment"># 或使用crtl+b d</span>
<span class="token comment"># 再创建一个新的会话t2和t3</span>
$ tmux new <span class="token parameter variable">-s</span> t2
$ tmux new <span class="token parameter variable">-s</span> t3
<span class="token comment"># 查看当前tmux所有会话</span>
$ tmux <span class="token function">ls</span>
t1: <span class="token number">4</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:09:28 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:12:42 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:14:33 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
<span class="token comment"># 杀死会话t3 </span>
$ tmux kill-session <span class="token parameter variable">-t</span> t3
$ tmux <span class="token function">ls</span>
t1: <span class="token number">4</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:09:28 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:12:42 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
<span class="token comment"># 切入会话t1</span>
<span class="token variable">$tmux</span> attach-session <span class="token parameter variable">-t</span> t1
<span class="token comment"># 从t1会话切换到t2</span>
<span class="token variable">$tmux</span> switch-client <span class="token parameter variable">-t</span> t2
<span class="token comment"># 重命名会话</span>
$ tmux <span class="token function">ls</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:25:57 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:26:02 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
$ tmux rename-session <span class="token parameter variable">-t</span> t2 t4
no current client
$ tmux <span class="token function">ls</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:26:02 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t4: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:25:57 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 进行窗口操作需要先进入tmux终端</span>
<span class="token comment"># 上下分割窗口</span>
$ tmux split-window
<span class="token comment"># 左右分割窗口</span>
$ dtmux split-window <span class="token parameter variable">-h</span>
<span class="token comment"># 移动光标</span>
<span class="token comment"># 光标切换到上方窗格</span>
$ tmux select-pane <span class="token parameter variable">-U</span>
<span class="token comment"># 光标切换到下方窗格</span>
$ tmux select-pane <span class="token parameter variable">-D</span>
<span class="token comment"># 光标切换到左边窗格</span>
$ tmux select-pane <span class="token parameter variable">-L</span>
<span class="token comment"># 光标切换到右边窗格</span>
$ tmux select-pane <span class="token parameter variable">-R</span>
<span class="token comment"># 当前窗格上移</span>
$ tmux swap-pane <span class="token parameter variable">-U</span>
<span class="token comment"># 当前窗格下移</span>
$ tmux swap-pane <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 会话快捷键</span>
Ctrl+b d：分离当前会话。
Ctrl+b s：列出所有会话。
Ctrl+b $：重命名当前会话。

<span class="token comment"># 窗口快捷键</span>
Ctrl+b %：划分左右两个窗格。
Ctrl+b "：划分上下两个窗格。
Ctrl+b <span class="token operator">&lt;</span>arrow key<span class="token operator">></span>：光标切换到其他窗格。<span class="token operator">&lt;</span>arrow key<span class="token operator">></span>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓。
Ctrl+b <span class="token punctuation">;</span>：光标切换到上一个窗格。
Ctrl+b o：光标切换到下一个窗格。
Ctrl+b <span class="token punctuation">&#123;</span>：当前窗格与上一个窗格交换位置。
Ctrl+b <span class="token punctuation">&#125;</span>：当前窗格与下一个窗格交换位置。
Ctrl+b Ctrl+o：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。
Ctrl+b Alt+o：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。
Ctrl+b x：关闭当前窗格。
Ctrl+b <span class="token operator">!</span>：将当前窗格拆分为一个独立窗口。
Ctrl+b z：当前窗格全屏显示，再使用一次会变回原来大小。
Ctrl+b Ctrl+<span class="token operator">&lt;</span>arrow key<span class="token operator">></span>：按箭头方向调整窗格大小。
Ctrl+b q：显示窗格编号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 新建会话</span>
tmux new <span class="token parameter variable">-s</span> my_session。
<span class="token comment"># 运行程序</span>
<span class="token function">htop</span>
<span class="token comment"># 会话分离</span>
按下快捷键Ctrl+b d
<span class="token comment">#重新连接到会话</span>
tmux attach-session <span class="token parameter variable">-t</span> my_session<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="自动启动"><a href="#自动启动" class="headerlink" title="自动启动"></a>自动启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在/etc/profile尾行添加如下内容并重启</span>
<span class="token comment"># TMUX</span>
<span class="token keyword">if</span> <span class="token function">which</span> tmux <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token comment"># if no session is started, start a new session</span>
    <span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token variable">$&#123;TMUX&#125;</span> <span class="token operator">&amp;&amp;</span> tmux

    <span class="token comment"># when quitting tmux, try to attach</span>
    <span class="token keyword">while</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token variable">$&#123;TMUX&#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        tmux attach <span class="token operator">||</span> <span class="token builtin class-name">break</span>
    <span class="token keyword">done</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>Tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>建立基于Windows活动目录的联合认证服务</title>
    <url>/2021/10/15/windows-ad-fs/</url>
    <content><![CDATA[<h1 id="建立基于Windows活动目录的联合认证服务"><a href="#建立基于Windows活动目录的联合认证服务" class="headerlink" title="建立基于Windows活动目录的联合认证服务"></a>建立基于Windows活动目录的联合认证服务</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>Active Directory 联合身份验证服务 (AD FS) 可跨安全和企业边界安全地共享数字标识和权利权限，从而实现联合身份和访问管理。 AD FS 扩展了使用单个安全或企业边界内提供给面向 Internet 的应用程序的单一登录功能的功能，使客户、合作伙伴和供应商可以在访问组织中基于 web 的应用程序时简化用户体验。<br>前述为官方的<a href="https://docs.microsoft.com/zh-cn/windows-server/identity/active-directory-federation-services">表述</a>,其实简单描述就是将私有环境内的AD账户服务同外界的公共服务服务账号相打通，实现使用本地AD认证来访问其他组织或者服务商的服务，以减少认证环节，实现对第三方账户使用的管理、审计和快捷使用。</p>
<h2 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h2><h3 id="版本要求"><a href="#版本要求" class="headerlink" title="版本要求"></a>版本要求</h3><ol>
<li>域控主机使用 Windows Server 2016 </li>
<li>联合认证ad-fs 版本为4.0</li>
<li>证书使用MMC方式申请</li>
</ol>
<h3 id="网络主机"><a href="#网络主机" class="headerlink" title="网络主机"></a>网络主机</h3><ol>
<li>域控主机地址： ExampleAD  172.29.0.99</li>
<li>联合认证主机： ExampADFS 172.29.0.100</li>
<li>使用客户端：   ExampleCL   172.29.0.103</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1、DNS解析记录：<br>    a) 主机名为 exampleadfs 需要新建一个额外的名称为fs的A记录指向ad-fs服务所在主机，并为这个A记录建立名称为enterpriseregistration的CNAME记录；<br>    b) certauth.fs.example.com不需要建立DNS记录<br>2、域的操作:<br>    a) Enable the IDPInitiatedSignonPage<br>    Set-AdfsProperties -EnableIdPInitiatedSignonPage:$true<br>    Set-AdfsProperties -EnableRelayStateForIdpInitiatedSignOn:$true<br>    b) 设置KDS根密钥需执行如下操作：<br>    Add-KdsRootKey -EffectiveTime (Get-Date).AddHours(-10)</p>
<h3 id="参考记录"><a href="#参考记录" class="headerlink" title="参考记录"></a>参考记录</h3><ol>
<li><a href="https://social.technet.microsoft.com/wiki/contents/articles/34162.ad-fs-4-0-discover-setup-and-publish-application-part1.aspx">https://social.technet.microsoft.com/wiki/contents/articles/34162.ad-fs-4-0-discover-setup-and-publish-application-part1.aspx</a></li>
<li><a href="https://blog.51cto.com/gaowenlong/1920117">https://blog.51cto.com/gaowenlong/1920117</a></li>
<li><a href="https://blog.51cto.com/13781144/2486909">https://blog.51cto.com/13781144/2486909</a></li>
</ol>
<h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="域的部署"><a href="#域的部署" class="headerlink" title="域的部署"></a>域的部署</h3><p><img src="https://cdn.sujx.net/ad-000.PNG"><br><img src="https://cdn.sujx.net/ad-001.PNG"><br><img src="https://cdn.sujx.net/ad-002.PNG"><br><img src="https://cdn.sujx.net/ad-003.PNG"><br><img src="https://cdn.sujx.net/ad-004.PNG"><br><img src="https://cdn.sujx.net/ad-005.PNG"></p>
<h3 id="建立CA"><a href="#建立CA" class="headerlink" title="建立CA"></a>建立CA</h3><p><img src="https://cdn.sujx.net/ca-000.PNG"><br><img src="https://cdn.sujx.net/ca-001.PNG"><br><img src="https://cdn.sujx.net/ca-002.PNG"><br><img src="https://cdn.sujx.net/ca-003.PNG"><br><img src="https://cdn.sujx.net/ca-004.PNG"><br><img src="https://cdn.sujx.net/ca-005.PNG"><br><img src="https://cdn.sujx.net/ca-006.PNG"><br><img src="https://cdn.sujx.net/ca-007.PNG"><br><img src="https://cdn.sujx.net/ca-008.PNG"><br><img src="https://cdn.sujx.net/ca-009.PNG"><br><img src="https://cdn.sujx.net/ca-010.PNG"><br><img src="https://cdn.sujx.net/ca-011.PNG"></p>
<h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><p><img src="https://cdn.sujx.net/adfs-003.PNG"><br><img src="https://cdn.sujx.net/adfs-004.PNG"><br><img src="https://cdn.sujx.net/adfs-005.PNG"><br><img src="https://cdn.sujx.net/adfs-006.PNG"><br><img src="https://cdn.sujx.net/adfs-008.PNG"><br><img src="https://cdn.sujx.net/adfs-009.PNG"><br><img src="https://cdn.sujx.net/adfs-010.PNG"><br><img src="https://cdn.sujx.net/adfs-011.PNG"></p>
<h3 id="安装FS"><a href="#安装FS" class="headerlink" title="安装FS"></a>安装FS</h3><p><img src="https://cdn.sujx.net/adfs-001.PNG"><br><img src="https://cdn.sujx.net/adfs-002.PNG"><br><img src="https://cdn.sujx.net/adfs-007.PNG"><br><img src="https://cdn.sujx.net/adfs-012.PNG"><br><img src="https://cdn.sujx.net/adfs-013.PNG"><br><img src="https://cdn.sujx.net/adfs-014.PNG"><br><img src="https://cdn.sujx.net/adfs-015.PNG"><br><img src="https://cdn.sujx.net/adfs-016.PNG"><br><img src="https://cdn.sujx.net/adfs-017.PNG"><br><img src="https://cdn.sujx.net/adfs-018.PNG"><br><img src="https://cdn.sujx.net/adfs-019.PNG"><br><img src="https://cdn.sujx.net/adfs-020.PNG"><br><img src="https://cdn.sujx.net/adfs-021.PNG"><br><img src="https://cdn.sujx.net/adfs-022.PNG"></p>
<h3 id="客户端访问"><a href="#客户端访问" class="headerlink" title="客户端访问"></a>客户端访问</h3><p><img src="https://cdn.sujx.net/login-000.PNG"><br><img src="https://cdn.sujx.net/login-001.PNG"></p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Windows Server</tag>
        <tag>AD-FS</tag>
      </tags>
  </entry>
  <entry>
    <title>配置DNSMasq缓存系统</title>
    <url>/2021/10/09/dnsmasq/</url>
    <content><![CDATA[<h1 id="部署DNSMasq实现解析缓存服务"><a href="#部署DNSMasq实现解析缓存服务" class="headerlink" title="部署DNSMasq实现解析缓存服务"></a>部署DNSMasq实现解析缓存服务</h1><p>DNSMasq是一个简洁、快速的DNS和DHCP服务器，我们可以使用它为局域网和主机自身提供可靠的DHCPv4、DHCPv6、BOOTP以及PXE服务。<br>本文将记录一次DNSMasq的部署过程，并由该服务提供Github.com的域名解析。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 系统更新</span>
yum makecache
yum update <span class="token parameter variable">-y</span>
<span class="token comment"># 安装软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> dnsmasq
<span class="token comment"># 启动服务</span>
systemctl <span class="token builtin class-name">enable</span> dnsmasq.service <span class="token parameter variable">--now</span>
<span class="token comment"># 开通防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>dns
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment"># 检查状态</span>
systemctl status dnsmasq
● dnsmasq.service - DNS caching server.
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/dnsmasq.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue <span class="token number">2021</span>-10-19 <span class="token number">15</span>:35:57 CST<span class="token punctuation">;</span> <span class="token number">1</span> weeks <span class="token number">0</span> days ago
 Main PID: <span class="token number">1013</span> <span class="token punctuation">(</span>dnsmasq<span class="token punctuation">)</span>
   CGroup: /system.slice/dnsmasq.service
           └─1013 /usr/sbin/dnsmasq <span class="token parameter variable">-k</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li><p>配置上游解析目标</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># touch /etc/resolv.dnsmasq</span>
<span class="token comment"># vim /etc/resolv.dnsmasq</span>
nameserver <span class="token number">127.0</span>.0.1

<span class="token comment"># 本地内网DNS查询服务器</span>
nameserver <span class="token number">192.168</span>.1.1

<span class="token comment"># 主流公共DNS查询服务器</span>
nameserver <span class="token number">211.167</span>.230.100
nameserver <span class="token number">211.167</span>.230.200
nameserver <span class="token number">202.106</span>.196.115
nameserver <span class="token number">202.106</span>.0.20
nameserver <span class="token number">114.114</span>.114.114
nameserver <span class="token number">218.30</span>.118.6
nameserver <span class="token number">114.114</span>.114.119
nameserver <span class="token number">119.29</span>.29.29
nameserver <span class="token number">8.8</span>.4.4
nameserver <span class="token number">4.2</span>.2.2
nameserver <span class="token number">1.2</span>.4.8
nameserver <span class="token number">223.5</span>.5.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>配置DNSMasq解析服务	</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置/etc/dnsmasq.cof</span>
<span class="token comment"># 监听eth0</span>
<span class="token assign-left variable">interface</span><span class="token operator">=</span>eth0
<span class="token comment"># 设定DNS端口为53</span>
<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">53</span>

<span class="token comment"># 要求fqdn格式域名才会转发到上游DNS</span>
domain-needed
bogus-priv

<span class="token comment">#指定上游DNS文件按resolv.dnsmasq顺序执行</span>
resolv-file<span class="token operator">=</span>/etc/resolv.dnsmasq
strict-order

<span class="token comment"># 缓存大小</span>
cache-size<span class="token operator">=</span><span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>新增解析缓存目标</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取github访问地址的hosts文件转化为dnsmasq的配置</span>
<span class="token function">curl</span> https://raw.hellogithub.com/hosts <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'$1 ~ /^[0-9]/ &#123;printf("address=/%s/%s\n", $2,$1)&#125;'</span> <span class="token operator">></span> /etc/dnsmasq.d/github.conf
<span class="token comment"># 获取污染DNS地址，避免DNS劫持</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/bogus-nxdomain.china.conf <span class="token parameter variable">-P</span> /etc/dnsmasq.d/
<span class="token comment"># 重启服务</span>
systemctl restart dnsmasq.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="收工"><a href="#收工" class="headerlink" title="收工"></a>收工</h2>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>dnsmasq</tag>
      </tags>
  </entry>
  <entry>
    <title>如何办理个人技术服务代开发票</title>
    <url>/2021/09/23/receipt/</url>
    <content><![CDATA[<blockquote>
<p>自力更生才是省钱之道</p>
</blockquote>
<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>最近开始给一家广告公司代维公有云上的几个服务器，就触及到一个知识盲区:兼职情况下如何合法获得收入？</p>
<p>在以前的临时性的付费服务中，对方公司或者单位大多使用书籍或办公用品发票来顶账，当然这涉及到避税的问题。而在目前的这个项目中是长期性的劳务服务，就不能这么灰着了。对方公司财务建议走代开中介或者自办，中介是抽6个点，自办是3个点。本着能动手就不吵吵的精神，跑了两趟四个税务所，成功搞明白了代开发票的流程。</p>
<h2 id="办理"><a href="#办理" class="headerlink" title="办理"></a>办理</h2><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><ol>
<li>加盖公司公章的格式劳动合同；</li>
<li>个人身份证原件；</li>
<li>个人身份证头像和国徽面复印件一份(税务局要收走的)；</li>
<li>对方公司开票信息</li>
</ol>
<h3 id="地点"><a href="#地点" class="headerlink" title="地点"></a>地点</h3><ol>
<li>当地税务局</li>
<li>能够办理个人代开发票的当地国税局局点。<ol>
<li>注意办事时间，周末以及中午大多不处理业务；</li>
<li>不是所有税务局都可以代开发票，可以提前电话问询；</li>
<li>建议到市区的政务中心的税务办理柜台办理，省的跑冤枉路；</li>
</ol>
</li>
<li>北京市通州区能够办理代开发票的税务所为第四税务所(永顺镇·京通快速入口)</li>
<li>海淀政务大厅可以办理且可以预约办理时间</li>
</ol>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol>
<li>填写《代开增值税发票缴纳税款申报单》；</li>
<li>自己为销售方，对方公司为购买方；</li>
<li>应税劳务为技术服务</li>
<li>可以按月开具，也可一次办理半年的金额的单张发票；</li>
<li>(疫情期间免征)需要缴纳印花税和契税，支持支付宝和微信；</li>
<li>税费金额大体1个点</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li><p>[北京市税务局办事指引]: <a href="http://beijing.chinatax.gov.cn/bjswj/c104381/201911/7eb1995abf95409f9b84764c669a2d53.shtml">http://beijing.chinatax.gov.cn/bjswj/c104381/201911/7eb1995abf95409f9b84764c669a2d53.shtml</a>	“指引”</p>
</li>
<li><p>依法纳税是公民的义务</p>
</li>
</ol>
<hr>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>第二次办理到海淀政务中心联想桥办事处办理。这边不能提前开具发票，只能办理过往发票。比如，2021.08~2022.08，合计12张月付发票，只能每月开一次，不能一次性全部开在一张发票上。另外，需要通过微信小程序&lt;北京海淀税务&gt;提前预约，并到取号机上取号。</p>
<ol>
<li>填写申报单</li>
</ol>
<p><img src="https://cdn.sujx.net/info-content-fapiao-0.jpg" alt="海淀办事指引"></p>
<ol start="2">
<li>网上办理</li>
</ol>
<p><img src="https://cdn.sujx.net/info-content-fapiao-1.jpg"></p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>receipt</tag>
        <tag>发票</tag>
      </tags>
  </entry>
  <entry>
    <title>使用SFTP进行数据备份</title>
    <url>/2021/09/15/sftp-chroot/</url>
    <content><![CDATA[<h1 id="使用SFTP进行数据备份"><a href="#使用SFTP进行数据备份" class="headerlink" title="使用SFTP进行数据备份"></a>使用SFTP进行数据备份</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>现有部分Windows Server上的SQL Server的数据库文件需要进行异地备份，然而备份中转机则为Linux主机，异地备份主机的防火墙设定为只接收该机的IP访问。在不修改原有的网络环境的前提下，原有的思路是在Windows上挂载NFS共享路径或者Linux远程挂载SMB共享，现利用Windows平台的开源软件FreefileSync的文件同步功能来通过SFTP服务进行文件的同步备份。</p>
<h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><ol>
<li><p>建立用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 建立用户kingdee，但不建立用户群组，设定用户不能登录系统</span>
<span class="token function">useradd</span> <span class="token parameter variable">-d</span> /backups/misc/kingdee <span class="token parameter variable">-n</span> <span class="token parameter variable">-s</span> /sbin/nologin kingdee
<span class="token comment"># 修改kindee用户密码</span>
<span class="token function">passwd</span> kingdee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改SSHD配置文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注释掉sftp-server进程</span>
<span class="token comment">#Subsystem      sftp    /usr/libexec/openssh/sftp-server</span>
<span class="token comment"># 使用internal-sftp替代sftp-server</span>
Subsystem <span class="token function">sftp</span> internal-sftp
<span class="token comment"># 增加如下设定sftp用户配置文件</span>
UsePAM <span class="token function">yes</span>
Match user kingdee
ForceCommand internal-sftp
<span class="token comment"># 指定chroot目录限制用户只能访问该目录</span>
ChrootDirectory /backups/misc/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>建立传输文件夹</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># chroot目录至根目录的文件夹的宿主只能是root，否则无法登录</span>
<span class="token comment"># 在chroot目录下可以设置用户可读写文件夹</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /backups/misc/kingdee
<span class="token function">chown</span> root /backups/misc
<span class="token function">chown</span> kingdee /backups/misc/kingdee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>配置生效</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><ol>
<li><p>配置文件同步</p>
<ol>
<li><p>安装工具软件</p>
<ol>
<li><p>软件列表</p>
<ol>
<li>7zip:<a href="https://www.7-zip.org/">7-Zip</a></li>
<li>freefilesync: <a href="https://freefilesync.org/">FreeFileSync: Open Source File Synchronization &amp; Backup Software</a></li>
</ol>
</li>
<li><p>安装过程</p>
<p>略</p>
</li>
</ol>
</li>
<li><p>同步属性配置</p>
<ol>
<li><p>源文件：使用本地文件夹</p>
</li>
<li><p>目标文件：设置在线存储</p>
<p><img src="https://cdn.sujx.net/freefilesync.PNG"></p>
</li>
<li><p>设置为镜像模式</p>
</li>
</ol>
</li>
<li><p>同步文件</p>
<p><img src="https://cdn.sujx.net/freefilesyncing.PNG"></p>
</li>
</ol>
</li>
<li><p>建立定时任务</p>
<ol>
<li>将FreeFileSync脚本保存为批处理脚本</li>
<li>在定时任务中调用该脚本</li>
</ol>
</li>
</ol>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>​	略</p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>sshd</tag>
        <tag>sftp</tag>
        <tag>freefilesync</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu开启/var/log/messages</title>
    <url>/2021/09/05/rsyslog-ubuntu/</url>
    <content><![CDATA[<h1 id="找回遗失的Message"><a href="#找回遗失的Message" class="headerlink" title="找回遗失的Message"></a>找回遗失的Message</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在CentOS7和之前的版本中，系统日志统一存储在&#x2F;var&#x2F;log&#x2F;message 中,方便进行统一分析和整理。但在Ubuntu中，大量的日志信息按照类别和级别被分别导入到 &#x2F;var&#x2F;log目录下的不同文件中，提供了一些快捷功能的同时，却导致原有的日志收集和归档程序出问题了。所以，我们需要重新开启messages。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="安装rsyslog"><a href="#安装rsyslog" class="headerlink" title="安装rsyslog"></a>安装rsyslog</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> rsyslog
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> rsyslog <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/rsyslog.d/50-default.conf
----------------------------------
<span class="token comment"># 编辑31行到34行，去掉注释</span>
 <span class="token number">25</span> <span class="token comment">#</span>
 <span class="token number">26</span> <span class="token comment"># Some "catch-all" log files.</span>
 <span class="token number">27</span> <span class="token comment">#</span>
 <span class="token number">28</span> <span class="token comment">#*.=debug;\</span>
 <span class="token number">29</span> <span class="token comment">#       auth,authpriv.none;\</span>
 <span class="token number">30</span> <span class="token comment">#       news.none;mail.none     -/var/log/debug</span>
 <span class="token number">31</span> *.<span class="token operator">=</span>info<span class="token punctuation">;</span>*.<span class="token operator">=</span>notice<span class="token punctuation">;</span>*.<span class="token operator">=</span>warn<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">32</span>         auth,authpriv.none<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">33</span>         cron,daemon.none<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">34</span>         mail,news.none          -/var/log/messages
 <span class="token number">35</span> 
----------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart rsyslog.service
<span class="token function">cat</span> /var/log/messages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Log详解"><a href="#Log详解" class="headerlink" title="Log详解"></a>Log详解</h2><h3 id="系统日志文件"><a href="#系统日志文件" class="headerlink" title="系统日志文件"></a>系统日志文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。
/var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。
/var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。
/var/log/boot.log — 包含系统启动时的日志。
/var/log/daemon.log — 包含各种系统后台守护进程日志信息。
/var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。
/var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。
/var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
/var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。
/var/log/user.log — 记录所有等级用户信息的日志。
/var/log/Xorg.x.log — 来自X的日志信息。
/var/log/alternatives.log – 更新替代信息都记录在这个文件中。
/var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last <span class="token parameter variable">-f</span> /var/log/btmp <span class="token operator">|</span> more“。
/var/log/cups — 涉及所有打印信息的日志。
/var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。
/var/log/yum.log — 包含使用yum安装的软件包信息。
/var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。
/var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。
/var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
/var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="程序日志文件"><a href="#程序日志文件" class="headerlink" title="程序日志文件"></a>程序日志文件</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;log&#x2F;httpd&#x2F;或&#x2F;var&#x2F;log&#x2F;apache2 — 包含服务器access_log和error_log信息。
&#x2F;var&#x2F;log&#x2F;lighttpd&#x2F; — 包含light HTTPD的access_log和error_log。
&#x2F;var&#x2F;log&#x2F;mail&#x2F; –  这个子目录包含邮件服务器的额外日志。
&#x2F;var&#x2F;log&#x2F;prelink&#x2F; — 包含.so文件被prelink修改的信息。
&#x2F;var&#x2F;log&#x2F;audit&#x2F; — 包含被 Linux audit daemon储存的信息。
&#x2F;var&#x2F;log&#x2F;samba&#x2F; – 包含由samba存储的信息。
&#x2F;var&#x2F;log&#x2F;sa&#x2F; — 包含每日由sysstat软件包收集的sar文件。
&#x2F;var&#x2F;log&#x2F;sssd&#x2F; – 用于守护进程安全服务。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>rsyslog</tag>
        <tag>messages</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>使用批处理进行数据备份</title>
    <url>/2021/08/31/dos-cmd-backup/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>运维组内部有一个服务器日志的离线备份需求：</p>
<ol>
<li>Filebeat将日志打到一个WindowsServer的SMB共享上，然后要通过FTP的形式在办公环境进行离线备份；</li>
<li>要在生产环境备份服务器上保留14天以防线下备份失效；</li>
</ol>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ol>
<li>生产环境备份服务器提供相应文件夹共享，并开放权限；</li>
<li>建立计划任务，定时打包实现文件备份转储以及删除超过14天的备份文件；</li>
<li>线下建立离线存储服务器，同步FTP数据到加密磁盘</li>
<li>线下磁盘的定期轮转和永久存储</li>
</ol>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><ol>
<li>基于时间的命名备份方案<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off
::该脚本已被放弃，原因是备份源文件的日期和打包备份日期相差4天，导致题不对版
::设置7z的命令行程序路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">zip7</span><span class="token operator">=</span>C:<span class="token punctuation">\</span>Program Files<span class="token punctuation">\</span><span class="token number">7</span>-Zip<span class="token punctuation">\</span>7z.exe

::设置压缩包保存路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Save</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>temp

::当天日期，备份文件名
<span class="token builtin class-name">set</span> <span class="token assign-left variable">curdate</span><span class="token operator">=</span>%date:~0,4%-%date:~5,2%-%date:~8,2%

::设置要打包压缩的文件夹
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Backup</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>AllLogsBackup<span class="token punctuation">\</span>*

::备份命令 无压缩只存档，压缩完成后删除
::备份密码为 <span class="token comment">#IHte9tE90bYgJjxtYNmD</span>
<span class="token string">"%zip7%"</span> a <span class="token parameter variable">-tzip</span> <span class="token string">"%Save%\logs_%curdate%.zip"</span> <span class="token string">"%Backup%"</span> <span class="token parameter variable">-mx0</span> <span class="token parameter variable">-sdel</span> <span class="token parameter variable">-p</span><span class="token comment">#IHte9tE90bYgJjxtYNmD</span>

::删除超过14天的备份--start--
forfiles /p <span class="token string">"%Save%"</span> /m *.zip <span class="token parameter variable">-d</span> <span class="token parameter variable">-14</span> /c <span class="token string">"cmd /c del /f @path"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>基于目标文件夹下文件名进行的备份方案<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off
:: 因备份文件目录名就为文件产生日期，且因线下同步完成之后会删除，即备份目录下只有一份备份文件夹，所以采用文件名作为备份名称。
::设置7z的命令行程序路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">zip7</span><span class="token operator">=</span>C:<span class="token punctuation">\</span>Program Files<span class="token punctuation">\</span><span class="token number">7</span>-Zip<span class="token punctuation">\</span>7z.exe

::设置压缩包保存路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Save</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>temp

::设置要打包压缩的文件夹
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Backup</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>AllLogsBackup$<span class="token punctuation">\</span>*

::备份文件名
<span class="token keyword">for</span> /f <span class="token string">"delims="</span> %%i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'dir /b D:\AllLogsBackup$'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token builtin class-name">set</span> <span class="token assign-left variable">filename</span><span class="token operator">=</span>%%i

::备份命令 无压缩只存档，压缩完成后删除
<span class="token string">"%zip7%"</span> a <span class="token parameter variable">-tzip</span> <span class="token string">"%Save%\%filename%.zip"</span> <span class="token string">"%Backup%"</span> <span class="token parameter variable">-mx0</span> <span class="token parameter variable">-sdel</span>

::删除超过14天的备份--start--
::forfiles /p <span class="token string">"%Save%"</span> /m *.zip <span class="token parameter variable">-d</span> <span class="token parameter variable">-14</span> /c <span class="token string">"cmd /c del /f @path"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="离线备份"><a href="#离线备份" class="headerlink" title="离线备份"></a>离线备份</h2><ol>
<li>使用Windows Server作为备份环境，挂载4块硬盘进行备份(使用bitlock加密磁盘，不做Raid)；</li>
<li>使用FreeFileSync建立同步批处理文件，并加入计划任务定期执行；</li>
<li>每周人工巡检，定期手动更替备份目标路径。</li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>7zip</tag>
        <tag>dos</tag>
        <tag>backup</tag>
      </tags>
  </entry>
  <entry>
    <title>《写作的逻辑》读书笔记</title>
    <url>/2021/08/19/the-logic-of-write/</url>
    <content><![CDATA[<h1 id="读书笔记·《写作的逻辑》"><a href="#读书笔记·《写作的逻辑》" class="headerlink" title="读书笔记·《写作的逻辑》"></a>读书笔记·《写作的逻辑》</h1><blockquote>
<p>书籍来源：京东自购</p>
<p>购买链接：<a href="https://item.jd.com/13201886.html">https://item.jd.com/13201886.html</a></p>
<p>简评：一个需要画脑图才能看明白的写作书。本书其实该叫职场文本技法，不适用于中小学语文教学。</p>
</blockquote>
<p><img src="https://cdn.sujx.net/logicofwrite.jpg"></p>
<h2 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h2><h3 id="清晰的传达"><a href="#清晰的传达" class="headerlink" title="清晰的传达"></a>清晰的传达</h3><ol>
<li>是否明确的表达</li>
<li>表达是否明确的被理解</li>
<li>段落是什么以及为什么是写作标准</li>
<li>文章易懂的基础<ol>
<li>心智模型</li>
<li>巧用强调</li>
<li>精简信息</li>
</ol>
</li>
</ol>
<h3 id="段落写作七大规则"><a href="#段落写作七大规则" class="headerlink" title="段落写作七大规则"></a>段落写作七大规则</h3><ol>
<li>文章开头先写总论</li>
<li>每段只阐述一个主题</li>
<li>段落开头先写概要句</li>
<li>补充信息强化主题</li>
<li>衔接前后段落</li>
<li>统一段落表达</li>
<li>由已知写到未知</li>
</ol>
<h3 id="商务写作实战"><a href="#商务写作实战" class="headerlink" title="商务写作实战"></a>商务写作实战</h3><ol>
<li>通知</li>
<li>技术报告</li>
<li>对外文书</li>
</ol>
<h2 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h2><h3 id="为什么用段落去写作"><a href="#为什么用段落去写作" class="headerlink" title="为什么用段落去写作"></a>为什么用段落去写作</h3><ol>
<li>表意清晰的文章必须满足三个条件：<ol>
<li>30秒内传达要点；</li>
<li>让人在短时间内读懂详细内容；</li>
<li>逻辑清晰且具有说服力；</li>
</ol>
</li>
<li>写作者切勿将沟通的责任推卸给阅读者。</li>
<li>我们要学习有学术理论依据的写作方法。</li>
</ol>
<h3 id="什么是段落写作法"><a href="#什么是段落写作法" class="headerlink" title="什么是段落写作法"></a>什么是段落写作法</h3><ol>
<li>定义<ol>
<li>在一个段落中只论述一个主题的文字布局，原则上段落由一个概要句和多个补充信息的句子构成</li>
<li>每个段落限定一个主题，一定要有概要句</li>
<li>段落不同于层次，文章由层次构成、层次由段落构成</li>
</ol>
</li>
<li>意义<ol>
<li>让逻辑模块和文字模块保持一致</li>
<li>写作方法因文而已，逻辑类文章需要使用段落写作法</li>
<li>国际标准</li>
</ol>
</li>
<li>心智模型<ol>
<li>短期记忆(7+- 2个信息 约20秒)和长期记忆</li>
<li>心智模型是人为了处理信息而建立的理解过程</li>
<li>要文章清晰易懂就要帮助读者构建心智模型(文章概要)并按照该模型的预测方向撰写</li>
</ol>
</li>
<li>巧用强调<ol>
<li>开头和结尾要强调<ol>
<li>文章的开头和结尾</li>
<li>文字模块(层次和段落以及句子)的开头和结尾</li>
<li>开头比结尾更重要</li>
</ol>
</li>
</ol>
</li>
<li>精简信息<ol>
<li>精简才让人印象深刻</li>
<li>事不过三</li>
<li>若要强调数量，则要尽可能罗列</li>
</ol>
</li>
</ol>
<h3 id="如何进行段落写作"><a href="#如何进行段落写作" class="headerlink" title="如何进行段落写作"></a>如何进行段落写作</h3><h4 id="文章开头先写总论"><a href="#文章开头先写总论" class="headerlink" title="文章开头先写总论"></a>文章开头先写总论</h4><ol>
<li>要点<ol>
<li>文章要以总论开始。总论可以让阅读者快速判断是否阅读这篇文章，也有助于阅读者对具体内容的理解。</li>
<li>将总论作为文章的开篇，其中应包含结果和结论等重要信息。</li>
</ol>
</li>
<li>效果<ol>
<li>可以判断是否需要详细阅读</li>
<li>可以轻松理解文章的具体内容</li>
<li>可以确认论据的正当性</li>
<li>可以强调重要信息</li>
</ol>
</li>
<li>诀窍<ol>
<li>模板<ol>
<li>全文的总论：总论分为目的和概要两个段落，30秒完成阅读</li>
<li>背景——问题——目的——方法——结果——结论</li>
<li>目的(3句话)<ol>
<li>现状或背景</li>
<li>问题或必要性</li>
<li>目的</li>
</ol>
</li>
<li>概要(5句话)<ol>
<li>结论和概要句</li>
<li>重要信息1</li>
<li>重要信息2</li>
<li>重要信息3</li>
<li>重要信息4</li>
</ol>
</li>
</ol>
</li>
<li>注意事项<ol>
<li>与分论呼应</li>
<li>与结论呼应</li>
<li>内容要具体</li>
<li>表述要简洁</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="每段只阐述一个主题"><a href="#每段只阐述一个主题" class="headerlink" title="每段只阐述一个主题"></a>每段只阐述一个主题</h4><ol>
<li>要点<ol>
<li>主题和文章的排版相对应，会有助于清晰传达文章的逻辑。</li>
<li>一个段落通常使用4~8句话，占据一个自然段。</li>
</ol>
</li>
<li>效果<ol>
<li>正确理解文章的逻辑（读者与作者面对小单位的集合都会导致思考和理解上的困难）</li>
<li>快速阅读文章</li>
<li>平衡多方信息</li>
<li>使文章的逻辑更清晰<ol>
<li>对信息进行模块化处理</li>
<li>厘清逻辑结构</li>
</ol>
</li>
</ol>
</li>
<li>诀窍<ol>
<li>做好段落排版<ol>
<li>段间空行分段</li>
<li>段首空格分段</li>
<li>段首空格和段间空行分段</li>
</ol>
</li>
<li>每段4~8句话为佳</li>
<li>总结的段落可以使用1~2句话</li>
</ol>
</li>
<li>注意事项<ol>
<li>切忌段落过短</li>
<li>切忌段落过长</li>
<li>设定具体主题</li>
<li>严格分类信息</li>
</ol>
</li>
</ol>
<h4 id="段落开头先写概要句"><a href="#段落开头先写概要句" class="headerlink" title="段落开头先写概要句"></a>段落开头先写概要句</h4><ol>
<li>要点<ol>
<li>段首应该留给揭示本段主题的概要句</li>
<li>概要句要勾勒出全文的逻辑</li>
</ol>
</li>
<li>效果<ol>
<li>判断是否需要详细阅读</li>
<li>轻松理解文章内容</li>
<li>确认论据</li>
<li>强调信息</li>
</ol>
</li>
<li>诀窍<ol>
<li>一句话概要</li>
<li>概要写在句头</li>
<li>承接前段概要句</li>
<li>和总论相呼应</li>
</ol>
</li>
<li>注意事项<ol>
<li>内容要具体</li>
<li>表达要简洁</li>
<li>关键词放在句首</li>
</ol>
</li>
</ol>
<h4 id="补充信息强化主题"><a href="#补充信息强化主题" class="headerlink" title="补充信息强化主题"></a>补充信息强化主题</h4><ol>
<li>要点<ol>
<li>概要句之后要补充信息对主题进行进一步说明</li>
<li>补充信息要有说服力</li>
</ol>
</li>
<li>效果<ol>
<li>增强文章的说服力</li>
<li>增强文章的逻辑性</li>
</ol>
</li>
<li>诀窍<ol>
<li>What—什么意思：补充详细解释</li>
<li>Why—为什么这么说：给出理由，解决疑问</li>
<li>How—有多重要：给出理由，解决疑问</li>
</ol>
</li>
<li>注意事项<ol>
<li>补充信息要具体：要有具体示例和数据</li>
<li>不需要补充信息，说明主题也是不必要的</li>
<li>不要只写一两句话就结束</li>
</ol>
</li>
</ol>
<h4 id="衔接前后段落"><a href="#衔接前后段落" class="headerlink" title="衔接前后段落"></a>衔接前后段落</h4><ol>
<li>要点<ol>
<li>文章的逻辑产生于段落之间的横向并列和纵向连接的连接关系</li>
</ol>
</li>
<li>效果<ol>
<li>阅读者准确理解文章的逻辑</li>
<li>写作者可以增强文章的说服力和逻辑性</li>
</ol>
</li>
<li>诀窍<ol>
<li>连接关系<ol>
<li>连接型：纵向</li>
<li>展开型：横向</li>
</ol>
</li>
<li>用概要句连接段落<ol>
<li>连续型：A<del>D A</del>B B<del>C C</del>D</li>
<li>展开型：ABC A<del>B</del>C</li>
</ol>
</li>
<li>注意事项<ol>
<li>明确区分纵向和横向</li>
<li>纵向连接时需要文字说明，横向连接不需要文字说明</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="统一段落表达"><a href="#统一段落表达" class="headerlink" title="统一段落表达"></a>统一段落表达</h4><ol>
<li>要点<ol>
<li>横向并列的各个段落要统一段落表达</li>
<li>使用表格逻辑填充文章</li>
</ol>
</li>
<li>效果<ol>
<li>容易理解</li>
<li>避免遗漏信息</li>
<li>轻松撰写文章</li>
</ol>
</li>
<li>诀窍<ol>
<li>首先要用表格划分逻辑结构</li>
<li>用统一的表达方式将表格内容填充到文章</li>
<li>要统一文章中的关键词、表达和排版</li>
</ol>
</li>
<li>注意事项<ol>
<li>确认是否遗漏信息</li>
<li>统一内容的抽象度</li>
<li>考虑排列的顺序</li>
</ol>
</li>
</ol>
<h4 id="由已知写到未知"><a href="#由已知写到未知" class="headerlink" title="由已知写到未知"></a>由已知写到未知</h4><ol>
<li>要点<ol>
<li>每句话都要由已知信息开头，由未知信息结尾</li>
<li>确保所有君子能够衔接上下文</li>
<li>完善文章的逻辑、方便阅读理解</li>
</ol>
</li>
<li>效果<ol>
<li>可以准确理解全文</li>
<li>防止逻辑跳跃</li>
<li>可以提高写作速度</li>
</ol>
</li>
<li>诀窍<ol>
<li>接续型：纵向</li>
<li>展开型：横向</li>
<li>统一型：纵横两种</li>
</ol>
</li>
<li>注意事项<ol>
<li>即便啰嗦，也要将已知信息放在句首</li>
<li>写作过程中时刻要做到由已知到未知</li>
<li>已知信息可以不是上一句中出现的信息</li>
<li>关联信息也可以看成已知信息</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>book</tag>
        <tag>write</tag>
        <tag>logic</tag>
      </tags>
  </entry>
  <entry>
    <title>批量更新Wazuh主机配置文件和漏洞库</title>
    <url>/2021/08/05/wazuh-cluster-update/</url>
    <content><![CDATA[<h1 id="批量更新Wazuh主机配置文件和漏洞库"><a href="#批量更新Wazuh主机配置文件和漏洞库" class="headerlink" title="批量更新Wazuh主机配置文件和漏洞库"></a>批量更新Wazuh主机配置文件和漏洞库</h1><h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>相比较单机版本，群集化的Wazuh需要处理的第一个问题就是如何保证ossec.conf文件和漏洞库的统一配置、统一更新、统一下发。以下将使用简单的Ansible命令和Shell脚本实现前述功能。</p>
<h3 id="建立共享"><a href="#建立共享" class="headerlink" title="建立共享"></a>建立共享</h3><ol>
<li><p>部署Nginx</p>
<pre class="line-numbers language-none"><code class="language-none"># 在wazuh-master上安装Nginx
yum install -y nginx
mkdir -p &#x2F;var&#x2F;www&#x2F;wazuh
chown -R nginx:nginx &#x2F;var&#x2F;www&#x2F;wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>下载更新</p>
<pre class="line-numbers language-none"><code class="language-none"># 下载离线文件
cd &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;

# 下载Ubuntu 20.04的漏洞种子
wget -N https:&#x2F;&#x2F;people.canonical.com&#x2F;~ubuntu-security&#x2F;oval&#x2F;com.ubuntu.focal.cve.oval.xml.bz2

# 下载RHEL 7 8的漏洞种子文件
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL6&#x2F;rhel-6-including-unpatched.oval.xml.bz2
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL7&#x2F;rhel-7-including-unpatched.oval.xml.bz2
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL8&#x2F;rhel-8-including-unpatched.oval.xml.bz2

# 下载微软CVE文件
wget https:&#x2F;&#x2F;feed.wazuh.com&#x2F;vulnerability-detector&#x2F;windows&#x2F;msu-updates.json.gz

# 下载Redhat的安全数据Json文件
wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;master&#x2F;tools&#x2F;vulnerability-detector&#x2F;rh-generator.sh
chmod +x .&#x2F;*.sh
mkdir redhat
.&#x2F;rh-generator.sh redhat&#x2F;

# 下载NVD的安全数据库(CVE)
wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;master&#x2F;tools&#x2F;vulnerability-detector&#x2F;nvd-generator.sh
chmod +x .&#x2F;*.sh
mkdir nvd
 .&#x2F;nvd-generator.sh 2010 nvd&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>页面发布</p>
<pre class="line-numbers language-none"><code class="language-none"># 配置nginx文件 
vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf
# 在server&#123;&#125;中修改增补如下配置
        root         &#x2F;var&#x2F;www&#x2F;wazuh;
    
        location &#x2F; &#123;
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><ol>
<li><p>在&#x2F;opt&#x2F;wazuh&#x2F;目录下建立wazuhupdate.sh文件</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;bash

cd &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;
rm -rf *.bz2
rm *.gz

# 下载Ubuntu 20.04的漏洞种子
wget -N https:&#x2F;&#x2F;people.canonical.com&#x2F;~ubuntu-security&#x2F;oval&#x2F;com.ubuntu.focal.cve.oval.xml.bz2

# 下载RHEL 6&#x2F;7&#x2F;8的漏洞种子
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL6&#x2F;rhel-6-including-unpatched.oval.xml.bz2
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL7&#x2F;rhel-7-including-unpatched.oval.xml.bz2
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL8&#x2F;rhel-8-including-unpatched.oval.xml.bz2

# 下载微软漏洞文件
wget -N https:&#x2F;&#x2F;feed.wazuh.com&#x2F;vulnerability-detector&#x2F;windows&#x2F;msu-updates.json.gz

#下载Redhat的安全数据Json文件
&#x2F;bin&#x2F;bash &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;rh-generator.sh &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;redhat

# 下载NVD的安全数据库(CVE)
&#x2F;bin&#x2F;bash &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;nvd-generator.sh 2010 &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;nvd

# 更新文件权限
chown -R nginx:nginx &#x2F;var&#x2F;www&#x2F;wazuh

# 重启服务,更新数据库
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立定时文件</p>
<pre class="line-numbers language-none"><code class="language-none">#检查crond.service运行状态
systemctl status crond.service 
crontab -e
# 每周一、四下午6点半执行脚本进行升级
30 18 * * 1,4 &#x2F;bin&#x2F;bash &#x2F;opt&#x2F;wazuh&#x2F;wazuhupdate.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="批量下发"><a href="#批量下发" class="headerlink" title="批量下发"></a>批量下发</h3><ol>
<li>安装配置Ansbile<pre class="line-numbers language-none"><code class="language-none">yum install -y centos-release-ansible-29.noarch 
yum install -y ansible

# 因主机默认设置不允许root使用ssh登录，需要切换到普通用户目录
cd ~
mkdir ansible
cd ansible
touch .inventory
cat &gt; .inventory &lt;&lt;EOF
[master]
192.168.79.60
[worker]
192.168.79.61
192.168.79.62
EOF

ssh-keygen
ssh-copy-id sujx@192.168.79.60
ssh-copy-id sujx@192.168.79.61
ssh-copy-id sujx@192.168.79.62

ansible all -m ping
[sujx@WazuhNode0 ansible]$ ansible worker -m ping
192.168.79.62 | SUCCESS &#x3D;&gt; &#123;
    &quot;ansible_facts&quot;: &#123;
        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;libexec&#x2F;platform-python&quot;
    &#125;,
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
&#125;
192.168.79.61 | SUCCESS &#x3D;&gt; &#123;
    &quot;ansible_facts&quot;: &#123;
        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;libexec&#x2F;platform-python&quot;
    &#125;,
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>建立批量更新脚本<pre class="line-numbers language-none"><code class="language-none"># 在每台Worker主机上建立相应脚本
mkdir &#x2F;opt&#x2F;wazuh
touch &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh
cat &gt; &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh &lt;&lt;EOF
#!&#x2F;bin&#x2F;bash

cd ~

# 配置文件
wget http:&#x2F;&#x2F;192.168.79.60&#x2F;conf&#x2F;ossec.conf
# 自定义规则文件
# wget http:&#x2F;&#x2F;192.168.79.60&#x2F;conf&#x2F;0015-ossec_rules.xml

# 替换主机名
workername&#x3D;$(hostname -s)
sed -i &quot;s&#x2F;vlnx000000&#x2F;$workername&#x2F;g&quot; ~&#x2F;ossec.conf

# 替换配置文件
rm -Rf &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf
mv ~&#x2F;ossec.conf &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;
chown root:ossec &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf

# 更新自定义文件
# rm -Rf &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;0015-ossec_rules.xml
# mv ~&#x2F;0015-ossec_rules.xml &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;
# chown root:ossec &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;0015-ossec_rules.xml


# Reset The Service
systemctl restart wazuh-manager.service
EOF

chmod +x &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>建立worker配置文件<pre class="line-numbers language-none"><code class="language-none">&lt;vulnerability-detector&gt;
  &lt;enabled&gt;no&lt;&#x2F;enabled&gt;
  &lt;interval&gt;5m&lt;&#x2F;interval&gt;
  &lt;ignore_time&gt;6h&lt;&#x2F;ignore_time&gt;
  &lt;run_on_start&gt;yes&lt;&#x2F;run_on_start&gt;
   
  &lt;!-- Ubuntu OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;canonical&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;com.ubuntu.focal.cve.oval.xml.bz2&quot;&gt;focal&lt;&#x2F;os&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Debian OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;debian&quot;&gt;
    &lt;enabled&gt;no&lt;&#x2F;enabled&gt;
    &lt;os&gt;stretch&lt;&#x2F;os&gt;
    &lt;os&gt;buster&lt;&#x2F;os&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- RedHat OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;redhat&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-6-including-unpatched.oval.xml.bz2&quot;&gt;6&lt;&#x2F;os&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-7-including-unpatched.oval.xml.bz2&quot;&gt;7&lt;&#x2F;os&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-8-including-unpatched.oval.xml.bz2&quot;&gt;8&lt;&#x2F;os&gt;
    &lt;url start&#x3D;&quot;1&quot; end&#x3D;&quot;25&quot;&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;redhat&#x2F;redhat-feed[-].json&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Windows OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;msu&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;url&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;msu-updates.json.gz&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Aggregate vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;nvd&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;url start&#x3D;&quot;2010&quot; end&#x3D;&quot;2021&quot;&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;nvd&#x2F;nvd-feed[-].json.gz&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
&lt;&#x2F;vulnerability-detector&gt;
   
&lt;cluster&gt;
  &lt;name&gt;wazuh&lt;&#x2F;name&gt;
  &lt;node_name&gt;vln000000&lt;&#x2F;node_name&gt;
  &lt;node_type&gt;worker&lt;&#x2F;node_type&gt;
  &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
  &lt;port&gt;1516&lt;&#x2F;port&gt;
  &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
  &lt;nodes&gt;
      &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
  &lt;&#x2F;nodes&gt;
  &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
  &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
&lt;&#x2F;cluster&gt;
……
略  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>使用Ansible触发更新<pre class="line-numbers language-none"><code class="language-none"># 每个Worker上创建目录
ansible worker -a &#39;mkdir &#x2F;opt&#x2F;wazuh&#39;
# 复制脚本到worker上
ansible worker -m copy -a &quot;src&#x3D;&#x2F;opt&#x2F;wazuh&#x2F;cluster.sh dest&#x3D;&#x2F;opt&#x2F;wazuh owner&#x3D;root group&#x3D;root mode&#x3D;0744&quot;
# 每个worker执行脚本
ansible worker -a &#39;&#x2F;bin&#x2F;sh &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Wazuh</tag>
        <tag>Ansible</tag>
        <tag>CVE</tag>
      </tags>
  </entry>
  <entry>
    <title>Wazuh系统的群集化改造</title>
    <url>/2021/08/01/wazuh_depoly_cluster/</url>
    <content><![CDATA[<h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>在中大型网络环境中，单台Allinone的Wazuh系统或者单节点的分布式部署Wazuh系统从性能上已经无法满足日志分析和漏洞扫描的需求，因此应当采用高可用、多节点的分布式部署来满足Wazuh对CPU和存储的要求。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>系统描述</th>
<th>配置</th>
<th>网络地址</th>
<th>系统角色</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Lvsnode1</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.51</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>2</td>
<td>Lvsnode2</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.52</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>3</td>
<td>Wazuhnode0</td>
<td>2c&#x2F;2g</td>
<td>192.168.79.60</td>
<td>Wazuh主节点，提供认证以及cve库</td>
</tr>
<tr>
<td>4</td>
<td>Wazuhnode1</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.61</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>5</td>
<td>Wazuhnode2</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.62</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>6</td>
<td>KibanaNode</td>
<td>2c&#x2F;4g</td>
<td>192.168.79.80</td>
<td>Kibana展示节点</td>
</tr>
<tr>
<td>7</td>
<td>ElasticNode1</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.81</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>8</td>
<td>ElasticNode2</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.82</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>9</td>
<td>ElasticNode3</td>
<td>4c&#x2F;4g</td>
<td>192.168.79.83</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>10</td>
<td>UbuntuNode</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.127</td>
<td>Ubuntu 20.04 LTS 测试机 + Wordpress</td>
</tr>
<tr>
<td>11</td>
<td>CentOSNode</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.128</td>
<td>CentOS 8.4 测试机 + PostgreSQL</td>
</tr>
<tr>
<td>12</td>
<td>WindowsNode</td>
<td>2c&#x2F;2g</td>
<td>192.168.79.129</td>
<td>Windows Server 2012R2 测试机+ SQL Server</td>
</tr>
<tr>
<td>13</td>
<td>VIP</td>
<td>——-</td>
<td>192.168.79.50</td>
<td>前端访问IP</td>
</tr>
<tr>
<td>14</td>
<td>Gateway</td>
<td>1c&#x2F;1g</td>
<td>192.168.79.254</td>
<td>使用iKuai提供网关服务和外部DNS服务</td>
</tr>
</tbody></table>
<blockquote>
<p>以下内容仅限wazuh 4.5.1版本和ELK  7.11.2版本</p>
</blockquote>
<p><img src="https://cdn.sujx.net/distributed_no_title4.png"></p>
<h3 id="后端存储群集"><a href="#后端存储群集" class="headerlink" title="后端存储群集"></a>后端存储群集</h3><ol>
<li><p>ElasticSearch三节点部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
# 增加官方源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF
# 安装软件
yum makecache
yum upgrade -y
yum install -y elasticsearch-7.11.2

# 导入配置文件
cp -a &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml&#123;,_$(date +%F)&#125;

# 依次在各个节点上设置
cat &gt; &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml &lt;&lt; EOF
network.host: 192.168.79.81
node.name: elasticnode1
cluster.name: elastic
cluster.initial_master_nodes:
        - elasticnode1
        - elasticnode2
        - elasticnode3
discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
EOF

# 开通防火墙
firewall-cmd --permanent --add-service&#x3D;elasticsearch 
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable elasticsearch
systemctl start elasticsearch

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo

# 在各个节点上依次部署，注意变更主机名和IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>ElasticSearch群集验证</p>
<pre class="line-numbers language-none"><code class="language-none">sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cluster&#x2F;health?pretty
&#123;
  &quot;cluster_name&quot; : &quot;elastic&quot;,
  &quot;status&quot; : &quot;green&quot;,
  &quot;timed_out&quot; : false,
  &quot;number_of_nodes&quot; : 3,
  &quot;number_of_data_nodes&quot; : 3,
  &quot;active_primary_shards&quot; : 0,
  &quot;active_shards&quot; : 0,
  &quot;relocating_shards&quot; : 0,
  &quot;initializing_shards&quot; : 0,
  &quot;unassigned_shards&quot; : 0,
  &quot;delayed_unassigned_shards&quot; : 0,
  &quot;number_of_pending_tasks&quot; : 0,
  &quot;number_of_in_flight_fetch&quot; : 0,
  &quot;task_max_waiting_in_queue_millis&quot; : 0,
  &quot;active_shards_percent_as_number&quot; : 100.0
&#125;

sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cat&#x2F;nodes?v
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
192.168.79.83           10          86   0    0.08    0.08     0.03 cdhilmrstw -      elasticnode3
192.168.79.82           18          97   0    0.01    0.12     0.08 cdhilmrstw *      elasticnode2
192.168.79.81           16          95   0    0.06    0.08     0.08 cdhilmrstw -      elasticnode1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
</li>
</ol>
<h3 id="处理系统群集"><a href="#处理系统群集" class="headerlink" title="处理系统群集"></a>处理系统群集</h3><ol>
<li><p>Wazuh Master的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch

# 配置官方软件源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo &lt;&lt; EOF
[wazuh]
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
enabled&#x3D;1
name&#x3D;EL-$releasever - Wazuh
baseurl&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;yum&#x2F;
protect&#x3D;1
EOF

cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF

# 安装软件
yum makecache
yum upgrade -y

yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1515&#x2F;tcp,1516&#x2F;tcp,55000&#x2F;tcp&#125;
firewall-cmd --reload

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat

# 测试filebeat
[root@WazuhNode0 wazuh]# filebeat test output
elasticsearch: http:&#x2F;&#x2F;192.168.79.81:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.81
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.82:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.82
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.83:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.83
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>Wazuh worker的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 同Master部署一致

# 安装软件
yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1516&#x2F;tcp&#125;
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>实现wazuh群集</p>
<pre class="line-numbers language-none"><code class="language-none"># 进行群集认证
# Master节点
#生成随机串值
openssl rand -hex 16
d84691d111f86e70e8ed7eff80cde39e

# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode0&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;master&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# Worker节点
# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode1&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;worker&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# 验证
[root@WazuhNode0 bin]# .&#x2F;cluster_control -l
NAME        TYPE    VERSION  ADDRESS        
wazuhnode0  master  4.1.5    192.168.79.60  
wazuhnode1  worker  4.1.5    192.168.79.61  
wauzhnode2  worker  4.1.5    192.168.79.62<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="前端访问群集"><a href="#前端访问群集" class="headerlink" title="前端访问群集"></a>前端访问群集</h3><ol>
<li><p>概览</p>
<p>前端部署采用Keeplived+Nginx代理的模式，提供一个VIP供Wazuh的agent进行部署。</p>
</li>
<li><p>部署Nginx的TCP代理节点</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署第一个节点Node1</span>
<span class="token comment"># 开放防火墙端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 新增官方源地址</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/nginx.repo <span class="token operator">&lt;&lt;</span><span class="token punctuation">\</span>EOF
<span class="token punctuation">[</span>nginx<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>nginx repo
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
EOF

<span class="token comment"># 安装Nginx</span>
yum makecache
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> nginx.service <span class="token parameter variable">--now</span>

<span class="token comment"># 配置stream</span>
<span class="token builtin class-name">cd</span> /etc/nginx
<span class="token function">cp</span> <span class="token parameter variable">-a</span> nginx.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/nginx/nginx.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
include /etc/nginx/stream.d/*.conf;
EOF</span>

<span class="token function">mkdir</span> ./stream.d
<span class="token function">touch</span> /etc/nginx/stream.d/wazuh.conf

<span class="token function">cat</span> <span class="token operator">></span> /etc/nginx/stream.d/wazuh.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
stream &#123;
    upstream cluster &#123;
        hash <span class="token variable">$remote_addr</span> consistent;
        server 192.168.79.61:1514;
        server 192.168.79.62:1514;
    &#125;
    upstream master &#123;
        server 192.168.79.60:1515;
    &#125;
    server &#123;
        listen 1514;
        proxy_pass cluster;
    &#125;
    server &#123;
        listen 1515;
        proxy_pass master;
    &#125;
&#125;
EOF</span>

<span class="token comment"># 重启Nginx</span>
systemctl restart nginx
<span class="token comment"># 检查端口情况</span>
<span class="token punctuation">[</span>root@lvsnode1 nginx<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp</span>
Active Internet connections <span class="token punctuation">(</span>only servers<span class="token punctuation">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1514            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1515            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:80              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:22              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1022</span>/sshd           
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::80                   :::*                    LISTEN      <span class="token number">1897</span>/nginx: master  
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::22                   :::*                    LISTEN      <span class="token number">1022</span>/sshd   

<span class="token comment"># 安装Keeplived</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> keepalived
<span class="token builtin class-name">cd</span> /etc/keepalived/
<span class="token function">cp</span> <span class="token parameter variable">-a</span> keepalived.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>

<span class="token comment"># 进行配置</span>
<span class="token function">cat</span> <span class="token operator">></span> keepalived.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# Configuration File for keepalived
#
global_defs &#123;
    router_id nginxnode1
    vrrp_mcast_group4 224.0.0.18
    lvs_timeouts tcp 900 tcpfin 30 udp 300
    lvs_sync_daemon ens160 route_lvs
    vrrp_skip_check_adv_addr
    #vrrp_strict
    vrrp_garp_interval 0
    vrrp_gna_interval 0
&#125;
vrrp_instance route_lvs &#123;
    state BACKUP
    priority 100
    virtual_router_id 18
    interface ens160
    track_interface &#123;
        ens160
    &#125;
    advert_int 3
    authentication &#123;
        auth_type PASS
        auth_pass password
    &#125;
    virtual_ipaddress &#123;
        192.168.79.50/24 dev ens160 label ens160:0
    &#125;
&#125;
EOF</span>

systemctl <span class="token builtin class-name">enable</span> keepalived.service <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>验证服务</p>
<pre class="line-numbers language-none"><code class="language-none">sujx@LEGION:~$ ping 192.168.79.50
PING 192.168.79.50 (192.168.79.50) 56(84) bytes of data.
64 bytes from 192.168.79.50: icmp_seq&#x3D;1 ttl&#x3D;64 time&#x3D;0.330 ms
64 bytes from 192.168.79.50: icmp_seq&#x3D;2 ttl&#x3D;64 time&#x3D;0.306 ms

--- 192.168.79.50 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min&#x2F;avg&#x2F;max&#x2F;mdev &#x3D; 0.306&#x2F;0.430&#x2F;0.655&#x2F;0.159 ms

sujx@LEGION:~$ telnet 192.168.79.50 1515
Trying 192.168.79.140...
Connected to 192.168.79.140.
Escape character is &#39;^]&#39;.
   
sujx@LEGION:~$ telnet 192.168.79.50 1514
Trying 192.168.79.140...
Connected to 192.168.79.140.
Escape character is &#39;^]&#39;.
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="面板访问群集"><a href="#面板访问群集" class="headerlink" title="面板访问群集"></a>面板访问群集</h3><ol>
<li><p>部署Elastic协调节点</p>
<pre class="line-numbers language-none"><code class="language-none"># 如果 Elasticsearch 集群有多个节点，分发 Kibana 节点之间请求的最简单的方法就是在 Kibana 机器上运行一个 Elasticsearch 协调（Coordinating only node） 的节点。Elasticsearch 协调节点本质上是智能负载均衡器，也是集群的一部分，如果有需要，这些节点会处理传入 HTTP 请求，重定向操作给集群中其它节点，收集并返回结果

# 在Kibana节点上安装Elasticsearch
# 安装前置软件
yum install -y zip unzip curl
# 导入源秘钥
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
# 增加官方源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF

# 安装软件
yum makecache
yum upgrade -y
yum install -y elasticsearch-7.11.2

#配置防火墙
firewall-cmd --permanent --add-service&#x3D;http
firewall-cmd --permanent --add-service&#x3D;elasticsearch
firewall-cmd --reload

# 修改配置
# 其他ES节点也需要增加该主机NodeIP，并重启服务
cat &gt;&gt; &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml&lt;&lt;EOF
node.name: kibananode0
cluster.name: elastic
node.master: false
node.data: false
node.ingest: false
network.host: localhost
http.port: 9200
transport.host: 192.168.79.80
transport.tcp.port: 9300

discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
        - 192.168.79.80
EOF

# 查看群集信息，只允许本机Kibana访问
[root@kibana wazuh]# curl http:&#x2F;&#x2F;localhost:9200&#x2F;_cat&#x2F;nodes?v
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
192.168.79.81           18          96   0    0.04    0.06     0.02 cdhilmrstw -      elasticnode1
192.168.79.80           12          97   3    0.01    0.08     0.07 lr         -      kibananode0
192.168.79.82           23          96   0    0.04    0.09     0.04 cdhilmrstw *      elasticnode2
192.168.79.83           23          87   0    0.09    0.11     0.05 cdhilmrstw -      elasticnode3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置Kibana</p>
<pre class="line-numbers language-none"><code class="language-none">yum install -y kibana-7.11.2

# 修改配置文件
cp -a &#x2F;etc&#x2F;kibana&#x2F;kibana.yml&#123;,_$(date +%F)&#125;

cat &gt;&gt; &#x2F;etc&#x2F;kibana&#x2F;kibana.yml &lt;&lt; EOF
server.port: 5601
server.host: &quot;localhost&quot;
server.name: &quot;kibana&quot;
i18n.locale: &quot;zh-CN&quot;
elasticsearch.hosts: [&quot;http:&#x2F;&#x2F;localhost:9200&quot;]
kibana.index: &quot;.kibana&quot;
kibana.defaultAppId: &quot;home&quot;
server.defaultRoute : &quot;&#x2F;app&#x2F;wazuh&quot;
EOF

# 创建数据目录
mkdir &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;data
chown -R kibana:kibana &#x2F;usr&#x2F;share&#x2F;kibana

# 离线安装插件
wget https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;ui&#x2F;kibana&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip
cp .&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip &#x2F;tmp
cd &#x2F;usr&#x2F;share&#x2F;kibana
sudo -u kibana &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;bin&#x2F;kibana-plugin install file:&#x2F;&#x2F;&#x2F;tmp&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip

# 配置服务
systemctl daemon-reload
systemctl enable kibana
systemctl start kibana

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo

# 配置反向代理
yum install -y nginx
systemctl enable --now nginx
vim &#x2F;etc&#x2F;ngix&#x2F;nginx.conf
# 在server&#123;&#125;中添加配置项
​&#96;&#96;&#96;
        proxy_redirect           off;
        proxy_set_header         X-Real-IP $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header         Host $http_host;

        location &#x2F; &#123;
                proxy_pass http:&#x2F;&#x2F;localhost:5601&#x2F;;
        &#125;
​&#96;&#96;&#96;
nginx -s reload

# 登录kibana之后选择wazuh插件
# 返回控制台修改插件配置文件
sed -i &quot;s&#x2F;localhost&#x2F;192.168.79.60&#x2F;g&quot; &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;data&#x2F;wazuh&#x2F;config&#x2F;wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h3><ol>
<li><p>部署Wazuh-Agent</p>
<pre class="line-numbers language-none"><code class="language-none"># CentOS主机
sudo WAZUH_MANAGER&#x3D;&#39;192.168.79.50&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; yum install https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;yum&#x2F;wazuh-agent-4.1.5-1.x86_64.rpm -y

# Ubuntu主机
curl -so wazuh-agent.deb https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;apt&#x2F;pool&#x2F;main&#x2F;w&#x2F;wazuh-agent&#x2F;wazuh-agent_4.1.5-1_amd64.deb &amp;&amp; sudo WAZUH_MANAGER&#x3D;&#39;192.168.79.60&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; dpkg -i .&#x2F;wazuh-agent.deb

# 启动服务
systemctl daemon-reload
systemctl enable wazuh-agent
systemctl start wazuh-agent

# Windows主机
Invoke-WebRequest -Uri https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;windows&#x2F;wazuh-agent-4.1.5-1.msi -OutFile wazuh-agent.msi; .&#x2F;wazuh-agent.msi &#x2F;q WAZUH_MANAGER&#x3D;&#39;192.168.79.50&#39; WAZUH_REGISTRATION_SERVER&#x3D;&#39;192.168.79.50&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; 
start-service wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>验证客户端所在管理节点</p>
<p><img src="https://cdn.sujx.net/wazuh-client.PNG"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>System</tag>
        <tag>Elasticsearch</tag>
        <tag>Security</tag>
        <tag>Wazuh</tag>
        <tag>HIDS</tag>
        <tag>keeplived</tag>
        <tag>lvs</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch常用查询语句</title>
    <url>/2021/07/19/elasticsearch-common-cmd/</url>
    <content><![CDATA[<h3 id="节点状态相关"><a href="#节点状态相关" class="headerlink" title="节点状态相关"></a>节点状态相关</h3><ol>
<li><p>检查节点是否运行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://localhost:9200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>检查节点健康状态</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://localhost:9200/_cluster/health<span class="token punctuation">\</span>?pretty<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>检查群集节点状态</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://192.168.248.148:9200/_cat/nodes?v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="分片状态相关"><a href="#分片状态相关" class="headerlink" title="分片状态相关"></a>分片状态相关</h3><ol>
<li>检查分片健康<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http://localhost:9200/_cat/indices<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>检查所有分片<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://localhost:9200/_cat/shards<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>删除分片<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XDELETE</span> http://127.0.0.1:9200/wazuh-alerts-3.x-2021.05.16<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>设置分片数<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-XPUT</span>  <span class="token string">"127.0.0.1:9200/_cluster/settings"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> <span class="token parameter variable">-d</span> <span class="token string">'&#123;"transient":&#123;"cluster":&#123;"max_shards_per_node":20000&#125;&#125;&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="存储相关"><a href="#存储相关" class="headerlink" title="存储相关"></a>存储相关</h3><ol>
<li>设置存储水位<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT <span class="token string">"http://127.0.0.1:9200/_cluster/settings"</span> <span class="token parameter variable">-H</span> <span class="token string">'Content-Type: application/json'</span> -d<span class="token string">'

&#123;

 "persistent": &#123;

  "cluster.routing.allocation.disk.watermark.low":"90%"

 &#125;

&#125;   
'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Elasticsearch</tag>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>手机短信转发电子邮件</title>
    <url>/2021/07/13/sms2email/</url>
    <content><![CDATA[<p>在运维工作中，我们经常会用到公用手机不在手边的情况。比如，我们在休假或者外出期间紧急对公司注册的云资源进行变更的时候，相关验证码必须要使用短信接收，而手机却在半个城市之外的公司办公室。还有一种情况就是每天都有人来找公用手机翻检验证码，这样对当值运维人员不胜其烦。</p>
<p>为了避免这种情况的蔓延，找到了使用旧安卓机进行SMS2Email改造的小程序。</p>
<p>具体设置如下图：</p>
<table>
<thead>
<tr>
<th><img src="https://cdn.sujx.net/emailsend.jpg"></th>
<th><img src="https://cdn.sujx.net/sms2emailtest.jpg"></th>
<th align="center"><img src="https://cdn.sujx.net/resend.jpg"></th>
</tr>
</thead>
</table>
<p>效果：</p>
<p><img src="https://cdn.sujx.net/sms2getemail.PNG"></p>
<p>该程序名称为 TranspondSMS</p>
<p>官网地址为：<a href="http://tsms.allmything.com/">http://tsms.allmything.com</a></p>
<p>Github代码库：<a href="https://github.com/xiaoyuanhost/">https://github.com/xiaoyuanhost/</a></p>
<p>除了邮件之外，它还支持钉钉、微信机器人已经web页面等告警方式，以后会慢慢深入它的应用。</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>SMS</tag>
        <tag>E-mail</tag>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>建立内网Linux防病毒系统</title>
    <url>/2021/07/09/clamav-privte-depoly/</url>
    <content><![CDATA[<p>ClamAV本来是为了Postfix邮件网关而开发的防毒软件，主要目的是对邮件队列里面的邮件进行病毒查杀。然后，这个防毒模块独立出来成为一个提供病毒、恶意软件、蠕虫的查杀能力的开源软件，成为了Linux环境下实现文件安全的主要选择。�</p>
<h3 id="部署ClamAV"><a href="#部署ClamAV" class="headerlink" title="部署ClamAV"></a>部署ClamAV</h3><ol start="0">
<li>添加EPEL源<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ClamAV的RHEL/CentOS源是直接用epel来发布的</span>
yum cleanall
yum makecache
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">git</span> python3-pip
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release

<span class="token comment"># 添加华为云源</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/#baseurl/baseurl/g"</span> /etc/yum.repos.d/epel.repo
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/metalink/#metalink/g"</span> /etc/yum.repos.d/epel.repo
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s@https\?://download.example/pub@https://repo.huaweicloud.com@g"</span> /etc/yum.repos.d/epel.repo

yum makecache
yum upgrade <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>安装ClamAV<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> clamav clamav-update clamd <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>启动服务<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 刷新服务列表</span>
systemctl daemon-reload
<span class="token comment"># 启动自动更新病毒库,默认更新周期是每月一次</span>
systemctl <span class="token builtin class-name">enable</span> clamav-freshclam.service
<span class="token comment"># 启动扫描服务</span>
systemctl <span class="token builtin class-name">enable</span> clamd@scan.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="建立内部病毒特征库"><a href="#建立内部病毒特征库" class="headerlink" title="建立内部病毒特征库"></a>建立内部病毒特征库</h3><ol>
<li>部署cvdupdate<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装Nginx</span>
<span class="token comment"># 配置站点目录为/var/www</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www
<span class="token function">chown</span> nginx:nginx /var/www

<span class="token comment"># cvdupdate是思科公司(这个思科就是那个思科)开发的一个ClamAV病毒库镜像工具</span>
pip3 <span class="token function">install</span> cvdupdate
<span class="token comment"># 执行病毒库存储位置</span>
cvd config <span class="token builtin class-name">set</span> <span class="token parameter variable">--dbdir</span> /var/www
<span class="token comment"># 修改官方源为亚马逊的S3镜像</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s@https://database.clamav.net@https://pivotal-clamav-mirror.s3.amazonaws.com@g"</span> ~/.cvdupdate/config.json

cvd update
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO main.cvd is up-to-date. Version: <span class="token number">59</span>
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO daily.cvd is up-to-date. Version: <span class="token number">26225</span>
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO bytecode.cvd is up-to-date. Version: <span class="token number">333</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="配置CLamAV"><a href="#配置CLamAV" class="headerlink" title="配置CLamAV"></a>配置CLamAV</h3><ol>
<li>添加内网更新源<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认使用https，若使用http协议需要写明http://xxx.yyy.zzz，否则则不需要</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s@database.clamav.net@http://192.168.248.150/clamav@g"</span> /etc/freshclam.conf

<span class="token punctuation">[</span>root@elasticnode1 ~<span class="token punctuation">]</span><span class="token comment"># freshclam</span>
ClamAV update process started at Fri Jul  <span class="token number">9</span> <span class="token number">18</span>:29:37 <span class="token number">2021</span>
WARNING: Your ClamAV installation is OUTDATED<span class="token operator">!</span>
WARNING: Local version: <span class="token number">0.103</span>.2 Recommended version: <span class="token number">0.103</span>.3
DON<span class="token string">'T PANIC! Read https://www.clamav.net/documents/upgrading-clamav
daily database available for download (remote version: 26225)
Time:    0.5s, ETA:    0.0s [========================>]  102.43MiB/102.43MiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-4cfdfa4231c3496ffee7793166ed2602.tmp-daily.cvd<span class="token string">' ...
Database test passed.
daily.cvd updated (version: 26225, sigs: 3994327, f-level: 63, builder: raynman)
main database available for download (remote version: 59)
Time:    0.5s, ETA:    0.0s [========================>]  112.40MiB/112.40MiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-cf8d5312f458ec6b897d0fbb3af11892.tmp-main.cvd<span class="token string">' ...
Database test passed.
main.cvd updated (version: 59, sigs: 4564902, f-level: 60, builder: sigmgr)
bytecode database available for download (remote version: 333)
Time:    0.0s, ETA:    0.0s [========================>]  286.79KiB/286.79KiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-e205410803d9f55beb3855e58f5ec7d2.tmp-bytecode.cvd' <span class="token punctuation">..</span>.
Database <span class="token builtin class-name">test</span> passed.
bytecode.cvd updated <span class="token punctuation">(</span>version: <span class="token number">333</span>, sigs: <span class="token number">92</span>, f-level: <span class="token number">63</span>, builder: awillia2<span class="token punctuation">)</span>

<span class="token comment"># 启动更新服务</span>
systemctl start clamav-freshclam.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置ClamAV服务<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建日志文件</span>
<span class="token function">touch</span> /var/log/clamd.scan

<span class="token comment"># 修改clamd配置文件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/#LogFile \/var/LogFile \/var/g'</span> /etc/clamd.d/scan.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/#LocalSocket \/run/LocalSocket \/run/g'</span> /etc/clamd.d/scan.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/#LocalSocketMode/LocalSocketMode/g'</span> /etc/clamd.d/scan.conf

<span class="token comment"># 启动服务</span>
systemctl start clamd@scan.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>功能测试<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载测试病毒包</span>
<span class="token function">wget</span> http://www.eicar.org/download/eicar.com

<span class="token comment"># 手动查杀</span>
clamscan <span class="token parameter variable">--infected</span> <span class="token parameter variable">--remove</span> <span class="token parameter variable">--recursive</span> <span class="token builtin class-name">.</span>
<span class="token comment"># 结果</span>
/root/eicar.com: Win.Test.EICAR_HDB-1 FOUND
/root/eicar.com: Removed.

----------- SCAN SUMMARY -----------
Known viruses: <span class="token number">8543862</span>
Engine version: <span class="token number">0.103</span>.2
Scanned directories: <span class="token number">1</span>
Scanned files: <span class="token number">9</span>
Infected files: <span class="token number">1</span>
Data scanned: <span class="token number">0.02</span> MB
Data read: <span class="token number">0.01</span> MB <span class="token punctuation">(</span>ratio <span class="token number">2.00</span>:1<span class="token punctuation">)</span>
Time: <span class="token number">17.424</span> sec <span class="token punctuation">(</span><span class="token number">0</span> m <span class="token number">17</span> s<span class="token punctuation">)</span>
Start Date: <span class="token number">2021</span>:07:09 <span class="token number">18</span>:45:02
End Date:   <span class="token number">2021</span>:07:09 <span class="token number">18</span>:45:19<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="与Wazuh结合"><a href="#与Wazuh结合" class="headerlink" title="与Wazuh结合"></a>与Wazuh结合</h3><ol>
<li><p>安装Wazuh Agent</p>
<blockquote>
<p>Wazuh默认自带clamav的规则和解码器，所以只要安装wazuh-agent即可。</p>
</blockquote>
</li>
<li><p>Kibana展示</p>
<p><img src="https://cdn.sujx.net/clamav-wazuh.png" alt="clamav"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Sysstem</tag>
        <tag>Antivirus</tag>
        <tag>ClamAV</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Wazuh检测PostgreSQL漏洞</title>
    <url>/2021/07/09/wazuh-vulner-detec-postgresql/</url>
    <content><![CDATA[<p>本文的源于领导的一句问句，Wazuh能监控PG数据库的漏洞么？然后结合实际环境搭建了一套环境进行了测试。<br>结论是：能，然而并不能。</p>
<!--以下使用centos8.4系统进行测试-->

<h3 id="使用操作系统官方软件库"><a href="#使用操作系统官方软件库" class="headerlink" title="使用操作系统官方软件库"></a>使用操作系统官方软件库</h3><ol>
<li><p>安装数据库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum makecache
<span class="token comment"># 系统自带版本为10</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postgresql postgresql-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>启动数据库</p>
<pre class="line-numbers language-none"><code class="language-none"># 启动服务
postgresql-setup initdb
systemctl enable postgresql.service --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>执行漏洞检测</p>
<p><img src="https://cdn.sujx.net/wazuh_monitor_postgresql.png" alt="postgresql"></p>
</li>
</ol>
<h3 id="使用数据库官方软件库"><a href="#使用数据库官方软件库" class="headerlink" title="使用数据库官方软件库"></a>使用数据库官方软件库</h3><ol>
<li>安装数据库<pre class="line-numbers language-none"><code class="language-none"># 安装PG官方源
yum install -y https:&#x2F;&#x2F;download.postgresql.org&#x2F;pub&#x2F;repos&#x2F;yum&#x2F;reporpms&#x2F;EL-8-x86_64&#x2F;pgdg-redhat-repo-latest.noarch.rpm
# 更新源，时间较长，需要确认添加那个版本PG，我们以12版本为例
yum makecache
# 安装数据库
yum install -y postgresql12 postgresql12-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>启动数据库<pre class="line-numbers language-none"><code class="language-none"># 创建目录
mkdir -p &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;12&#x2F;data&#x2F;
chown postgres:postgres &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;12&#x2F; -R

# 启动服务
postgresql-12-setup initdb
systemctl enable postgresql-12.service --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>执行漏洞检测</li>
</ol>
<ul>
<li>none</li>
<li>none</li>
<li>none</li>
</ul>
<h3 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h3><p>Wazuh使用软件包名或者KB名来进行对比，对于RPM系发行版就是访问rpminfo数据库来进行对比。<br>以postgresql为例</p>
<ol>
<li><p>Redhat官方漏洞库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># redhat官方的漏洞库中是有postgresql12的漏洞的</span>
 <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"Module postgresql:12 is enabled"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229037"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229001"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229002"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229007"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229008"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229009"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229010"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229011"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229012"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229013"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229014"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229015"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229016"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229017"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229018"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229019"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229020"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229023"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229024"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229025"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229026"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229029"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229030"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229031"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229032"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229033"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229034"</span>/<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://cdn.sujx.net/postgresql-vuln.png" alt="vuln"></p>
</li>
<li><p>PG官方包的名称</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>sujx@postgresql ~<span class="token punctuation">]</span>$ <span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span><span class="token function">grep</span> postgresql
postgresql12-12.7-2PGDG.rhel8.x86_64
postgresql12-libs-12.7-2PGDG.rhel8.x86_64
postgresql12-server-12.7-2PGDG.rhel8.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>postgresql12 ≠ postgresql,所以wazuh使用redhat的OVAL文件可以搜出redhat打包的postgresql的漏洞，其他就不可以。</p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>wazuh</tag>
        <tag>postgresql</tag>
        <tag>vulnerability</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Wazuh实现漏洞扫描</title>
    <url>/2021/07/07/wazuh-vulnerabilities/</url>
    <content><![CDATA[<p>Wazuh是个复杂的积木式系统，由ossec、ElasticStack和wazuh插件以及第三方的漏扫、病毒查杀、文件监控等等安全工具组合而成。本文将简述Wazuh的漏洞扫描模块的使用。</p>
<h3 id="应用原理"><a href="#应用原理" class="headerlink" title="应用原理"></a>应用原理</h3><ol>
<li>Wazuh不是一个漏洞扫描工具，它只是借助本身的功能模块来实现对操作系统的漏洞监控；</li>
<li>Wazuh的漏扫依赖于Agent的对系统软件版本的扫描，上传至Master节点之后，通过在线或者离线加载的各个操作系统官方发布的CVE数据库以及美国政府发布的NVD数据库来进行对比，从而实现漏洞的检查和告警；</li>
<li>Wazuh不使用爬虫、端口扫描等传统漏扫技术路径，所以对客户端主机的性能影响极小；</li>
<li>Wazuh官方支持对数据库、中间件等软件进行漏洞扫描，但只支持操作系统发行官方库中的包，因为它是简单的按照软件包名来进行对比的；</li>
<li>Wazuh可以对接Clamav、Suricata等其他安全系统。</li>
</ol>
<hr>
<h3 id="漏洞扫描模块"><a href="#漏洞扫描模块" class="headerlink" title="漏洞扫描模块"></a>漏洞扫描模块</h3><ol start="0">
<li>配置离线文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在wazuh-master上安装Nginx</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/wazuh/os
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh

<span class="token comment"># 下载离线文件</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/
<span class="token comment"># 下载RHEL 7 8的漏洞种子文件</span>
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment"># 下载Redhat的安全数据Json文件</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/rh-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> redhat
./rh-generator.sh redhat/

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/nvd-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> nvd
 ./nvd-generator.sh <span class="token number">2010</span> nvd/

<span class="token comment"># 配置nginx文件 </span>
<span class="token function">vim</span> /etc/nginx/nginx.conf
<span class="token comment"># 在server&#123;&#125;中修改增补如下配置</span>
        root         /var/www/wazuh<span class="token punctuation">;</span>
    
        location / <span class="token punctuation">&#123;</span>
                autoindex on<span class="token punctuation">;</span>
                autoindex_exact_size off<span class="token punctuation">;</span>
                autoindex_localtime on<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置漏洞扫描模块<br>vim &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>vulnerability-detector<span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>interval<span class="token operator">></span>5m<span class="token operator">&lt;</span>/interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>ignore_time<span class="token operator">></span>6h<span class="token operator">&lt;</span>/ignore_time<span class="token operator">></span>
    <span class="token operator">&lt;</span>run_on_start<span class="token operator">></span>yes<span class="token operator">&lt;</span>/run_on_start<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- RedHat OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"redhat"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.248.150/rhel-7-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.248.150/rhel-8-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"1"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"25"</span><span class="token operator">></span>http://192.168.248.150/redhat/redhat-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Windows OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"msu"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url<span class="token operator">></span>http://192.168.248.150/msu-updates.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Aggregate vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"nvd"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"2010"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"2021"</span><span class="token operator">></span>http://192.168.248.150/nvd/nvd-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

  <span class="token operator">&lt;</span>/vulnerability-detector<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置定期更新漏洞文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/

<span class="token comment"># 下载Ubuntu 20.04的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.focal.cve.oval.xml.bz2

<span class="token comment"># 下载RHEL 6/7/8的漏洞种子</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL6/rhel-6-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment">#下载Redhat的安全数据Json文件</span>
/bin/bash /var/www/wazuh/rh-generator.sh /var/www/wazuh/redhat

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
/bin/bash /var/www/wazuh/nvd-generator.sh <span class="token number">2010</span> /var/www/wazuh/nvd

<span class="token comment"># 更新文件权限</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/wazuh

<span class="token comment"># 重启服务,更新数据库</span>
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>查询漏扫情况</li>
</ol>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vul.PNG" alt="vul"></p>
<ol start="3">
<li><p>邮件告警</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启全局邮件通知</span>
<span class="token comment"># Wazuh本身没有邮件功能，它依赖系统的邮件投递</span>
  <span class="token operator">&lt;</span>global<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_notification<span class="token operator">></span>yes<span class="token operator">&lt;</span>/email_notification<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
      <span class="token operator">&lt;</span>smtp_server<span class="token operator">></span>exmail.qq.com<span class="token operator">&lt;</span>/smtp_server<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_from<span class="token operator">></span>i@sujx.net<span class="token operator">&lt;</span>/email_from<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_maxperhour<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_maxperhour<span class="token operator">></span>
  <span class="token operator">&lt;</span>/global<span class="token operator">></span>

<span class="token comment"># 定义邮件告警级别，设定事件级别>=12级即发送邮件告警</span>
  <span class="token operator">&lt;</span>alerts<span class="token operator">></span>
    <span class="token operator">&lt;</span>log_alert_level<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/log_alert_level<span class="token operator">></span>
    <span class="token operator">&lt;</span>email_alert_level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_alert_level<span class="token operator">></span>
  <span class="token operator">&lt;</span>/alerts<span class="token operator">></span>
  
<span class="token comment"># 定义每日高危漏洞通知(>=13级漏洞)</span>
  <span class="token operator">&lt;</span>reports<span class="token operator">></span>
      <span class="token operator">&lt;</span>level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/level<span class="token operator">></span>
      <span class="token operator">&lt;</span>title<span class="token operator">></span>Daily report: Alerts with level higher than <span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/title<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
  <span class="token operator">&lt;</span>/reports<span class="token operator">></span>
  
<span class="token comment"># 强制发送告警邮件，即不管上述如何设定一定要发邮件告警，是配置在rule上，而不是全局conf中</span>
  <span class="token operator">&lt;</span>rule <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"502"</span> <span class="token assign-left variable">level</span><span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>if_sid<span class="token operator">></span><span class="token number">50</span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/if_sid<span class="token operator">></span>
    <span class="token operator">&lt;</span>options<span class="token operator">></span>alert_by_email<span class="token operator">&lt;</span>/options<span class="token operator">></span>
    <span class="token operator">&lt;</span>match<span class="token operator">></span>Ossec started<span class="token operator">&lt;</span>/match<span class="token operator">></span>
    <span class="token operator">&lt;</span>description<span class="token operator">></span>Ossec server started.<span class="token operator">&lt;</span>/description<span class="token operator">></span>
  <span class="token operator">&lt;</span>/rule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>邮件投递</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mailx
<span class="token comment"># 使用mailx发送内部邮件</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/mail.rc<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# 设定内部匿名邮件服务器
set smtp=smtp.example.com
EOF</span>
<span class="token comment"># 使用公共邮箱发送邮件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postfix mailx cyrus-sasl cyrus-sasl-plain
<span class="token comment"># 建立邮件中继</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/postfix/main.cf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
relayhost = [smtp.exmail.qq.com]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous
smtp_tls_CAfile = /etc/ssl/certs/ca-bundle.crt
smtp_use_tls = yes
EOF</span>
<span class="token comment"># 设定使用i@sujx.net发送邮件给指定接收方</span>
<span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>smtp.exmail.qq.com<span class="token punctuation">]</span>:587 i@sujx.net:PASSWORD <span class="token operator">></span> /etc/postfix/sasl_passwd
postmap /etc/postfix/sasl_passwd
<span class="token function">chmod</span> <span class="token number">400</span> /etc/postfix/sasl_passwd

<span class="token function">chown</span> root:root /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db
<span class="token function">chmod</span> 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db

<span class="token comment"># 重置服务</span>
systemctl reload postfix

<span class="token comment"># 邮件测试</span>
<span class="token builtin class-name">echo</span> <span class="token string">"Test mail from postfix"</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">"Test Postfix"</span> <span class="token parameter variable">-r</span> <span class="token string">"i@sujx.net"</span> sujx@live.cn

<span class="token comment"># 邮件告警</span>

Wazuh Notification.
<span class="token number">2021</span> Jul 03 <span class="token number">23</span>:21:09

Received From: <span class="token punctuation">(</span>server002.sujx.net<span class="token punctuation">)</span> any-<span class="token operator">></span>syscheck
Rule: <span class="token number">550</span> fired <span class="token punctuation">(</span>level <span class="token number">7</span><span class="token punctuation">)</span> -<span class="token operator">></span> <span class="token string">"Integrity checksum changed."</span>
Portion of the log<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:

File <span class="token string">'/etc/sysconfig/iptables.save'</span> modified
Mode: scheduled
Changed attributes: mtime,md5,sha1,sha256
…………
<span class="token parameter variable">--END</span> OF NOTIFICATION

<span class="token comment"># 邮件报告</span>

Report <span class="token string">'Daily report: Alerts with level higher than 13.'</span> completed.
------------------------------------------------
-<span class="token operator">></span>Processed alerts: <span class="token number">481384</span>
-<span class="token operator">></span>Post-filtering alerts: <span class="token number">1953</span>
-<span class="token operator">></span>First alert: <span class="token number">2021</span> Jun <span class="token number">29</span> 00:06:08
-<span class="token operator">></span>Last alert: <span class="token number">2021</span> Jun <span class="token number">29</span> <span class="token number">23</span>:59:17
Top entries <span class="token keyword">for</span> <span class="token string">'Level'</span><span class="token builtin class-name">:</span>
------------------------------------------------
Severity <span class="token number">13</span>                                                                   <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Group'</span><span class="token builtin class-name">:</span>
------------------------------------------------
gdpr_IV_35.7.d                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.1                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.3                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.1                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.2                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
vulnerability-detector                                                        <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Location'</span><span class="token builtin class-name">:</span>
……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>使用Kibana产生PDF版本的漏洞报告</p>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vulrep.PNG" alt="report"></p>
</li>
</ol>
<hr>
<h3 id="生产建议"><a href="#生产建议" class="headerlink" title="生产建议"></a>生产建议</h3><ol>
<li>由于Wazuh的漏扫模块很容易将CPU资源打满，建议使用wazuh的群集模式部署相应数量的worker来承担漏扫功能。</li>
<li>Wazuh的worker建议使用4核4G的配置进行部署，其内存占用2G左右，但CPU占用较高，且多核性能不理想。官方回复是以后版本会改进。</li>
<li>如果要求每天(24hour)产生一次全网漏扫报告的话，建议使用200:1的比例部署worker。</li>
</ol>
]]></content>
      <tags>
        <tag>Security</tag>
        <tag>Wazuh</tag>
        <tag>EDR</tag>
        <tag>Vulnerability</tag>
      </tags>
  </entry>
  <entry>
    <title>Wazuh的基本部署</title>
    <url>/2021/07/06/wazuh_deploy_first/</url>
    <content><![CDATA[<p>本次将部署一套分布式Wazuh方案，实现其基本功能。其中：</p>
<ol>
<li>wazuh-master启用全功能组件；</li>
<li>ElasticStack将使用官方基本授权，不启用X-pack和加密连接；</li>
<li>Linux版本Agent将安装到Kibana主机和ElasticSearch主机上，不再额外安装示例主机；</li>
<li>各个功能组件采用单节点部署；</li>
<li>Wazuh使用4.1.5版本，搭配官方指定7.11.2ElasticStack版本。</li>
</ol>
<hr>
<h3 id="部署方案"><a href="#部署方案" class="headerlink" title="部署方案"></a>部署方案</h3><ol>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/wazuh-deploy-single.png" alt="topo"></p>
</li>
<li><p>网络地址</p>
<table>
<thead>
<tr>
<th align="center">系统角色</th>
<th align="center">版本</th>
<th align="center">网络地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ElasticSearch</td>
<td align="center">7.11.2</td>
<td align="center">192.168.248.146</td>
</tr>
<tr>
<td align="center">Kibana</td>
<td align="center">7.11.2</td>
<td align="center">192.168.248.145</td>
</tr>
<tr>
<td align="center">WazuhMaster</td>
<td align="center">4.1.5</td>
<td align="center">192.168.248.150</td>
</tr>
<tr>
<td align="center">WazuhAgent</td>
<td align="center">4.1.5</td>
<td align="center">192.168.248.1</td>
</tr>
</tbody></table>
</li>
</ol>
<hr>
<h3 id="部署实施"><a href="#部署实施" class="headerlink" title="部署实施"></a>部署实施</h3><ol>
<li><p>ElasticSearch的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>
<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> elasticsearch-7.11.2

<span class="token comment"># 导入配置文件</span>
<span class="token function">mv</span> /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml-bak
<span class="token function">touch</span> /etc/elasticsearch/elasticsearch.yml
<span class="token function">cat</span> <span class="token operator">></span> /etc/elasticsearch/elasticsearch.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
cluster.name: elastic
node.name: elasticnode1
network.host: 192.168.248.146
cluster.initial_master_nodes: ["elasticnode1"]

path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch
EOF</span>

<span class="token comment"># 开通防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>elasticsearch 
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> elasticsearch
systemctl start elasticsearch

<span class="token comment"># 校验服务</span>
<span class="token comment"># 使用其他主机访问es环境</span>
<span class="token function">curl</span> <span class="token parameter variable">-XGET</span> http://192.168.248.146:9200
<span class="token punctuation">&#123;</span>
  <span class="token string">"name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elasticnode1"</span>,
  <span class="token string">"cluster_name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elastic"</span>,
  <span class="token string">"cluster_uuid"</span> <span class="token builtin class-name">:</span> <span class="token string">"ahjxhVEHREKNmBAfjcuyNw"</span>,
  <span class="token string">"version"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"number"</span> <span class="token builtin class-name">:</span> <span class="token string">"7.11.2"</span>,
    <span class="token string">"build_flavor"</span> <span class="token builtin class-name">:</span> <span class="token string">"default"</span>,
    <span class="token string">"build_type"</span> <span class="token builtin class-name">:</span> <span class="token string">"rpm"</span>,
    <span class="token string">"build_hash"</span> <span class="token builtin class-name">:</span> <span class="token string">"3e5a16cfec50876d20ea77b075070932c6464c7d"</span>,
    <span class="token string">"build_date"</span> <span class="token builtin class-name">:</span> <span class="token string">"2021-03-06T05:54:38.141101Z"</span>,
    <span class="token string">"build_snapshot"</span> <span class="token builtin class-name">:</span> false,
    <span class="token string">"lucene_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"8.7.0"</span>,
    <span class="token string">"minimum_wire_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.8.0"</span>,
    <span class="token string">"minimum_index_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.0.0-beta1"</span>
  <span class="token punctuation">&#125;</span>,
  <span class="token string">"tagline"</span> <span class="token builtin class-name">:</span> <span class="token string">"You Know, for Search"</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Kibana的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入源秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> kibana-7.11.2

<span class="token comment"># 修改配置文件</span>
<span class="token function">cp</span> /etc/kibana/kibana.yml /etc/kibana/kibana.yml-bak
<span class="token function">cat</span> <span class="token operator">>></span> /etc/kibana/kibana.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
server.port: 5601
server.host: "localhost"
server.name: "kibana"
i18n.locale: "zh-CN"
elasticsearch.hosts: ["http://192.168.248.146:9200"]
kibana.index: ".kibana"
kibana.defaultAppId: "home"
server.defaultRoute : "/app/wazuh"
EOF</span>

<span class="token comment"># 创建数据目录</span>
<span class="token function">mkdir</span> /usr/share/kibana/data
<span class="token function">chown</span> <span class="token parameter variable">-R</span> kibana:kibana /usr/share/kibana

<span class="token comment"># 离线安装插件</span>
<span class="token function">wget</span> https://packages.wazuh.com/4.x/ui/kibana/wazuh_kibana-4.1.5_7.11.2-1.zip
<span class="token function">cp</span> ./wazuh_kibana-4.1.5_7.11.2-1.zip /tmp
<span class="token builtin class-name">cd</span> /usr/share/kibana
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> kibana /usr/share/kibana/bin/kibana-plugin <span class="token function">install</span> file:///tmp/wazuh_kibana-4.1.5_7.11.2-1.zip

<span class="token comment"># 配置服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> kibana
systemctl start kibana

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo

<span class="token comment"># 配置反向代理</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> nginx
<span class="token function">vim</span> /etc/ngix/nginx.conf.default
<span class="token comment"># 在server&#123;&#125;中添加配置项</span>
​``<span class="token variable"><span class="token variable">`</span>
        proxy_redirect           off<span class="token punctuation">;</span>
        proxy_set_header         X-Real-IP $remote_addr<span class="token punctuation">;</span>
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for<span class="token punctuation">;</span>
        proxy_set_header         Host $http_host<span class="token punctuation">;</span>

        location / <span class="token punctuation">&#123;</span>
                proxy_pass http://localhost:5601/<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
​<span class="token variable">`</span></span>``
nginx <span class="token parameter variable">-s</span> reload

<span class="token comment"># 登录kibana之后选择wazuh插件</span>
<span class="token comment"># 返回控制台修改插件配置文件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> ‘:s/localhost/192.168.248.150/g’ /usr/share/kibana/data/wazuh/config/wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> <img src="https://cdn.sujx.net/wazuh-kibana-install.PNG" alt="wazuh"></p>
</li>
<li><p>WazuhMaster的安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packages.wazuh.com/key/GPG-KEY-WAZUH
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch

<span class="token comment"># 配置官方软件源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/wazuh.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[wazuh]
gpgcheck=1
gpgkey=https://packages.wazuh.com/key/GPG-KEY-WAZUH
enabled=1
name=EL-<span class="token variable">$releasever</span> - Wazuh
baseurl=https://packages.wazuh.com/4.x/yum/
protect=1
EOF</span>

<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> wazuh-manager
yum <span class="token function">install</span> filebeat-7.11.2

<span class="token comment"># 配置Filebeat</span>
<span class="token function">mv</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml-bak
<span class="token function">touch</span> /etc/filebeat/filebeat.yml

<span class="token function">cat</span> <span class="token operator">></span> /etc/filebeat/filebeat.yml<span class="token operator">&lt;&lt;</span><span class="token string">EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: '/etc/filebeat/wazuh-template.json'
setup.template.json.name: 'wazuh'
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: ['http://192.168.248.146:9200']
EOF</span>

<span class="token comment"># 导入filebeat的wazuh日志模板</span>
<span class="token function">curl</span> <span class="token parameter variable">-so</span> /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.1/extensions/elasticsearch/7.x/wazuh-template.json
<span class="token function">chmod</span> go+r /etc/filebeat/wazuh-template.json

<span class="token comment"># 导入filebeat的wazuh日志模型</span>
<span class="token function">curl</span> <span class="token parameter variable">-s</span> https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.1.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> <span class="token parameter variable">-xvz</span> <span class="token parameter variable">-C</span> /usr/share/filebeat/module

<span class="token comment"># 配置防火墙规则</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp,55000/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/wazuh.repo

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> wazuh-manager
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> filebeat

<span class="token comment"># 验证Filebeat</span>
filebeat <span class="token builtin class-name">test</span> output
···
elasticsearch: http://192.168.248.146:9200<span class="token punctuation">..</span>.
  parse url<span class="token punctuation">..</span>. OK
  connection<span class="token punctuation">..</span>.
    parse host<span class="token punctuation">..</span>. OK
    dns lookup<span class="token punctuation">..</span>. OK
    addresses: <span class="token number">192.168</span>.248.146
    dial up<span class="token punctuation">..</span>. OK
  TLS<span class="token punctuation">..</span>. WARN secure connection disabled
  talk to server<span class="token punctuation">..</span>. OK
  version: <span class="token number">7.11</span>.2
  ···
<span class="token comment"># 刷新kibana</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WazuhAgent的安装(Linux)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在es节点和kibana节点上安装</span>
<span class="token function">sudo</span> <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'192.168.248.150'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> https://packages.wazuh.com/4.x/yum/wazuh-agent-4.1.5-1.x86_64.rpm

<span class="token comment"># 启动服务</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> wazuh-agent
<span class="token function">sudo</span> systemctl start wazuh-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WazuhAgent的安装(Windows)</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 使用管理员权限打开powershell控制台</span>
<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri https:<span class="token operator">/</span><span class="token operator">/</span>packages<span class="token punctuation">.</span>wazuh<span class="token punctuation">.</span>com/4<span class="token punctuation">.</span>x/windows/wazuh-agent-4<span class="token punctuation">.</span>1<span class="token punctuation">.</span>5-1<span class="token punctuation">.</span>msi <span class="token operator">-</span>OutFile wazuh-agent<span class="token punctuation">.</span>msi<span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token operator">/</span>wazuh-agent<span class="token punctuation">.</span>msi <span class="token operator">/</span>q WAZUH_MANAGER=<span class="token string">'192.168.248.150'</span> WAZUH_REGISTRATION_SERVER=<span class="token string">'192.168.248.150'</span> WAZUH_AGENT_GROUP=<span class="token string">'default'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="https://cdn.sujx.net/wazuh-kibana-login.PNG"></p>
</li>
</ol>
<hr>
<p>未完待续……</p>
]]></content>
      <tags>
        <tag>system</tag>
        <tag>Security</tag>
        <tag>wazuh</tag>
        <tag>EDR</tag>
        <tag>HIDS</tag>
      </tags>
  </entry>
  <entry>
    <title>终端安全系统WAZUH的介绍</title>
    <url>/2021/07/05/wazuh_basic_info/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>[Wazuh](<a href="https://wazuh.com/">Wazuh · The Open Source Security Platform</a>)是一整套基于ossec安全检测工具和EFK日志工具构成的终端安全管理工具。不管是将其分类至HIDS，还是EDR，它都是一套通过监控主机日志行为，提供安全检测、分析和完整报告的开源、免费利器。Wazuh基于C&#x2F;S架构，它的Agent支持Windows、MacOS、Linux、HP-UX、AIX等主流操作系统。其服务端负责提供认证和数据收集，然后通过filebeat进行日志清洗，最后导入ElasticSearch，通过Kinbana进行展示和输出日志。它不仅可以收集主机的事件日志进行一般的入侵检测功能，还可以通过第三方提供的系统漏洞检测feed文件，来实现主机的漏洞扫描和合规检查。</p>
<h3 id="功能示例"><a href="#功能示例" class="headerlink" title="功能示例"></a>功能示例</h3><p><img src="https://cdn.sujx.net/data_flow1.png" alt="data_flow"></p>
<hr>
<h3 id="组件模块"><a href="#组件模块" class="headerlink" title="组件模块"></a>组件模块</h3><p>Wazuh的组件分为三部分：</p>
<ol>
<li><p>客户端的功能</p>
<p><img src="https://cdn.sujx.net/architecture_agent1.png" alt="agent"></p>
<ol>
<li>收集日志和事件日志；</li>
<li>文件和注册表的监控；</li>
<li>运行进程和安装软件的信息收集；</li>
<li>监控系统端口和网络配置；</li>
<li>检测恶意软件；</li>
<li>配置管理和策略监控</li>
<li>检测主机响应</li>
</ol>
</li>
<li><p>服务端</p>
<p><img src="https://cdn.sujx.net/architecture_server1.png" alt="server"></p>
<ol>
<li>客户端的服务器注册；</li>
<li>实现客户端的连接服务；</li>
<li>根据各项规则实现事件日志的分析引擎；</li>
<li>提供RESTful API；</li>
<li>实现服务端的群集化；</li>
<li>使用Filebeat将日志文件吐给ES存储</li>
</ol>
</li>
<li><p>Elastic Stack</p>
<p><img src="https://cdn.sujx.net/wazuh-show.PNG" alt="show"></p>
</li>
</ol>
<hr>
<h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><ol>
<li><p>端口要求</p>
<table>
<thead>
<tr>
<th>Component</th>
<th>Software</th>
<th>Port</th>
<th>Protocol</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Wazuh server</td>
<td>Wazuh manager</td>
<td>1514</td>
<td>TCP (default)</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1514</td>
<td>UDP</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1515</td>
<td>TCP</td>
<td>Agents registration service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1516</td>
<td>TCP</td>
<td>Wazuh cluster daemon</td>
</tr>
<tr>
<td></td>
<td>Wazuh API</td>
<td>55000</td>
<td>TCP</td>
<td>Wazuh RESTful API</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>Elasticsearch</td>
<td>9200</td>
<td>TCP</td>
<td>Elasticsearch RESTful API</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9300-9400</td>
<td>TCP</td>
<td>Elasticsearch cluster communication</td>
</tr>
<tr>
<td></td>
<td>Kibana</td>
<td>5601</td>
<td>TCP</td>
<td>Kibana web interface</td>
</tr>
</tbody></table>
</li>
<li><p>系统要求</p>
<ol>
<li>服务端只能部署到Linux主机上</li>
<li>建议使用RHEL&#x2F;CentOS 6.x、Ubuntu 12、Debian 7 版本以上</li>
</ol>
</li>
<li><p>硬件要求</p>
<table>
<thead>
<tr>
<th></th>
<th>最小配置</th>
<th></th>
<th>建议配置</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>组件</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
</tr>
<tr>
<td>Wazuh server</td>
<td>2</td>
<td>2</td>
<td>8</td>
<td>4</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>4</td>
<td>2</td>
<td>16</td>
<td>8</td>
</tr>
</tbody></table>
</li>
<li><p>存储配置</p>
<ol>
<li>需要单独配置wazuh server的日志存储分区；</li>
<li>需要按当前月度日志量x6的最低要求配置，实际运行建议至少每台Wazuh Server配置100G日志存储；</li>
<li>Elastic存储需要汇总多台Wazuh Server日志，至少需要保留半年日志量，建议配置1T存储。</li>
</ol>
</li>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/deployment1.png" alt="topo"></p>
</li>
</ol>
<hr>
<p>未完待续……</p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>System</tag>
        <tag>Security</tag>
        <tag>wazuh</tag>
        <tag>EDR</tag>
        <tag>HIDS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo构建静态博客站点</title>
    <url>/2021/06/29/hexo-deploy/</url>
    <content><![CDATA[<p>因为本站点是运行在阿里云最便宜的虚拟主机上面的，为提高运行效率、节约成本以及学习使用相关技术。现将原有wordpress站点迁移导出部署为hexo站点。<br>hexo的优势：</p>
<ol>
<li>原生使用markdown来进行文本编辑；</li>
<li>渲染生成静态文件后部署，省去了PHP环境和数据库环境；</li>
<li>基于HTML页面，无论是oss、virtualhost、virtualmachine都能快速灵活部署；</li>
</ol>
<hr>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><ol>
<li>部署NODE.JS<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用Ubuntu Desktop 20.04 LTS环境</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update 
<span class="token function">sudo</span> <span class="token function">apt</span> upgrade <span class="token parameter variable">-y</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">curl</span> <span class="token function">git</span>
<span class="token function">curl</span> <span class="token parameter variable">-sL</span> https://deb.nodesource.com/setup_12.x <span class="token parameter variable">-o</span> nodesource_setup.sh
<span class="token function">chmod</span> +x nodesource_setup.sh 
<span class="token function">sudo</span> ./nodesource_setup.sh
<span class="token function">sudo</span> <span class="token function">apt</span> udpate
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nodejs build-essential

<span class="token comment"># 使用CentOS 8 环境</span>
<span class="token function">sudo</span> dnf update <span class="token parameter variable">-y</span>
<span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-sL</span> https://rpm.nodesource.com/setup_12.x <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span> -
<span class="token function">chmod</span> +x nodesource_setup.sh
<span class="token function">sudo</span> ./nodesource_setup.sh
<span class="token function">sudo</span> dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> nodejs

<span class="token comment"># 使用华为NPM镜像</span>
<span class="token function">sudo</span> <span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://repo.huaweicloud.com/repository/npm/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>Hexo部署<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 升级npm</span>
<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> <span class="token function">npm</span> <span class="token parameter variable">-g</span>
<span class="token comment"># 安装升级hexo</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span>
<span class="token comment"># 初始化站点</span>
hexo <span class="token parameter variable">-v</span>
hexo init blog
<span class="token comment"># 生成站点</span>
hexo g
hexo s
firefox http://127.0.0.1:4000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>插件安装<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装蝴蝶主题</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-theme-butterfly <span class="token parameter variable">--save</span>
<span class="token comment"># 安装sitemap插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap <span class="token parameter variable">--save</span>
<span class="token comment"># 安装RSS插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed <span class="token parameter variable">--save</span>
<span class="token comment"># 安装本地搜索插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-searchdb <span class="token parameter variable">--save</span>
<span class="token comment"># 安装wordpress迁移插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-migrator-wordpress <span class="token parameter variable">--save</span>
<span class="token comment"># 安装FTP上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-ftpsync <span class="token parameter variable">--save</span>
<span class="token comment"># 安装Git上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span>
<span class="token comment"># 安装阿里云OSS上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-ali-oss <span class="token parameter variable">--save</span>
<span class="token comment"># 安装主题所需插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-pug hexo-renderer-stylus <span class="token parameter variable">--save</span>
<span class="token comment"># 安装字数统计插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-wordcount <span class="token parameter variable">--save</span>
<span class="token comment"># 安装豆瓣插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-douban <span class="token parameter variable">--save</span>
<span class="token comment"># 安装置顶插件</span>
<span class="token function">npm</span> uninstall hexo-generator-index <span class="token parameter variable">--save</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-index-pin-top <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h3><ol>
<li>修改配置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/blog/_config.yml
   
   <span class="token comment"># 站点信息</span>
   <span class="token comment"># Site</span>
   title: 灰黑化挥花悔黑
   subtitle: <span class="token string">''</span>
   description: <span class="token string">"逝者如斯夫,不舍昼夜"</span>
   keywords: sujx
   author: grepsu
   language: en    <span class="token comment"># 支持 en,zh_TW,zh_CN</span>
   timezone: <span class="token string">'Asia/shanghai'</span>
   url: https://sujx.net
   
   <span class="token comment"># 新增功能模块</span>
   <span class="token comment"># Extensions</span>
   <span class="token comment">## Plugins: https://hexo.io/plugins/</span>
   <span class="token comment">## Themes: https://hexo.io/themes/</span>
   
   <span class="token comment"># 站点索引</span>
   sitemap:
     path: sitemap.xml
   
   <span class="token comment"># RSS索引</span>
   feed:
     type: atom
     path: atom.xml
     limit: <span class="token number">20</span>
   
   <span class="token comment"># 打开本地搜索</span>
   search:
     path: search.xml
     field: post  <span class="token comment"># 指定搜索范围,可以使用post、page、all</span>
     format: html <span class="token comment"># 指定页面内容形式，可选 html | raw (Markdown) | excerpt | more</span>
     limit: <span class="token number">10000</span>
   
   <span class="token comment"># 指定主题</span>
   theme: butterfly   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>主题设置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建主题配置文件</span>
<span class="token function">touch</span> ~/blog/_config.butterfly.yml
<span class="token function">cat</span> ~/blog/node_modules/hexo-theme-butterfly/_config.yml <span class="token operator">>></span> ~/blog/_config.butterfly.yml
<span class="token function">vim</span> ~/blog/_config.butterfly.yml

略……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>默认页源码<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 标题</span>
title: template
<span class="token comment"># 发布时间</span>
date: <span class="token number">2022</span>-01-01 <span class="token number">10</span>:35:34
<span class="token comment"># 标签</span>
tags: 
	- template
<span class="token comment"># 分类</span>
categories:
  	- template
<span class="token comment"># 是否置顶，数目字越大，排位越高(可选，默认去除)</span>
top: <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="创建内容"><a href="#创建内容" class="headerlink" title="创建内容"></a>创建内容</h3><ol>
<li>导入WP<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># wordpress站点导出所有post</span>
wp-admin-<span class="token operator">></span>tools-<span class="token operator">></span>output-<span class="token operator">></span>givemetime.WordPress.2021-06-27.xml
<span class="token comment"># 使用插件导入post</span>
hexo migrate wordpress <span class="token punctuation">..</span>/givemetime.WordPress.2021-06-27.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>新建内容<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post hellowolrd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>新建页面<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page about<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="站点部署"><a href="#站点部署" class="headerlink" title="站点部署"></a>站点部署</h3><ol>
<li>多站点同步部署<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 编辑站点配置文件，同时设置三种上传方式</span>
<span class="token function">vim</span> ~/blog/_config.yml

deploy:
- type: ali-oss <span class="token comment"># 部署在阿里云OSS上</span>
  region: oss-cn-chengdu <span class="token comment">#bucket地域</span>
  accessKeyId: <span class="token comment"># 访问ID</span>
  accessKeySecret: <span class="token comment"># 访问秘钥</span>
  bucket: <span class="token comment"># bucket名称</span>
- type: <span class="token function">git</span> <span class="token comment">#部署在Gitee上</span>
  repo: https://gitee.com/grepsu/grepsu.git
  branch: master
- type: <span class="token function">git</span> <span class="token comment">#部署在Github上</span>
  repo: https://github.com/sujx/sujx.github.io.git
  branch: master
- type: ftpsync
  host: ftpserver <span class="token comment"># ftp服务器地址</span>
  user: ftpusername <span class="token comment"># ftp用户名</span>
  pass: xxxx <span class="token comment"># 你的ftp用户密码</span>
  remote: xxx <span class="token comment"># 你要上传到的地址，例如/wwwroot</span>
  port: <span class="token number">21</span> <span class="token comment"># ftp端口，不同的ftp可能会不一样</span>
  delete: <span class="token boolean">true</span> <span class="token comment"># 上传本地文件是否删除ftp中的所有文件</span>
  verbose: <span class="token boolean">true</span> <span class="token comment"># 是否打印调试信息</span>
  ignore_errors: <span class="token boolean">false</span> <span class="token comment"># 是否忽略错误</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>站点发布<pre class="line-numbers language-none"><code class="language-none">综上，使用阿里云的智能DNS，海外线路走github、电信线路走oss南方区域、万网虚拟主机走联通线路，实现一个廉价版的多区域部署。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>制作Hyper-V的Ubuntu虚机模板</title>
    <url>/2021/06/28/ubuntu-template-on-hyperv/</url>
    <content><![CDATA[<h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><ol>
<li><p>主机信息</p>
<ol>
<li>CPU：默认创建1核处理器</li>
<li>内存：1GB</li>
<li>硬盘：50GB 系统盘，使用LVM动态磁盘</li>
<li>IP地址： 172.31.107.15&#x2F;16</li>
<li>安装镜像：<a href="https://releases.ubuntu.com/20.04/ubuntu-20.04.2-live-server-amd64.iso">https://releases.ubuntu.com/20.04/ubuntu-20.04.2-live-server-amd64.iso</a> (SHA256SUMS校验值为: d1f2bf834bbe9bb43faf16f9be992a6f3935e65be0edece1dee2aa6eb1767423)</li>
<li>软件源为： <a href="http://cn.archive.ubuntu.com/ubuntu">http://cn.archive.ubuntu.com/ubuntu</a></li>
</ol>
</li>
<li><p>创建主机</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用管理员权限开启PHPV153003主机的powershell控制台
# 创建虚机，并指定第二代且版本为5.0以及路径
New-VM -Name ubuntutemplate -MemoryStartupBytes 1GB -Generation 2 -Version 5.0 -Path d:\VMs\ -Novhd
# 创建硬盘文件夹
mkdir &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks&quot;
# 创建系统盘，指定文件路径、大小、Blocksize
New-VHd -Path &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks\ubuntutemplate.vhdx&quot; -Dynamic -SizeBytes 50GB -BlockSizeBytes 1MB
# 将新建磁盘附加到指定虚机
Add-VMHardDiskDrive -VMName ubuntutemplate -Path &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks\ubuntutemplate.vhdx&quot; -ControllerType SCSI -ControllerNumber 0
# 添加光驱并指定iso文件
Add-VMDvdDrive -VMName ubuntutemplate -Path D:\ISO\ubuntu-20.04.2-live-server-amd64.iso
# 默认网卡不指定交换机，在安装过程中断网以免安装过程中的升级时间过长
# 设定网卡的VLAN ID
Set-VMNetworkAdapterVlan -VMName ubuntutemplate -VMNetworkAdapterName &quot;Network Adapter&quot; -Access -VlanId 31
# 设定主机关闭安全启动
Set-VMFirmware -VMName ubuntutemplate -EnableSecureBoot off
# 开启主机集成服务中的来宾服务
Enable-VMIntegrationService -VMName ubuntutemplate -Name &quot;Guest Service Interface&quot;
# 启动主机
Start-VM -VMName ubuntutemplate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><ol>
<li><p>基本配置</p>
<pre class="line-numbers language-none"><code class="language-none">语言: English
键盘：English
网络：
	子网：172.31.0.0&#x2F;16
	地址：172.31.107.15
	网关: 172.31.153.253
	DNS: 172.31.100.4
不使用网络代理，并使用官方源
使用自定义磁盘分区
	创建1GB ext4格式 &#x2F;boot 分区
	自动创建512MB EFI引导分区
	剩余磁盘创建不含格式分区
	创建PV(CL)
	创建LV：root 3.5GB
	创建LV: swap 3GB
创建默认用户以及密码、主机名(VLNX000000)
安装openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置语言<br><img src="https://cdn.sujx.net/ubuntu_lang.PNG"></p>
</li>
<li><p>配置键盘布局<br><img src="https://cdn.sujx.net/ubntu_key.PNG"></p>
</li>
<li><p>配置网络属性<br><img src="https://cdn.sujx.net/ubuntu_net.PNG"></p>
</li>
<li><p>配置网络代理(无)<br><img src="https://cdn.sujx.net/ubuntu_proxy.PNG"></p>
</li>
<li><p>配置系统升级APT软件源<br><img src="https://cdn.sujx.net/ubuntu_mirror.PNG"></p>
</li>
<li><p>配置硬盘自动分区<br><img src="https://cdn.sujx.net/ubuntu_diskshow.PNG"></p>
</li>
<li><p>配置根分区使用全部剩余空间<br><img src="https://cdn.sujx.net/ubuntu_extroot.PNG"><br><img src="https://cdn.sujx.net/ubuntu_diskshow.PNG"></p>
</li>
<li><p>创建用户<br>  <img src="https://cdn.sujx.net/ubuntu_creatuser.PNG"></p>
</li>
<li><p>安装openssh-server   <img src="https://cdn.sujx.net/ubuntu_openssh.PNG"></p>
</li>
<li><p>选择软件包   <img src="https://cdn.sujx.net/ubuntu_nosel.PNG"></p>
</li>
<li><p>开始安装   <img src="https://cdn.sujx.net/ubuntu_install.PNG"></p>
</li>
<li><p>完成安装   <img src="https://cdn.sujx.net/ubuntu_finsh.PNG"></p>
</li>
</ol>
<h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><ol>
<li><p>系统更新</p>
<pre class="line-numbers language-none"><code class="language-none">apt update
apt upgrade -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>安装工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装网络工具包
apt install -y curl wget net-tools

# 安装监控工具包
apt install -y htop iftop iotop

# 安装其他工具包
apt install -y locate unzip tree facter ruby libruby2.7

# 安装加域工具包
apt install -y sssd-ad sssd-tools realmd adcli
systemctl enable sssd 

# 开启域用户登录自动创建home目录
pam-auth-update --enable mkhomedir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>停用无用服务</p>
<pre class="line-numbers language-none"><code class="language-none"># 关闭snapd服务和apparmo服务
systemctl disable apparmor.service snapd.service
systemctl disable snap-core18-1944.mount snapd.apparmor.service snapd.core-fixup.service snapd.seeded.service snapd.socket snap-lxd-19188.mount snap.lxd.activate.service snap.lxd.daemon.unix.socket snap-snapd-10707.mount 
systemctl disable snapd.autoimport.service lxd-agent.service lxd-agent-9p.service snapd.system-shutdown.service snapd.recovery-chooser-trigger.service snapd.snap-repair.timer snapd.socket
# 停止cloud-init服务
systemctl disable cloud-init.service cloud-init-local.service cloud-final.service cloud-config.service
# 停止自动升级和信息收集服务
systemctl disable unattended-upgrades.service apt-daily.timer apt-daily-upgrade.timer apport-forward.socket apport-autoreport.path
sed -i &#39;s&#x2F;1&#x2F;0&#x2F;g&#39; &#x2F;etc&#x2F;default&#x2F;apport<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>安装Hyper-V驱动</p>
<pre class="line-numbers language-none"><code class="language-none">apt install -y linux-image-virtual linux-tools-virtual linux-cloud-tools-virtual<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>配置时间</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用chrony管理时间
apt install -y chrony
systemctl enable chrony --now
# 使用北京时间
timedatectl set-timezone Asia&#x2F;Shanghai
# 使用24小时制
echo &#39;LC_TIME&#x3D;en_US.UTF-8&#39; &gt;&gt; &#x2F;etc&#x2F;default&#x2F;locale
echo &#39;LC_ALL&#x3D;en_US.UTF-8&#39; &gt;&gt; &#x2F;etc&#x2F;default&#x2F;locale<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改网络管理工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用NetworkMangager管理网络
apt install -y network-manager
systemctl enable network-manager
systemctl disable wpa_supplicant.service

# 要将全部yaml文件移除之后再创建新的配置文件
mkdir &#x2F;etc&#x2F;netplan&#x2F;bak
mv &#x2F;etc&#x2F;netplan&#x2F;*.yaml &#x2F;etc&#x2F;netplan&#x2F;bak&#x2F;

# 新建配置文件
cat &gt; &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml &lt;&lt; EOF
# This is the network config written by &#39;subiquity&#39;
network:
	version: 2
	renderer: NetworkManager
EOF

# 应用配置
netplan apply
systemctl restart network-manager

# 重新配置IP信息，否则开机无法访问网络
nmcli c del eth0
nmcli c m Wired\ connection\ 1 con-name eth0
nmcli c m eth0 ipv4.addresses 172.31.107.15&#x2F;24 ipv4.gateway 172.31.153.253 ipv4.dns 172.31.100.4 ipv4.method manual autoconnect yes

# 配置生效
nmcli c d eth0 &amp;&amp; nmcli c u eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改SSH配置文件</p>
<pre class="line-numbers language-none"><code class="language-none"># 修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config
# 允许root使用密码登录
PasswordAuthentication yes

# 开启认证方式
GSSAPIAuthentication yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>配置防火墙</p>
<pre class="line-numbers language-none"><code class="language-none">ufw allow ssh
ufw enable
ufw reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>配置编辑器</p>
<pre class="line-numbers language-none"><code class="language-none"># 配置默认编辑器使用vim
# 使用第3项 vim.basic 
update-alternatives --config editor 
There are 4 choices for the alternative editor (providing &#x2F;usr&#x2F;bin&#x2F;editor).

Selection Path Priority Status
------------------------------------------------------------
0 &#x2F;bin&#x2F;nano 40 auto mode
1 &#x2F;bin&#x2F;ed -100 manual mode
2 &#x2F;bin&#x2F;nano 40 manual mode
* 3 &#x2F;usr&#x2F;bin&#x2F;vim.basic 30 manual mode
4 &#x2F;usr&#x2F;bin&#x2F;vim.tiny 15 manual mode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>开启脚本自动补全</p>
<pre class="line-numbers language-none"><code class="language-none"># 去掉 &#x2F;etc&#x2F;bash.bashrc 第35~41行注释

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion ]; then
    . &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion
  elif [ -f &#x2F;etc&#x2F;bash_completion ]; then
    . &#x2F;etc&#x2F;bash_completion
  fi
fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>修改默认shell为bash</p>
<pre class="line-numbers language-none"><code class="language-none">root@vlnx000000:~# dpkg-reconfigure dash
# 选择NO
Removing &#39;diversion of &#x2F;bin&#x2F;sh to &#x2F;bin&#x2F;sh.distrib by dash&#39;
Adding &#39;diversion of &#x2F;bin&#x2F;sh to &#x2F;bin&#x2F;sh.distrib by bash&#39;
Removing &#39;diversion of &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.1.gz to &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.distrib.1.gz by dash&#39;
Adding &#39;diversion of &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.1.gz to &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.distrib.1.gz by bash&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>设置开机自启动脚本</p>
<pre class="line-numbers language-none"><code class="language-none"># 新建开机运行程序
echo &#39;@reboot root &#x2F;bin&#x2F;bash &#x2F;root&#x2F;firstboot.sh&#39;&gt;&gt;&#x2F;etc&#x2F;crontab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>启用ROOT用户并重启</p>
<pre class="line-numbers language-none"><code class="language-none"># 设置root用户密码
sudo passwd
# 更新索引和库依赖关系
ldconfig
updatedb
# 重启主机
reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="清理交付"><a href="#清理交付" class="headerlink" title="清理交付"></a>清理交付</h3><ol>
<li><p>删除安装用户</p>
<pre class="line-numbers language-none"><code class="language-none">deluser fxiaoke
rm -rf &#x2F;home&#x2F;fxiaoke<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>清理主机信息</p>
<pre class="line-numbers language-none"><code class="language-none"># 清除Machine ID
&gt;&#x2F;etc&#x2F;machine-id
# 清除SSH公钥,在后续部署中会使用&#96;dpkg -reconfigure openssh-server&#96;来重新SSHD的key，否则无法SSH登录
rm -rf &#x2F;etc&#x2F;ssh&#x2F;*key*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>扩展磁盘</p>
<pre class="line-numbers language-none"><code class="language-none">lvextend -l 100%free &#x2F;dev&#x2F;cl&#x2F;root
resize2fs &#x2F;dev&#x2F;cl&#x2F;root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>删除缓存</p>
<pre class="line-numbers language-none"><code class="language-none"># 清除apt缓存
apt autoremove -y
apt clean
# 清除访问历史
rm –rf &#x2F;tmp&#x2F;*
rm –rf &#x2F;var&#x2F;tmp&#x2F;*
history -c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>关机</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用带空格的命令避免存入history
 sync
 poweroff<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><ul>
<li>新部署的主机需要使用<code>dpkg-reconfigure openssh-server</code>来重新SSHD的key，否则是登录不上22端口的；</li>
<li>Ubuntu 20.04 使用swap.img来替代以往的swap分区，导致在虚机部署中实际磁盘空间占用要大于centos至少一倍以上；</li>
<li>部署时使用自定义分区可以创建swap分区；</li>
<li>Hyper-V虚机的默认blocksize是32M，会导致vhdx文件远远大于vmdk，建议按照官方实践指南blocksize使用1M。</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Hyper-V</tag>
        <tag>Template</tag>
      </tags>
  </entry>
  <entry>
    <title>在PPTP网络中访问互联网</title>
    <url>/2021/06/06/pptp-internet/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>现公司使用M$的TMG自建的V<del>P</del>N，使用PPTP协议远程连接。在使用过程中，存在连接成功之后，就无法使用已连接互联网。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><img src="https://cdn.sujx.net/pptp_inter.png"></p>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>pptp</tag>
      </tags>
  </entry>
  <entry>
    <title>近期技术面试题目</title>
    <url>/2021/05/19/interview_202107/</url>
    <content><![CDATA[<h3 id="Windows相关"><a href="#Windows相关" class="headerlink" title="Windows相关"></a>Windows相关</h3><ol>
<li><p>域的角色有哪几个，谈谈你的理解</p>
<pre class="line-numbers language-none"><code class="language-none">林级别：
Schema Master（架构主机）
作用是修改活动目录的原数据。我们知道在活动目录里存在着各种各样的对象，比如用户、计算机、打印机等，这些对象有一系列的属性，活动目录本省就是一个数据库，对象和属性之间就好像表格一样存在着对应关系，那么这些对象和属性之间的关系是有谁来定义的，就是Schema Master.
Domain Naming Master（域名主机）
这也是一个森林级别的角色，他的主要作用是管理森林中的域的添加或者删除。如果你要在你现有森林中添加一个域或者删除一个域的话，那么就必须要和Domain Naming Master进行联系。

域级别
PDC Emulator（PDC仿真主机）
	a.密码变更
	b.提供时间服务
	c.统一修改组策略
	d.对Windows 2000以前的操作系统提供支持
RID Master（RID主机）
	用户的标识不取决于用户名，取决于安全标识符SID，所以当两个用户的SID一样的时候，尽管他们的用户名可能不一样，但Windows的安全子系统中会把他们认为是同一个用户，这样会产生安全问题。RID Mater的作用就是：分配可用RID池给域内的DC核防止安全主题的SID重复
Infrastructure Master(结构主机）
	主要负责组嵌套关系，当在多域情况下，需要将GC与结构主机分开。在单域环境下或域中DC都是GC情况下，结构主机不起作用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何提升域的级别</p>
<pre class="line-numbers language-none"><code class="language-none">1.开始--管理工具--Active Directory用户和计算机(或者Active Directory域和信任关系)。
2.选择要提升的域，右键单击，选择提升域功能级别。
3.在“选择可用的域功能级别”中，选择，然后单击提升。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何建立域的子站点</p>
<pre class="line-numbers language-none"><code class="language-none">打开 Active Directory 站点和服务 控制台，右键Subnets在弹出菜单项选择&quot;新建子网&quot;
移动指定DC至新的子网<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>域控制器无法启动如何处理？</p>
<pre class="line-numbers language-none"><code class="language-none">前提：
1、当活动目录搭建完成时，进行一次完全备份，包含系统状态、活动目录数据库、卷等相关信息。
2、活动目录建立并进行完全备份之后，星期一到星期五每天通过Windows Server Backup进行一次增量备份，每周星期6进行完全备份。
3、项目实施完成之后，当每次添加一台域控制器的时候，需要进行一次完全备份。无论是否到备份周期
实施：
1. netdom query fsmo来查看5种操作主机角色的位置；
2. 存活主机进行FSMO5角色的抢夺：域命名主机、架构主机、PDC、RID池管理器、结构主机；
3. 删除遗留在活动目录中原PDC记录，防止由于内容的混乱，出现活动目录复制的问题
4. 停止相应服务，并修改BDC地址，之后重新启动服务
5. 重新部署域控制器，等待数据的全部复制完成，通过AD间自动复制还原了AD数据库

或者使用全备份镜像通过系统安装光盘进行恢复。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WSUS如何进行更新部署的审批？</p>
<pre class="line-numbers language-none"><code class="language-none">在 WSUS 管理控制台上，单击“更新”。将为“所有更新”、“关键更新”、“安全更新”和“WSUS 更新”显示更新状态摘要。
在“所有更新”部分，单击“计算机所需的更新”。
在更新列表上，选择要为您的测试计算机组上的安装进行审批的更新。
右键单击选定的更新，然后单击“审批”。
在“审批更新”对话框中，选择您的测试组，然后单击向下键。
单击“已审批进行安装”，然后单击“确定”。
将会看到“审批进度”窗口，它显示影响更新审批的各种任务的进度。完成审批之后，请单击“关闭”。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>使用MDT部署Windows的流程是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">部署 Windows RE。 支持将自定义的 Windows 恢复环境 (Windows RE) 作为任务序列的一部分进行部署。
部署到 VHD。 提供现成的用于将 Windows 部署到虚拟硬盘 (VHD) 文件中的任务序列模板。
改进的部署向导。 提供其他进度信息，并为 Lite Touch 部署向导提供更干净的 UI。
应用 GPO 包。 允许部署 Microsoft 安全合规性管理器 (SCM) 创建的本地组策略对象。
分区例程。 提供改进的分区例程，确保无论当前硬盘驱动器结构如何，部署都将正常运行。
USMT 脱机用户状态迁移。 支持在部署的 Windows PE 阶段内，脱机运行用户状态迁移工具 (USMT) 捕获。
安装或卸载 Windows 角色或功能。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何对域主机进行软件推送和卸载？</p>
<pre class="line-numbers language-none"><code class="language-none">1、使用组策略进行推送：Computer Policy为例，选择到Computer Configuration&#x2F;Policies&#x2F;Software Settings&#x2F;， 右击Software installation， New &gt; Package…
2、使用scom进行管理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>如何进行用户目录的重定向？</p>
<pre class="line-numbers language-none"><code class="language-none">编辑组策略，定位到用户策略--策略--windows设置--文件重定向--桌面，属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看域组策略的结果？</p>
<pre class="line-numbers language-none"><code class="language-none">rsop.msc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Windows的SID具体是指什么？</p>
<pre class="line-numbers language-none"><code class="language-none">SID安全标识符（Security Identifiers），是标识用户、组和计算机帐户的唯一的号码。
对象的SID ＝域的SID 十RID
用户通过验证后，登陆进程会给用户一个访问令牌，该令牌相当于用户访问系统资源的票证，当用户试图访问系统资源时，将访问令牌提供给 Windows NT，然后 Windows NT 检查用户试图访问对象上的访问控制列表。如果用户被允许访问该对象，Windows NT将会分配给用户适当的访问权限。
    访问令牌是用户在通过验证的时候有登陆进程所提供的，所以改变用户的权限需要注销后重新登陆，重新获取访问令牌。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确认域用户登录失败的具体IP、用户名和登录时间？</p>
<pre class="line-numbers language-none"><code class="language-none">可以通过开启审核日志的方法来查看域用户登陆、注销的具体信息
在PDC服务器上打开&quot;本地安全策略&quot;，确保审核登录事件和审核账户管理策略开启
检查 账户解锁事件ID4767，用户凭据验证，事件ID4776<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="Linux相关"><a href="#Linux相关" class="headerlink" title="Linux相关"></a>Linux相关</h3><ol>
<li><p>如何查看存储设备的UUID</p>
<pre class="line-numbers language-none"><code class="language-none">使用blkid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何将现有进程切换到后台，并切换回前台</p>
<pre class="line-numbers language-none"><code class="language-none"># 按下ctrl+Z
再输入bg 将进程切换到后台
输入fg 将进程切换到前台<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>CPU的使用率和负载有何区别</p>
<pre class="line-numbers language-none"><code class="language-none">CPU利用率：显示的是程序在运行期间实时占用的CPU百分比
CPU负载：显示的是一段时间内正在使用和等待使用CPU的平均任务数

CPU利用率高，并不意味着负载就一定大。举例来说：如果我有一个程序它需要一直使用CPU的运算功能，那么此时CPU的使用率可能达到100%，但是CPU的工作负载则是趋近于“1”，因为CPU仅负责一个工作嘛！如果同时执行这样的程序两个呢？CPU的使用率还是100%，但是工作负载则变成2了。所以也就是说，当CPU的工作负载越大，代表CPU必须要在不同的工作之间进行频繁的工作切换。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>有没有CPU使用率很低而负载很高的情况，如何处理？</p>
<pre class="line-numbers language-none"><code class="language-none">磁盘读写请求过多就会导致大量I&#x2F;O等待
数据库死锁
网络存储故障<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>物理内存和虚拟内存的区别</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>新增一块磁盘给Home分区扩容，如何进行?(静态磁盘和动态磁盘的处理方式有何不同)</p>
<pre class="line-numbers language-none"><code class="language-none"># LVM分区
使用pvcreate建立PV；
将PV加入VG；
扩展PV，并格式化
# 静态分区
使用fdisk建立Linux分区
格式化分区，并挂载临时分区；
使用dd if&#x3D;&#x2F;home of&#x3D;&#x2F;mnt 复制文件；
修改fstab文件，重新挂载home分区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>简单说说ARM服务器和x86服务器的不同</p>
<pre class="line-numbers language-none"><code class="language-none">ARM架构使用精简指令集，效率高、功耗低，需要专用数据接口
x86架构性能高、扩展能力强，效率低、软件开发方便<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>你知道Linux下的性能监控工具有那些，简单说一个工具是如何分析当前主机状况的</p>
<pre class="line-numbers language-none"><code class="language-none">top、iotop、htop、iostat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看当前主机开启的TCP端口</p>
<pre class="line-numbers language-none"><code class="language-none">netstat -tlnp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看当前主机的TCP连接</p>
<pre class="line-numbers language-none"><code class="language-none">ss -4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何不重启网络服务变更主机IP地址</p>
<pre class="line-numbers language-none"><code class="language-none">nmcli c reload eth0
nmcli d reapply eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>简述你最近实施的一个技术项目的内容和流程</p>
<pre class="line-numbers language-none"><code class="language-none">    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3><ol>
<li><p>IPSEC VPN和SSL VPN的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">1、IPSEC VPN使用ipsec协议，基于网络层；
2、SSL VPN使用ssl协议，使用HTTP协议，基于应用层
3、IPSECVPN容易管理，价格贵
4、SSL VPN只适用于HTTP流量
5、IPSECVPN用于网对网的环境，SSLVPN用于用户对网的环境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>OSI的七层有那些？HTTP协议在哪层？IP协议在那层？</p>
<pre class="line-numbers language-none"><code class="language-none">物理层:电信号
数据链路层:Mac地址
网络层:IP地址、ARP协议
传输层:流控和校验
会话层:建立、管理、终止会话
表示层:文件格式PNG、ZIP
应用层:HTTP\DNS\SNMP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>TCP如何处理拥塞？</p>
<pre class="line-numbers language-none"><code class="language-none">1、发送方维持拥塞窗口
2、使用慢开始算法，由小到大逐步发送
3、改用拥塞避免算法
4、快速重传；
5、快速恢复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>TCP的滑动窗口是多少？如何计算？</p>
<pre class="line-numbers language-none"><code class="language-none">TCP包头中只保留了16bit用来标识窗口大小，允许的最大缓存大小不超过64KB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>华为5700交换机如何创建VLAN</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="监控相关"><a href="#监控相关" class="headerlink" title="监控相关"></a>监控相关</h3><ol>
<li><p>Zabbix是如何实施的？</p>
<pre class="line-numbers language-none"><code class="language-none">部署数据库
部署zabbix server
部署zabbix agent
配置监控主机和监控项
根据部署规模进行数据库的分库分表、zabbix的高可用以及部署zabbix proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>zabbix如何监控进程？</p>
<pre class="line-numbers language-none"><code class="language-none">使用模板，创建对进程名称或者进程数量进行监控<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>zabbix和Prometheus的区别？</p>
<pre class="line-numbers language-none"><code class="language-none">Prometheus的基本原理是通过HTTP周期性抓取被监控组件的状态，使用go语言，多用于容器和K8S
zabbix是使用cs模式，通过agent采集数据发送到server，使用C语言，传统监控场景丰富，技术稳定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="虚拟化相关"><a href="#虚拟化相关" class="headerlink" title="虚拟化相关"></a>虚拟化相关</h3><ol>
<li><p>虚拟化磁盘的类型有那些？差异什么？</p>
<pre class="line-numbers language-none"><code class="language-none">精简置备、厚置备置零、厚置备延迟置零<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>虚机磁盘的克隆有哪几种形式，分别是什么?</p>
<pre class="line-numbers language-none"><code class="language-none">完全克隆、差异克隆、即时克隆<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>vsan中SSD与HDD的比例是多少</p>
<pre class="line-numbers language-none"><code class="language-none">存储量的10%作为缓存
使用单独的固态磁盘作为缓存<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>虚拟化主机的群集部署实践（FusionCompute和VMware的对比）</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>常见的VDI产品有那些</p>
<pre class="line-numbers language-none"><code class="language-none">华为的FusionAccess、微软虚拟桌面、VMware Horizon、Citrix <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="ELK相关"><a href="#ELK相关" class="headerlink" title="ELK相关"></a>ELK相关</h3><ol>
<li><p>ELK的底层文件是如何存储的</p>
<pre class="line-numbers language-none"><code class="language-none">面向文档
使用JSON格式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>常用ELK日志系统是由什么构成的？</p>
<pre class="line-numbers language-none"><code class="language-none">ElasticSearch Kibana Logstat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>日志文件通过什么管道传输到Elasticsearch；</p>
<pre class="line-numbers language-none"><code class="language-none">filebeat、logstash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Windows日志如何传输到Elasticsearch；</p>
<pre class="line-numbers language-none"><code class="language-none">windows版本的filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Elasticsearch通过什么来进行查询</p>
<pre class="line-numbers language-none"><code class="language-none">Restfu API<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="硬件相关"><a href="#硬件相关" class="headerlink" title="硬件相关"></a>硬件相关</h3><ol>
<li><p>服务器如何部署系统</p>
<pre class="line-numbers language-none"><code class="language-none">华为使用BMC部署
戴尔使用iDRAC部署
惠普使用ilo部署
开启CPU的虚拟化、调整secure boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>你用过那些厂家的服务器的主机管理系统？如何接收和处理服务器告警信息？</p>
<pre class="line-numbers language-none"><code class="language-none">华为的esight
戴尔的OME
对接Nagios、Zabbix、SCOM进行告警发布<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>常用的Raid类型有那些，它们的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">RAID 0：组合成JBOD磁盘，不提供冗余，低成本、高性能，最少一块盘
RAID 1: 镜像磁盘 磁盘成对出现，数据完全镜像，最少两块盘
RAID 5: 同时存储数据和校验数据，数据库和校验信息分别存储，最少三块盘
RAID 6：两副本校验信息的Raid5，最少四块盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>常见磁盘的IOPS值是多少？</p>
<pre class="line-numbers language-none"><code class="language-none">FC&#x2F;SAS 15K磁盘：180
SATA 10k磁盘：290
固态磁盘：2500<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Raid磁盘组的IOPS如何计算</p>
<pre class="line-numbers language-none"><code class="language-none">物理磁盘总的IOPS &#x3D; 物理磁盘的IOPS × 磁盘数目
可用的IOPS &#x3D; （物理磁盘总的IOPS × 写百分比 ÷ RAID写惩罚） + （物理磁盘总的IOPS × 读百分比）

Raid 0的写惩罚为1
Raid 1的写惩罚为2
Raid 5的写惩罚为4
Raid 6的写惩罚为6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确定是IO引起的性能问题</p>
<pre class="line-numbers language-none"><code class="language-none">1、主机侧：应用-&gt;内存缓存-&gt;块设备层→HBA卡-&gt;驱动
2、网络侧：交换网络
3、存储侧：存储前端-&gt;存储cache-&gt;RAID组-&gt;磁盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确定主机CPU和虚机CPU的部署比例</p>
<pre class="line-numbers language-none"><code class="language-none">系统可用的vCPU总数(逻辑处理器) &#x3D; Socket数（CPU个数）x Core数（内核）x Thread数（超线程）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="OpenStack相关"><a href="#OpenStack相关" class="headerlink" title="OpenStack相关"></a>OpenStack相关</h3><ol>
<li><p>OpenStack的核心组件有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">Nova – 用于在计算级别管理虚拟机，并在计算或管理程序级别执行其他计算任务。
Neutron – 为虚拟机、计算和控制节点提供网络功能。
Keystone – 为所有云用户和 OpenStack 云服务提供身份认证服务。换句话说，我们可以说 Keystone 是一个提供给云用户和云服务访问权限的方法。
Horizon – 用于提供图形用户界面。使用图形化管理界面可以很轻松地完成各种日常操作任务。
Cinder – 用于提供块存储功能。通常来说 OpenStack 的 Cinder 中集成了 Chef 和 ScaleIO 来共同为计算和控制节点提供块存储服务。
Swift – 用于提供对象存储功能。通常来说，Glance 管理的镜像是存储在对象存储空间的。像 ScaleIO 这样的外部存储也可以提供对象存储，可以很容易的集成 Glance 服务。
Glance – 用于提供镜像服务。使用 Glance 的管理平台来上传和下载云镜像。
Heat – 用于提供编排服务或功能。使用 Heat 管理平台可以轻松地将虚拟机作为堆栈，并且根据需要可以将虚拟机扩展或收缩。
Ceilometer – 用于提供计量与监控功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何在OpenStack中创建虚机；</p>
<pre class="line-numbers language-none"><code class="language-none">openstack server create --flavor &#123;flavor-name&#125; --image &#123;Image-Name-Or-Image-ID&#125; --nic net-id&#x3D;&#123;Network-ID&#125; --security-group &#123;Security_Group_ID&#125; –key-name &#123;Keypair-Name&#125; &lt;VM_Name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>你用过那些OpenStack部署方式，他们各有什么长短？</p>
<pre class="line-numbers language-none"><code class="language-none">DevStack
TripleO
PackStack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="应用服务相关"><a href="#应用服务相关" class="headerlink" title="应用服务相关"></a>应用服务相关</h3><ol>
<li><p>Nginx访问出错，如何进行排查？</p>
<pre class="line-numbers language-none"><code class="language-none"># 查看Nginx日志
nginx -t 
&#x2F;var&#x2F;log&#x2F;nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Redis的作用</p>
<pre class="line-numbers language-none"><code class="language-none">消息队列
主要局限在较小数据量的数据库的高性能操作和运算上
1. 提高了DB的可扩展性，只需要将新加的数据放到新加的服务器上就可以了
2. 提高了DB的可用性，只影响到需要访问的shard服务器上的数据的用户
3. 提高了DB的可维护性，对系统的升级和配置可以按shard一个个来搞，对服务产生的影响较小
4. 小的数据库存的查询压力小，查询更快，性能更好<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>memcache的作用；</p>
<pre class="line-numbers language-none"><code class="language-none">memcache一般的使用目的是，通过缓存数据库查询的结果，减少数据库访问次数，以提高动态Web应用的速度、提高可扩展性。 它是一个基于内存的“键值对”存储，用于存储数据库调用、API调用或页面引用结果的直接数据。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>CDN的原理，简单描述动态页面是如何触发回源的？</p>
<pre class="line-numbers language-none"><code class="language-none">CDN 的核心点有两个：一个是缓存，一个是回源
静态资源变动的检查：基于文件内容进行hash
动态资源直接回源拉取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>MySQL的群集有哪几种形式，是如何实现的？</p>
<pre class="line-numbers language-none"><code class="language-none">MySQL Replication 重放binlog实现主库数据的异步复制，一主多从，多点备份
Galera Cluster 三节点，写操作同步复制，互为从节点
MySQL Cluster 多主多从，高可用、负载均衡，维护复杂<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>MySQL如何进行二进制部署？</p>
<pre class="line-numbers language-none"><code class="language-none">下载二进制安装包
创建数据存储目录
创建用户和用户组
初始化数据
创建my.cnf文件
复制启动文件
加入系统变量
启动数据库服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何设计一个高并发高可用的公有云上电商网站？</p>
<pre class="line-numbers language-none"><code class="language-none">SLB高可用——ECS高可用(多节点、弹性收缩)—OSS高可用—RDS高可用—异地部署（RDS-DTS数据传输）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>秒杀系统会使用到那些服务组件？</p>
<pre class="line-numbers language-none"><code class="language-none">CDN-动态资源—Redis读写分离—Redis主从—RocketMQ异步下单<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>在云部署环境中，存储有那些类型？区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">块存储
文件存储
对象存储<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何从github中克隆项目，完成修改之后如何进行项目合并？</p>
<pre class="line-numbers language-none"><code class="language-none">git clone ****
edit
git -a
git commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h3><ol>
<li><p>如何获取当前网络中的主机漏洞情况以及如何进行漏洞的处理；你用过那些漏洞扫描工具？</p>
<pre class="line-numbers language-none"><code class="language-none">使用Nessus、openVas、Wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>常见加密算法有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">常见的 对称加密 算法主要有 DES、3DES、AES
常见的非对称算法 主要有 RSA、DSA
散列算法 主要有 SHA-1、MD5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>常见网络攻击类型有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">DDOS攻击
cc半连接攻击
SQL注入
xss跨站脚本攻击<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>SQLMap的作用什么？</p>
<pre class="line-numbers language-none"><code class="language-none">自动化的SQL注入和数据库安全检查工具<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>WAF应当部署在哪里？</p>
<pre class="line-numbers language-none"><code class="language-none">WAF可以过滤HTTP&#x2F;HTTPS协议流量，防护Web攻击。
WAF可以对Web应用进行安全审计
WAF可以防止CC攻击

透明代理串接模式
反向代理
旁路监控模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>MD5和SHA256SUM的作用是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">对文件进行校验，避免文件篡改或者检验文件的状态<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看Linux用户的登录日志？</p>
<pre class="line-numbers language-none"><code class="language-none">cat &#x2F;var&#x2F;log&#x2F;wtmp
cat &#x2F;var&#x2F;log&#x2F;secure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>如何查看Windows用户的登录日志？</p>
<pre class="line-numbers language-none"><code class="language-none">控制面板--&gt;系统和安全--&gt;查看事件日志--&gt;事件查看器--&gt;windows日志--&gt;安全<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何防止勒索软件事件的发生？</p>
<pre class="line-numbers language-none"><code class="language-none">卸载有风险组件，比如smb v1
执行权限管理，网络访问权限和文件访问权限
安装终端安全管理工具<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>堡垒机的作用是什么?</p>
<pre class="line-numbers language-none"><code class="language-none">身份验证、账号管理、授权控制、安全审计<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="容器相关"><a href="#容器相关" class="headerlink" title="容器相关"></a>容器相关</h3><ol>
<li><p>虚拟机和容器的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">1. 虚机是对底层计算机的模拟，容器是操作系统的模拟；
2. 虚机的隔离性好，管理工具齐全
3. 容器轻量级，性能高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Docker如何部署一个Wordpress镜像</p>
<pre class="line-numbers language-none"><code class="language-none">docker run -name&#x3D;wordpress -d wordpress -p 80:80 -v &#x2F;home&#x2F;wordpress:&#x2F;var&#x2F;www&#x2F;html -d --restart&#x3D;always
docker run --name&#x3D;mariadb -p 3306:3306 -e MYSQL_ROOT_PASSWORD&#x3D;输入数据库root用户的密码 -v &#x2F;etc&#x2F;mariadb&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -d --restart&#x3D;always mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>Docker的磁盘是如何指定和挂载的</p>
<pre class="line-numbers language-none"><code class="language-none">docker提供了三种不同的方式将数据挂载到容器中，volume、bind mount（-v映射）、tmpfs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>K8S的组件有那些</p>
<pre class="line-numbers language-none"><code class="language-none">master（api、schedular、contorller）
node(kubelet、kubeproxy、container_runtime）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>ETCD是做什么的？</p>
<pre class="line-numbers language-none"><code class="language-none">etcd是Kubernetes提供默认的存储系统，保存所有集群数据，使用时需要为etcd数据提供备份计划。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="IT服务相关"><a href="#IT服务相关" class="headerlink" title="IT服务相关"></a>IT服务相关</h3><ol>
<li><p>ITIL中问题和事件的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">与事件管理的根本区别就在于，事件管理目的在于恢复企业生产，而问题管理在于找出IT故障的根本原因，制定解决方案，防止类似故障的再次发生。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>ITIL的流程有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">包括十个核心流程和一个职能，分为服务提供和服务支持两组。
服务提供：
    服务级别管理
    IT财务管理
    IT服务持续性管理
    可用性管理
    能力管理

服务支持：
    事故管理
    问题管理
    配置管理
    变更管理
    发布管理
    
职能：
    服务台<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>常用ITSM工具有那些？你在工作中用到了那些？</p>
<pre class="line-numbers language-none"><code class="language-none">itop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>项目管理包含那些内容？</p>
<pre class="line-numbers language-none"><code class="language-none">项目管理总体有五个过程：启动过程、计划过程、实施过程、执行过程、收尾过程等，包含了九大领域的知识：范围管理、时间管理、成本管理、质量管理、风险管理、人力资源管理、沟通管理、采购管理及系统管理的方法与工具<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>简述一个你做过的项目经历（不需要描述技术细节）</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="开放题目"><a href="#开放题目" class="headerlink" title="开放题目"></a>开放题目</h3><ol>
<li><p>谈谈你处理过的复杂故障事件，并讲述你在其中的作用；</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>使用英语讲述一个你经常处理的IT事件</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>谈谈你对职业规划的理解和你的愿景？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何设计一个两地三中心的容灾环境？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>你对我们公司和这个岗位有什么要问的？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>interview</tag>
        <tag>面试题</tag>
        <tag>Sysadmin</tag>
      </tags>
  </entry>
  <entry>
    <title>制作CentOS 8的黄金模板</title>
    <url>/2021/05/08/centos8-make-template/</url>
    <content><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ol>
<li>在虚拟化环境中部署CentOS 8，包含Hyper-V、Esxi、Virtualbox等；</li>
<li>使用mini组件部署，大约会安装378个软件包；</li>
<li>安装过程中添加简体中文支持、设定时区为上海、使用硬盘自动分区、关闭kdump；</li>
<li>设定root密码(后期关闭root的ssh访问权限)，并添加远程ssh访问管理员账户；</li>
<li>设定网络开机自动启动；</li>
</ol>
<hr>
<h3 id="系统调整"><a href="#系统调整" class="headerlink" title="系统调整"></a>系统调整</h3><ol>
<li><p>安装工具</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装更新</span>
yum makecache
yum upgrade <span class="token parameter variable">-y</span>
<span class="token comment"># 安装系统工具</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token function">curl</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">vim</span> mailx mlocate telnet net-tools bash-completion tmux
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> chrony <span class="token function">rsync</span> iotop <span class="token function">git</span> <span class="token function">screen</span> tree open-vm-tools yum-utils
updatedb <span class="token operator">&amp;&amp;</span> ldconfig
<span class="token comment"># 配置默认主机名</span>
hostnamectl set-hostname vlnx000000
<span class="token comment"># 配置模板机网络别名为eth0,如果是Hyper-V的话，可以忽略</span>
nmcli c m ens160 con-name eth0
<span class="token comment"># 设定模板机IP</span>
nmcli c m eth0 ipv4.method manual ipv4.addresses <span class="token number">192.168</span>.248.245/24 ipv4.dns <span class="token number">192.168</span>.248.2 ipv4.gateway <span class="token number">192.168</span>.248.2
nmcli c d eth0 <span class="token operator">&amp;&amp;</span> nmcli c u eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加IP地址配置脚本</span>
<span class="token function">touch</span> ipset.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ipset.sh
<span class="token function">vim</span> ipset.sh

<span class="token comment">#!/bin/bash</span>
<span class="token comment">#该脚本用于设置网卡的IP地址</span>

<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入设置IP地址："</span> IP
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入设置的网关："</span> GW
<span class="token comment">#read -p "请输入设置的子网掩码：" MASK</span>
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入首选DNS服务器："</span> D1
<span class="token comment">#read -p "请输入备选DNS服务器：" D2</span>
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入主机名："</span> MachineNAME

nmcli c m eth0 ipv4.method manual ipv4.address <span class="token variable">$IP</span> ipv4.gateway <span class="token variable">$GW</span> ipv4.dns <span class="token variable">$D1</span>
nmcli c d eth0
nmcli c u eth0
hostnamectl set-hostname <span class="token variable">$MachineNAME</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>系统调整</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加华为云的YUM镜像</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://repo.huaweicloud.com/repository/conf/CentOS-8-reg.repo
<span class="token comment"># 关闭SELINUX</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/vmlinuz.*/&amp; selinux=0/g'</span> /boot/grub2/grub.cfg
setenforce <span class="token number">0</span>

<span class="token comment"># SSHD服务优化，设定如下项</span>

LoginGraceTime 2m
PermitRootLogin no
StrictModes <span class="token function">yes</span>
MaxAuthTries <span class="token number">6</span>
MaxSessions <span class="token number">10</span>

PermitEmptyPasswords no
PasswordAuthentication <span class="token function">yes</span>

GSSAPIAuthentication no
GSSAPICleanupCredentials no

X11Forwarding no
UseDNS no
Compression delayed
Banner none

<span class="token comment"># 开启网络BBR模块</span>
<span class="token builtin class-name">echo</span> <span class="token string">"net.core.default_qdisc=fq"</span> <span class="token operator">>></span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">"net.ipv4.tcp_congestion_control=bbr"</span> <span class="token operator">>></span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token comment"># 调整SWAP使用策略</span>
<span class="token builtin class-name">echo</span> vm.swappiness <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">>></span> /etc/sysctl.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>监控工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装EPEL源
yum install -y epel-release

# 添加华为云源
sed -i &quot;s&#x2F;#baseurl&#x2F;baseurl&#x2F;g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo
sed -i &quot;s&#x2F;metalink&#x2F;#metalink&#x2F;g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo
sed -i &quot;s@https\?:&#x2F;&#x2F;download.example&#x2F;pub@https:&#x2F;&#x2F;repo.huaweicloud.com@g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo

yum makecache
yum upgrade -y

# 更新和安装工具
yum install -y htop iftop atop smem 

# 关闭EPEL
yum-config-manager --disable epel
yum-config-manager --disable epel-modular
yum-config-manager --disable epel-testing-modular<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>调整启动参数，取消开机画面</p>
<pre class="line-numbers language-none"><code class="language-none"># vim &#x2F;etc&#x2F;default&#x2F;grub
# 设定等待时间为3秒
GRUB_TIMEOUT&#x3D;3
GRUB_DEFAULT&#x3D;saved
GRUB_DISABLE_SUBMENU&#x3D;true
GRUB_TERMINAL_OUTPUT&#x3D;&quot;console&quot;
# 删除原有的rhgb选项，关闭开机画面，显示服务启动状态，保留quiet避免输出过多硬件自检内容
GRUB_CMDLINE_LINUX&#x3D;&quot;crashkernel&#x3D;auto rhgb quiet&quot;
GRUB_DISABLE_RECOVERY&#x3D;&quot;true&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">grub2-mkconfig -o &#x2F;boot&#x2F;grub2&#x2F;grub.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


</li>
<li><p>启动时间服务</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装时间同步服务器
yum install -y chrony

# 添加阿里云NTP服务器:w
cat &gt;&gt; &#x2F;etc&#x2F;chronyd.conf &lt;&lt;EOF
pool time.pool.aliyun.com iburst
pool cn.pool.ntp.org iburst

allow 192.168.248.0&#x2F;24
EOF

# 设置时区为亚洲&#x2F;上海
timedatectl set-timezone Asia&#x2F;Shanghai

# 重启时间服务
systemctl enable chronyd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>清理交付</p>
<pre class="line-numbers language-none"><code class="language-none"># 同步数据
sync
ldconfig

# 删除主机ID
&gt;&#x2F;etc&#x2F;machine-id

# 删除ssh公钥
rm -rf &#x2F;etc&#x2F;ssh&#x2F;*key*

# 清理yum缓存
yum clean all

#清理日志
logrotate -f &#x2F;etc&#x2F;logrotate.conf
rm -f &#x2F;var&#x2F;log&#x2F;*-???????? &#x2F;var&#x2F;log&#x2F;*.gz
rm -f &#x2F;var&#x2F;log&#x2F;dmesg.old
rm -rf &#x2F;var&#x2F;log&#x2F;anaconda*
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;audit&#x2F;audit.log
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;wtmp
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;lastlog
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;grubby

unset HISTFILE
rm -rf ~root&#x2F;.ssh&#x2F;

# 清理历史记录
history -c

# 使用外部工具关机，避免留下shutdown历史记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<h3 id="导出模板"><a href="#导出模板" class="headerlink" title="导出模板"></a>导出模板</h3><ul>
<li>导出为ova模板，或直接在控制台使用。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>VirtualMachine</tag>
        <tag>System</tag>
      </tags>
  </entry>
  <entry>
    <title>简单制作WindowsPE镜像</title>
    <url>/2021/03/29/build-image-windowspe/</url>
    <content><![CDATA[<h3 id="下载部署文件"><a href="#下载部署文件" class="headerlink" title="下载部署文件"></a>下载部署文件</h3><ol>
<li><p>下载适用于 Windows 10 版本 2004 的 Windows ADK<br><a href="https://go.microsoft.com/fwlink/?linkid=2120254">https://go.microsoft.com/fwlink/?linkid=2120254</a></p>
</li>
<li><p>下载适用于 ADK 版本 2004 的 Windows PE 加载项<br><a href="https://go.microsoft.com/fwlink/?linkid=2120253">https://go.microsoft.com/fwlink/?linkid=2120253</a></p>
</li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装完成ADK和加载项之后，使用命令行进入 :</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:<span class="token punctuation">\</span>Program Files <span class="token punctuation">(</span>x86<span class="token punctuation">)</span><span class="token punctuation">\</span>Windows Kits<span class="token punctuation">\</span><span class="token number">10</span><span class="token punctuation">\</span>Assessment and Deployment Kit<span class="token punctuation">\</span>Windows Preinstallation Environment<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">copype amd64 c:<span class="token punctuation">\</span>winpe_amd64_ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>该命令会自动创建目标文件夹</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol>
<li><p>装载原始镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Mount-Image /ImageFile:<span class="token string">"C:\WinPE_amd64_PS\media\sources<span class="token entity" title="\b">\b</span>oot.wim"</span> /Index:1 /MountDir:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加Powershell功能支持</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-WMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-WMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-NetFX.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-NetFX_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-Scripting.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-Scripting_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-PowerShell.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-PowerShell_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-StorageWMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-StorageWMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-DismCmdlets.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-DismCmdlets_en-us.cab"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>添加驱动</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /Add-Driver /driver:<span class="token string">"d"</span>:<span class="token punctuation">\</span>drivers<span class="token punctuation">\</span>" /recurse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加工具</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount<span class="token punctuation">\</span>tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>复制可执行文件比如filezilla、putty等免安装文件到tools目录。</p>
</li>
<li><p>优化</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Set-ScratchSpace:512 /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>生成镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Unmount-Image /MountDir:C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount /Commit
MakeWinPEMedia /ISO C:<span class="token punctuation">\</span>WinPE_amd64_PS d:<span class="token punctuation">\</span>winpe.iso<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>引导加载使用</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>WindowsPE</tag>
      </tags>
  </entry>
  <entry>
    <title>简单制作WindowsPE镜像</title>
    <url>/2021/03/29/windows-build-pe/</url>
    <content><![CDATA[<h3 id="下载部署文件"><a href="#下载部署文件" class="headerlink" title="下载部署文件"></a>下载部署文件</h3><ol>
<li><p>下载适用于 Windows 10 版本 2004 的 Windows ADK<br><a href="https://go.microsoft.com/fwlink/?linkid=2120254">https://go.microsoft.com/fwlink/?linkid=2120254</a></p>
</li>
<li><p>下载适用于 ADK 版本 2004 的 Windows PE 加载项<br><a href="https://go.microsoft.com/fwlink/?linkid=2120253">https://go.microsoft.com/fwlink/?linkid=2120253</a></p>
</li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装完成ADK和加载项之后，使用命令行进入 :</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:<span class="token punctuation">\</span>Program Files <span class="token punctuation">(</span>x86<span class="token punctuation">)</span><span class="token punctuation">\</span>Windows Kits<span class="token punctuation">\</span><span class="token number">10</span><span class="token punctuation">\</span>Assessment and Deployment Kit<span class="token punctuation">\</span>Windows Preinstallation Environment<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">copype amd64 c:<span class="token punctuation">\</span>winpe_amd64_ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>该命令会自动创建目标文件夹</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol>
<li><p>装载原始镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Mount-Image /ImageFile:<span class="token string">"C:\WinPE_amd64_PS\media\sources<span class="token entity" title="\b">\b</span>oot.wim"</span> /Index:1 /MountDir:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加Powershell功能支持</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-WMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-WMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-NetFX.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-NetFX_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-Scripting.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-Scripting_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-PowerShell.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-PowerShell_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-StorageWMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-StorageWMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-DismCmdlets.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-DismCmdlets_en-us.cab"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>添加驱动</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /Add-Driver /driver:<span class="token string">"d"</span>:<span class="token punctuation">\</span>drivers<span class="token punctuation">\</span>" /recurse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加工具</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount<span class="token punctuation">\</span>tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>复制可执行文件比如filezilla、putty等免安装文件到tools目录。</p>
</li>
<li><p>优化</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Set-ScratchSpace:512 /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>生成镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dism /Unmount-Image /MountDir:C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount /Commit
MakeWinPEMedia /ISO C:<span class="token punctuation">\</span>WinPE_amd64_PS d:<span class="token punctuation">\</span>winpe.iso<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>引导加载使用</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>WindowsPE</tag>
      </tags>
  </entry>
  <entry>
    <title>批量修改Windows主机本地管理员密码</title>
    <url>/2021/02/02/change-localadmin-password/</url>
    <content><![CDATA[<p>在Windows活动目录中的主机依据合规的要求，至少每年都应当按照密码规则进行一次本地管理员的密码变更。</p>
<p>以下脚本是使用有域管理员权限的域账号进行批量执行来修改主机管理员密码。</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># Windows域主机变更本地管理员密码脚本</span>
<span class="token comment"># 执行需要有本地主机管理员权限的域账号</span>
<span class="token comment"># 执行需要本地主机开启powershell远程执行权限</span>
<span class="token comment"># 引入需要变更密码的主机</span>
<span class="token variable">$VMList</span> = @<span class="token punctuation">(</span><span class="token string">'server1'</span><span class="token punctuation">,</span><span class="token string">'server2'</span><span class="token punctuation">,</span><span class="token string">'server3'</span><span class="token punctuation">,</span><span class="token string">'server4'</span><span class="token punctuation">)</span>

<span class="token comment"># 设立一个函数来执行密码变更</span>
<span class="token keyword">function</span> ChangeAdminPwd<span class="token punctuation">(</span><span class="token variable">$VMName</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token comment"># 设定本地密码规则，非随机密码，便于使用passgen配合主机名和加盐规则推导主机密码</span>
    <span class="token variable">$LocalPwd</span> = <span class="token string">'#'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cmd <span class="token operator">/</span>c <span class="token string">"PassGen.exe -g <span class="token variable">$VMName</span> billgate -l 20 -e 2"</span><span class="token punctuation">)</span> <span class="token operator">-</span>split <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span>4<span class="token punctuation">]</span>
    <span class="token comment"># 将主机名和密码值并保存到本地文件</span>
    <span class="token function">Write-Output</span> <span class="token variable">$VMName</span> <span class="token variable">$LocalPwd</span> <span class="token punctuation">|</span> <span class="token function">Out-File</span> <span class="token operator">-</span>Append <span class="token punctuation">.</span>\localpasswd<span class="token punctuation">.</span>txt
    <span class="token comment"># 使用net user Administrator 执行密码变更</span>
    <span class="token variable">$Job</span> = <span class="token punctuation">&#123;</span> net user Administrator <span class="token string">"<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">)</span></span>"</span> <span class="token punctuation">&#125;</span>
    <span class="token comment"># 使用powershell的远程执行功能进行变更</span>
    <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$VMName</span> <span class="token operator">-</span>ScriptBlock <span class="token variable">$Job</span>  <span class="token operator">-</span>ArgumentList  <span class="token variable">$LocalPwd</span>
    <span class="token comment"># 变更结果导出到本地文件，已进行确认变更结果</span>
    <span class="token function">Write-Output</span> <span class="token variable">$VMName</span> is $? <span class="token punctuation">|</span> <span class="token function">Out-File</span> <span class="token operator">-</span>Append <span class="token punctuation">.</span>\checkhost<span class="token punctuation">.</span>txt
<span class="token punctuation">&#125;</span>

<span class="token comment"># 循环执行上述函数</span>
<span class="token keyword">ForEach</span> <span class="token punctuation">(</span> <span class="token variable">$VMName</span> in <span class="token variable">$VMlist</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    ChangeAdminPwd<span class="token punctuation">(</span><span class="token variable">$VMName</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>system</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>互联网公司的技术架构</title>
    <url>/2020/12/09/tech-roadmap/</url>
    <content><![CDATA[<blockquote>
<p>借用一下尚硅谷的拓扑图，细节部分会有出入。</p>
</blockquote>
<p><img src="https://cdn.sujx.net/jgsph.png"></p>
<h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ol>
<li>开发工具：后台Java研发主要使用intellij idea，终端研发分别用android studio和xcode，前端研发主要用vscode;</li>
<li>知识库管理：用confluence搭建公司wiki平台，用于积累案例库、经验分享、产品设计文档等;</li>
<li>研发管理：利用腾讯TAPD的优秀能力，做研发进度跟踪，BUG管理等工作;</li>
<li>代码平台：利用gitlab搭建公司代码仓库，配合sonarqube做代码质量检测，在fisheye平台上做代码审查，利用jenkins制作docker镜像，通过spinnaker平滑发布到Habor容器库.</li>
</ol>
<h3 id="应用工具"><a href="#应用工具" class="headerlink" title="应用工具"></a>应用工具</h3><ol>
<li>运行环境：基于kubernetes搭建的容器云环境，利用其自动伸缩+健康监测等特性保障服务高可用。</li>
<li>存储组件：核心业务数据放在Postgresql，部分数据放MongoDB和Mysql，多媒体数据放在FastDFS分布式文件系统，大数据分析用了HDFS，监控及搜索用了ElasticSearch</li>
<li>缓存层：基于Redis构建了高效的缓存层</li>
<li>消息系统：业务消息强调实时性都存在RocketMQ中、日志类消息强调吞吐量放到了Kafka</li>
<li>监控告警：基于ELK套件构建日志告警、Prometheus + Grafana实现对K8S的监控</li>
</ol>
<h3 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h3><ol>
<li>硬件环境：戴尔R730xd、R630服务器以及FC存储；</li>
<li>异地灾备：设立主机房和辅助机房，间隔80公里以上，同时部署广州机房作为异地灾备；</li>
<li>虚拟化层：使用VMware vSphere以OpenStack私有云方案；</li>
<li>网络接入：主辅机房多个运营商接入，灾备机房通过ipsecVPN连接，使用阿里云、华为云、Azure海外节点提供国外访问，同时，用CDN加速静态资源访问；</li>
<li>负载均衡:：使用LVS+Keeplived+NGINX；</li>
<li>监控告警：硬件层使用戴尔OpenManage Essentials提供监控告警，网络层使用zabbix，主机层使用Open-falcon</li>
<li>云上环境：使用OSS、CDN提供相应分发服务，使用ECS和RDS提供前端访问加速；</li>
</ol>
<h3 id="技术类型"><a href="#技术类型" class="headerlink" title="技术类型"></a>技术类型</h3><p>1.运行环境应用软件选型</p>
<p>（1）操作系统（WEB服务器、APP服务器、接口服务器）： Nginx、LVS。</p>
<p>（2）操作系统（数据库服务器）： CentOS。</p>
<p>（3）数据库： PostgreSql、Mysql。</p>
<p>（4）安全框架： shiro。</p>
<p>（5）HTTPS： TLS 1.2。</p>
<p>2.研发环境应用软件选型</p>
<p>（1）开发语言平台： Java，Object C。</p>
<p>（2）开发工具： intellij idea，android studio，xcode，vscode。</p>
<p>（3）版本控制工具 ： gitlab，jenkins，spinnaker，sonarqube。</p>
<p>（4）开发框架： Vue。</p>
<p>（5）网页层： nginx。</p>
<p>（6）服务层： Java、kubernetes、Docker。</p>
<p>（7）数据访问层： PostgreSql、Mysql、MongoDB、FastDFS、HDFS、ElasticSearch。</p>
<p>（8）MQ: RocketMQ、Kafka。</p>
<p>（9）缓存：Redis</p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>Technology Roadmap</tag>
      </tags>
  </entry>
  <entry>
    <title>戴尔服务器iDRAC设置Tips</title>
    <url>/2020/10/19/idrac-set/</url>
    <content><![CDATA[<ol>
<li>戴尔服务器iDRAC可以使用 概览-iDRAC设置-设置-时区和NTP 来设置时区和校时；</li>
<li>戴尔服务器iDRAC可从 概览-服务器-故障排除-SupportAssist-保存收集 来收集Lifecycle日志；</li>
<li>上一条主要要选择 编辑集合数据 来开启Raid控制器日志；</li>
<li>收集日志期间，不要关闭、刷新、打开其他标签等，否则会中断日志收集；</li>
<li>戴尔服务器R630、R730xd需要先将Lifecycle升级到2.41.40版本，然后再升级到2.75.75版本。升级完成之后就可以直接升级BIOS、NIC、SAS等固件了。否则会上传失败；</li>
<li>命令行设置戴尔服务器时间和时区</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Set NTP settings on a Dell server with iDRAC7</span>
<span class="token comment"># Set the DNS first to ensure the iDRAC can resolve the NTP host names:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.ipv4static.dns1 <span class="token number">8.8</span>.8.8
<span class="token comment"># Set the NTP server names:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">0</span>.asia.pool.ntp.org
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">1</span>.asia.pool.ntp.org
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">2</span>.asia.pool.ntp.org
<span class="token comment"># In case it won’t update the time when FQDN’s are used, IP addresses can also be used:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">129.250</span>.35.250
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">180.211</span>.88.50
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">202.112</span>.29.82
<span class="token comment"># Enable NTP and set max hops:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPEnable Enabled
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPMaxDist <span class="token number">16</span>
<span class="token comment"># Set the timezone:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.time.timezone Japan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Hardware</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
      </tags>
  </entry>
  <entry>
    <title>戴尔服务器iDRAC设置Tips</title>
    <url>/2020/10/19/set_idrac/</url>
    <content><![CDATA[<ol>
<li>戴尔服务器iDRAC可以使用 概览-iDRAC设置-设置-时区和NTP 来设置时区和校时；</li>
<li>戴尔服务器iDRAC可从 概览-服务器-故障排除-SupportAssist-保存收集 来收集Lifecycle日志；</li>
<li>上一条主要要选择 编辑集合数据 来开启Raid控制器日志；</li>
<li>收集日志期间，不要关闭、刷新、打开其他标签等，否则会中断日志收集；</li>
<li>戴尔服务器R630、R730xd需要先将Lifecycle升级到2.41.40版本，然后再升级到2.75.75版本。升级完成之后就可以直接升级BIOS、NIC、SAS等固件了。否则会上传失败；</li>
<li>命令行设置戴尔服务器时间和时区</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Set NTP settings on a Dell server with iDRAC7</span>
<span class="token comment"># Set the DNS first to ensure the iDRAC can resolve the NTP host names:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.ipv4static.dns1 <span class="token number">8.8</span>.8.8
<span class="token comment"># Set the NTP server names:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">0</span>.asia.pool.ntp.org
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">1</span>.asia.pool.ntp.org
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">2</span>.asia.pool.ntp.org
<span class="token comment"># In case it won’t update the time when FQDN’s are used, IP addresses can also be used:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">129.250</span>.35.250
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">180.211</span>.88.50
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">202.112</span>.29.82
<span class="token comment"># Enable NTP and set max hops:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPEnable Enabled
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPMaxDist <span class="token number">16</span>
<span class="token comment"># Set the timezone:</span>
racadm <span class="token parameter variable">-r</span> <span class="token number">10.1</span>.1.100 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> calvin <span class="token builtin class-name">set</span> idrac.time.timezone Japan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Tips</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Windows Update一直为check状态</title>
    <url>/2020/09/30/windows_wsus_check_stat/</url>
    <content><![CDATA[<p>新部署的Windows Server 2012R2服务器在设置了WSUS服务之后，无法完成系统更新，始终处于check update的状态。检查Windows目录下的update log中，有”‘FATAL: GetClientUpdateUrl failed, err &#x3D; 0x8024D009’ on all clients”的描述。根据0x8024D009这个关键字，找到了解决的方法：</p>
<ol>
<li>重启Windows Update服务(建议)或者重启主机；</li>
<li>登录<a href="https://www.catalog.update.microsoft.com/Home.aspx" title="Windows补丁站点">Windows补丁站点</a>；</li>
<li>先安装补丁:<a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4566425" title="KB4566425">KB4566425</a></li>
<li>然后安装补丁:<a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577066" title="KB4577066">KB4577066</a></li>
<li>通过控制面板，“check for updates”，即可连线打补丁了。</li>
</ol>
<p>以上的理论依据如下： 1. <a href="https://support.microsoft.com/zh-cn/help/4535697/servicing-stack-updates-ssu-frequently-ask-questions" title="什么是服务堆栈更新(SSU)">什么是服务堆栈更新(SSU)</a> 2. <a href="https://techcommunity.microsoft.com/t5/windows-it-pro-blog/changes-to-improve-security-for-windows-devices-scanning-wsus/ba-p/1645547" title="WSUS的安全改进">WSUS的安全改进</a> Windows 8.1 同理。</p>
]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>WSUS</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows修改默认路由</title>
    <url>/2020/09/23/windows_defualt_route/</url>
    <content><![CDATA[<p>在实际运维中，遇到了一件XX的事情，就是改网关。其实吧，网关嘛，改一下没啥啊，so easy。但，项目要求网关一定是“default”，而不是跳数1。 简单来说，就是如下： 1. default</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254  Default
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>正常修改过的路由</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254       <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>原因是，Windows只有默认第一个网卡配置的第一个网关才会是default，其他都会从1开始顺次增加，即便gateway的值已经变更，路由表里面没有了先前的网关地址。 这样的情况在使用环境中没有问题，但就是要让新建的网关作为default的话，需要以下操作： 1. “route -f”清空路由表，重启之后重设网关地址&lt;—此项非必须，选做； 2. 打开注册表，定位到HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\interfaces\ 然后搜索新建网关值（正常是第一个项）； 3. 修改“DefaultGatewayMetric”值为0； 4. 重启服务器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254  Default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Router</tag>
      </tags>
  </entry>
  <entry>
    <title>OCSinventory-NG部署</title>
    <url>/2020/09/14/deploy_ocsinventory/</url>
    <content><![CDATA[<p><a href="https://ocsinventory-ng.org/" title="OCSinventory-NG">OCSinventory-NG</a>是一个开源、免费的IT资产管理软件，它支持Windows、Linux、Android、AIX等多种类型资产的信息收集和汇总。 <img src="https://cdn.sujx.net/FireShot%20Capture%20039%20-%20OCS%20Inventory%20Professionnel%20-%20ocsinventory-ng.org.png" alt="page" title="page"></p>
<h3 id="安装PHP7和MariaDB"><a href="#安装PHP7和MariaDB" class="headerlink" title="安装PHP7和MariaDB"></a>安装PHP7和MariaDB</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/remi-release-7.rpm
yum update <span class="token parameter variable">-y</span>

<span class="token comment">#安装组件</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> yum-utils <span class="token function">git</span>
yum-config-manager <span class="token parameter variable">--enable</span> remi-php74
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> php php-cli php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json php-soap php-ldap
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> graphviz
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> perl-XML-Simple perl-Compress-Zlib perl-DBI perl-DBD-MySQL perl-Net-IP perl-SOAP-Lite perl-Archive-Zip perl-Mojolicious perl-Plack perl-XML-Entities perl-Switch
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd

<span class="token comment">#启动服务</span>
systemctl <span class="token builtin class-name">enable</span> php74-php-fpm.service <span class="token parameter variable">--now</span>
systemctl <span class="token builtin class-name">enable</span> httpd.service <span class="token parameter variable">--now</span>

<span class="token comment">#设置防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>http,https<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment">#配置数据库安装源</span>
<span class="token function">cat</span> <span class="token operator">></span>/etc/yum.repos.d/mariadb.repo <span class="token operator">&lt;</span>EOF
<span class="token comment"># MariaDB 10.5 CentOS repository list - created 2020-08-24 10:19 UTC</span>
<span class="token comment"># http://downloads.mariadb.org/mariadb/repositories/</span>
<span class="token punctuation">[</span>mariadb<span class="token punctuation">]</span>
name <span class="token operator">=</span> MariaDB
baseurl <span class="token operator">=</span> https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/10.5/centos7-amd64
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
EOF

<span class="token comment">#安装数据库</span>
yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mariadb-server.x86_64 mariadb
systemctl <span class="token builtin class-name">enable</span> mariadb <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Httpd支持PHP"><a href="#Httpd支持PHP" class="headerlink" title="Httpd支持PHP"></a>Httpd支持PHP</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/httpd/conf.d/php.conf</span>

<span class="token operator">&lt;</span>FilesMatch <span class="token punctuation">\</span>.php$<span class="token operator">></span>
<span class="token comment">#    SetHandler application/x-httpd-php</span>
    SetHandler <span class="token string">"proxy:fcgi://127.0.0.1:9000"</span>

<span class="token operator">&lt;</span>/FilesMatch<span class="token operator">></span> 

<span class="token comment">#此处略去修改post_max_filesize、upload_max_filesize和timezone</span>

<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart httpd</span>
<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart php-fpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database ocsweb character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on ocsweb.* to ocs@<span class="token string">'localhost'</span> identified by <span class="token string">'ocs'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="部署OCSinventoryServer"><a href="#部署OCSinventoryServer" class="headerlink" title="部署OCSinventoryServer"></a>部署OCSinventoryServer</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/</span>
<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># git clone https://github.com/OCSInventory-NG/OCSInventory-Server.git</span>
<span class="token punctuation">[</span>root@ocs opt<span class="token punctuation">]</span><span class="token comment"># git clone https://github.com/OCSInventory-NG/OCSInventory-ocsreports.git ocsreports</span>
<span class="token punctuation">[</span>root@ocs opt<span class="token punctuation">]</span><span class="token comment"># cd OCSInventory-Server/</span>
<span class="token punctuation">[</span>root@ocs OCSInventory-Server<span class="token punctuation">]</span><span class="token comment"># sh setup.sh </span>

+----------------------------------------------------------+
                                                          
  Welcome to OCS Inventory NG Management server setup <span class="token operator">!</span>   
                                                          
+----------------------------------------------------------+

Trying to determine <span class="token function">which</span> OS or Linux distribution you use
+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache web server binaries <span class="token operator">!</span>             
+----------------------------------------------------------+

CAUTION: If upgrading Communication server from OCS Inventory NG <span class="token number">1.0</span> RC2 and
previous, please remove any Apache configuration <span class="token keyword">for</span> Communication Server<span class="token operator">!</span>

Do you wish to <span class="token builtin class-name">continue</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?
Assuming Communication server <span class="token number">1.0</span> RC2 or previous is not installed
on this computer.

Starting OCS Inventory NG Management server setup from folder /opt/OCSInventory-Server
Storing log <span class="token keyword">in</span> <span class="token function">file</span> /opt/OCSInventory-Server/ocs_server_setup.log

+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> database server properties<span class="token punctuation">..</span>.              
+----------------------------------------------------------+

Your MySQL client seems to be part of MySQL version <span class="token number">10.5</span>.
Your computer seems to be running MySQL <span class="token number">4.1</span> or higher, good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

Which <span class="token function">host</span> is running database server <span class="token punctuation">[</span>localhost<span class="token punctuation">]</span> ?
OK, database server is running on <span class="token function">host</span> localhost <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

On <span class="token function">which</span> port is running database server <span class="token punctuation">[</span><span class="token number">3306</span><span class="token punctuation">]</span> ?
OK, database server is running on port <span class="token number">3306</span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache web server daemon<span class="token punctuation">..</span>.              
+----------------------------------------------------------+

Where is Apache daemon binary <span class="token punctuation">[</span>/usr/sbin/httpd<span class="token punctuation">]</span> ?
OK, using Apache daemon /usr/sbin/httpd <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache main configuration file<span class="token punctuation">..</span>.          
+----------------------------------------------------------+

ocsinventory-server: Bad setting. <span class="token variable"><span class="token variable">`</span>IPDISCOVER_LINK_TAG_NETWORK<span class="token variable">`</span></span> is not set. Default: <span class="token variable"><span class="token variable">`</span><span class="token number">0</span><span class="token variable">`</span></span>
ocsinventory-server: Can<span class="token string">'t load SOAP::Transport::HTTP* - Web service will be unavailable
AH00558: httpd: Could not reliably determine the server'</span>s fully qualified domain name, using fe80::21b:fe6b:acba:a137. Set the <span class="token string">'ServerName'</span> directive globally to suppress this message
ocsinventory-server: Bad setting. <span class="token variable"><span class="token variable">`</span>IPDISCOVER_LINK_TAG_NETWORK<span class="token variable">`</span></span> is not set. Default: <span class="token variable"><span class="token variable">`</span><span class="token number">0</span><span class="token variable">`</span></span>
ocsinventory-server: Can<span class="token string">'t load SOAP::Transport::HTTP* - Web service will be unavailable
AH00558: httpd: Could not reliably determine the server'</span>s fully qualified domain name, using fe80::21b:fe6b:acba:a137. Set the <span class="token string">'ServerName'</span> directive globally to suppress this message
Where is Apache main configuration <span class="token function">file</span> <span class="token punctuation">[</span>/etc/httpd/conf/httpd.conf<span class="token punctuation">]</span> ?
OK, using Apache main configuration <span class="token function">file</span> /etc/httpd/conf/httpd.conf <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache user account<span class="token punctuation">..</span>.                    
+----------------------------------------------------------+

Which user account is running Apache web server <span class="token punctuation">[</span>apache<span class="token punctuation">]</span> ?
OK, Apache is running under user account apache <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache group<span class="token punctuation">..</span>.                          
+----------------------------------------------------------+

Which user group is running Apache web server <span class="token punctuation">[</span>apache<span class="token punctuation">]</span> ?
OK, Apache is running under <span class="token function">users</span> group apache <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache Include configuration directory<span class="token punctuation">..</span>.   
+----------------------------------------------------------+

Setup found Apache Include configuration directory <span class="token keyword">in</span>
/etc/httpd/conf.d.
Setup will put OCS Inventory NG Apache configuration <span class="token keyword">in</span> this directory.
Where is Apache Include configuration directory <span class="token punctuation">[</span>/etc/httpd/conf.d<span class="token punctuation">]</span> ?
OK, Apache Include configuration directory /etc/httpd/conf.d found <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> PERL Interpreter<span class="token punctuation">..</span>.                      
+----------------------------------------------------------+

Found PERL interpreter at <span class="token operator">&lt;</span>/usr/bin/perl<span class="token operator">></span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>
Where is PERL interpreter binary <span class="token punctuation">[</span>/usr/bin/perl<span class="token punctuation">]</span> ?
OK, using PERL interpreter /usr/bin/perl <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


Do you wish to setup Communication server on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?


+----------------------------------------------------------+
             Checking <span class="token keyword">for</span> Make utility<span class="token punctuation">..</span>.                 
+----------------------------------------------------------+

OK, Make utility found at <span class="token operator">&lt;</span>/usr/bin/make<span class="token operator">></span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------+
        Checking <span class="token keyword">for</span> Apache mod_perl version<span class="token punctuation">..</span>.           
+----------------------------------------------------------+

Checking <span class="token keyword">for</span> Apache mod_perl version <span class="token number">1</span>.99_22 or higher
Found that mod_perl version <span class="token number">1</span>.99_22 or higher is available.
OK, Apache is using mod_perl version <span class="token number">1</span>.99_22 or higher <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------+
    Checking <span class="token keyword">for</span> Communication server log directory<span class="token punctuation">..</span>.    
+----------------------------------------------------------+

Communication server can create detailed logs. This logs can be enabled
by setting integer value of LOGLEVEL to <span class="token number">1</span> <span class="token keyword">in</span> Administration console
menu Configuration.
Where to put Communication server log directory <span class="token punctuation">[</span>/var/log/ocsinventory-server<span class="token punctuation">]</span> ?
OK, Communication server will put logs into directory /var/log/ocsinventory-server <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------------------------+
    Checking <span class="token keyword">for</span> Communication server plugins configuration directory<span class="token punctuation">..</span>.    
+----------------------------------------------------------------------------+

Communication server need a directory <span class="token keyword">for</span> plugins configuration files. 
Where to put Communication server plugins configuration files <span class="token punctuation">[</span>/etc/ocsinventory-server/plugins<span class="token punctuation">]</span> ?
OK, Communication server will put plugins configuration files into directory /etc/ocsinventory-server/plugins <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+-------------------------------------------------------------------+
   Checking <span class="token keyword">for</span> Communication server plugins perl directory<span class="token punctuation">..</span>.     
+-------------------------------------------------------------------+

Communication server need a directory <span class="token keyword">for</span> plugins Perl modules files.
Where to put Communication server plugins Perl modules files <span class="token punctuation">[</span>/etc/ocsinventory-server/perl<span class="token punctuation">]</span> ?
OK, Communication server will put plugins Perl modules files into directory /etc/ocsinventory-server/perl <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> required Perl Modules<span class="token punctuation">..</span>.                 
+----------------------------------------------------------+

Checking <span class="token keyword">for</span> DBI PERL module<span class="token punctuation">..</span>.
Found that PERL module DBI is available.
Checking <span class="token keyword">for</span> Apache::DBI PERL module<span class="token punctuation">..</span>.
Found that PERL module Apache::DBI is available.
Checking <span class="token keyword">for</span> DBD::mysql PERL module<span class="token punctuation">..</span>.
Found that PERL module DBD::mysql is available.
Checking <span class="token keyword">for</span> Compress::Zlib PERL module<span class="token punctuation">..</span>.
Found that PERL module Compress::Zlib is available.
Checking <span class="token keyword">for</span> XML::Simple PERL module<span class="token punctuation">..</span>.
Found that PERL module XML::Simple is available.
Checking <span class="token keyword">for</span> Net::IP PERL module<span class="token punctuation">..</span>.
Found that PERL module Net::IP is available.
Checking <span class="token keyword">for</span> Archive::Zip Perl module<span class="token punctuation">..</span>.
Found that PERL module Archive::Zip is available.


Do you wish to setup Rest API server on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?

+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> REST API Dependencies <span class="token punctuation">..</span>.                     
+----------------------------------------------------------+

Found that PERL module Mojolicious::Lite is available.
Found that PERL module Switch is available.
Found that PERL module Plack::Handler is available.

+----------------------------------------------------------+
 Configuring REST API Server files <span class="token punctuation">..</span>.                      
+----------------------------------------------------------+

Where <span class="token keyword">do</span> you want the API code to be store <span class="token punctuation">[</span>/usr/lib64/perl5/vendor_perl<span class="token punctuation">]</span> ?
Copying files to /usr/lib64/perl5/vendor_perl

+----------------------------------------------------------+
 Configuring REST API Server configuration files <span class="token punctuation">..</span>.        
+----------------------------------------------------------+


+----------------------------------------------------------+
                 OK, looks good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                       
                                                          
     Configuring Communication server Perl modules<span class="token punctuation">..</span>.     
+----------------------------------------------------------+

Writing Makefile <span class="token keyword">for</span> Apache::Ocsinventory

+----------------------------------------------------------+
                 OK, looks good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                       
                                                          
      Preparing Communication server Perl modules<span class="token punctuation">..</span>.      
+----------------------------------------------------------+


+----------------------------------------------------------+
                 OK, prepare finshed <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                  
                                                          
     Installing Communication server Perl modules<span class="token punctuation">..</span>.      
+----------------------------------------------------------+


+----------------------------------------------------------+
 OK, Communication server Perl modules <span class="token function">install</span> finished<span class="token punctuation">;</span>-<span class="token punctuation">)</span>
                                                          
     Creating Communication server log directory<span class="token punctuation">..</span>.       
+----------------------------------------------------------+

Creating Communication server log directory /var/log/ocsinventory-server.

Fixing Communication server log directory files permissions.
Configuring <span class="token function">logrotate</span> <span class="token keyword">for</span> Communication server.
Removing old communication server <span class="token function">logrotate</span> <span class="token function">file</span> /etc/logrotate.d/ocsinventory-NG
Writing communication server <span class="token function">logrotate</span> to <span class="token function">file</span> /etc/logrotate.d/ocsinventory-server


+----------------------------------------------------------------------+
        OK, Communication server log directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span>            
                                                                      
   Creating Communication server plugins configuration directory<span class="token punctuation">..</span>.   
+----------------------------------------------------------------------+

Creating Communication server plugins configuration directory /etc/ocsinventory-server/plugins.


+----------------------------------------------------------------------+
 OK, Communication server plugins configuration directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span> 
                                                                      
        Creating Communication server plugins Perl directory<span class="token punctuation">..</span>.       
+----------------------------------------------------------------------+

Creating Communication server plugins Perl directory /etc/ocsinventory-server/perl.


+----------------------------------------------------------------------+
     OK, Communication server plugins Perl directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span>      
                                                                      
               Now configuring Apache web server<span class="token punctuation">..</span>.                   
+----------------------------------------------------------------------+

To ensure Apache loads mod_perl before OCS Inventory NG Communication Server,
Setup can name Communication Server Apache configuration <span class="token function">file</span>
<span class="token string">'z-ocsinventory-server.conf'</span> instead of <span class="token string">'ocsinventory-server.conf'</span><span class="token builtin class-name">.</span>
Do you allow Setup renaming Communication Server Apache configuration <span class="token function">file</span>
to <span class="token string">'z-ocsinventory-server.conf'</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span> ?
OK, using <span class="token string">'z-ocsinventory-server.conf'</span> as Communication Server Apache configuration <span class="token function">file</span>
Removing old communication server configuration to <span class="token function">file</span> /etc/httpd/conf.d/ocsinventory.conf
Writing communication server configuration to <span class="token function">file</span> /etc/httpd/conf.d/z-ocsinventory-server.conf

+----------------------------------------------------------------------+
       OK, Communication server setup successfully finished <span class="token punctuation">;</span>-<span class="token punctuation">)</span>       
                                                                      
 Please, review /etc/httpd/conf.d/z-ocsinventory-server.conf 
         to ensure all is good. Then restart Apache daemon.           
+----------------------------------------------------------------------+


Do you wish to setup Administration Server <span class="token punctuation">(</span>Web Administration Console<span class="token punctuation">)</span>
on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?

+----------------------------------------------------------+
    Checking <span class="token keyword">for</span> Administration Server directories<span class="token punctuation">..</span>.     
+----------------------------------------------------------+

CAUTION: Setup now <span class="token function">install</span> files <span class="token keyword">in</span> accordance with Filesystem Hierarchy
Standard. So, no <span class="token function">file</span> is installed under Apache root document directory
<span class="token punctuation">(</span>Refer to Apache configuration files to <span class="token function">locate</span> it<span class="token punctuation">)</span>.
If you<span class="token string">'re upgrading from OCS Inventory NG Server 1.01 and previous, YOU
MUST REMOVE (or move) directories '</span>ocsreports<span class="token string">' and '</span>download<span class="token string">' from Apache
root document directory.
If you choose to move directory, YOU MUST MOVE '</span>download<span class="token string">' directory to
Administration Server writable/cache directory (by default
/var/lib/ocsinventory-reports), especially if you use deployment feature.

Do you wish to continue ([y]/n)?
Assuming directories '</span>ocsreports<span class="token string">' and '</span>download<span class="token string">' removed from
Apache root document directory.

Where to copy Administration Server static files for PHP Web Console
[/usr/share/ocsinventory-reports] ?
OK, using directory /usr/share/ocsinventory-reports to install static files ;-)

Where to create writable/cache directories for deployment packages,
administration console logs, IPDiscover and SNMP [/var/lib/ocsinventory-reports] ?
OK, writable/cache directory is /var/lib/ocsinventory-reports ;-)


+----------------------------------------------------------+
         Checking for required Perl Modules...            
+----------------------------------------------------------+

Checking for DBI PERL module...
Found that PERL module DBI is available.
Checking for DBD::mysql PERL module...
Found that PERL module DBD::mysql is available.
Checking for XML::Simple PERL module...
Found that PERL module XML::Simple is available.
Checking for Net::IP PERL module...
Found that PERL module Net::IP is available.

+----------------------------------------------------------+
      Installing files for Administration server...       
+----------------------------------------------------------+

Creating PHP directory /usr/share/ocsinventory-reports/ocsreports.
Copying PHP files to /usr/share/ocsinventory-reports/ocsreports.
Fixing permissions on directory /usr/share/ocsinventory-reports/ocsreports.
Creating database configuration file /usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php.
Creating IPDiscover directory /var/lib/ocsinventory-reports/ipd.
Fixing permissions on directory /var/lib/ocsinventory-reports/ipd.
Creating packages directory /var/lib/ocsinventory-reports/download.
Fixing permissions on directory /var/lib/ocsinventory-reports/download.
Creating snmp mibs directory /var/lib/ocsinventory-reports/snmp.
Fixing permissions on directory /var/lib/ocsinventory-reports/snmp.
Creating Administration server log files directory /var/lib/ocsinventory-reports/logs.
Fixing permissions on directory /var/lib/ocsinventory-reports/logs.
Creating Administration server scripts log files directory /var/lib/ocsinventory-reports/scripts.
Fixing permissions on directory /var/lib/ocsinventory-reports/scripts.
Configuring IPDISCOVER-UTIL Perl script.
Installing IPDISCOVER-UTIL Perl script.
Fixing permissions on IPDISCOVER-UTIL Perl script.
Writing Administration server configuration to file /etc/httpd/conf.d/ocsinventory-reports.conf

+----------------------------------------------------------------------+
        OK, Administration server installation finished ;-)           
                                                                      
 Please, review /etc/httpd/conf.d/ocsinventory-reports.conf
          to ensure all is good and restart Apache daemon.            
                                                                      
 Then, point your browser to http://server//ocsreports
        to configure database server and create/update schema.        
+----------------------------------------------------------------------+


Setup has created a log file /opt/OCSInventory-Server/ocs_server_setup.log. Please, save this file.
If you encounter error while running OCS Inventory NG Management server,
we can ask you to show us its content !

DON'</span>T FORGET TO RESTART APACHE DAEMON <span class="token operator">!</span>

Enjoy OCS Inventory NG <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

<span class="token punctuation">[</span>root@ocs OCSInventory-Server<span class="token punctuation">]</span><span class="token comment"># systemctl restart httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="WEB配置"><a href="#WEB配置" class="headerlink" title="WEB配置"></a>WEB配置</h3><p>打开访问页面<a href="http://server//ocsreports">http://server//ocsreports</a> 输入配置信息 <img src="https://cdn.sujx.net/ocsinstall000.PNG" alt="index" title="index"> 确认其他配置文件，注意红框内信息 <img src="https://cdn.sujx.net/ocsinstall001.PNG" alt="index" title="index"> 完成配置 <img src="https://cdn.sujx.net/ocsinstall002.PNG" alt="index" title="index"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>OCSinventory</tag>
        <tag>sysadmin</tag>
      </tags>
  </entry>
  <entry>
    <title>JumpServer的两项修改</title>
    <url>/2020/08/21/modify_jumperserver/</url>
    <content><![CDATA[<h2 id="JumpServer-扩容"><a href="#JumpServer-扩容" class="headerlink" title="JumpServer 扩容"></a>JumpServer 扩容</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>JumpSever的录像默认位置为： &#x2F;opt&#x2F;jumpserver&#x2F;data&#x2F;media&#x2F;replay&#x2F; 为了防止录像文件把过大，需要为该目录挂载一块新的硬盘。</p>
<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><ol>
<li>为主机挂载一块20G硬盘</li>
<li>新建LVM分区</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># partprobe /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># pvcreate /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vgcreate vg_jumpereplay /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># lvcreate -l 100%FREE -n lv_jump vg_jumpreplay</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs /dev/vg_jumpreplay/lv_jump</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>挂载</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># blkid</span>
/dev/mapper/vg_jumpreplay-lv_jump: <span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"7360e830-ec71-4f56-bbc8-765e42ba39cc"</span> <span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"xfs"</span> 
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/fstab</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>7360e830-ec71-4f56-bbc8-765e42ba39cc   /opt/jumpserver/data    xfs defaults    <span class="token number">0</span> <span class="token number">0</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># mount -a</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>完成</li>
</ol>
<p>————————————————</p>
<h2 id="JumpServer-修改KOKO端口号"><a href="#JumpServer-修改KOKO端口号" class="headerlink" title="JumpServer 修改KOKO端口号"></a>JumpServer 修改KOKO端口号</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>Jumpserver 在不使用web终端的情况下可以使用2222端口来直接访问堡垒机系统，然后跳转访问授权资产。现在需要修改默认的2222端口来访问堡垒机的koko。</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ol>
<li>急速安装的堡垒机中2222端口是本地代理映射的Docker中的2222端口，所以我们只需要修改相关配置文件重新加载即可。</li>
<li>修改</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/setuptools/</span>
<span class="token punctuation">[</span>root@jumpserver setuptools<span class="token punctuation">]</span><span class="token comment"># ./jmsctl.sh status</span>
MySQL   Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Redis   Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Ninx    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Py3     Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Core    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Koko    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Guaca.  Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
<span class="token comment"># 查找koko镜像对应的容器ID</span>
<span class="token punctuation">[</span>root@jumpserver setuptools<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                             COMMAND             CREATED             STATUS              PORTS                                               NAMES
2ed1a83b1d98        jumpserver/jms_guacamole:v2.1.2   <span class="token string">"./entrypoint.sh"</span>   <span class="token number">21</span> hours ago        Up <span class="token number">35</span> seconds       <span class="token number">127.0</span>.0.1:8081-<span class="token operator">></span><span class="token number">8080</span>/tcp                            jms_guacamole
8351b191fd1d        jumpserver/jms_koko:v2.1.2        <span class="token string">"./entrypoint.sh"</span>   <span class="token number">21</span> hours ago        Up <span class="token number">35</span> seconds       <span class="token number">127.0</span>.0.1:5000-<span class="token operator">></span><span class="token number">5000</span>/tcp, <span class="token number">0.0</span>.0.0:2222-<span class="token operator">></span><span class="token number">2222</span>/tcp   jms_koko
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># sh /opt/setuptools/jmsctl.sh stop</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># updatedb &amp;&amp; locate 8351b191fd1d</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vim /var/lib/docker/containers/8351b191fd1d9bbe3a0a3bd0f6de213ca5847e286d5cc164afbcc2e0f02cc8f2/hostconfig.json</span>
<span class="token comment"># 修改["HostPort":"2222"]中的2222为目标端口</span>
<span class="token string">"PortBindings"</span>:<span class="token punctuation">&#123;</span><span class="token string">"2222/tcp"</span>:<span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"HostIp"</span><span class="token builtin class-name">:</span><span class="token string">""</span>,<span class="token string">"HostPort"</span><span class="token builtin class-name">:</span><span class="token string">"2222"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>,<span class="token string">"5000/tcp"</span>:<span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"HostIp"</span><span class="token builtin class-name">:</span><span class="token string">"127.0.0.1"</span>,<span class="token string">"HostPort"</span><span class="token builtin class-name">:</span><span class="token string">"5000"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># sh /opt/setuptools/jmsctl.sh start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>登陆测试</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>jumpserver</tag>
      </tags>
  </entry>
  <entry>
    <title>用户初次使用jumpserver指南</title>
    <url>/2020/08/18/first_use_jumpserver/</url>
    <content><![CDATA[<h3 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h3><p>为方便研发和运维同事进行线上操作，平台运营运维组为大家搭建了从线下办公环境到线上生产环境的网页版跳板机。 访问方式如下： - 访问地址：<a href="http://jump.sujx.net/">http://jump.sujx.net</a> - 用户名： 域用户名 - 密码为： 域账户密码</p>
<h3 id="首次登陆"><a href="#首次登陆" class="headerlink" title="首次登陆"></a>首次登陆</h3><ol>
<li>首次登陆网址并输入用户名密码 <img src="https://cdn.sujx.net/jumpexample-001.PNG" alt="jumpexample" title="jumpexample"></li>
<li>再次输入域账户密码进行安全令牌绑定 <img src="https://cdn.sujx.net/jumpexample-002.PNG" alt="jumpexample" title="jumpexample"></li>
<li>iPhone手机用户可以使用下图二维码获取安全令牌验证码生成器 <img src="https://cdn.sujx.net/jumpexample-003.PNG" alt="jumpexample" title="jumpexample"></li>
<li>安装完成安全令牌生成器之后就可以进行用户绑定 <img src="https://cdn.sujx.net/jumpexample-004.PNG" alt="jumpexample" title="jumpexample"></li>
<li>可以通过访问 <a href="https://gauth.apps.gbraad.nl/">https://gauth.apps.gbraad.nl</a> 输入上图中的Secret Key来获取令牌 <img src="https://cdn.sujx.net/jumpexample-005.PNG" alt="jumpexample" title="jumpexample"></li>
<li>输入上述程序获得的一次性密码完成绑定 <img src="https://cdn.sujx.net/jumpexample-006.PNG" alt="jumpexample" title="jumpexample"></li>
<li>绑定完成之后系统会跳转回首页，再次输入Foneshare域账户和域密码 <img src="https://cdn.sujx.net/jumpexample-007.PNG" alt="jumpexample" title="jumpexample"></li>
<li>输入6位动态码 <img src="https://cdn.sujx.net/jumpexample-008.PNG" alt="jumpexample" title="jumpexample"></li>
<li>进入跳板机首次登陆页面，勾选“我同意” (手机和微信信息选填) <img src="https://cdn.sujx.net/jumpexample-009.PNG" alt="jumpexample" title="jumpexample"></li>
<li>完成配置 <img src="https://cdn.sujx.net/jumpexample-010.PNG" alt="jumpexample" title="jumpexample"></li>
<li>点击左侧面板“我的资产”，即可看到可用主机 <img src="https://cdn.sujx.net/jumpexample-011.PNG" alt="jumpexample" title="jumpexample"></li>
<li>点击左侧面板“Web终端”，即可进入网页版的远程管理界面 <img src="https://cdn.sujx.net/jumpexample-012.PNG" alt="jumpexample" title="jumpexample"></li>
<li>点击可管理主机，会以登陆域用户名自动连接对象主机 <img src="https://cdn.sujx.net/jumpexample-013.PNG" alt="jumpexample" title="jumpexample"></li>
</ol>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li>登陆提示“密码解密失败” ：更换浏览器或者清空浏览器缓存即可</li>
<li>安卓用户可以下载使用google.android.apps.authenticator来进行双因子账户绑定</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>jumpserver</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Rclone进行文件备份</title>
    <url>/2020/06/08/minio-rlcone-s3/</url>
    <content><![CDATA[<h3 id="环境概述"><a href="#环境概述" class="headerlink" title="环境概述"></a>环境概述</h3><ol>
<li>本地环境为由Beijing、shanghai、guangzhou三台Linux主机构成的数据备份源；</li>
<li>远端备份目的为本地自建S3存储和紫光云存储；</li>
<li>使用rclone将本地多主机文件备份到远端存储；</li>
<li>具体工具有：rclone、minio和sftp。</li>
</ol>
<h3 id="主机地址"><a href="#主机地址" class="headerlink" title="主机地址"></a>主机地址</h3><table>
<thead>
<tr>
<th>主机名</th>
<th>角色</th>
<th>IP地址</th>
</tr>
</thead>
<tbody><tr>
<td>Rclone</td>
<td>同步工具</td>
<td>192.168.174.150</td>
</tr>
<tr>
<td>Minio</td>
<td>开源S3服务器</td>
<td>192.168.174.160</td>
</tr>
<tr>
<td>UNicloud</td>
<td>公网S3服务器</td>
<td>*</td>
</tr>
<tr>
<td>Beijing</td>
<td>备份站点</td>
<td>192.168.174.141</td>
</tr>
<tr>
<td>Shanghai</td>
<td>备份站点</td>
<td>192.168.174.142</td>
</tr>
<tr>
<td>Guangzhou</td>
<td>备份站点</td>
<td>192.168.174.143</td>
</tr>
</tbody></table>
<h3 id="Minio的建立"><a href="#Minio的建立" class="headerlink" title="Minio的建立"></a>Minio的建立</h3><p>Mnino是一个轻巧、快速的开源S3服务器，其官方主页为：minio <a href="https://min.io/">https://min.io/</a></p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c"># 下载二进制执行文件
wget https<span class="token operator">:</span><span class="token comment">//dl.minio.io/server/minio/release/linux-amd64/minio</span>
# 添加可执行权限
chmod <span class="token operator">+</span>x minio
# 复制到指定路径
cp minio <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>
# 建立程序运行账户
useradd <span class="token operator">-</span>r minio <span class="token operator">-</span>s <span class="token operator">/</span>sbin<span class="token operator">/</span>nologin
# 对程序属主进行配置
chown minio<span class="token operator">:</span>minio <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio
# 配置程序启动参数
touch <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio
cat<span class="token operator">></span><span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio<span class="token operator">&lt;&lt;</span><span class="token constant">EOF</span>
MINIO_VOLUMES<span class="token operator">=</span><span class="token string">"/usr/local/share/minio/"</span>
MINIO_OPTS<span class="token operator">=</span><span class="token string">"-C /etc/minio --address 192.168.174.160:9000"</span>
MINIO_ACCESS_KEY<span class="token operator">=</span><span class="token string">"minio"</span>
MINIO_SECRET_KEY<span class="token operator">=</span><span class="token string">"miniostorage"</span>
<span class="token constant">EOF</span>
# 配置systemctl管理程序
touch minio<span class="token punctuation">.</span>service
cat <span class="token operator">>></span> minio<span class="token punctuation">.</span>service <span class="token operator">&lt;&lt;</span><span class="token constant">EOF</span>
<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
Description<span class="token operator">=</span>MinIO
Documentation<span class="token operator">=</span>https<span class="token operator">:</span><span class="token comment">//docs.min.io</span>
Wants<span class="token operator">=</span>network<span class="token operator">-</span>online<span class="token punctuation">.</span>target
After<span class="token operator">=</span>network<span class="token operator">-</span>online<span class="token punctuation">.</span>target
AssertFileIsExecutable<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
WorkingDirectory<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>

User<span class="token operator">=</span>minio
Group<span class="token operator">=</span>minio

EnvironmentFile<span class="token operator">=</span><span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio
ExecStartPre<span class="token operator">=</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token operator">-</span>c <span class="token string">"if [ -z \"$&#123;MINIO_VOLUMES&#125;\" ]; then echo \"Variable MINIO_VOLUMES not set in /etc/default/minio\"; exit 1; fi"</span>

ExecStart<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio server $MINIO_OPTS $MINIO_VOLUMES

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Let systemd restart this service always</span></span>
Restart<span class="token operator">=</span>always

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Specifies the maximum file descriptor number that can be opened by this process</span></span>
LimitNOFILE<span class="token operator">=</span><span class="token number">65536</span>

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Disable timeout logic and wait until process is stopped</span></span>
TimeoutStopSec<span class="token operator">=</span>infinity
SendSIGKILL<span class="token operator">=</span>no

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
WantedBy<span class="token operator">=</span>multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Built <span class="token keyword">for</span> $<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token operator">-</span>$<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>version<span class="token punctuation">&#125;</span> <span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span>
<span class="token constant">EOF</span>

# 复制配置文件到指定位置
cp minio<span class="token punctuation">.</span>service <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system
systemctl daemon<span class="token operator">-</span>reload
systemctl enable minio<span class="token punctuation">.</span>service <span class="token operator">--</span>now

# 配置防火墙
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>service<span class="token operator">=</span><span class="token punctuation">&#123;</span>ssh<span class="token punctuation">,</span>http<span class="token punctuation">,</span>https<span class="token punctuation">&#125;</span>
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">9000</span><span class="token operator">/</span>tcp
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="建立桶存储并上传文件"><a href="#建立桶存储并上传文件" class="headerlink" title="建立桶存储并上传文件"></a>建立桶存储并上传文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ls /usr/local/share/minio/</span>
<span class="token builtin class-name">test</span>
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ls /usr/local/share/minio/test/</span>
This is MinIO.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>接下来，我们可以使用官方客户端mc来访问我们建立的桶：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://dl.minio.org.cn/client/mc/release/linux-amd64/mc
<span class="token function">chmod</span> +x <span class="token function">mc</span>
./mc config <span class="token function">host</span> <span class="token function">add</span> minio http://192.168.174.160:9000 minio miniostroage
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ./mc ls minio</span>
<span class="token punctuation">[</span><span class="token number">2020</span>-06-01 <span class="token number">23</span>:50:56 CST<span class="token punctuation">]</span>      0B test/
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ./mc ls minio/test/</span>
<span class="token punctuation">[</span><span class="token number">2020</span>-06-01 <span class="token number">23</span>:51:01 CST<span class="token punctuation">]</span>  <span class="token number">8</span>.7MiB This is MinIO.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Rclone部署"><a href="#Rclone部署" class="headerlink" title="Rclone部署"></a>Rclone部署</h3><p>rclone的部署很简单，从官方网站下载安装rclone包即可。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://downloads.rclone.org/v1.52.0/rclone-v1.52.0-linux-amd64.rpm
yum localinstall <span class="token parameter variable">-y</span> rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后，使用“rclone config”进行配置即可。配置完成的配置文件如下：</p>
<pre class="line-numbers language-none"><code class="language-none">[minio]
type &#x3D; s3
provider &#x3D; Minio
env_auth &#x3D; false
access_key_id &#x3D; minio
secret_access_key &#x3D; miniostorage
region &#x3D; us-east-1
endpoint &#x3D; http:&#x2F;&#x2F;192.168.174.160:9000

[unicloud]
type &#x3D; s3
provider &#x3D; Other
env_auth &#x3D; false
access_key_id &#x3D; __
secret_access_key &#x3D; ______
endpoint &#x3D; ______.unicloudsrv.com
acl &#x3D; private<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>接下来，我们进行测试：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone lsd minio:</span>
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-06-01 <span class="token number">23</span>:50:56        <span class="token parameter variable">-1</span> <span class="token builtin class-name">test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:test</span>
  <span class="token number">9117336</span> This is MinIO.mp4
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone copy rclone-v1.52.0-linux-amd64.rpm minio:test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:test</span>
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="备份其他上传"><a href="#备份其他上传" class="headerlink" title="备份其他上传"></a>备份其他上传</h3><ol>
<li>各个服务器需要开启时间同步服务并配置rclone主机同各个备份主机的ssh免密登录；</li>
<li>使用rclone config 建立sftp类型的配置文件；</li>
<li>测试<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@beijing opt<span class="token punctuation">]</span><span class="token comment"># touch beijing/192.168.174.141</span>
<span class="token punctuation">[</span>root@beijing opt<span class="token punctuation">]</span><span class="token comment"># hostname >> ./beijing/192.168.174.141 </span>

<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone copy beijing:/opt/beijing minio:/test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:/test/</span>
        <span class="token number">9</span> <span class="token number">192.168</span>.174.141
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm
<span class="token comment"># 在公有云新建桶</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone mkdir unicloud:sujx</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone lsd unicloud:</span>
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-05-27 <span class="token number">14</span>:16:27        <span class="token parameter variable">-1</span> backup-ucd-public-prod
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-05-27 <span class="token number">14</span>:16:22        <span class="token parameter variable">-1</span> backup-ucd-public-test
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-05-20 09:20:30        <span class="token parameter variable">-1</span> crmbak
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-05-25 <span class="token number">16</span>:36:46        <span class="token parameter variable">-1</span> fs-pcf
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-05-25 <span class="token number">16</span>:36:35        <span class="token parameter variable">-1</span> fs-pcf-temp
          <span class="token parameter variable">-1</span> <span class="token number">2020</span>-06-01 <span class="token number">19</span>:28:14        <span class="token parameter variable">-1</span> sujx
<span class="token comment"># 在本地S3和远端S3 同步</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone sync minio:test unicloud:sujx</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls unicloud:sujx</span>
        <span class="token number">9</span> <span class="token number">192.168</span>.174.141
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>rclone</tag>
        <tag>minio</tag>
        <tag>s3</tag>
      </tags>
  </entry>
  <entry>
    <title>使用LVM进行磁盘管理</title>
    <url>/2020/05/01/lvm-init/</url>
    <content><![CDATA[<h3 id="创建LVM"><a href="#创建LVM" class="headerlink" title="创建LVM"></a>创建LVM</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建物理卷</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvcreate /dev/sdb</span>
  Physical volume <span class="token string">"/dev/sdb"</span> successfully created.

<span class="token comment"># 创建卷组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgcreate vg_example /dev/sdb</span>
  Volume group <span class="token string">"vg_example"</span> successfully created
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree</span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g      <span class="token number">0</span>
  vg_example   <span class="token number">1</span>   <span class="token number">0</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">10</span>.00g <span class="token operator">&lt;</span><span class="token number">10</span>.00g

<span class="token comment"># 创建逻辑组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvcreate -l 100%free -n lv_example vg_example</span>
  Logical volume <span class="token string">"lv_example"</span> created.
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree</span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g    <span class="token number">0</span>
  vg_example   <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">10</span>.00g    <span class="token number">0</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV         VG         Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root       centos     -wi-ao----  <span class="token number">13</span>.39g

  swap       centos     -wi-ao----   <span class="token number">1</span>.60g

  lv_example vg_example -wi-a----- <span class="token operator">&lt;</span><span class="token number">10</span>.00g

<span class="token comment"># 格式化逻辑组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs /dev/vg_example/lv_example</span>
meta-data<span class="token operator">=</span>/dev/vg_example/lv_example <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">512</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">655104</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">sparse</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2620416</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">1</span>
log      <span class="token operator">=</span>internal log           <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2560</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># blkid grep vg_example</span>
/dev/mapper/vg_example-lv_example: <span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"83b3262d-d7d1-429e-ab04-67022e91865a"</span> <span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"xfs"</span>

<span class="token comment"># 创建挂载点</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /data</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/fstab</span>
/dev/mapper/centos-root /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>95ef0912-08e6-4fc9-9dc1-179e47ffe304 /boot                   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
/dev/mapper/centos-swap swap                    swap    defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>83b3262d-d7d1-429e-ab04-67022e91865a       /data   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mount -a</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># df -Th grep /data</span>
/dev/mapper/vg_example-lv_example xfs        10G   33M   10G   <span class="token number">1</span>% /data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="扩容LVM"><a href="#扩容LVM" class="headerlink" title="扩容LVM"></a>扩容LVM</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 磁盘扩容10G</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># fdisk -l /dev/sdb</span>

Disk /dev/sdb: <span class="token number">21.5</span> GB, <span class="token number">21474836480</span> bytes, <span class="token number">41943040</span> sectors
Units <span class="token operator">=</span> sectors of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes

<span class="token comment"># PV扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvresize /dev/sdb</span>
  Physical volume <span class="token string">"/dev/sdb"</span> changed
  <span class="token number">1</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> resized or updated / <span class="token number">0</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> not resized

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvs</span>
  PV         VG         Fmt  Attr PSize   PFree 
  /dev/sda2  centos     lvm2 a--  <span class="token operator">&lt;</span><span class="token number">15</span>.00g     <span class="token number">0</span> 
  /dev/sdb   vg_example lvm2 a--  <span class="token operator">&lt;</span><span class="token number">20</span>.00g <span class="token number">10</span>.00g

<span class="token comment"># VG自动扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree </span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g     <span class="token number">0</span> 
  vg_example   <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">20</span>.00g <span class="token number">10</span>.00g

<span class="token comment"># LV扩容</span>
<span class="token comment"># 因为磁盘换算问题导致失败</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvextend -L +10G /dev/vg_example/lv_example</span>
  Insufficient <span class="token function">free</span> space: <span class="token number">2560</span> extents needed, but only <span class="token number">2559</span> available
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvextend -L +9.99G /dev/vg_example/lv_example</span>
  Rounding size to boundary between physical extents: <span class="token number">9.99</span> GiB.
  Size of logical volume vg_example/lv_example changed from <span class="token number">10.00</span> GiB <span class="token punctuation">(</span><span class="token number">2560</span> extents<span class="token punctuation">)</span> to <span class="token number">19.99</span> GiB <span class="token punctuation">(</span><span class="token number">5118</span> extents<span class="token punctuation">)</span>.
  Logical volume vg_example/lv_example successfully resized.

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV         VG         Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root       centos     -wi-ao---- <span class="token number">13</span>.39g                                                    
  swap       centos     -wi-ao----  <span class="token number">1</span>.60g                                                    
  lv_example vg_example -wi-ao---- <span class="token number">19</span>.99g     

<span class="token comment"># 文件系统扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># xfs_growfs /dev/vg_example/lv_example </span>
meta-data<span class="token operator">=</span>/dev/mapper/vg_example-lv_example <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">512</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">655104</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">spinodes</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2620416</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">1</span>
log      <span class="token operator">=</span>internal               <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2560</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>
data blocks changed from <span class="token number">2620416</span> to <span class="token number">5240832</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># df -Th grep /data</span>
/dev/mapper/vg_example-lv_example xfs        20G   33M   20G   <span class="token number">1</span>% /data

<span class="token comment"># 扩容完成</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。"><a href="#使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。" class="headerlink" title="使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。"></a>使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。</h4>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>disk</tag>
        <tag>lvm</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell的小技巧</title>
    <url>/2020/04/22/powershell-usetips/</url>
    <content><![CDATA[<h3 id="Powershell环境的设置"><a href="#Powershell环境的设置" class="headerlink" title="Powershell环境的设置"></a>Powershell环境的设置</h3><ol>
<li>update-help 强制更新Powshell帮助文件，同时跳过更新错误文件，主要用于解决区域帮助文件错误。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Update-Help <span class="token parameter variable">-Verbose</span> <span class="token parameter variable">-Force</span> <span class="token parameter variable">-ErrorAction</span> SilentlyContinue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="https://cdn.sujx.net/powershell_update_erro.PNG" title="powershellupdate"><img src="https://cdn.sujx.net/powershell_update_erro.PNG" alt="powershellupdate" title="powershellupdate"></a></p>
<ol start="2">
<li>show-command 图形化生成命令参数文件</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 这需要安装powershell-ise</span>
show-command get-eventlog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><a href="https://cdn.sujx.net/showcommand.PNG" title="showcmmand"><img src="https://cdn.sujx.net/showcommand.PNG" alt="showcommand" title="showcommand"></a></p>
<ol start="3">
<li>开启PS1脚本执行权限</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以管理员权限打开powershell，执行如下命令，然后选择Y</span>
Set-ExecutionPolicy RemoteSigned<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="4">
<li>防火墙开关</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 打开防火墙</span>
Set-NetFirewallProfile <span class="token parameter variable">-Enabled</span> True
<span class="token comment"># 打开防火墙</span>
Set-NetFirewallProfile <span class="token parameter variable">-Enabled</span> False<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>关机</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 重启</span>
restart-computer
<span class="token comment"># 关机</span>
stop-computer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li>新增磁盘</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取新磁盘信息</span>

<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> get-disk

Number Friendly Name Serial Number                    HealthStatus         OperationalStatus      Total Size Partition
                                                                                                             Style
------ ------------- -------------                    ------------         -----------------      ---------- ----------
<span class="token number">0</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                      <span class="token number">40</span> GB GPT
<span class="token number">1</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Offline                    <span class="token number">100</span> GB RAW
<span class="token comment"># 初始化磁盘，默认创建gpt分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> Initialize-Disk

位于命令管道位置 <span class="token number">1</span> 的 cmdlet Initialize-Disk
请为以下参数提供值:
Number<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>: <span class="token number">1</span>
Number<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>:
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> get-disk

Number Friendly Name Serial Number                    HealthStatus         OperationalStatus      Total Size Partition
                                                                                                             Style
------ ------------- -------------                    ------------         -----------------      ---------- ----------
<span class="token number">0</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                      <span class="token number">40</span> GB GPT
<span class="token number">1</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                     <span class="token number">100</span> GB GPT
<span class="token comment"># 创建分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> New-Partition <span class="token parameter variable">-DiskNumber</span> <span class="token number">1</span> <span class="token parameter variable">-AssignDriveLetter</span> <span class="token parameter variable">-UseMaximumSize</span>


   DiskPath:<span class="token punctuation">\</span><span class="token punctuation">\</span>?<span class="token punctuation">\</span>scsi<span class="token comment">#disk&amp;ven_vmware_&amp;prod_vmware_virtual_s#5&amp;174a0eaf&amp;0&amp;000100#&#123;53f56307-b6bf-11d0-94f2-00a0c91efb8b&#125;</span>

PartitionNumber  DriveLetter Offset                                        Size Type
---------------  ----------- ------                                        ---- ----
<span class="token number">2</span>                D           <span class="token number">135266304</span>                                 <span class="token number">99.87</span> GB Basic
<span class="token comment"># 格式化分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> Format-Volume <span class="token parameter variable">-DriveLetter</span> D <span class="token parameter variable">-FileSystem</span> NTFS

DriveLetter FileSystemLabel FileSystem DriveType HealthStatus OperationalStatus SizeRemaining     Size
----------- --------------- ---------- --------- ------------ ----------------- -------------     ----
D                           NTFS       Fixed     Healthy      OK                     <span class="token number">99.76</span> GB <span class="token number">99.87</span> GB
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Tips</category>
        <category>Something</category>
      </categories>
      <tags>
        <tag>powershell</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>离线加域</title>
    <url>/2020/04/11/offline-join-ad/</url>
    <content><![CDATA[<p>在MS ActiveDirectory的维护工作中，经常会出现承担多种域权限的主机需要重新刷系统的情况。一般的操作方式是退域、重装、删除域信息、重新加域、再次赋权，这样可以确保安全、可靠的维护域中计算机账号的权限正确。不过，从2008R2开始，MS提供了可以离线加域的方法，来避免这一麻烦的处理过程。简单来说，就是从AD中把计算机账号的属性导出为加密文本，然后再在新建的主机上导入，重启即可使用域账号登录并继承原有域权限。 实现方法就两条命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在可以正常登录AD的主机上导出域中计算机账号信息,然后把文本文件复制到新机上</span>
djoin /provision /domain domian_name /machine machine_name /savefile  /reuse
<span class="token comment"># 在重刷系统的主机上以管理员权限导入域信息</span>
djoin /requestodj /loadfile  /windowspath c:<span class="token punctuation">\</span>windows /localos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>具体的解析<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd392267(v=ws.10)?redirectedfrom=MSDN" title="在此">在此</a></p>
]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>offline</tag>
        <tag>ActiveDirctory</tag>
        <tag>djoin</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyper-V主机的开局</title>
    <url>/2020/04/07/hyper-v-host-init/</url>
    <content><![CDATA[<p>Hyper-V是微软推出的虚拟化平台，它具有免费、高效、功能完备和安全的特性，但他的管理是基于powershell和winrm来进行管理配置。习惯了windows的图形界面配置和Linux的Bash管理，初次上手还是有点难度。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>略，……</p>
<h3 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h3><p>开局默认可以使用sconfig这个TUI工具来进行改计算机名、加域、调整时间、设置IP地址等初始化操作。</p>
<h3 id="安装Windows功能"><a href="#安装Windows功能" class="headerlink" title="安装Windows功能"></a>安装Windows功能</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装Hyper-V Powershell </span>
Install-WindowsFeature Hyper-V-PowerShell
<span class="token comment"># 安装SNMP服务</span>
Install-WindowsFeature SNMP-Service
<span class="token comment"># 安装数据中心桥接功能</span>
Install-WindowsFeature Data-Center-Bridging
Install-WindowsFeature Data-Center-Bridging <span class="token parameter variable">-IncludeManagementTools</span>
<span class="token comment"># 打开ICMP Ping功能</span>
Enable-NetFirewallRule <span class="token parameter variable">-Name</span> FPS-ICMP4-ERQ-In
<span class="token comment"># 打开远程桌面端口</span>
Get-NetFirewallRule <span class="token parameter variable">-Name</span> RemoteDesktop*
<span class="token comment"># 受勒索软件RansomWin32WannaCrypt影响，移除FS-SMB1(需要重启)</span>
remove-WindowsFeature fs-smb1
<span class="token comment"># 开启多路径功能</span>
Enable-WindowsOptionalFeature <span class="token parameter variable">-Online</span> <span class="token parameter variable">-Featurename</span> MultipathIO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="开启远程管理"><a href="#开启远程管理" class="headerlink" title="开启远程管理"></a>开启远程管理</h3><ol>
<li>打开Powershell的远程管理功能，使用powershell</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Configure-SMRemoting <span class="token parameter variable">-enable</span>
Enable-PSRemoting <span class="token parameter variable">-force</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="2">
<li>打开winrm的远程管理功能，使用cmd</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 快速配置winrm</span>
winrm quickconfig（输入Y）
<span class="token comment"># 设置认证方式为基本认证</span>
winrm <span class="token builtin class-name">set</span> winrm/config/service/auth @<span class="token punctuation">&#123;</span>Basic<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 将所有计算机纳入信任主机</span>
winrm s winrm/config/Client @<span class="token punctuation">&#123;</span>TrustedHosts<span class="token operator">=</span><span class="token string">"*"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 取消加密网络流量</span>
winrm s winrm/config/Client @<span class="token punctuation">&#123;</span>AllowUnencrypted<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 提高性能</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxEnvelopeSizekb<span class="token operator">=</span><span class="token string">"150"</span><span class="token punctuation">&#125;</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxTimeoutms <span class="token operator">=</span><span class="token string">"60000"</span><span class="token punctuation">&#125;</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxBatchItems<span class="token operator">=</span><span class="token string">"50"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看网卡信息</span>
Get-NetAdapterSort-Object Name FT Name,InterfaceDescription,LinkSpeed,ifIndex,Status <span class="token parameter variable">-AutoSize</span>
<span class="token comment"># 创建网卡绑定</span>
New-NetLbfoTeam <span class="token parameter variable">-Name</span> PublicNetwork <span class="token parameter variable">-TeamMembers</span> <span class="token string">"NIC1"</span>,<span class="token string">"NIC3"</span> <span class="token parameter variable">-TeamingMode</span> SwitchIndependent <span class="token parameter variable">-LoadBalancingAlgorithm</span> Dynamic -Confirm:<span class="token variable">$false</span>
<span class="token comment"># 新增网卡到已建立网卡组</span>
Add-NetLbfoTeamMember <span class="token parameter variable">-Name</span> <span class="token string">"NIC2"</span> <span class="token parameter variable">-Team</span> PublicNetwork
<span class="token comment"># 设置网卡地址</span>
Get-NetAdapter FSNPublicNetwork  New-NetIPAddress <span class="token parameter variable">-IPAddress</span> <span class="token string">'172.16.1.111'</span> <span class="token parameter variable">-AddressFamily</span> IPv4 <span class="token parameter variable">-PrefixLength</span> <span class="token number">16</span> <span class="token parameter variable">-DefaultGateway</span> <span class="token string">'172.16.1.254'</span>
<span class="token comment"># 设置DNS</span>
Get-NetAdapter FSNPublicNetwork  Set-DnsClientServerAddress <span class="token parameter variable">-ServerAddresses</span> <span class="token string">'172.16.1.1'</span>,<span class="token string">'172.16.1.2'</span>
<span class="token comment"># 设置VLAN</span>
Set-VMNetworkAdapterVlan <span class="token parameter variable">-ManagementOS</span> <span class="token parameter variable">-VMNetworkAdapterName</span> PublicNetwork <span class="token parameter variable">-Access</span> <span class="token parameter variable">-VLanID</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="新增磁盘"><a href="#新增磁盘" class="headerlink" title="新增磁盘"></a>新增磁盘</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取新增磁盘编号</span>
Get-Disk
<span class="token comment"># 初始化磁盘</span>
Initialize-Disk <span class="token parameter variable">-Number</span> <span class="token number">1</span> <span class="token parameter variable">-PartitionStyle</span> GPT
<span class="token comment"># 设置盘符</span>
New-Partition <span class="token parameter variable">-DiskNumber</span> <span class="token number">1</span> <span class="token parameter variable">-UseMaximumSize</span> <span class="token parameter variable">-DriveLetter</span> D
<span class="token comment"># 格式化</span>
Format-Volume <span class="token parameter variable">-DriveLetter</span> D <span class="token parameter variable">-FileSystem</span> NTFS <span class="token parameter variable">-Force</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 修改管理员密码</span>
net user administrator new_password
<span class="token comment"># 修改主机名</span>
netdom renamecomputer %computername% /newname
<span class="token comment"># 允许远程查看日志</span>
netsh advfirewall firewall <span class="token builtin class-name">set</span> rule <span class="token assign-left variable">group</span><span class="token operator">=</span><span class="token string">"remote event log management"</span> new <span class="token assign-left variable">enable</span><span class="token operator">=</span>yes
<span class="token comment"># 重启</span>
<span class="token function">shutdown</span> /r /t <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>hyper-v</tag>
        <tag>Virtualization</tag>
      </tags>
  </entry>
  <entry>
    <title>如何打开iDRAC虚拟控制台</title>
    <url>/2020/04/01/how-to-use-idrac/</url>
    <content><![CDATA[<p>在戴尔服务器的日常运维中，我们可以使用服务器自带的iDRAC带外管理器来进行远程的系统安装、配置以及开关机、重启的操作。在实际使用中，iDRAC的虚拟控制台会通过浏览器下载启动链接，再调用相关接口来在本地显示远程服务器图形界面。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a href="https://cdn.sujx.net/idrac_java_01.PNG"><img src="https://cdn.sujx.net/idrac_java_01.PNG"></a></h2><p>因为下载回来的.jnlp文件并不能直接使用，必须要进行相关的配置。网上有很多信息来解决这个问题，比如保留java版本在7，改后缀名之类，其实该升还是要升版本。</p>
<h3 id="安装最新版的JRE"><a href="#安装最新版的JRE" class="headerlink" title="安装最新版的JRE"></a>安装最新版的JRE</h3><p><a href="https://www.oracle.com/java/technologies/javase-downloads.html">[1]下载链接</a></p>
<h3 id="配置JAVA"><a href="#配置JAVA" class="headerlink" title="配置JAVA"></a>配置JAVA</h3><ol>
<li>添加访问地址到可信列表中</li>
</ol>
<p><a href="https://cdn.sujx.net/idrac_java_00.PNG"><img src="https://cdn.sujx.net/idrac_java_00.PNG"></a></p>
<ol start="2">
<li>修改JAVA的sslv3选项 打开“C:\Program Files (x86)\Java\jre1.8.0_241\lib\security”目录下面的java.security文件; 查找SSLv3选项，并确保此项全部注释掉，然后保存关闭。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, DH keySize &lt; 1024, \</span>
    EC keySize <span class="token operator">&lt;</span> <span class="token number">224</span>, 3DES_EDE_CBC, anon, NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="3">
<li>修改虚拟控制台文件的打开方式 把文件打开方式指向”C:\Program Files (x86)\Java\jre1.8.0_241\bin\javaws.exe” <a href="https://cdn.sujx.net/idrac_java_02.PNG"><img src="https://cdn.sujx.net/idrac_java_02.PNG"></a></li>
</ol>
<h3 id="双击打开控制台文件"><a href="#双击打开控制台文件" class="headerlink" title="双击打开控制台文件"></a>双击打开控制台文件</h3><p><a href="https://cdn.sujx.net/idrac_java_03.PNG"><img src="https://cdn.sujx.net/idrac_java_03.PNG"></a> <a href="https://cdn.sujx.net/idrac_java_04.PNG"><img src="https://cdn.sujx.net/idrac_java_04.PNG"></a> <a href="https://cdn.sujx.net/idrac_java_05.PNG"><img src="https://cdn.sujx.net/idrac_java_05.PNG"></a></p>
]]></content>
      <categories>
        <category>Hardware</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>网卡配置项</title>
    <url>/2020/03/30/set-netcard/</url>
    <content><![CDATA[<p>修改电脑网卡高级设置可以提高网络速度。另外，建议关闭在Realtek网卡高级设置中的以下其他选项：流控制&#x2F;FlowControl、巨型帧&#x2F;Jumboframe、大量传送负载&#x2F;OffloadLargesend、EEE(Energy Efficient Ethernet)、环保节能&#x2F;GreenEthernet、硬件效验和&#x2F;OffloadChksum。</p>
<ol>
<li>自动关闭 PCIe (省电) 设置此选项可进入网络控制器省电模式设置此選項可進入网路卡省电模式</li>
</ol>
<p>选项 说明 关闭 关闭自动关闭PCIe (省电) 开启, 电池 当使用电池且网络线未插入时，自动关闭PCIe连接 开启, 电池或 AC 当使用电池或AC且网络线未插入时，自动关闭PCIe连接</p>
<ol start="2">
<li>自动关闭 PHY (省电) 设置此选项可进入网络控制器省电模式</li>
</ol>
<p>选项 说明 关闭 关闭自动关闭PHY (省电) 开启, 电池 当使用电池且网络线未插入时，自动关闭PHY连接 开启, 电池或 AC 当使用电池或AC且网络线未插入时，自动关闭PHY连接</p>
<ol start="3">
<li><p>流控制(Flow Control) 允许暂时停止传输数据包以适应接收端速度 选项 说明 开启 开启流控制 (默认值) 关闭 关闭流控制 据说开流控制会导致掉线，关</p>
</li>
<li><p>中断调整(interrupt moderation) 根据网络的流量状况，动态调整发起处理器中断的频率</p>
</li>
</ol>
<p>选项 说明 开启 开启中断调整合适化 (默认值) 关闭 关闭中断调整合适化 建议：关</p>
<ol start="5">
<li>IPv4 硬件校验和（IPv4 Checksum Offload） 设置硬件加速IPv4校验和</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速IPv4校验和 Rx &amp; Tx 开启 启用硬件加速接收端和传输端IPv4校验和(默认值) Rx 开启 启用硬件加速接收端IPv4校验和 Tx 开启 启用硬件加速传输端IPv4校验和 据说很多程序因为网卡校验和问题造成连接问题，关。</p>
<ol start="6">
<li><p>802.1Q&#x2F;1p 虚拟网络标签 IEEE 802.1Q帧信息用以表示每一个帧的优先级和其所属的虚拟局域网，设置这个选项可以启用硬件加速优先级帧传输和加入虚拟局域网识别标签。 选项 说明 开启 启用优先级传输和虚拟局域网 关闭 禁用优先级传输和虚拟局域网 (默认值)</p>
</li>
<li><p>大量传送减负 (IPv4)(Large Send Offload(IPv4)) 设置网络控制器硬件加速IPv4数据包切割功能</p>
</li>
</ol>
<p>选项 说明 开启 开启IPv4大量传送减负 (默认值) 关闭 关闭IPv4大量传送减负 大量传送减负是用网卡硬件分割TCP数据包,但其实只有关闭它才可以发挥网卡的真正性能，cpu占用率会提升，但不明显。网络处理速度会快一些。 这个一定要关，比如xp mode和win7主机局域网传文件慢就是这个造成的</p>
<ol start="8">
<li>大量传送减负 (IPv6) (Large Send Offload(IPv6)) 设置网络控制器硬件加速IPv6数据包切割功能</li>
</ol>
<p>选项 说明 开启 开启IPv6大量传送减负 (默认值) 关闭 关闭IPv6大量传送减负 这个一定要关，比如xp mode和win7主机局域网传文件慢就是这个造成的</p>
<ol start="9">
<li><p>巨型帧(Jumbo Frame) Ethernet的数据最大传输单元定义为1500字节，数据长度大于1500字节封包即称为巨型帧，此选项可以调整Ethernet封包內所带数据的长度 选项 说明 2KB 最大传输单元 设置巨型帧为2K字节 3KB 最大传输单元 设置巨型帧为3K字节 4KB 最大传输单元 设置巨型帧为4K字节 5KB 最大传输单元 设置巨型帧为5K字节 6KB 最大传输单元 设置巨型帧为6K字节 7KB 最大传输单元 设置巨型帧为7K字节 8KB 最大传输单元 设置巨型帧为8K字节 9KB 最大传输单元 设置巨型帧为9K字节 关闭 禁用巨型帧(默认值) 注意:启用巨型帧选项，网络控制器另一端所连接的网络设备也需支持巨型帧</p>
</li>
<li><p>网络地址（Priority &amp; VLAN） 改变网络控制器MAC地址 默认值：不存在</p>
</li>
<li><p>优先级和VLAN IEEE 802.1Q数据包信息用以表示每一个数据包的优先级和其所属的虚拟局域网，设置这个选项可以启用硬件加速优先级数据包传输或加入虚拟局域网识别标志 选项 说明 优先级 &amp; VLAN 关闭 关闭优先级传输和虚拟局域网 优先级 &amp; VLAN 开启 开启优先级传输和虚拟局域网 (默认值) 优先级开启 开机优先级传输 VLAN 开启 开启虚拟局域网硬件标志功能</p>
</li>
<li><p>接收端缓冲区(Receive Buffers) 设置接收端缓冲区 选项 范围 缓冲区大小 1~512 (默认值:512) 建议：开最大。</p>
</li>
<li><p>接收端调整 接收端调整(Received Side Scaling, RSS)是一种动态指派多核心处理器接收数据包的负载均衡机制，借由调整多核心处理器处理接收数据包以达到多核心系统的处理器负载均衡。 选项 说明 开启 开启接收端调整 (默认值) 关闭 关闭接收端调整 注意： RTL8168C及RTL8102E系列网络控制器才支持接收端调整。</p>
</li>
<li><p>关机网络唤醒 设置关机后可从网络唤醒</p>
</li>
</ol>
<p>选项 说明 开启 开机关机后网络唤醒 关闭 关闭关机后网络唤醒(默认值)</p>
<ol start="15">
<li><p>连接速度&#x2F;双工模式(Speed &amp; Duplex) 切换连接速度和双工模式 选项 说明 自动侦测 自动侦测连接网络的连接速度和双工模式(默认值) 10Mbps半双工 设置为 10Mbps半双工连接模式 10Mbps全双工 设置为 10Mbps全双工连接模式 100Mbps半双工 设置为 100Mbps半双工连接模式 100Mbps全双工 设置为100Mbps全双工连接模式 1000Mbps全双工 设置为1000Mbps全双工连接模式 (*) 注意：RTL8101E、RTL8102E及RTL8139系列网络控制器为10&#x2F;100 Mbps，所以并不支持1000 Mbps的连接速度。</p>
</li>
<li><p>TCP 硬件校验和 (IPv4) （TCP Checksum Offload(IPv4)） 设置硬件加速TCP校验和 (IPv4)</p>
</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速TCP校验和(IPv4) Rx &amp; Tx 开启 启用硬件加速接收端及传输端TCP校验和(IPv4)(默认值) Rx 开启 启用硬件加速接收端TCP校验和(IPv4) Tx 开启 启用硬件加速传输端TCP校验和 (IPv4) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="17">
<li>TCP 硬件校验和 (IPv6) （TCP Checksum Offload(IPv4)） 设置硬件加速TCP校验和 (IPv6)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速TCP校验和(IPv6) Rx &amp; Tx 开启 启用硬件加速接收端及传输端TCP校验和(IPv6)(默认值) Rx 开启 启用硬件加速接收端TCP校验和(IPv6) Tx 开启 启用硬件加速传输端TCP校验和(IPv6) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="18">
<li><p>传送缓冲区（Transmit Buffers） 设置传送缓冲区 缓冲区大小:1~128 (默认值:128) 建议：最大</p>
</li>
<li><p>UDP 硬件校验和 (IPv4)（UDP Checksum Offload(IPv4)） 设置硬件加速UDP校验和 (IPv4)</p>
</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速UDP校验和(IPv4) Rx &amp; Tx 开启 启用硬件加速接收端及传输端UDP校验和(IPv4)(默认值) Rx 开启 启用硬件加速接收端UDP校验和(IPv4) Tx 开启 启用硬件加速传输端UDP校验和(IPv4) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="20">
<li>UDP 硬件校验和 (IPv6) (IPv4)（UDP Checksum Offload(IPv6)） 设置硬件加速UDP校验和 (IPv6)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速UDP校验和(IPv6) Rx &amp; Tx 开启 启用硬件加速接收端及传输端UDP校验和(IPv6)(默认值) Rx 开启 启用硬件加速接收端UDP校验和(IPv6) Tx 开启 启用硬件加速传输端UDP校验和(IPv6) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="21">
<li><p>Wake on Magic Packet AMD公司的一项技术，网络发送(magic packet)数据包到某网卡，唤醒计算机的。</p>
</li>
<li><p>Wake on pattern match</p>
</li>
</ol>
<p>又是一种唤醒技术</p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>netcard</tag>
      </tags>
  </entry>
  <entry>
    <title>修改Hosts文件加速访问GitHub</title>
    <url>/2020/03/15/ip-for-github/</url>
    <content><![CDATA[<p>在公司使用中国电信的公司宽带访问Github速度虽然不是飞快，但还是能够下载的。不过回家是用的移动宽带，访问github时能打开首页就算时烧高香了。那么首先想到的就是修改Hosts直接访问Github的地址，避免国内的CDN污染和线路瞎JB跳。 先说成果：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Github</span>
<span class="token number">52.74</span>.223.119 github.com
<span class="token number">140.82</span>.114.3 github.com
<span class="token number">185.199</span>.108.154 github.githubassets.com
<span class="token number">185.199</span>.109.154 github.githubassets.com
<span class="token number">185.199</span>.110.153 github.io
<span class="token number">185.199</span>.111.153 github.io
<span class="token number">140.82</span>.113.10 nodeload.github.com
<span class="token number">69.171</span>.234.29  github.global.ssl.fastly.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>效果么，只能说能用了。 方法很简单，就是打开站长之家的DNS检测工具，然后观察GitHub访问会用到那些域名，再把域名对应的IP查出来，把TTL值最小的写入hosts文件。虽然无聊，但是有效。</p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hosts</tag>
      </tags>
  </entry>
  <entry>
    <title>使用CDH示例程序进行字数统计</title>
    <url>/2020/03/09/wordcount-by-cdh/</url>
    <content><![CDATA[<p>Wordcount程序是Hadoop上的经典“HelloWorld”程序。CDH系统自带了wordcount程序来检测部署的成功与否。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 解压提前准备好的莎士比亚全集</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ <span class="token function">gzip</span> <span class="token parameter variable">-d</span> shakespeare.txt.gz

<span class="token comment"># 上传至hadoop文件系统</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs <span class="token parameter variable">-mkdir</span> /user/sujx/input
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs <span class="token parameter variable">-put</span> shakespeare.txt /user/sujx/input

<span class="token comment"># 查看有哪些测试程序可用</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hadoop jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar
An example program must be given as the first argument.
Valid program names are:
  aggregatewordcount: An Aggregate based map/reduce program that counts the words <span class="token keyword">in</span> the input files.
  aggregatewordhist: An Aggregate based map/reduce program that computes the histogram of the words <span class="token keyword">in</span> the input files.
  bbp: A map/reduce program that uses Bailey-Borwein-Plouffe to compute exact digits of Pi.  dbcount: An example job that count the pageview counts from a database.
  distbbp: A map/reduce program that uses a BBP-type formula to compute exact bits of Pi.    grep: A map/reduce program that counts the matches of a regex <span class="token keyword">in</span> the input.
  join: A job that effects a <span class="token function">join</span> over sorted, equally partitioned datasets
  multifilewc: A job that counts words from several files.
  pentomino: A map/reduce tile laying program to <span class="token function">find</span> solutions to pentomino problems.       pi: A map/reduce program that estimates Pi using a quasi-Monte Carlo method.
  randomtextwriter: A map/reduce program that writes 10GB of random textual data per node.   randomwriter: A map/reduce program that writes 10GB of random data per node.
  secondarysort: An example defining a secondary <span class="token function">sort</span> to the reduce.
  sort: A map/reduce program that sorts the data written by the random writer.
  sudoku: A sudoku solver.
  teragen: Generate data <span class="token keyword">for</span> the terasort
  terasort: Run the terasort
  teravalidate: Checking results of terasort
  wordcount: A map/reduce program that counts the words <span class="token keyword">in</span> the input files.
  wordmean: A map/reduce program that counts the average length of the words <span class="token keyword">in</span> the input files.
  wordmedian: A map/reduce program that counts the median length of the words <span class="token keyword">in</span> the input files.
  wordstandarddeviation: A map/reduce program that counts the standard deviation of the length of the words <span class="token keyword">in</span> the input files.

<span class="token comment"># 执行mapreduce运算，output文件夹会自动建立</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hadoop jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar wordcount /user/sujx/input/shakespeare.txt /user/sujx/output/

<span class="token comment"># 查看输出结果</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs <span class="token parameter variable">-ls</span> /user/sujx/output
Found <span class="token number">4</span> items
-rw-r--r--   <span class="token number">3</span> sujx supergroup          <span class="token number">0</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/_SUCCESS      -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">238211</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00000  -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">236617</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00001  -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">238668</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00002 

<span class="token comment"># 查看输出内容</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs <span class="token parameter variable">-tail</span> /user/sujx/output/part-r-00000
<span class="token builtin class-name">.</span>       <span class="token number">3</span>
writhled        <span class="token number">1</span>
writing,        <span class="token number">4</span>
writings.       <span class="token number">1</span>
writs   <span class="token number">1</span>
written,        <span class="token number">3</span>
wrong   <span class="token number">112</span>
wrong'd-        <span class="token number">1</span>
wrong-should    <span class="token number">1</span>
wrong.  <span class="token number">39</span>
wrong:  <span class="token number">1</span>
wronged <span class="token number">11</span>
wronged.        <span class="token number">3</span>
wronger,        <span class="token number">1</span>
wronger<span class="token punctuation">;</span>        <span class="token number">1</span>
wrongfully?     <span class="token number">1</span>
wrongs  <span class="token number">40</span>
wrongs, <span class="token number">9</span>
wrongs<span class="token punctuation">;</span> <span class="token number">9</span>
wrote?  <span class="token number">1</span>
wrought,        <span class="token number">4</span>
…………<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Bigdata</category>
        <category>Other</category>
      </categories>
      <tags>
        <tag>bigdata</tag>
        <tag>mapreduce</tag>
        <tag>wordcount</tag>
        <tag>yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>HDFS初步使用</title>
    <url>/2020/03/01/use-hdfs-newbie/</url>
    <content><![CDATA[<p>HDFS(Hadoop Distributed File System)是可扩展、容错、高性能的分布式文件系统，异步复制，一次写入多次读取，主要负责存储。其概念和内容可以参考<a href="https://www.cnblogs.com/binarylei/p/8903601.html" title="这里">[1]</a>。这里就做一个简单的实验来看一下其文件管理的功能。更多的Hadoop命令可以参考<a href="http://dblab.xmu.edu.cn/blog/1625-2/" title="这里">[2]</a>。</p>
<h3 id="用户建立"><a href="#用户建立" class="headerlink" title="用户建立"></a>用户建立</h3><p>在实验环境中，不建议使用root账号直接登录运行，所以建立一个普通账号。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Elephant主机执行</span>
<span class="token comment"># 安装ansible</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># yum install -y ansible</span>
<span class="token comment"># 在/etc/ansible/hosts中新增所有主机名</span>
<span class="token comment"># 建立ansible文件</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mkdir playbook</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># vim ./playbook/useradd.yaml</span>
---
- hosts: hadoop
  remote_user: root
  vars_prompt:
    - name: user_name
      prompt: Enter Username
      private: no
    - name: user_passwd
      prompt: Enter Password
      encrypt: <span class="token string">"sha512_crypt"</span>
      confirm: <span class="token function">yes</span>
  tasks:
    - name: create user
      user:
        name: <span class="token string">"&#123;&#123;user_name&#125;&#125;"</span>
        password: <span class="token string">"&#123;&#123;user_passwd&#125;&#125;"</span>

<span class="token comment"># 执行</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible-playbook ./playbook/useradd.yaml</span>
Enter Username: sujx
Enter Password:
confirm Enter Password:

PLAY <span class="token punctuation">[</span>hadoop<span class="token punctuation">]</span> *****************************************************************************<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="HDFS文件使用"><a href="#HDFS文件使用" class="headerlink" title="HDFS文件使用"></a>HDFS文件使用</h3><p>我们先将准备的481M文件(access.log)上传至用户家目录，看看这个文件将在hdfs文件系统中如何存储。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># su hdfs</span>
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hadoop fs <span class="token parameter variable">-mkdir</span> /user/sujx
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hadoop fs <span class="token parameter variable">-chown</span> sujx /user/sujx
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ <span class="token function">su</span> sujx -
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hdfs dfs <span class="token parameter variable">-put</span> access_log weblog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后，我们通过hdfs的web控制台就可以看到文件的存储情况，可见文件以3副本的形式，按照每个128M大小的存储块分割存储在namenode之上。当前情况是分成了4块。 <img src="https://cdn.sujx.net/hdfs_01.png" alt="show"> <img src="https://cdn.sujx.net/hdfs_02.png" alt="block"> 我们可以从lion主机中看到存储的数据块。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># tree /dfs</span>
/dfs
<span class="token variable"><span class="token variable">`</span>-- dn
    -- current
       -- BP-752680285-192.168.174.131-1582986010714
          -- current
             -- VERSION
             -- dfsUsed
             -- finalized
                <span class="token variable">`</span></span>-- subdir0
                    -- subdir0
                    -- subdir1
                    -- subdir2
                    -- subdir3
                       -- blk_1073742734
                       -- blk_1073742734_1910.meta
                    <span class="token variable"><span class="token variable">`</span>-- subdir4
             <span class="token variable">`</span></span>-- rbw
          -- scanner.cursor
          <span class="token variable"><span class="token variable">`</span>-- tmp
       <span class="token variable">`</span></span>-- VERSION
    `-- in_use.lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>bigdata</tag>
        <tag>hdfs</tag>
      </tags>
  </entry>
  <entry>
    <title>离线部署CDH5.16.2</title>
    <url>/2020/02/29/offline-deploy-cdh5/</url>
    <content><![CDATA[<p>在实践了CDH6的离线部署之后，发现Cloudera的官方教程是基于CDH5.10的。同时，CDH6的内存占用比较高，我的机器有点遭不住，所以又把CDH5的部署实施走了一遍。</p>
<h3 id="模板部署"><a href="#模板部署" class="headerlink" title="模板部署"></a>模板部署</h3><ol>
<li>安装CentOS7.10，并完成yum升级；</li>
<li>所有主机时间与阿里云时间服务器同步；</li>
<li>关闭selinux和firewalld；</li>
<li>安装JDK和mysql-connect；</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># wget https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.rpm</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># yum localinstall jdk-8u202-linux-x64.rpm</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mv mysql-connector-java-5.1.39-bin.jar /usr/share/java/mysql-connector-java.jar </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>关闭透明大页；</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/rc.d/rc.local</span>

<span class="token comment"># 在最后一行添加如下内容</span>
<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> /sys/kernel/mm/transparent_hugepage/enabled<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/enabled
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> /sys/kernel/mm/transparent_hugepage/defrag<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/defrag
<span class="token keyword">fi</span>

<span class="token comment"># 赋予rc.local具有可执行权限</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># chmod +x /etc/rc.d/rc.local</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># sh /etc/rc.d/rc.local</span>

<span class="token comment"># 检查</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /sys/kernel/mm/transparent_hugepage/defrag</span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /sys/kernel/mm/transparent_hugepage/enabled</span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li>调整swap策略</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo 10 > /proc/sys/vm/swappiness</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo vm.swappiness = 10 >> /etc/sysctl.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="7">
<li>修改文件句柄数</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/security/limits.conf</span>
<span class="token comment"># 添加如下内容</span>
* soft nofile <span class="token number">100000</span>
* hard nofile <span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="8">
<li>收尾</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># sys-unconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol start="9">
<li>下载CM和CDH</li>
</ol>
<p><a href="http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.16.2/RPMS/x86_64/" title="CM下载地址">CM下载地址</a> <a href="http://archive.cloudera.com/cdh5/parcels/5.16.2/" title="CDH下载地址">CDH下载地址</a></p>
<h3 id="Agent部署"><a href="#Agent部署" class="headerlink" title="Agent部署"></a>Agent部署</h3><ol>
<li>配置主机ssh信任</li>
<li>安装ansible</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># yum install -y ansible</span>

<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
CDH-5.16.2-1.cdh5.16.2.p0.8-el5.parcel.sha1
CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel
Mail
anaconda-ks.cfg
cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-server-db-2-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
enterprise-debuginfo-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
hadoop.tar.gz
jdk-8u202-linux-x64.rpm
manifest.json
mysql-connector-java-5.1.39-bin.jar

<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mkdir client</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mv cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm client/</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mv cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm client/</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># tar zcvf client.tar.gz client/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>分发</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -m copy -a 'src=/root/client.tar.gz dest=/root/'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'tar zxf /root/client.tar.gz'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="4">
<li>安装</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'yum localinstall /root/client/cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'yum localinstall /root/client/cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span>

<span class="token comment"># 修改配置文件</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># sed -i ':s/localhost/lion/g' /etc/cloudera-scm-agent/config.ini</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion,tiger,horse,monkey -m copy -a 'src=/etc/cloudera-scm-agent/config.ini dest=/etc/cloudera-scm-agent/'</span>

<span class="token comment"># 重启服务</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'systemctl enable cloudera-scm-agent --now'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'systemctl restart cloudera-scm-agent'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="管理主机部署"><a href="#管理主机部署" class="headerlink" title="管理主机部署"></a>管理主机部署</h3><ol>
<li>安装</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm dest=/root/'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel dest=/opt/cloudera/parcel-repo'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/manifest.json dest=/opt/cloudera/parcel-repo'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -a 'yum localinstall /root/cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>数据库部署</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -a 'yum install -y mariadb mariadb-server'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ssh lion</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/my.cnf.d/server.cnf</span>
<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
key_buffer <span class="token operator">=</span> 16M
key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> <span class="token number">64</span>
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> <span class="token number">1</span>
max_connections <span class="token operator">=</span> <span class="token number">550</span>
<span class="token assign-left variable">server_id</span><span class="token operator">=</span><span class="token number">1</span>

binlog_format <span class="token operator">=</span> mixed
read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> <span class="token number">1</span>
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> <span class="token number">2</span>
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G
innodb_thread_concurrency <span class="token operator">=</span> <span class="token number">8</span>
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable mariadb --now</span>

<span class="token function">vim</span> cdh.sql

CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON scm.* TO <span class="token string">'scm'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON amon.* TO <span class="token string">'amon'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON rman.* TO <span class="token string">'rman'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON hue.* TO <span class="token string">'hue'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON metastore.* TO <span class="token string">'hive'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON sentry.* TO <span class="token string">'sentry'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON nav.* TO <span class="token string">'nav'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON navms.* TO <span class="token string">'navms'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON oozie.* TO <span class="token string">'oozie'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>

<span class="token comment"># 导入数据库</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p &lt; cdh.sql</span>

<span class="token comment"># 扩展数据库架构和CDH6有区别</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># cp /usr/share/java/mysql-connector-java.jar /usr/share/cmf/lib/</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># sh /usr/share/cmf/schema/scm_prepare_database.sh mysql scm scm</span>
Enter SCM password:
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk1.8.0_202-amd64
Verifying that we can <span class="token function">write</span> to /etc/cloudera-scm-server
Creating SCM configuration <span class="token function">file</span> <span class="token keyword">in</span> /etc/cloudera-scm-server
Executing:  /usr/java/jdk1.8.0_202-amd64/bin/java <span class="token parameter variable">-cp</span> /usr/share/java/mysql-connector-java.jar:/usr/share/java/oracle-connector-java.jar:/usr/share/java/postgresql-connector-java.jar:/usr/share/cmf/schema/<span class="token punctuation">..</span>/lib/* com.cloudera.enterprise.dbutil.DbCommandExecutor /etc/cloudera-scm-server/db.properties com.cloudera.cmf.db.
<span class="token punctuation">[</span>                          main<span class="token punctuation">]</span> DbCommandExecutor              INFO  Successfully connected to database.
All done, your SCM database is configured correctly<span class="token operator">!</span>

<span class="token comment"># 启动服务</span>
<span class="token punctuation">[</span>root@lion parcel-repo<span class="token punctuation">]</span><span class="token comment"># cd /opt/cloudera/parcel-repo/</span>
<span class="token punctuation">[</span>root@lion parcel-repo<span class="token punctuation">]</span><span class="token comment"># sha1sum CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel  awk '&#123; print $1 &#125;' > CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># chkconfig cloudera-scm-server on</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># systemctl start cloudera-scm-server</span>

<span class="token comment"># 检查结果</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp grep 7180</span>
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:7180            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">3907</span>/java <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="GUI安装"><a href="#GUI安装" class="headerlink" title="GUI安装"></a>GUI安装</h3><p>接下来的安装就相对简单了，基本比CDH6简单。 <img src="https://cdn.sujx.net/cdh5_01.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_02.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_03.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_04.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_05.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_06.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_07.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_08.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_09.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_10.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_11.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_12.png" alt="end" title="end"></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>cdh</tag>
        <tag>bigdata</tag>
        <tag>cdh5</tag>
        <tag>offline</tag>
      </tags>
  </entry>
  <entry>
    <title>wHAT is HDFS?</title>
    <url>/2020/02/23/what-is-hdfs/</url>
    <content><![CDATA[<p>Hadoop实现了一个分布式文件系统（Hadoop Distributed File System），简称HDFS。HDFS有高容错性的特点，并且设计用来部署在低廉的（low-cost）硬件上；而且它提供高吞吐量（high throughput）来访问应用程序的数据，适合那些有着超大数据集（large data set）的应用程序。HDFS放宽了（relax）POSIX的要求，可以以流的形式访问（streaming access）文件系统中的数据。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ol>
<li>HDFS集群分为两大角色：NameNode、DataNode；</li>
<li>NameNode负责管理整个文件系统的元数据,second namenode是namenode的冷备；</li>
<li>DataNode 负责管理用户的文件数据块；</li>
<li>文件会按照固定的大小（blocksize）(128M)切成若干块后分布式存储在若干台datanode上；</li>
<li>每一个文件块可以有多个副本，并存放在不同的datanode上；</li>
<li>Datanode会定期向Namenode汇报自身所保存的文件block信息，而namenode则会负责保持文件的副本数量；</li>
<li>HDFS的内部工作机制对客户端保持透明，客户端请求访问HDFS都是通过向namenode申请来进行；</li>
</ol>
<h3 id="写过程"><a href="#写过程" class="headerlink" title="写过程"></a>写过程</h3><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.sujx.net/hdfswrite.png" alt="HDFS_write" title="HDFS_write"></h2><ol>
<li>Client调用DistributedFileSystem对象的create方法，创建一个文件输出流（FSDataOutputStream）对象</li>
<li>通过DistributedFileSystem对象与Hadoop集群的NameNode进行一次RPC远程调用，在HDFS的Namespace中创建一个文件条目（Entry），该条目没有任何的Block</li>
<li>通过FSDataOutputStream对象，向DataNode写入数据，数据首先被写入FSDataOutputStream对象内部的Buffer中，然后数据被分割成一个个Packet数据包</li>
<li>以Packet最小单位，基于Socket连接发送到按特定算法选择的HDFS集群中一组DataNode（正常是3个，可能大于等于1）中的一个节点上，在这组DataNode组成的Pipeline上依次传输Packet</li>
<li>这组DataNode组成的Pipeline反方向上，发送ack，最终由Pipeline中第一个DataNode节点将Pipeline ack发送给Client</li>
<li>完成向文件写入数据，Client在文件输出流（FSDataOutputStream）对象上调用close方法，关闭流</li>
<li>调用DistributedFileSystem对象的complete方法，通知NameNode文件写入成功</li>
</ol>
<h3 id="读过程"><a href="#读过程" class="headerlink" title="读过程"></a>读过程</h3><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://cdn.sujx.net/hdfsread.png" alt="HDFS_read" title="HDFS_read"></h2><ol>
<li>Client向NameNode发起RPC请求,来确定请求文件block所在的位置</li>
<li>NameNode会视情况返回文件的部分或者全部block列表,对于每个block,NameNode都会返回含有该block副本的DataNode地址</li>
<li>这些返回的DN地址,会按照集群拓扑结构得出DataNode与客户端的距离,然后进行排序,排序两个规则:网络拓扑结构中距离Client的排在前;心跳机制中超时汇报的DN状态为STALE,这样的排在后</li>
<li>Clietn选取排序靠前的DataNode来读取block,如果客户端本身就是DataNode,那么将从本地直接获取数据</li>
<li>底层本质是建立Socket Stream(FSDataInputStream) ,重复调用父类DataInputStream的read方法,知道这个块上的数据读取完毕</li>
<li>当读完列表的block后,若文件读取还没有结束,客户端会继续想NameNode获取下一批的block列表</li>
<li>读取完一个Block都会进行checksum验证,如果读取DataNode时出现错误,客户端会通知NameNode,然后再从下一个拥有该block副本的DataNode继续读取。注: 如果在读取过程中DFSInputStream检测到block错误,DFSInputStream也会检查从datanode读取来的数据的校验和,如果发现有数据损坏,它会把坏掉的block报告给namenode同时重新读取其他datanode上的其他block备份</li>
<li>read方法是并行的读取block信息,不是一块一块的读取,NameNode只是返回Client请求包含块的DataNode地址,并不是返回请求块的数据</li>
<li>最终读取哎所有的block会合并成一个完整的最终文件</li>
</ol>
<h3 id="副本放置策略"><a href="#副本放置策略" class="headerlink" title="副本放置策略"></a>副本放置策略</h3><ol>
<li>第一个副本：放置在上传文件的DN；如果是集群外提交，则随机挑选一台磁盘不太满，CPU不太忙的节点</li>
<li>第二个副本：放置在于第一个副本不同的机架的节点上</li>
<li>第三个副本：与第二个副本相同机架的节点</li>
<li>更多副本：随机节点</li>
</ol>
<h3 id="NameNode-内存使用"><a href="#NameNode-内存使用" class="headerlink" title="NameNode 内存使用"></a>NameNode 内存使用</h3><p>NameNode内存数据主要对整个文件系统元数据的管理。Namenode目前元数据管理可以分成两个层次，一个是Namespace的管理层，这一层负责管理HDFS分布式文件系统中的树状目录和文件结构；另一层则为Block管理层，这一层负责管理HDFS分布式文件系统中存储文件到物理块之间的映射关系BlocksMap元数据。其中对Namespace的管理数据除在内存常驻外，会定期Flush到持久化设备中；对BlocksMap元数据的管理只存在内存；当NameNode发生重启，需要从持久化设备中读取Namespace管理数据，并重新构造BlocksMap。 除了对文件系统本身元数据的管理外，NameNode还需要维护DataNode本身的元数据，这部分空间相对固定，且占用空间较小。 从实际Hadoop集群环境历史数据看，当Namespace中包含INode（目录和文件总量）<del>140M，数据块数量</del>160M，常驻内存使用量达在~50G。随着数据规模的持续增长，内存占用接近同步线性增长。在整个HDFS服务中，NameNode的核心作用及内存数据结构的重要地位，所以分析内存使用情况对维护HDFS服务稳定性至关重要。</p>
<h3 id="漫画HDFS"><a href="#漫画HDFS" class="headerlink" title="漫画HDFS"></a>漫画HDFS</h3><p><img src="https://cdn.sujx.net/HDFS_001.png" alt="HDFS_001" title="HDFS_001"> <img src="https://cdn.sujx.net/HDFS_002.png" alt="HDFS_002" title="HDFS_002"> <img src="https://cdn.sujx.net/HDFS_003.png" alt="HDFS_003" title="HDFS_003"></p>
]]></content>
      <categories>
        <category>System</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>bigdata</tag>
        <tag>hdfs</tag>
        <tag>hdoop</tag>
      </tags>
  </entry>
  <entry>
    <title>离线部署CDH6.3</title>
    <url>/2020/02/14/cdh6-3-deploy/</url>
    <content><![CDATA[<p>部署练习的环境有六台主机，主机的配置是4核心4G内存(内存还是低了，建议8G起步)：</p>
<p>主机名</p>
<p>IP地址</p>
<p>Elephant</p>
<p>192.168.174.184</p>
<p>Lion</p>
<p>192.168.174.185</p>
<p>Horse</p>
<p>192.168.174.186</p>
<p>Monkey</p>
<p>192.168.174.187</p>
<p>Tiger</p>
<p>192.168.174.188</p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol>
<li>主机环境配置</li>
</ol>
<p>按照各个主机配置修改相应值，下面以elephant为例：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nmcli c m ens33 ipv4.method manual ipv4.addresses 192.168.174.184/24 ipv4.gateway 192.168.174.2 ipv4.dns 192.168.174.2</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nmcli c d ens33 &amp;&amp; nmcli c u ens33</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># hostnamectl set-hostname elephant</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>文件复制 将离线部署CDH6.3.1的文件复制到每一台主机上。其中包括：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sujx@legion7000:/mnt/d/$ <span class="token function">ls</span> Cloudera
CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel
cloudera-manager-agent-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-daemons-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-server-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-server-db-2-6.3.1-1466458.el7.x86_64.rpm
enterprise-debuginfo-6.3.1-1466458.el7.x86_64.rpm
jdk-8u202-linux-x64.rpm
manifest.json
mysql-connector-java-5.1.39-bin.jar

sujx@legion7000:/mnt/d/$ <span class="token function">tar</span> zcvf Cloudera cloudera.tar.gz
sujx@legion7000:/mnt/d/$ <span class="token function">scp</span> cloudera.tar.gz root@lion:/root/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>免密登录设置</li>
</ol>
<p>在lion主机上设置免密：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa
ssh-copy-id <span class="token punctuation">&#123;</span>elephant<span class="token punctuation">\</span>lion<span class="token punctuation">\</span>horse<span class="token punctuation">\</span>monkey<span class="token punctuation">\</span>tiger<span class="token punctuation">&#125;</span>

<span class="token comment"># 使用ansible分发和管理文件，省略配置文件的建立</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ansible

ansible <span class="token parameter variable">-m</span> copy <span class="token parameter variable">-a</span> <span class="token string">'src=/root/cloudera.tar.gz dest=/root'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>主机配置 建立主机执行文件进行相关配置。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 安装必要组件</span>
yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">mutt</span> net-tools mlocate telnet <span class="token function">curl</span> <span class="token function">wget</span> <span class="token function">ping</span> <span class="token function">vim</span> open-vm-tools

systemctl disable firewalld.service <span class="token parameter variable">--now</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">':s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/sysconfig/selinux
updatedb <span class="token operator">&amp;&amp;</span> <span class="token function">sync</span> <span class="token operator">&amp;&amp;</span> ldconfig

<span class="token comment"># 配置时间服务器</span>
<span class="token function">cat</span> <span class="token operator">></span>/etc/chrony.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
server ntp.aliyun.com iburst

driftfile /var/lib/chrony/drift
makestep 1.0 3
rtcsync
logdir /var/log/chrony

EOF</span>

systemctl <span class="token builtin class-name">enable</span> chronyd <span class="token parameter variable">--now</span>
timedatectl 

<span class="token comment"># 优化</span>
<span class="token comment"># 修改swap配置</span>
<span class="token builtin class-name">echo</span> <span class="token string">"vm.swappiness = 10"</span> <span class="token operator">>></span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token comment"># 修改大页内存的使用</span>
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/defrag
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/enabled
<span class="token builtin class-name">echo</span> <span class="token string">'echo never > /sys/kernel/mm/transparent_hugepage/defrag'</span> <span class="token operator">>></span> /etc/rc.local
<span class="token builtin class-name">echo</span> <span class="token string">'echo never > /sys/kernel/mm/transparent_hugepage/enabled'</span> <span class="token operator">>></span> /etc/rc.local

<span class="token comment"># 安装JAVA</span>
<span class="token function">tar</span> zxvf cloudera.tar.gz
yum localinstall <span class="token parameter variable">-y</span> Cloudera/jdk-8u202-linux-x64.rpm

<span class="token function">java</span> <span class="token parameter variable">-version</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$JAVA_HOME</span>

<span class="token comment"># 建立安装文件源</span>
<span class="token function">wget</span> https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/RPM-GPG-KEY-cloudera
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> RPM-GPG-KEY-cloudera
<span class="token function">wget</span> https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/cloudera-manager.repo <span class="token parameter variable">-O</span> /etc/pki/rpm-gpg/RPM-GPG-KEY-cloudera
yum update <span class="token parameter variable">-y</span>

<span class="token function">mkdir</span> /usr/share/java/
<span class="token function">cp</span> Cloudera/mysql-connector-java-5.1.39-bin.jar  /usr/share/java/mysql-connector-java.jar

yum localinstall <span class="token parameter variable">-y</span> Cloudera/cloudera-manager-daemons* 
yum localinstall <span class="token parameter variable">-y</span> Cloudera/cloudera-manager-agent*

<span class="token comment"># 修改cloudera-scm客户端的服务器目标地址</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">':s/localhost/lion/g'</span> /etc/cloudera-scm-agent/config.ini
systemctl <span class="token builtin class-name">enable</span> cloudera-scm-agent
systemctl restart cloudera-scm-agent

<span class="token comment"># 客户端配置完成</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><p>数据库将部署在Lion主机之上。 1. 数据库安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mariadb mariadb-server

<span class="token comment"># 增加MySQL配置文件</span>
<span class="token function">vim</span> /etc/my.cnf.d/server.cnf
<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
key_buffer <span class="token operator">=</span> 16M
key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> <span class="token number">64</span>
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> <span class="token number">1</span>

max_connections <span class="token operator">=</span> <span class="token number">550</span>
<span class="token assign-left variable">server_id</span><span class="token operator">=</span><span class="token number">1</span>

binlog_format <span class="token operator">=</span> mixed

read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> <span class="token number">1</span>
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> <span class="token number">2</span>
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G
innodb_thread_concurrency <span class="token operator">=</span> <span class="token number">8</span>
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token comment"># 启动数据库服务</span>
systemctl <span class="token builtin class-name">enable</span> mariadb <span class="token parameter variable">--now</span>

<span class="token number">2</span>. 建立数据库配置文件
<span class="token function">vim</span> /root/cdh.sql
CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON scm.* TO <span class="token string">'scm'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON amon.* TO <span class="token string">'amon'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON rman.* TO <span class="token string">'rman'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON hue.* TO <span class="token string">'hue'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON metastore.* TO <span class="token string">'hive'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON sentry.* TO <span class="token string">'sentry'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON nav.* TO <span class="token string">'nav'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON navms.* TO <span class="token string">'navms'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON oozie.* TO <span class="token string">'oozie'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>

mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span> /root/cdh.sql
/opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm

<span class="token comment">### 管理节点安装</span>
```shell
yum localinstall <span class="token parameter variable">-y</span> Clouder/cloudera-manager-server.6*
<span class="token function">cp</span> Cloudera/CDH* /opt/cloudera/parcel-repo
<span class="token function">cp</span> Cloudera/main* /opt/cloudera/parcel-repo
<span class="token builtin class-name">cd</span> /opt/cloudera/parcel-repo
<span class="token comment"># wget https://archive.cloudera.com/cdh6/6.3.2/parcels/CDH-6.3.2-1.cdh6.3.2.p0.1605554-el6.parcel -P /opt/cloudera/parcel-repo</span>
<span class="token comment"># wget https://archive.cloudera.com/cdh6/6.3.2/parcels/manifest.json -P /opt/cloudera/parcel-repo</span>
sha1sum CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel  <span class="token function">awk</span> <span class="token string">'&#123; print $1 &#125;'</span> <span class="token operator">></span> CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha
<span class="token function">chown</span> <span class="token parameter variable">-R</span> cloudera-scm:cloudera-scm /opt/cloudera/parcel-repo/*
systemctl <span class="token builtin class-name">enable</span> cloudera-scm-server <span class="token parameter variable">--now</span>
<span class="token builtin class-name">cd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="群集配置"><a href="#群集配置" class="headerlink" title="群集配置"></a>群集配置</h3><p>访问Lion主机的7180端口，然后使用web-gui界面进行配置。 <img src="https://cdn.sujx.net/cdh-001.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-002.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-003.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-004.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-005.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-006.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-007.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-008.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-009.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-010.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-011.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-012.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-013.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-014.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-015.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-016.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-017.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-018.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-019.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-020.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-021.png" alt="start" title="start"></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>cdh</tag>
        <tag>centos</tag>
        <tag>deploy</tag>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS8的软件库</title>
    <url>/2020/01/31/centos8-mirrors/</url>
    <content><![CDATA[<p>相对于华为和阿里云的mirrors，中国科技大学的mirrors的完整性和速度要好一些，而且配置文件也方便一些。现在把相关文件记一下：</p>
<h3 id="系统repo"><a href="#系统repo" class="headerlink" title="系统repo"></a>系统repo</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>BaseOS<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Base
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/BaseOS/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token comment">#additional packages that may be useful</span>
<span class="token punctuation">[</span>extras<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Extras
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/extras/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token comment">#additional packages that extend functionality of existing packages</span>
<span class="token punctuation">[</span>centosplus<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Plus
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/centosplus/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token punctuation">[</span>AppStream<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - AppStream
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/AppStream/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token punctuation">[</span>PowerTools<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - PowerTools
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=PowerTools&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/PowerTools/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>mirrors</tag>
        <tag>repo</tag>
        <tag>tsinghua</tag>
      </tags>
  </entry>
  <entry>
    <title>使用脚本一键部署堡垒机</title>
    <url>/2019/12/19/use-sh-deploy-jumpsever/</url>
    <content><![CDATA[<p>部门领导要求研究一下堡垒机的使用，所以花了两天时间研究了一下开源堡垒机的部署和使用。因为官方文档中有些已经有了部分错误，现在以官方的CentOS8版本的安装文档为蓝本把部署过程以脚本的形式备份一下。 其中，主要的变化是使用了官方源的nginx、修改了python安装的几个组件的版本、部署了堡垒机jms服务、koko服务和guacamole服务的systemd自启动脚本。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 2020.01.15</span>
<span class="token comment"># sujx@live.cn</span>

<span class="token comment"># 安装依赖包</span>
yum update <span class="token parameter variable">-y</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">wget</span> gcc epel-release <span class="token function">git</span> telnet openssh-clients dnf-utils <span class="token function">vim</span> 
yum update <span class="token parameter variable">-y</span>

<span class="token comment"># 下载 Jumpserver</span>
<span class="token builtin class-name">cd</span> /opt/
<span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://github.com/jumpserver/jumpserver.git

<span class="token comment"># 防火墙 与 selinux 设置说明, 如果已经关闭了 防火墙 和 Selinux 的用户请跳过设置</span>
systemctl start firewalld
<span class="token comment"># nginx 端口</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>http <span class="token parameter variable">--permanent</span>  
<span class="token comment"># 用户SSH登录端口 koko</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">2222</span>/tcp <span class="token parameter variable">--permanent</span>  
<span class="token comment"># 重新载入规则</span>
firewall-cmd <span class="token parameter variable">--reload</span>  
<span class="token comment"># SElinux配置</span>
setsebool <span class="token parameter variable">-P</span> httpd_can_network_connect <span class="token number">1</span>

<span class="token comment"># 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> redis
systemctl <span class="token builtin class-name">enable</span> redis <span class="token parameter variable">--now</span>

<span class="token comment"># 安装 MySQL, 如果不使用 Mysql 可以跳过相关 Mysql 安装和配置, 支持sqlite3, mysql, postgres等</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mariadb mariadb-devel mariadb-server sshpass
systemctl <span class="token builtin class-name">enable</span> mariadb <span class="token parameter variable">--now</span>

<span class="token comment"># 创建数据库 Jumpserver 并授权</span>
<span class="token assign-left variable">DB_PASSWORD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> <span class="token parameter variable">-dc</span> A-Za-z0-9  <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">24</span><span class="token variable">`</span></span>  <span class="token comment"># 生成随机数据库密码</span>

<span class="token function">cat</span> <span class="token operator">></span>~/passwd.txt<span class="token operator">&lt;&lt;</span><span class="token string">EOF
数据库密码是 <span class="token variable">$DB_PASSWORD</span>
EOF</span>

mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-e</span> <span class="token string">"create database jumpserver default charset 'utf8'; grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by '<span class="token variable">$DB_PASSWORD</span>'; flush privileges;"</span>

<span class="token comment"># 安装 Nginx, 用作代理服务器整合 Jumpserver 与各个组件</span>

yum <span class="token parameter variable">-y</span> <span class="token function">install</span> nginx
systemctl <span class="token builtin class-name">enable</span> nginx <span class="token parameter variable">--now</span>

<span class="token comment"># 安装 Python3.6</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> python36 python36-devel
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> krb5-devel libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel tcl-devel tk-devel openldap-devel libffi-devel openldap-clients

<span class="token comment"># 安装 Python 库依赖</span>
<span class="token comment"># 配置使用华为python源</span>
<span class="token function">mkdir</span> ~/.pip
<span class="token function">cat</span> <span class="token operator">></span>~/.pip/pip.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
[global]
index-url = https://mirrors.huaweicloud.com/repository/pypi/simple
trusted-host = mirrors.huaweicloud.com
timeout = 120 
EOF</span>

<span class="token comment"># 配置并载入 Python3 虚拟环境</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token comment"># py3 为虚拟环境名称, 可自定义</span>
python3 <span class="token parameter variable">-m</span> venv py3  
<span class="token comment"># 退出虚拟环境可以使用 deactivate 命令</span>
<span class="token builtin class-name">source</span> /opt/py3/bin/activate  

pip <span class="token function">install</span> wheel setuptools
pip <span class="token function">install</span> pip <span class="token parameter variable">--upgrade</span>
pip <span class="token function">install</span> python-gssapi

<span class="token comment"># 修改依赖包版本</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/Django==2.1.11/Django==2.2/g"</span> /opt/jumpserver/requirements/requirements.txt
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/cryptography==2.3.1/cryptography==2.7/g"</span> /opt/jumpserver/requirements/requirements.txt
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/pyasn1==0.4.2/pyasn1==0.4.6/g"</span> /opt/jumpserver/requirements/requirements.txt

pip <span class="token function">install</span> <span class="token parameter variable">-r</span> /opt/jumpserver/requirements/requirements.txt

<span class="token comment"># 修改 Jumpserver 配置文件</span>
<span class="token builtin class-name">cd</span> /opt/jumpserver
<span class="token function">cp</span> config_example.yml config.yml

<span class="token comment"># 生成随机SECRET_KEY</span>
<span class="token assign-left variable">SECRET_KEY</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> <span class="token parameter variable">-dc</span> A-Za-z0-9  <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">50</span><span class="token variable">`</span></span>  
<span class="token builtin class-name">echo</span> <span class="token string">"SECRET_KEY=<span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token comment"># 生成随机BOOTSTRAP_TOKEN</span>
<span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> <span class="token parameter variable">-dc</span> A-Za-z0-9  <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">16</span><span class="token variable">`</span></span>  
<span class="token builtin class-name">echo</span> <span class="token string">"BOOTSTRAP_TOKEN=<span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/SECRET_KEY:/SECRET_KEY: <span class="token variable">$SECRET_KEY</span>/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: <span class="token variable">$BOOTSTRAP_TOKEN</span>/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/# DEBUG: true/DEBUG: false/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/# LOG_LEVEL: DEBUG/LOG_LEVEL: ERROR/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/# SESSION_EXPIRE_AT_BROWSER_CLOSE: false/SESSION_EXPIRE_AT_BROWSER_CLOSE: true/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/DB_PASSWORD: /DB_PASSWORD: <span class="token variable">$DB_PASSWORD</span>/g"</span> /opt/jumpserver/config.yml

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"SECRET_KEY是 <span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">>></span> ~/passwd.txt
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"BOOTSTRAP_TOKEN是 <span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">>></span> ~/passwd.txt

<span class="token comment"># 退出虚拟环境可以使用 deactivate 命令</span>

<span class="token comment"># 运行 Jumpserver</span>
<span class="token comment">#cd /opt/jumpserver</span>
<span class="token comment">#./jms start -d  # 后台运行使用 -d 参数./jms start -d</span>
<span class="token comment"># 新版本更新了运行脚本, 使用方式./jms startstopstatus all  后台运行请添加 -d 参数</span>
<span class="token function">cat</span> <span class="token operator">></span>/usr/lib/systemd/system/jms.service<span class="token operator">&lt;&lt;</span><span class="token string">EOF
[Unit]
Description=jms
After=network.target mariadb.service redis.service
Wants=mariadb.service redis.service

[Service]
Type=forking
Environment="PATH=/opt/py3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin"
ExecStart=/opt/jumpserver/jms start -d
ExecReload=
ExecStop=/opt/jumpserver/jms stop

[Install]
WantedBy=multi-user.target
EOF</span>
systemctl <span class="token builtin class-name">enable</span> jms.service <span class="token parameter variable">--now</span>

<span class="token comment"># 安装 podman 部署 koko 与 guacamole</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> podman-docker
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">docker</span><span class="token operator">=</span>podman
<span class="token builtin class-name">echo</span> <span class="token string">"alias docker=podman"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token comment"># 配置 podman 镜像源</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/registry.redhat.io/dockerhub.azk8s.cn/g"</span> /etc/containers/registries.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/registry.access.redhat.com/docker.mirrors.ustc.edu.cn/g"</span> /etc/containers/registries.conf

<span class="token comment"># 允许 容器ip 访问宿主 8080 端口, (容器的 ip 可以进入容器查看)</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span><span class="token number">10.88</span>.0.0/16<span class="token string">" port protocol="</span>tcp<span class="token string">" port="</span><span class="token number">8080</span><span class="token string">" accept"</span>
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token comment"># 10.88.0.x 是 podman 容器默认的IP池, 这里偷懒直接授权ip段了, 可以根据实际情况单独授权IP</span>

<span class="token comment"># 获取当前服务器 IP</span>
<span class="token assign-left variable">Server_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">ip</span> addr  <span class="token function">grep</span> <span class="token string">'state UP'</span> <span class="token parameter variable">-A2</span>  <span class="token function">grep</span> inet  <span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">'(127.0.0.1inet6docker)'</span>  <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span>  <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">"addr:"</span>  <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">1</span>  <span class="token function">cut</span> <span class="token parameter variable">-d</span> / <span class="token parameter variable">-f1</span><span class="token variable">`</span></span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"服务器IP是 <span class="token variable">$Server_IP</span>"</span> <span class="token operator">>></span> ~/passwd.txt

<span class="token comment"># http://&lt;Jumpserver_url> 指向 jumpserver 的服务端口, 如 http://192.168.244.144:8080</span>
<span class="token comment"># BOOTSTRAP_TOKEN 为 Jumpserver/config.yml 里面的 BOOTSTRAP_TOKEN</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> jms_koko <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">2222</span>:2222 <span class="token parameter variable">-p</span> <span class="token number">127.0</span>.0.1:5000:5000 <span class="token parameter variable">-e</span> <span class="token assign-left variable">CORE_HOST</span><span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 <span class="token parameter variable">-e</span> <span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_koko:1.5.6
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> jms_guacamole <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">127.0</span>.0.1:8081:8080 <span class="token parameter variable">-e</span> <span class="token assign-left variable">JUMPSERVER_SERVER</span><span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 <span class="token parameter variable">-e</span> <span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_guacamole:1.5.6

<span class="token comment"># 配置KOKO自启动</span>
<span class="token function">cat</span> <span class="token operator">></span> /usr/lib/systemd/system/koko.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Unit]
Description=Podman JMS_koko Service
After=network.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/podman start -a jms_koko
ExecStop=/usr/bin/podman stop -t 10 jms_koko
Restart=always

[Install]
WantedBy=multi-user.target
EOF</span>

systemctl <span class="token builtin class-name">enable</span> koko.service

<span class="token comment"># 配置guacamole自启动</span>
<span class="token function">cat</span> <span class="token operator">></span> /usr/lib/systemd/system/guacamole.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Unit]
Description=Podman JMS_guacamole Service
After=network.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/podman start -a jms_guacamole
ExecStop=/usr/bin/podman stop -t 10 jms_guacamole
Restart=always

[Install]
WantedBy=multi-user.target
EOF</span>

systemctl <span class="token builtin class-name">enable</span> guacamole.service

<span class="token comment"># 安装 Web Terminal 前端: Luna  需要 Nginx 来运行访问 访问(https://github.com/jumpserver/luna/releases)下载对应版本的 release 包, 直接解压, 不需要编译</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token comment"># wget https://github.com/jumpserver/luna/releases/download/1.5.6/luna.tar.gz</span>

<span class="token comment"># 如果网络有问题导致下载无法完成可以使用下面地址</span>
<span class="token function">wget</span> https://demo.jumpserver.org/download/luna/1.5.6/luna.tar.gz

<span class="token function">tar</span> xvzf luna.tar.gz
<span class="token function">chown</span> <span class="token parameter variable">-R</span> root:root luna

<span class="token comment"># 配置 Nginx 整合各组件</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /etc/nginx/conf.d/default.conf

<span class="token function">cp</span> /etc/nginx/nginx.conf /etc/nginx.conf.bak
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"38,58d"</span> /etc/nginx/nginx.conf
<span class="token function">cat</span> <span class="token operator">></span> /etc/nginx/conf.d/jumpserver.conf <span class="token operator">&lt;&lt;</span> <span class="token string">"EOF"
server &#123;
    listen 80;
    # server_name _;

    client_max_body_size 100m;  # 录像及文件上传大小限制

    location /luna/ &#123;
        try_files $uri / /index.html;
        alias /opt/luna/;  # luna 路径, 如果修改安装目录, 此处需要修改
    &#125;

    location /media/ &#123;
        add_header Content-Encoding gzip;
        root /opt/jumpserver/data/;  # 录像位置, 如果修改安装目录, 此处需要修改
    &#125;

    location /static/ &#123;
        root /opt/jumpserver/data/;  # 静态资源, 如果修改安装目录, 此处需要修改
    &#125;

    location /koko/ &#123;
        proxy_pass       http://localhost:5000;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location /guacamole/ &#123;
        proxy_pass       http://localhost:8081/;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location /ws/ &#123;
        proxy_pass http://localhost:8070;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location / &#123;
        proxy_pass http://localhost:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
             &#125;
&#125;
EOF</span>

<span class="token comment"># 确保配置没有问题, 有问题请先解决</span>
nginx <span class="token parameter variable">-t</span>   
systemctl restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后网页访问主机地址. <a href="https://cdn.sujx.net/jumpserver.png" title="jumpserver"><img src="https://cdn.sujx.net/jumpserver.png" alt="jumpserver" title="jumpserver"></a></p>
<hr>
<p>另外，脚本的下载地址如下： <a href="https://cdn.sujx.net/jumpserver.sh" title="jumpserver">jumpserver安装脚本</a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>jumpserver</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>基于CentOS8快速部署iTop</title>
    <url>/2019/11/20/centos8-itop-install/</url>
    <content><![CDATA[<p>iTop是一个用PHP编写的基于ITIL理念打造的开源ITSM系统。本次将在CentOS8的虚机上安装部署一套iTOP系统。</p>
<ol>
<li>系统准备 首先是准本LAMP环境，使用系统默认的Apache2.4.3、PHP7.2、Mariadb10.3.</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> cmake <span class="token function">make</span> autoconf gcc gcc-g++ <span class="token function">unzip</span> graphviz libzip-devel libzip-tools
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd php php-fpm php-ldap php-soap
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> php-xmlrpc php-gd php-opcache php-mysqlnd php-json php-devel
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> libmcrypt libmcrypt-devel php-pecl-apcu mhash
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> php-odbc php-mbstring php-snmp
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mariadb mariadb-server
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>http
firewall-cmd <span class="token parameter variable">--reload</span>
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm mariadb <span class="token parameter variable">--now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>上传iTop系统，修改配置文件 我们把iTop的程序文件放置到&#x2F;var&#x2F;www&#x2F;web目录下，修改&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf配置文件，使得根文件系统指向web目录，同时对web目录进行赋权。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> iTop-2.6.1-4463.zip
<span class="token function">cp</span> web/* /var/www/html/ <span class="token parameter variable">-R</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> apache:apache /var/www/html/
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database itop character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on itop.* to itop@<span class="token string">'localhost'</span> identified by <span class="token string">'itop'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>编译PHP扩展实现支持zip 使用YUM&#x2F;DNF安装的PHP默认不支持zip扩展，因此默认配置下iTOP会出现白屏，日志报错： <code>PHP Fatal error: Class &#39;DBBackup&#39; not found in /var/www/html/itop/web/setup/applicationinstaller.class.inc.php</code> 所以，需要编译安装PHP的zip扩展。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">make</span> automake re2c libzip libzip-devel
<span class="token function">wget</span> http://pecl.php.net/get/zip
<span class="token function">tar</span> zxvf <span class="token function">zip</span>
<span class="token builtin class-name">cd</span> zip-*
phpize
./configure 
<span class="token function">make</span> 
<span class="token function">cp</span> modules/zip.so /usr/lib64/php/modules/
<span class="token function">touch</span> /etc/php.d/20-zip.ini
<span class="token builtin class-name">echo</span> <span class="token string">'extension=zip'</span> <span class="token operator">>></span> /etc/php.d/20-zip.ini
<span class="token function">vim</span> /etc/php.ini
~~~~~~
<span class="token comment"># CentOS8的PHP已经有PHP-zip包</span>
<span class="token comment">## 开启zlib压缩支持</span>
<span class="token number">269</span> zlib.output_compression <span class="token operator">=</span> On
~~~~~~
systemctl restart php-fpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后打开站点就可以进行安装了。</p>
<ol start="4">
<li>iTOP部署 <a href="https://cdn.sujx.net/itop1.png" title="iTopDeploy1"><img src="https://cdn.sujx.net/itop1.png" alt="iTopDeploy1" title="iTopDeploy1"></a> <a href="https://cdn.sujx.net/itop2.png" title="iTopDeploy2"><img src="https://cdn.sujx.net/itop2.png" alt="iTopDeploy2" title="iTopDeploy2"></a> <a href="https://cdn.sujx.net/itop3.png" title="iTopDeploy3"><img src="https://cdn.sujx.net/itop3.png" alt="iTopDeploy3" title="iTopDeploy3"></a> <a href="https://cdn.sujx.net/itop4.png" title="iTopDeploy4"><img src="https://cdn.sujx.net/itop4.png" alt="iTopDeploy4" title="iTopDeploy4"></a> <a href="https://cdn.sujx.net/itop5.png" title="iTopDeploy5"><img src="https://cdn.sujx.net/itop5.png" alt="iTopDeploy5" title="iTopDeploy5"></a> <a href="https://cdn.sujx.net/itop6.png" title="iTopDeploy6"><img src="https://cdn.sujx.net/itop6.png" alt="iTopDeploy6" title="iTopDeploy6"></a> <a href="https://cdn.sujx.net/itop7.png" title="iTopDeploy7"><img src="https://cdn.sujx.net/itop7.png" alt="iTopDeploy7" title="iTopDeploy7"></a> <a href="https://cdn.sujx.net/itop8.png" title="iTopDeploy8"><img src="https://cdn.sujx.net/itop8.png" alt="iTopDeploy8" title="iTopDeploy8"></a> <a href="https://cdn.sujx.net/itop9.png" title="iTopDeploy9"><img src="https://cdn.sujx.net/itop9.png" alt="iTopDeploy9" title="iTopDeploy9"></a> <a href="https://cdn.sujx.net/itop10.png" title="iTopDeploy10"><img src="https://cdn.sujx.net/itop10.png" alt="iTopDeploy10" title="iTopDeploy10"></a> <a href="https://cdn.sujx.net/itop11.png" title="iTopDeploy11"><img src="https://cdn.sujx.net/itop11.png" alt="iTopDeploy11" title="iTopDeploy11"></a> <a href="https://cdn.sujx.net/itop12.png" title="iTopDeploy12"><img src="https://cdn.sujx.net/itop12.png" alt="iTopDeploy12" title="iTopDeploy12"></a> <a href="https://cdn.sujx.net/itop13.png" title="iTopDeploy13"><img src="https://cdn.sujx.net/itop13.png" alt="iTopDeploy13" title="iTopDeploy13"></a> <a href="https://cdn.sujx.net/itop14.png" title="iTopDeploy14"><img src="https://cdn.sujx.net/itop14.png" alt="iTopDeploy14" title="iTopDeploy14"></a> <a href="https://cdn.sujx.net/itop15.png" title="iTopDeploy15"><img src="https://cdn.sujx.net/itop15.png" alt="iTopDeploy15" title="iTopDeploy15"></a></li>
</ol>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>itop</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix的集中式部署</title>
    <url>/2019/10/23/zabbix-deploy/</url>
    <content><![CDATA[<p>Zabbix是一种高效、快速、开源的企业级监控系统。本文将基于Zabbix4.4和CentOS8来实现集中式部署一台监控主站点。</p>
<ol>
<li>主机部署</li>
</ol>
<p>首先部署两台CentOS8（Zabbix:10.30.2.67、MySQL:10.30.2.68）主机，并安装epel-release源和zabbix源，其中建议使用<a href="https://mirrors.tuna.tsinghua.edu.cn/" title="清华大学软件源">[1]</a>。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf upgrade <span class="token parameter variable">-y</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release
<span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> https://repo.zabbix.com/zabbix/4.4/rhel/8/x86_64/zabbix-release-4.4-1.el8.noarch.rpm
dnf upgrade <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>Zabbix服务部署</li>
</ol>
<p>登录Zabbix服务器，安装主程序</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf <span class="token parameter variable">-y</span> upgrade
dnf <span class="token parameter variable">-y</span> <span class="token function">install</span> httpd php php-fpm
dnf <span class="token parameter variable">-y</span> <span class="token function">install</span> zabbix-server-mysql zabbix-web-mysql zabbix-apache-conf zabbix-agent

<span class="token comment">#修改启动项</span>
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm
systemctl <span class="token builtin class-name">enable</span> zabbix-agent.service zabbix-server.service

<span class="token comment">#开放防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>http,https<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">10051</span>/tcp,10050/tcp<span class="token punctuation">&#125;</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment">#传输监控数据库架构文件</span>
<span class="token function">scp</span> /usr/share/doc/zabbix-server-mysql/create.sql.gz root@10.30.2.68:/root

<span class="token comment">#修改php配置文件</span>
<span class="token function">vim</span> /etc/php-fpm.d/zabbix.conf
~~~~~~~~~~~~
<span class="token comment">#修改第24行，去掉；号并修改时区位亚洲/上海</span>
php_value<span class="token punctuation">[</span>date.timezone<span class="token punctuation">]</span> <span class="token operator">=</span> Asia/Shanghai
~~~~~~~~~~~~

<span class="token comment">#修改zabbix主程序文件</span>
<span class="token function">vim</span> /etc/zabbix/zabbix_server.conf
~~~~~~~~~~~~
<span class="token comment">#修改第92行</span>
<span class="token assign-left variable">DBHost</span><span class="token operator">=</span><span class="token number">10.30</span>.2.68
<span class="token comment">#修改124行，设置数据库用户密码</span>
<span class="token assign-left variable">DBPassword</span><span class="token operator">=</span>password
~~~~~~~~~~~~

<span class="token comment">#重启服务</span>
systemctl restart httpd php-fpm
systemctl restart zabbix-agent.service zabbix-server.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>数据库部署</li>
</ol>
<p>登录数据库服务器10.30.2.68，安装数据库文件，并进行配置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf <span class="token parameter variable">-y</span> <span class="token function">install</span> zabbix-agent
dnf <span class="token parameter variable">-y</span> <span class="token function">install</span> mariadb mariadb-server
systemctl <span class="token builtin class-name">enable</span> mariadb zabbix-agent.service <span class="token parameter variable">--now</span>

<span class="token comment">#修改密码，删除匿名用户和测试库</span>
mysql_secure_installation 

<span class="token comment">#安装数据库</span>
<span class="token comment"># mysql -uroot -p</span>
password
mysql<span class="token operator">></span> create database zabbix character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on zabbix.* to zabbix@<span class="token string">'%'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> quit<span class="token punctuation">;</span>

<span class="token comment">#导入架构</span>
zcat create.sql.gz  mysql <span class="token parameter variable">-uzabbix</span> <span class="token parameter variable">-p</span> zabbix

<span class="token comment">#配置防火墙</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>mysql
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">10050</span>/tcp
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment">#配置监控客户端</span>
<span class="token function">vim</span> /etc/zabbix/zabbix-agent.conf
~~~~~~~~~~~~
<span class="token comment">#第98行</span>
<span class="token assign-left variable">Server</span><span class="token operator">=</span><span class="token number">10.30</span>.2.67

<span class="token comment">#第139行</span>
<span class="token assign-left variable">ServerActive</span><span class="token operator">=</span><span class="token number">10.30</span>.2.67

<span class="token comment">#第150行，注释掉</span>
<span class="token comment">#Hostname=Zabbix server</span>

<span class="token comment">#第158行</span>
<span class="token assign-left variable">HostnameItem</span><span class="token operator">=</span>system.hostname
~~~~~~~~~~~~
systemctl restart mariadb zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li><p>Zabbix站点配置</p>
<span id="more"></span>
<p>默认管理员为Admin，密码为zabbix <a href="https://cdn.sujx.net/zabbix_1.png" title="配置首页"><img src="https://cdn.sujx.net/zabbix_1.png" alt="配置首页" title="配置首页"></a> <a href="https://cdn.sujx.net/zabbix_2.png" title="配置检查"><img src="https://cdn.sujx.net/zabbix_2.png" alt="配置检查" title="配置检查"></a> <a href="https://cdn.sujx.net/zabbix_3.png" title="数据库配置"><img src="https://cdn.sujx.net/zabbix_3.png" alt="数据库配置" title="数据库配置"></a> <a href="https://cdn.sujx.net/zabbix_4.png" title="服务器设置"><img src="https://cdn.sujx.net/zabbix_4.png" alt="服务器设置" title="服务器设置"></a> <a href="https://cdn.sujx.net/zabbix_5.png" title="完成配置"><img src="https://cdn.sujx.net/zabbix_5.png" alt="完成配置" title="完成配置"></a> <a href="https://cdn.sujx.net/zabbix_6.png" title="登录"><img src="https://cdn.sujx.net/zabbix_6.png" alt="登录系统" title="登录"></a> <a href="https://cdn.sujx.net/zabbix_7.png" title="首页展示"><img src="https://cdn.sujx.net/zabbix_7.png" alt="首页展示" title="首页展示"></a></p>
</li>
<li><p>解决中文显示问题</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装中文字体</span>
dnf <span class="token function">install</span> <span class="token parameter variable">-y</span> wqy*
<span class="token builtin class-name">cd</span> /etc/alternatives
<span class="token function">rm</span> zabbix-web-font
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/fonts/wqy-microhei/wqy-microhei.ttc zabbix-web-font
systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Something</category>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>centos8</tag>
        <tag>monitor</tag>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>建立本地RPM包仓库</title>
    <url>/2019/09/09/deploy-local-repo-mirror/</url>
    <content><![CDATA[<p>随着国内使用Linux的氛围日渐浓郁，各个大厂的源也如雨后春笋一般纷纷出现，下载速度也是越来越快。不过，在我司内部因为安全制度的限制，生产环境是不能直接连接互联网的,因此需要建立本地的源服务器。</p>
<h3 id="建立服务环境"><a href="#建立服务环境" class="headerlink" title="建立服务环境"></a>建立服务环境</h3><p>软件镜像需要通过HTTP&#x2F;HTTPS环境来提供服务。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 系统更新</span>
yum update <span class="token parameter variable">-y</span>
<span class="token comment"># 安装RPM相关包</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib-devel openssl-devel gcc perl-devel pam-devel <span class="token function">make</span> autoconf
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> rpm-build <span class="token function">unzip</span> <span class="token function">rsync</span> createrepo
<span class="token comment"># 安装HTTP服务器</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd mod_security
<span class="token comment"># 修改配置文件</span>
<span class="token function">touch</span> /etc/httpd/conf.d/repos.conf
cat<span class="token operator">>></span>/etc/httpd/conf.d/repos.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
Alias /repos /var/www/repos
&lt;directory /var/www/repos>
    Options +Indexes
    Require all granted
&lt;/directory>
EOF</span>
<span class="token comment">#开启端口</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>http
firewall-cmd <span class="token parameter variable">--reload</span>
systemctl <span class="token builtin class-name">enable</span> httpd <span class="token parameter variable">--now</span>
<span class="token comment"># 配置环境</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/repos/<span class="token punctuation">&#123;</span>centos,epel,docker-ce,remi,mongodb,zabbix<span class="token punctuation">&#125;</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> apache:apche /var/www/repos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="同步官方安装源"><a href="#同步官方安装源" class="headerlink" title="同步官方安装源"></a>同步官方安装源</h3><p>下载脚本如下,其中使用到了清华大学的镜像源和中科大的镜像源，其中包含了CentOS、epel、Zabbix、MongoDB、PHP的镜像，整个占用存储空间不到800G。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># CentOS</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>isos <span class="token parameter variable">--exclude</span><span class="token operator">=</span>aarch64 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>ppc64 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>drpms/ <span class="token parameter variable">--exclude</span><span class="token operator">=</span>debug/ rsync://mirrors.ustc.edu.cn/centos/ /var/www/repos/centos/

<span class="token comment">#EPEL</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>isos <span class="token parameter variable">--exclude</span><span class="token operator">=</span>aarch64 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>ppc64 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>drpms/ <span class="token parameter variable">--exclude</span><span class="token operator">=</span>debug/ rsync://mirrors.ustc.edu.cn/epel/ /var/www/repos/epel/

<span class="token comment">#Docker_CE</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>test <span class="token parameter variable">--exclude</span><span class="token operator">=</span>nightly <span class="token parameter variable">--exclude</span><span class="token operator">=</span>edge <span class="token parameter variable">--exclude</span><span class="token operator">=</span>aarch64 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>drpms/ <span class="token parameter variable">--exclude</span><span class="token operator">=</span>debug/ <span class="token parameter variable">--exclude</span><span class="token operator">=</span>source/ <span class="token parameter variable">--exclude</span><span class="token operator">=</span>debug-*/ rsync://mirrors.ustc.edu.cn/repo/docker-ce/linux/centos/ /var/www/repos/docker-ce/linux/centos/

<span class="token comment">#Zabbix</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span> rsync://mirror.tuna.tsinghua.edu.cn/zabbix/ /var/www/repos/zabbix/

<span class="token comment">#Mongodb</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span>  rsync://mirror.tuna.tsinghua.edu.cn/mongodb/yum/ /var/www/repos/mongodb/yum/

<span class="token comment">#Remi</span>
<span class="token function">rsync</span> <span class="token parameter variable">-avrt</span> <span class="token parameter variable">--delete</span>  rsync://mirror.tuna.tsinghua.edu.cn/remi/ /var/www/repos/remi/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="设置本地打包软件源"><a href="#设置本地打包软件源" class="headerlink" title="设置本地打包软件源"></a>设置本地打包软件源</h3><p>由于官方软件的更新策略和时间限制，我们需要给部分软件进行自打包和更新升级，所以需要建立单独的本地仓库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /var/www/repos
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/repos/local/<span class="token punctuation">&#123;</span><span class="token number">6,7</span>,8<span class="token punctuation">&#125;</span>/x86_64
creatrepo /var/www/repos/local/6/x86_64/
creatrepo /var/www/repos/local/7/x86_64/
creatrepo /var/www/repos/local/8/x86_64/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>repo</tag>
        <tag>dnf</tag>
        <tag>RPM</tag>
        <tag>yum</tag>
      </tags>
  </entry>
  <entry>
    <title>升级CentOS8的OpenSSH版本</title>
    <url>/2019/08/09/update-openssh-2-81p1/</url>
    <content><![CDATA[<p>虽然说CentOS8的Openssl和OpenSSH的版本已经算是比较新的了，但是因为公司的信息安全建设的要求，在经过商业漏洞扫描软件扫描之后，还是需要进行升级操作(由于CentOS8的Openssl已经是比较新的1.1.1版本了，此次就不升级它了)。</p>
<h3 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置编译环境</span>
<span class="token builtin class-name">cd</span>
yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> rpm-build zlib-devel openssl-devel gcc perl-devel pam-devel <span class="token function">unzip</span> <span class="token parameter variable">-y</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/rpmbuild/<span class="token punctuation">&#123;</span>SOURCES,SPECS<span class="token punctuation">&#125;</span>
<span class="token comment"># 下载安装包</span>
<span class="token function">wget</span> https://openbsd.hk/pub/OpenBSD/OpenSSH/portable/openssh-8.1p1.tar.gz
<span class="token function">wget</span> http://ftp.riken.jp/Linux/momonga/6/Everything/SOURCES/x11-ssh-askpass-1.2.4.1.tar.gz
<span class="token function">cp</span> openssh-8.1p1.tar.gz x11-ssh-askpass-1.2.4.1.tar.gz ~/rpmbuild/SOURCES
<span class="token function">tar</span> zxvf openssh-8.1p1.tar.gz
<span class="token function">cp</span> openssh-8.1p1/contrib/redhat/openssh.spec ~/rpmbuild/SPECS/
<span class="token comment"># 修改编译文件，去掉X11环境依赖和openssl依赖</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">"s/%define no_x11_askpass 0/%define no_x11_askpass 1/g"</span> ~/rpmbuild/SPECS/openssh.spec p
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">"s/%define no_gnome_askpass 0/%define no_gnome_askpass 1/g"</span> ~/rpmbuild/SPECS/openssh.spec
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">"s/BuildRequires: openssl-devel &lt; 1.1/#BuildRequires: openssl-devel &lt; 1.1/g"</span> ~/rpmbuild/SPECS/openssh.spec 
<span class="token comment"># 开始编译rpm包</span>
rpmbuild <span class="token parameter variable">-bp</span> openssh.spec
rpmbuild <span class="token parameter variable">-ba</span> openssh.spec
<span class="token comment"># yum本地安装新编译的包</span>
yum localinstall <span class="token parameter variable">-y</span> ~/rpmbuild/RPMS/x86_64/openssh-*
<span class="token comment"># 修改相关公钥权限</span>
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_ecdsa_key
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_ed25519_key
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_rsa_key
<span class="token comment"># 修改配置文件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">"s/UsePAM yes/UsePAM no/g"</span> /etc/ssh/sshd_config
<span class="token comment"># 重置服务</span>
systemctl restart sshd
<span class="token comment"># 查看新版本信息</span>
openssh <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="批量分发"><a href="#批量分发" class="headerlink" title="批量分发"></a>批量分发</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 上传文件到本地YUM仓库之后建立索引</span>
createrepo /var/www/repos/cnpe/8/x86_64/
<span class="token comment"># 安装</span>
ansible all <span class="token parameter variable">-m</span> yum <span class="token parameter variable">-a</span> <span class="token string">'name=* state=latest'</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-K</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>ssh</tag>
        <tag>system</tag>
        <tag>centos8</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS的免密登录</title>
    <url>/2019/07/20/centos7-ssh-nopasswd/</url>
    <content><![CDATA[<p>实现CentOS的免密登录还是挺简单的。</p>
<ol>
<li>密钥的产生</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在用户家目录下的.ssh目录下产生id_rsa和id_rsa.pub两个密钥文件。其中，.pub为公钥。</p>
<ol start="2">
<li>公钥的上传</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id <span class="token parameter variable">-i</span> ~/.ssh/id_rsa.pub root@target_IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>使用ssh-copy-id来实现自动的上传、修改配置。</p>
<ol start="3">
<li>增加主机配置文件</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/.ssh/config
————————————————————
Host target0    //主机名称
Hostname <span class="token number">192.168</span>.174.148    //主机IP或解析记录
Port <span class="token number">22</span> //SSH端口号
User root   //SSH用户名

Host target1
Hostname <span class="token number">192.168</span>.174.149
Port <span class="token number">22</span>
User root
————————————————————<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>测试</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@ansible_server ~<span class="token punctuation">]</span><span class="token comment"># ssh target0</span>
Last login: Fri Dec <span class="token number">20</span> <span class="token number">14</span>:59:11 <span class="token number">2019</span> from <span class="token number">192.168</span>.174.147
<span class="token punctuation">[</span>root@ansible_target0 ~<span class="token punctuation">]</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>批量执行 在面临批量主机执行免密登录，则需要sshpass来执行。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> sshpassvlmachine.sh
~~~~~~~
<span class="token comment">#!/bin/bash</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">host</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> remote-hosts<span class="token variable">)</span></span>
<span class="token keyword">do</span>
    sshpass <span class="token parameter variable">-p</span> <span class="token string">'password'</span> ssh-copy-id root@<span class="token variable">$&#123;host&#125;</span>
<span class="token keyword">done</span>
~~~~~~~

<span class="token function">vim</span> remote-hosts
~~~~~~~
<span class="token number">192.168</span>.174.148
<span class="token number">192.168</span>.174.149
~~~~~~~
<span class="token function">chmod</span> +x sshpassvlmachine.sh
<span class="token function">sh</span> sshpassvlmachine.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>内网搭建KMS服务器</title>
    <url>/2019/06/14/intranet-kms/</url>
    <content><![CDATA[<p>在局域网环境中，我们可以使用开源的KMS服务来实现Windows系统和Office软件的激活工作。下面我们将在CentOS8之上来部署实施相关服务。</p>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release <span class="token function">git</span>
yum update <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> supervisord

systemctl <span class="token builtin class-name">enable</span> supervisord <span class="token parameter variable">--now</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">1688</span>/tcp
firewall-cmd <span class="token parameter variable">--reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt
<span class="token function">git</span> clone https://github.com/SystemRage/py-kms.git

cat<span class="token operator">></span> /etc/supervisord.d/kms.ini <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[program:kms]
# command=python /opt/py-kms/py-kms/pykms_Server.py       //注意python的版本
command=python3 /opt/py-kms/py-kms/pykms_Server.py
autostart=true
autorestart=true
user=root
stdout_logfile=/var/log/kms.log
EOF</span>

systemctl restart supervisord
<span class="token function">netstat</span> <span class="token parameter variable">-tlnp</span> <span class="token function">grep</span> <span class="token number">1688</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="发布服务"><a href="#发布服务" class="headerlink" title="发布服务"></a>发布服务</h3><h4 id="Windows-DNS"><a href="#Windows-DNS" class="headerlink" title="Windows DNS"></a>Windows DNS</h4><p>在Windows Server的DNS管理器中连接DNS服务器，打开‘正向查找区域’-‘域名所在zone’-‘_tcp’，新建“服务位置(SRV)”DNS记录值。 <a href="https://cdn.sujx.net/dns-kms.PNG" title="DNS-kms"><img src="https://cdn.sujx.net/dns-kms.PNG" alt="DNS-kms" title="DNS-kms"></a></p>
<h4 id="Linux-BIND"><a href="#Linux-BIND" class="headerlink" title="Linux BIND"></a>Linux BIND</h4><p>在BIND服务的正向解析配置文件中新增记录并重启bind服务。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">_vlmcs._tcp IN SRV <span class="token number">5</span> <span class="token number">0</span> <span class="token number">1688</span> xxx.xxx.xxx.xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="Linux-DNSMASQ"><a href="#Linux-DNSMASQ" class="headerlink" title="Linux DNSMASQ"></a>Linux DNSMASQ</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">></span> /etc/dnsmasq.d/kms.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
srv-host=_vlmcs._tcp,xxx.xxx.xxx,1688,100,100
EOF</span>

systemctl restart dnsmasq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>DNS</tag>
        <tag>kms</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Xshell免费版远程调用图形界面</title>
    <url>/2019/04/20/xshell-x11/</url>
    <content><![CDATA[<p>使用Xshell套装可以通过Xshell调用Xmanager来实现Linux图形界面的ssh转发，从而实现Linux的GUI界面的远程调用。但对于使用edu账号申请下来的免费版Xshell就没有这个功能了。那么，我们就需要使用xshell+xming来实现类似功能。</p>
<h3 id="SSHD配置"><a href="#SSHD配置" class="headerlink" title="SSHD配置"></a>SSHD配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 要打开SSH服务的X11转发功能</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/#X11Forwarding yes/X11Forwarding yes/g"</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/#X11DisplayOffset 10/X11DisplayOffset 10/g"</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/#X11UseLocalhost yes/X11UseLocalhost yes/g"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="安装Xming"><a href="#安装Xming" class="headerlink" title="安装Xming"></a>安装Xming</h3><p>我们下载好<a href="https://sourceforge.net/projects/xming/" title="Xming">[1]</a>之后，执行安装。需要配置的只有两项:</p>
<ol>
<li>取消安装自带的putty</li>
</ol>
<p><a href="https://cdn.sujx.net/xming1.PNG" title="Xming_install"><img src="https://cdn.sujx.net/xming1.PNG" alt="Xming_install" title="Xming_install"></a></p>
<ol start="2">
<li>指定接受的端口10</li>
</ol>
<p><a href="https://cdn.sujx.net/xming2.PNG" title="Xming_port"><img src="https://cdn.sujx.net/xming2.PNG" alt="Xming_port" title="Xming_port"></a></p>
<h3 id="配置Xshell"><a href="#配置Xshell" class="headerlink" title="配置Xshell"></a>配置Xshell</h3><p>在xshell中配置客户端,在”SSH”-“隧道”中选择”转发x11连接到：’XDisplay:localhost:10.0’” <a href="https://cdn.sujx.net/xming3.PNG" title="xming_xshell"><img src="https://cdn.sujx.net/xming3.PNG" alt="xming_xshell" title="xming_xshell"></a></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在本地xshell客户端上调用远程GUI程序，比如gparted. <a href="https://cdn.sujx.net/xming4.PNG" title="xming_gui"><img src="https://cdn.sujx.net/xming4.PNG" alt="xming_gui" title="xming_xshell"></a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>linux</tag>
        <tag>x11</tag>
        <tag>xming</tag>
      </tags>
  </entry>
</search>
