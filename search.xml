<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>离线部署CDH6.3</title>
    <url>/2020/02/14/cdh6-3-deploy/</url>
    <content><![CDATA[<p>部署练习的环境有六台主机，主机的配置是4核心4G内存(内存还是低了，建议8G起步)：</p>
<p>主机名</p>
<p>IP地址</p>
<p>Elephant</p>
<p>192.168.174.184</p>
<p>Lion</p>
<p>192.168.174.185</p>
<p>Horse</p>
<p>192.168.174.186</p>
<p>Monkey</p>
<p>192.168.174.187</p>
<p>Tiger</p>
<p>192.168.174.188</p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol>
<li> 主机环境配置</li>
</ol>
<p>按照各个主机配置修改相应值，下面以elephant为例：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@localhost ~]# nmcli c m ens33 ipv4.method manual ipv4.addresses 192.168.174.184&#x2F;24 ipv4.gateway 192.168.174.2 ipv4.dns 192.168.174.2
[root@localhost ~]# nmcli c d ens33 &amp;&amp; nmcli c u ens33
[root@localhost ~]# hostnamectl set-hostname elephant<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> 文件复制 将离线部署CDH6.3.1的文件复制到每一台主机上。其中包括：</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sujx@legion7000:&#x2F;mnt&#x2F;d&#x2F;$ ls Cloudera
CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel
cloudera-manager-agent-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-daemons-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-server-6.3.1-1466458.el7.x86_64.rpm
cloudera-manager-server-db-2-6.3.1-1466458.el7.x86_64.rpm
enterprise-debuginfo-6.3.1-1466458.el7.x86_64.rpm
jdk-8u202-linux-x64.rpm
manifest.json
mysql-connector-java-5.1.39-bin.jar

sujx@legion7000:&#x2F;mnt&#x2F;d&#x2F;$ tar zcvf Cloudera cloudera.tar.gz
sujx@legion7000:&#x2F;mnt&#x2F;d&#x2F;$ scp cloudera.tar.gz root@lion:&#x2F;root&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 免密登录设置</li>
</ol>
<p>在lion主机上设置免密：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ssh-keygen -t rsa
ssh-copy-id &#123;elephant\lion\horse\monkey\tiger&#125;

# 使用ansible分发和管理文件，省略配置文件的建立
yum install -y ansible

ansible -m copy -a &#39;src&#x3D;&#x2F;root&#x2F;cloudera.tar.gz dest&#x3D;&#x2F;root&#39;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li> 主机配置 建立主机执行文件进行相关配置。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!&#x2F;bin&#x2F;bash

# 安装必要组件
yum update -y
yum install -y mutt net-tools mlocate telnet curl wget ping vim open-vm-tools

systemctl disable firewalld.service --now
sed -i &#39;:s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&#39; &#x2F;etc&#x2F;sysconfig&#x2F;selinux
updatedb &amp;&amp; sync &amp;&amp; ldconfig

# 配置时间服务器
cat &gt;&#x2F;etc&#x2F;chrony.conf&lt;&lt;EOF
server ntp.aliyun.com iburst

driftfile &#x2F;var&#x2F;lib&#x2F;chrony&#x2F;drift
makestep 1.0 3
rtcsync
logdir &#x2F;var&#x2F;log&#x2F;chrony

EOF

systemctl enable chronyd --now
timedatectl 

# 优化
# 修改swap配置
echo &quot;vm.swappiness &#x3D; 10&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf
sysctl -p

# 修改大页内存的使用
echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;defrag
echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled
echo &#39;echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;defrag&#39; &gt;&gt; &#x2F;etc&#x2F;rc.local
echo &#39;echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled&#39; &gt;&gt; &#x2F;etc&#x2F;rc.local

# 安装JAVA
tar zxvf cloudera.tar.gz
yum localinstall -y Cloudera&#x2F;jdk-8u202-linux-x64.rpm

java -version
echo $JAVA_HOME

# 建立安装文件源
wget https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cm6&#x2F;6.3.1&#x2F;redhat7&#x2F;yum&#x2F;RPM-GPG-KEY-cloudera
rpm --import RPM-GPG-KEY-cloudera
wget https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cm6&#x2F;6.3.1&#x2F;redhat7&#x2F;yum&#x2F;cloudera-manager.repo -O &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-cloudera
yum update -y

mkdir &#x2F;usr&#x2F;share&#x2F;java&#x2F;
cp Cloudera&#x2F;mysql-connector-java-5.1.39-bin.jar  &#x2F;usr&#x2F;share&#x2F;java&#x2F;mysql-connector-java.jar

yum localinstall -y Cloudera&#x2F;cloudera-manager-daemons* 
yum localinstall -y Cloudera&#x2F;cloudera-manager-agent*

# 修改cloudera-scm客户端的服务器目标地址
sed -i &#39;:s&#x2F;localhost&#x2F;lion&#x2F;g&#39; &#x2F;etc&#x2F;cloudera-scm-agent&#x2F;config.ini
systemctl enable cloudera-scm-agent
systemctl restart cloudera-scm-agent

# 客户端配置完成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><p>数据库将部署在Lion主机之上。 1. 数据库安装</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y mariadb mariadb-server

# 增加MySQL配置文件
vim &#x2F;etc&#x2F;my.cnf.d&#x2F;server.cnf
[mysqld]
key_buffer &#x3D; 16M
key_buffer_size &#x3D; 32M
max_allowed_packet &#x3D; 32M
thread_stack &#x3D; 256K
thread_cache_size &#x3D; 64
query_cache_limit &#x3D; 8M
query_cache_size &#x3D; 64M
query_cache_type &#x3D; 1

max_connections &#x3D; 550
server_id&#x3D;1

binlog_format &#x3D; mixed

read_buffer_size &#x3D; 2M
read_rnd_buffer_size &#x3D; 16M
sort_buffer_size &#x3D; 8M
join_buffer_size &#x3D; 8M

# InnoDB settings
innodb_file_per_table &#x3D; 1
innodb_flush_log_at_trx_commit  &#x3D; 2
innodb_log_buffer_size &#x3D; 64M
innodb_buffer_pool_size &#x3D; 4G
innodb_thread_concurrency &#x3D; 8
innodb_flush_method &#x3D; O_DIRECT
innodb_log_file_size &#x3D; 512M

# 启动数据库服务
systemctl enable mariadb --now

2. 建立数据库配置文件
vim &#x2F;root&#x2F;cdh.sql
CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON scm.* TO &#39;scm&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON amon.* TO &#39;amon&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON rman.* TO &#39;rman&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON hue.* TO &#39;hue&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON metastore.* TO &#39;hive&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON sentry.* TO &#39;sentry&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON nav.* TO &#39;nav&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON navms.* TO &#39;navms&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON oozie.* TO &#39;oozie&#39;@&#39;%&#39; IDENTIFIED BY &#39;passwd&#39;;

mysql -uroot -p &lt; &#x2F;root&#x2F;cdh.sql
&#x2F;opt&#x2F;cloudera&#x2F;cm&#x2F;schema&#x2F;scm_prepare_database.sh mysql scm scm

### 管理节点安装
&#96;&#96;&#96;shell
yum localinstall -y Clouder&#x2F;cloudera-manager-server.6*
cp Cloudera&#x2F;CDH* &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo
cp Cloudera&#x2F;main* &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo
cd &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo
# wget https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cdh6&#x2F;6.3.2&#x2F;parcels&#x2F;CDH-6.3.2-1.cdh6.3.2.p0.1605554-el6.parcel -P &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo
# wget https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cdh6&#x2F;6.3.2&#x2F;parcels&#x2F;manifest.json -P &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo
sha1sum CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel  awk &#39;&#123; print $1 &#125;&#39; &gt; CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha
chown -R cloudera-scm:cloudera-scm &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo&#x2F;*
systemctl enable cloudera-scm-server --now
cd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="群集配置"><a href="#群集配置" class="headerlink" title="群集配置"></a>群集配置</h3><p>访问Lion主机的7180端口，然后使用web-gui界面进行配置。 <img src="https://cdn.sujx.net/cdh-001.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-002.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-003.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-004.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-005.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-006.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-007.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-008.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-009.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-010.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-011.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-012.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-013.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-014.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-015.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-016.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-017.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-018.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-019.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-020.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh-021.png" alt="start" title="start"></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>cdh</tag>
        <tag>centos</tag>
        <tag>deploy</tag>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux上安装McAfee杀毒软件</title>
    <url>/2021/12/01/centos7-mcafee/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为了满足客户的安全需求，我司需要至少使用两种杀毒软件对交付的应用服务程序进行安全检查。因此，在ClamAV的基础上，我们还需要另外一种Linux版本的杀毒软件。不幸的是，无论使用baidu或者google检索出的所有免费可用杀毒软件大多已经没有Linux版本了，要么交付不菲的费用、要么产品下线、要么必须安装GTK桌面。</p>
<p>最后，在我们的认知范围内，可以选择的产品是Mcafee Endpoint Security，也就是他家的企业版杀毒软件。理由一个是可以免费试用，一个是可以单机使用。</p>
<p>另外，在检索的过程中发现国内的Linux版本杀毒软件有一个360的安全卫士Linux版，还有一个火绒企业版的Linux客户端。印象里面奇安信的天擎系统也有Linux的agent。不过，试用国产软件的后续麻烦事多，就不叨扰了。</p>
<h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><ol>
<li>Mcafee提供试用软件包<a href="https://www.mcafee.com/enterprise/zh-cn/downloads/trials.html">下载</a>；</li>
<li>Endpoint Security 提供Windows、Mac、Linux三种版本的客户端；</li>
<li>客户端可以搭配EPO服务器进行统一下发和管理，也可以以Standalone的形式来运行<h3 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h3></li>
<li>M家的免费试用包获取有时间间隔，如果你下错了，每次无论你选择那个产品，出来的下载链接都是指向原先选的那个产品的；</li>
<li>M家明明有专门面向Linux单机运行的command on linux产品，就是不给你试用，必须下载企业版杀毒软件的Linux客户端(虽然也可以standalone试用);</li>
<li>软件包里面完全是套娃，tar.gz里面套tar.gz再套一层tar.gz；</li>
<li>EPO集中管理的部署事无巨细、standalone形式安装指引基本没有用，连蒙带猜才安装成功；</li>
<li>压缩包不知所谓的给了x权限，可能是和该包是在Mac上打包的有关系？给人很不严肃的感觉。</li>
</ol>
<h2 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol>
<li>本次测试使用64位CentOS7</li>
<li>上传测试包 ENSL1069_Eval.zip</li>
<li>执行解压缩 <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus ~]# unzip ENSL1069_Eval.zip
[root@antivirus ~]# tree ENSL1069_Eval
ENSL1069_Eval
├── ensl_1066_ig_0-00_en-us.PDF	# 安装指引
├── ensl_1066_pg_0-00_en-us.PDF # 使用指引
├── ensl_1069_rn_0-00_en-us.pdf # 发行说明
├── MA562LNX
│   ├── MFEma.x86_64.deb
│   ├── MFEma.x86_64.rpm # Mcafee客户端
│   ├── MFErt.i686.deb
│   └── MFErt.i686.rpm # Mcafee运行库
├── MCAFEE_LLC.PUB.TAR # 发行密钥
└── McAfeeTP-10.6.9-121-Eval-standalone.tar.gz # 独立安装包	
[root@antivirus ~]# tar zxvf McAfeeTP-10.6.9-121-Eval-standalone.tar.gz 
.&#x2F;install-mfetp.sh # 安装脚本
.&#x2F;McAfeeTP-10.6.9-121-standalone.linux.tar.gz # 安装软件

# 解压缩软件安装包可得到如下包
# 安装无须解包，安装脚本会自动解包
[root@antivirus ~]# tree standalone&#x2F;
standalone&#x2F;
├── license.txt	# 版权信息
├── McAfeeESP-10.6.9-126.deb
├── McAfeeESP-10.6.9-126.x86_64.rpm	# 主程序
├── McAfeeESPAac-10.6.9-126.deb
├── McAfeeESPAac-10.6.9-126.x86_64.rpm #
├── McAfeeESPFileAccess-10.6.9-126.deb
├── McAfeeESPFileAccess-10.6.9-126.x86_64.rpm # 文件检测模块
├── McAfeeRt-10.6.9-126.deb
├── McAfeeRt-10.6.9-126.x86_64.rpm	#rookit检测模块
├── McAfeeTP-10.6.9-121.deb
├── McAfeeTP-10.6.9-121.x86_64.rpm	# 进程检测模块
└── validate-mfeesp.sh # 升级脚本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>以管理员权限进行安装<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 手动安装
[root@antivirus ~]# rpm -Uvh ENSL1069_Eval&#x2F;MA562LNX&#x2F;MFErt.i686.rpm
[root@antivirus ~]# rpm -Uvh ENSL1069_Eval&#x2F;MA562LNX&#x2F;MFEma.x86_64.rpm
# 脚本安装
[root@antivirus ~]# .&#x2F;install-mfetp.sh
# accpet 授权信息
…………
Installed:
  McAfeeESP.x86_64 0:10.6.9-126  McAfeeESPAac.x86_64 0:10.6.9-126  McAfeeESPFileAccess.x86_64 0:10.6.9-126  McAfeeRt.x86_64 0:10.6.9-126  McAfeeTP.x86_64 0:10.6.9-121 

Complete!
Successfully installed McAfeeTP-10.6.9-121.x86_64.rpm

Schedule for Default DAT and Engine update task was successfully added
Successfully enabled GTI
Enabling OAS, please wait for some time
OAS was successfully enabled
Access Protection was specifically disabled during installation
McAfeeTP is ready for use now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>检查服务状态<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus ~]# service mfetpd status
Redirecting to &#x2F;bin&#x2F;systemctl status mfetpd.service
● mfetpd.service - McAfee Endpoint Security for Linux Threat Prevention
   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mfetpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Tue 2021-11-23 06:09:59 EST; 2min 39s ago
     Docs: man:mfetpd(8)
  Process: 4928 ExecStartPre&#x3D;&#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;scripts&#x2F;cgroup-mount-helper.sh systemd (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 3952 ExecStartPre&#x3D;&#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;scripts&#x2F;fileaccess-control-wrapper.sh systemd (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 3950 ExecStartPre&#x3D;&#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;scripts&#x2F;aac-control-wrapper.sh systemd (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
 Main PID: 4939 (mfetpd)
   CGroup: &#x2F;system.slice&#x2F;mfetpd.service
           ├─4939 &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;bin&#x2F;mfetpd
           ├─4971 &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;bin&#x2F;mfetpd
           ├─4973 &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;bin&#x2F;mfetpd
           └─4981 &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;bin&#x2F;mfetpd

Nov 23 06:09:58 antivirus systemd[1]: Starting McAfee Endpoint Security for Linux Threat Prevention...
Nov 23 06:09:59 antivirus fileaccess-control-wrapper.sh[3952]: Re-using modules  3.10.0-693.21.1.el7.x86_64&#x2F;mfe_fileaccess_100609126.ko
Nov 23 06:09:59 antivirus systemd[1]: Started McAfee Endpoint Security for Linux Threat Prevention.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3></li>
<li>使用管理员程序进入程序路径<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus ~]# cd &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;bin&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>开启文件保护<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus bin]# .&#x2F;mfetpcli --getapstatus
Access Protection: Disabled
[root@antivirus bin]# .&#x2F;mfetpcli --setapstatus enable
AP Enabled Successfully
[root@antivirus bin]# .&#x2F;mfetpcli --getapstatus
Access Protection: Enabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>查看扫描设定<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus bin]# .&#x2F;mfetpcli --getoasconfig --summary
On-Access Scan: Enabled and Compliant
Profile Setting: Standard
Maximum scan time: 45
GTI: Enabled
GTI Sensitivity Level: Medium<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>运行任务<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查看当前任务
[root@antivirus bin]# .&#x2F;mfetpcli --listtasks
 -------------------------------------------------------------------------------------------------------------------------------------
|Index  Task Name                                  Task Type                     Task Status     Last Run                            |
 -------------------------------------------------------------------------------------------------------------------------------------
|1      quick scan        # 快速扫描             ODS                           Not Started     Not Applicable                        |
|2      full scan         # 全盘扫描             ODS                           Not Started     Not Applicable                        |
|3      Default Client Update task  # 升级       DAT and Engine Update         Aborted         Tue 23 Nov 2021 06:10:10 AM EST       |

# 添加自定义任务
[root@antivirus bin]# .&#x2F;mfetpcli --addodstask --name checktmp --scanpaths &#x2F;tmp
ODS Task was successfully added
[root@antivirus bin]# .&#x2F;mfetpcli --listtasks
 -------------------------------------------------------------------------------------------------------------------------------------
|Index  Task Name                                  Task Type                     Task Status     Last Run                            |
 -------------------------------------------------------------------------------------------------------------------------------------
|1      quick scan                                 ODS                           Not Started     Not Applicable                      |
|2      full scan                                  ODS                           Not Started     Not Applicable                      |
|3      Default Client Update task                 DAT and Engine Update         Aborted         Tue 23 Nov 2021 06:10:10 AM EST     |
|4      checktmp                                   ODS                           Not Started     Not Applicable                      |
 -------------------------------------------------------------------------------------------------------------------------------------
[root@antivirus bin]# .&#x2F;mfetpcli --runtask --index 4
Task was successfully started

# 执行全盘扫描
[root@antivirus bin]# .&#x2F;mfetpcli --runtask --index 2
Task was successfully started
[root@antivirus bin]# .&#x2F;mfetpcli --listtasks	#参加下表，可以全盘扫描任务为进行中，自定义任务为运行完成
 -------------------------------------------------------------------------------------------------------------------------------------
|Index  Task Name                                  Task Type                     Task Status     Last Run                            |
 -------------------------------------------------------------------------------------------------------------------------------------
|1      quick scan                                 ODS                           Not Started     Not Applicable                      |
|2      full scan                                  ODS                           Running         Tue 23 Nov 2021 06:39:01 AM EST     |
|3      Default Client Update task                 DAT and Engine Update         Aborted         Tue 23 Nov 2021 06:10:10 AM EST     |
|4      checktmp                                   ODS                           Completed       Tue 23 Nov 2021 06:37:30 AM EST     |
 -------------------------------------------------------------------------------------------------------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h3></li>
<li>路径<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查看任务结果有两个位置
&#x2F;var&#x2F;McAfee&#x2F;ens&#x2F;log&#x2F;tp&#x2F;odsreport&#x2F;
&#x2F;var&#x2F;McAfee&#x2F;ens&#x2F;log&#x2F;tp&#x2F;mfetpd.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>内容<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 简略日志报告
[root@antivirus ~]# tail -f -n 27 &#x2F;var&#x2F;McAfee&#x2F;ens&#x2F;log&#x2F;tp&#x2F;mfetpd.log                                                                                                     
Nov 23 06:38:59 antivirus INFO AMODSBroker [4939] Received command to start the task - full scan
Nov 23 06:38:59 antivirus INFO ScanFactoryBroker [4939] Starting the ODS Scan Manager
Nov 23 06:39:00 antivirus INFO AMODSBroker [4939] Starting ODS Collector for the task - full scan
Nov 23 06:39:01 antivirus INFO AMODSBroker [4939] Successfully started the thread to monitor the ODS Collector Process - 5334 for the ODS Task name - full scan
Nov 23 06:39:01 antivirus INFO TaskManager [4939] Task - full scan was successfully startedNov 23 06:40:18 antivirus ERROR GTIQueryManager [4939] Exception received during GTI communication: Error encountered during GTI lookup.Nov 23 06:40:18 antivirus INFO GTIQueryManager [4939] GTI reachability has been temporarily disabled for ODS (buffered queue).
Nov 23 06:40:29 antivirus INFO AMODSBroker [4939] ODS Collector child process exited normally for the Task name - full scan
Nov 23 06:40:29 antivirus INFO AMODSBroker [4939] All GTI Requests have been processed for the task - full scan
Nov 23 06:40:29 antivirus INFO AMODSBroker [4939] Notified ODS Scan Request Queue monitoring thread to exit for the Task name - full scan
Nov 23 06:40:29 antivirus INFO AMODSBroker [4939] Thread that was monitoring ODS Scan Request Queue from the ODS Collector Process for the task - full scan is exiting now after processing 47439 requests.
Nov 23 06:40:30 antivirus INFO AMODSBroker [4939] Received the last report update from ods scanmanager
Nov 23 06:40:30 antivirus INFO AMODSBroker [4939] Final Report for ODS Task - 
Task Name           : full scan
Total Requests      : 49315
No of files skipped : 1871
No. of Good files   : 47401
No. of Cache hit    : 6
No of Files Excluded: 0
No. of Infections   : 0
Timeout             : 0
ScanError           : 37
No of files cleaned : 0
No of files deleted : 0
Time taken          : 90.353583s
Engine version      : 6010.8670
DAT version         : 999.0
# 自定义任务执行日志
[root@antivirus odsreport]# cat checktmp.log 
EVENT &#x3D; ODS_START | NAME &#x3D; checktmp | TIME &#x3D; 1637667450 | USER &#x3D; 0
EVENT &#x3D; ODS_STOP | NAME &#x3D; checktmp | TIME &#x3D; 1637667452 | USER &#x3D; 0
EVENT &#x3D; ODS_SUMMARY | 
Task Name            : checktmp
Start time           : Tue 23 Nov 2021 06:37:30 AM EST 
End time             : Tue 23 Nov 2021 06:37:32 AM EST 
Total Requests       : 3
No of files skipped  : 1
No. of Good files    : 2
No. of Cache hit     : 0
No of Files Excluded : 0
No. of Infections    : 0
Timeout              : 0
ScanError            : 0
No of files cleaned  : 0
No of files deleted  : 0
Time taken           : 2.023543s
Engine version       : 6010.8670
DAT version          : 999.0
INFO ScanFactory [5273] ODS Scan Manager is shutting down gracefully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@antivirus ~]# cd &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;scripts
[root@antivirus scripts]# .&#x2F;uninstall-mfetp.sh 
Uninstall McAfee Endpoint Security for Linux Threat Prevention ? (yes or no) : yes
Detected rpm based distribution
warning: &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;etc&#x2F;prefs.xml saved as &#x2F;opt&#x2F;McAfee&#x2F;ens&#x2F;tp&#x2F;etc&#x2F;prefs.xml.rpmsave
finished McAfeeTP removal
Successfully uninstalled McAfee Endpoint Security for Linux Threat Prevention.
finished McAfeeESPFileAccess removal
Successfully uninstalled McAfee Endpoint Security Kernel Modules for Linux.
finished McAfeeESPAac removal
Successfully uninstalled McAfee Endpoint Security Kernel Modules for Linux.
Detected rpm based distribution
McAfee Endpoint Security Platform File Access for Linux is already uninstalled.
McAfee Endpoint Security Arbitrary Access Control is already uninstalled.
finished McAfeeESP removal
Successfully uninstalled McAfee Endpoint Security Platform for Linux.
finished McAfeeRt removal
Successfully uninstalled McAfee Runtime for Linux.
McAfee FMP for Linux is already uninstalled.

[root@antivirus scripts]# rpm -e MFEcma MFErt
Stopping and unregistering MA start up script...
Stopping dependent services ...
stopping ma service...
Removed symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;mcafee.ma.service.
warning: &#x2F;etc&#x2F;ma.d&#x2F;mainfo.ini saved as &#x2F;etc&#x2F;ma.d&#x2F;mainfo.ini.rpmsave
warning: &#x2F;etc&#x2F;ma.d&#x2F;EPOAGENT3000&#x2F;config.xml saved as &#x2F;etc&#x2F;ma.d&#x2F;EPOAGENT3000&#x2F;config.xml.rpmsave
warning: &#x2F;etc&#x2F;ma.d&#x2F;CMNUPD__3000&#x2F;config.xml saved as &#x2F;etc&#x2F;ma.d&#x2F;CMNUPD__3000&#x2F;config.xml.rpmsave
Removing &#x2F;var&#x2F;McAfee&#x2F;agent directory
Removing &#x2F;var&#x2F;McAfee&#x2F;.msgbus&#x2F;* directory
Restarting stopped services ...
Deleting user(mfe) and group (mfe)
Runtime uninstalled successfully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="网络部署"><a href="#网络部署" class="headerlink" title="网络部署"></a>网络部署</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.添加以下包至本地YUM库
McAfeeESP-10.6.9-126.x86_64.rpm
McAfeeESPAac-10.6.9-126.x86_64.rpm
McAfeeESPFileAccess-10.6.9-126.x86_64.rpm
McAfeeRt-10.6.9-126.x86_64.rpm
McAfeeTP-10.6.9-121.x86_64.rpm
MFEma.x86_64.rpm
MFErt.i686.rpm

2.执行yum install -y McAfeeTP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



]]></content>
      <tags>
        <tag>centos</tag>
        <tag>antivirus</tag>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS的免密登录</title>
    <url>/2019/07/20/centos7-ssh-nopasswd/</url>
    <content><![CDATA[<p>实现CentOS的免密登录还是挺简单的。</p>
<ol>
<li> 密钥的产生</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ssh-keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在用户家目录下的.ssh目录下产生id_rsa和id_rsa.pub两个密钥文件。其中，.pub为公钥。</p>
<ol start="2">
<li> 公钥的上传</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub root@target_IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>使用ssh-copy-id来实现自动的上传、修改配置。</p>
<ol start="3">
<li> 增加主机配置文件</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim ~&#x2F;.ssh&#x2F;config
————————————————————
Host target0    &#x2F;&#x2F;主机名称
Hostname 192.168.174.148    &#x2F;&#x2F;主机IP或解析记录
Port 22 &#x2F;&#x2F;SSH端口号
User root   &#x2F;&#x2F;SSH用户名

Host target1
Hostname 192.168.174.149
Port 22
User root
————————————————————<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li> 测试</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[root@ansible_server ~]# ssh target0
Last login: Fri Dec 20 14:59:11 2019 from 192.168.174.147
[root@ansible_target0 ~]#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li> 批量执行 在面临批量主机执行免密登录，则需要sshpass来执行。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> sshpassvlmachine.sh
~~~~~~~
<span class="token comment">#!/bin/bash</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">host</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> remote-hosts<span class="token variable">)</span></span>
<span class="token keyword">do</span>
    sshpass -p <span class="token string">'password'</span> ssh-copy-id root@<span class="token variable">$&#123;host&#125;</span>
<span class="token keyword">done</span>
~~~~~~~

<span class="token function">vim</span> remote-hosts
~~~~~~~
<span class="token number">192.168</span>.174.148
<span class="token number">192.168</span>.174.149
~~~~~~~
<span class="token function">chmod</span> +x sshpassvlmachine.sh
<span class="token function">sh</span> sshpassvlmachine.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>整合部署开源ITSM管理平台(1)</title>
    <url>/2021/11/09/centos8-allinone-itop-ocsng-glpi/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="iTop"><a href="#iTop" class="headerlink" title="iTop"></a>iTop</h3><p>​    <a href="https://www.combodo.com/itop-193">iTop</a>是使用PHP编写的开源ITSM系统，其名称为IT运营门户（IT Operation Portal）的简称，素以贴合ITSL理论而著名。它的老家在意大利。</p>
<h3 id="OCSInverntoryNG"><a href="#OCSInverntoryNG" class="headerlink" title="OCSInverntoryNG"></a>OCSInverntoryNG</h3><p>​    <a href="https://ocsinventory-ng.org/">OCSinventoyNG</a> 使用perl编写的开源资产管理软件，它通过agent上报相关信息来获取部署范围内的Windows、Unix、MacOS、andriod等资产信息。</p>
<h3 id="GLPI"><a href="#GLPI" class="headerlink" title="GLPI"></a>GLPI</h3><p>​    <a href="https://glpi-project.org/">GLPI</a>是一款由法国人开发的开源CMDB软件，GLPI是法语Gestionnaire libre de parc informatique的缩写，它使用PHP开发。</p>
<h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><h3 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 系统更新</span>
dnf <span class="token function">install</span> -y epel-release dnf-utils
dnf <span class="token function">install</span> -y https://rpms.remirepo.net/enterprise/remi-release-8.rpm
dnf config-manager --set-enabled powertools
dnf makecache 
dnf update -y

<span class="token comment"># 安装依赖</span>
dnf <span class="token function">install</span> -y cmake <span class="token function">make</span> autoconf gcc gcc-c++ <span class="token function">unzip</span> graphviz libzip-devel libzip-tools <span class="token function">curl</span>

<span class="token comment"># 安装PHP7.4</span>
dnf module reset php
dnf module <span class="token builtin class-name">enable</span> php:remi-7.4
dnf <span class="token function">install</span> -y php php-curl php-zip php-gd php-soap php-xml php-mbstring php-fpm php-ldap libmcrypt libmcrypt-devel php-pecl-apcu mhash
dnf <span class="token function">install</span> -y php-dom php-simplexml php-xmlreader php-curl php-date php-exif php-filter php-ftp php-gd php-hash php-iconv php-json php-libxml php-mbstring php-mysqlnd php-openssl php-pcre php-posix php-sockets php-spl php-tokenizer php-zlib
dnf <span class="token function">install</span> -y php-xmlrpc php-gd php-opcache php-mysqlnd php-json php-devel php-odbc php-mbstring php-snmp php-intl

<span class="token comment"># 安装Apache和MySQL</span>
yum <span class="token function">install</span> -y mariadb mariadb-server

yum <span class="token function">install</span> -y httpd
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm mariadb --now

firewall-cmd --permanent --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>https,http<span class="token punctuation">&#125;</span>
firewall-cmd --reload

<span class="token comment"># PHP支持ZIP</span>
<span class="token function">vim</span> /etc/php.ini
~~~~~~
<span class="token number">269</span> zlib.output_compression <span class="token operator">=</span> On
……
<span class="token number">923</span> date.timezone <span class="token operator">=</span> Asia/Shanghai
~~~~~~

<span class="token comment"># mysql安全强化</span>
mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="iTop部署"><a href="#iTop部署" class="headerlink" title="iTop部署"></a>iTop部署</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 下载网站文件</span>
<span class="token function">wget</span> https://udomain.dl.sourceforge.net/project/itop/itop/2.7.5-1/iTop-2.7.5-1-7770.zip
<span class="token function">unzip</span> iTop-2.7.5-1-7770.zip
<span class="token function">cp</span> web/* /var/www/html/ -R
<span class="token function">chown</span> -R apache:apache /var/www/html/

<span class="token comment"># 配置数据库</span>
mysql -uroot -p
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database itop character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on itop.* to itop@<span class="token string">'localhost'</span> identified by <span class="token string">'itop'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="OCSInventoryNG部署"><a href="#OCSInventoryNG部署" class="headerlink" title="OCSInventoryNG部署"></a>OCSInventoryNG部署</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 依赖文件</span>
dnf <span class="token function">install</span> -y perl-Archive-Zip perl-Compress-Zlib perl-DBD-MySQL perl-DBI perl-Mojolicious perl-Net-IP perl-Plack perl-SOAP-Lite perl-Switch perl-XML-Entities perl-XML-Simple perl-Apache-DBI perl-Digest-SHA1 perl-Apache2-SOAP

<span class="token comment"># 配置数据库</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database ocsng character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on ocsng.* to ocsadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'ocsadmin'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>

<span class="token comment"># 下载和安装</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token function">git</span> clone https://github.com/OCSInventory-NG/OCSInventory-Server.git
<span class="token builtin class-name">cd</span> OCSInventory-Server
<span class="token function">git</span> clone https://github.com/OCSInventory-NG/OCSInventory-ocsreports.git ocsreports
<span class="token function">sh</span> setup.sh
……
<span class="token comment"># 默认回车，完成安装</span>
……
+----------------------------------------------------------------------+
<span class="token operator">|</span>        OK, Administration server installation finished <span class="token punctuation">;</span>-<span class="token punctuation">)</span>           <span class="token operator">|</span>
<span class="token operator">|</span>                                                                      <span class="token operator">|</span>
<span class="token operator">|</span> Please, review /etc/httpd/conf.d/ocsinventory-reports.conf
<span class="token operator">|</span>          to ensure all is good and restart Apache daemon.            <span class="token operator">|</span>
<span class="token operator">|</span>                                                                      <span class="token operator">|</span>
<span class="token operator">|</span> Then, point your browser to http://server//ocsreports
<span class="token operator">|</span>        to configure database server and create/update schema.        <span class="token operator">|</span>
+----------------------------------------------------------------------+

Setup has created a log <span class="token function">file</span> /opt/OCSInventory-Server/ocs_server_setup.log. Please, save this file.
If you encounter error <span class="token keyword">while</span> running OCS Inventory NG Management server,
we can ask you to show us its content <span class="token operator">!</span>

DON<span class="token string">'T FORGET TO RESTART APACHE DAEMON !

Enjoy OCS Inventory NG ;-)
……

# 修改站点文件
vim /usr/share/ocsinventory-reports/ocsreports/require/header.php
# 对31行注释
require_once(COMPOSER_AUTOLOAD)

# 500错误修改
# 因为用户名、数据库名和密码变更，会引起500内部错误
# 需要同步修改以下文件：
# z-ocsinventory-server.conf  
# zz-ocsinventory-restapi.conf
# 完成网页安装后删除install文件
rm -f /usr/share/ocsinventory-reports/ocsreports/install.php

# 部署客户端
# 客户端需要开启epel源
dnf install -y perl-Net-SNMP
rpm -Uvh https://rpm.ocsinventory-ng.org/ocsinventory-release-latest.el8.ocs.noarch.rpm
dnf makecache
dnf install ocsinventory-agent -y

# 修改配置
sed -i '</span>s/local/<span class="token comment"># local/g' /etc/ocsinventory/ocsinventory-agent.cfg</span>
<span class="token function">sed</span> -i <span class="token string">'s/# server/server/g'</span> /etc/ocsinventory/ocsinventory-agent.cfg
<span class="token function">sed</span> -i <span class="token string">'s\your.ocsserver.name\192.168.79.11/ocsinventory\g'</span> /etc/ocsinventory/ocsinventory-agent.cfg
ocsinventory-agent

<span class="token comment"># 定时上报</span>
<span class="token comment"># 使用rpm安装会在/etc/cron.hourly建立上报文件，可按需配置或移动文件到cron.daily目录</span>
<span class="token builtin class-name">echo</span> <span class="token string">'60 * * * * /usr/bin/perl /usr/sbin/ocsinventory-agent'</span><span class="token operator">>></span>/etc/crontab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="GLPI部署"><a href="#GLPI部署" class="headerlink" title="GLPI部署"></a>GLPI部署</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 配置数据库</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database glpidb character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on glpidb.* to glpiadmin@<span class="token string">'localhost'</span> identified by <span class="token string">'glpiadmin'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span>

<span class="token comment"># 获取软件包</span>
<span class="token function">wget</span> https://github.com/glpi-project/glpi/releases/download/9.5.6/glpi-9.5.6.tgz
<span class="token function">tar</span> -zxvf glpi-9.5.6.tgz -C /var/www/html
<span class="token function">chown</span> -R apache:apache /var/www/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="WEB-GUI"><a href="#WEB-GUI" class="headerlink" title="WEB_GUI"></a>WEB_GUI</h2><ol>
<li><a href="https://www.sujx.net/2019/11/20/centos8-itop-install/">iTOP</a></li>
<li>OCSInventoryNG(略)</li>
<li>GLPI(略)</li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>iTop</tag>
        <tag>OCSInventroy</tag>
        <tag>GLPI</tag>
        <tag>CMDB</tag>
        <tag>ITSM</tag>
      </tags>
  </entry>
  <entry>
    <title>基于CentOS8快速部署iTop</title>
    <url>/2019/11/20/centos8-itop-install/</url>
    <content><![CDATA[<p>iTop是一个用PHP编写的基于ITIL理念打造的开源ITSM系统。本次将在CentOS8的虚机上安装部署一套iTOP系统。</p>
<ol>
<li> 系统准备 首先是准本LAMP环境，使用系统默认的Apache2.4.3、PHP7.2、Mariadb10.3.</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum update -y
yum <span class="token function">install</span> -y cmake <span class="token function">make</span> autoconf gcc gcc-g++ <span class="token function">unzip</span> graphviz libzip-devel libzip-tools
yum <span class="token function">install</span> -y httpd php php-fpm php-ldap php-soap
yum <span class="token function">install</span> -y php-xmlrpc php-gd php-opcache php-mysqlnd php-json php-devel
yum <span class="token function">install</span> -y libmcrypt libmcrypt-devel php-pecl-apcu mhash
yum <span class="token function">install</span> -y php-odbc php-mbstring php-snmp
yum <span class="token function">install</span> -y mariadb mariadb-server
firewall-cmd --permanent --add-service<span class="token operator">=</span>http
firewall-cmd --reload
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm mariadb --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> 上传iTop系统，修改配置文件 我们把iTop的程序文件放置到/var/www/web目录下，修改/etc/httpd/conf/httpd.conf配置文件，使得根文件系统指向web目录，同时对web目录进行赋权。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">unzip</span> iTop-2.6.1-4463.zip
<span class="token function">cp</span> web/* /var/www/html/ -R
<span class="token function">chown</span> -R apache:apache /var/www/html/
mysql -uroot -p
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database itop character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on itop.* to itop@<span class="token string">'localhost'</span> identified by <span class="token string">'itop'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 编译PHP扩展实现支持zip 使用YUM/DNF安装的PHP默认不支持zip扩展，因此默认配置下iTOP会出现白屏，日志报错： <code>PHP Fatal error: Class &#39;DBBackup&#39; not found in /var/www/html/itop/web/setup/applicationinstaller.class.inc.php</code> 所以，需要编译安装PHP的zip扩展。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y <span class="token function">make</span> automake re2c libzip libzip-devel
<span class="token function">wget</span> http://pecl.php.net/get/zip
<span class="token function">tar</span> zxvf <span class="token function">zip</span>
<span class="token builtin class-name">cd</span> zip-*
phpize
./configure 
<span class="token function">make</span> 
<span class="token function">cp</span> modules/zip.so /usr/lib64/php/modules/
<span class="token function">touch</span> /etc/php.d/20-zip.ini
<span class="token builtin class-name">echo</span> <span class="token string">'extension=zip'</span> <span class="token operator">>></span> /etc/php.d/20-zip.ini
<span class="token function">vim</span> /etc/php.ini
~~~~~~
<span class="token comment">## 开启zlib压缩支持</span>
<span class="token number">269</span> zlib.output_compression <span class="token operator">=</span> On
~~~~~~
systemctl restart php-fpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后打开站点就可以进行安装了。</p>
<ol start="4">
<li> iTOP部署 <a href="https://cdn.sujx.net/itop1.png" title="iTopDeploy1"><img src="https://cdn.sujx.net/itop1.png" alt="iTopDeploy1" title="iTopDeploy1"></a> <a href="https://cdn.sujx.net/itop2.png" title="iTopDeploy2"><img src="https://cdn.sujx.net/itop2.png" alt="iTopDeploy2" title="iTopDeploy2"></a> <a href="https://cdn.sujx.net/itop3.png" title="iTopDeploy3"><img src="https://cdn.sujx.net/itop3.png" alt="iTopDeploy3" title="iTopDeploy3"></a> <a href="https://cdn.sujx.net/itop4.png" title="iTopDeploy4"><img src="https://cdn.sujx.net/itop4.png" alt="iTopDeploy4" title="iTopDeploy4"></a> <a href="https://cdn.sujx.net/itop5.png" title="iTopDeploy5"><img src="https://cdn.sujx.net/itop5.png" alt="iTopDeploy5" title="iTopDeploy5"></a> <a href="https://cdn.sujx.net/itop6.png" title="iTopDeploy6"><img src="https://cdn.sujx.net/itop6.png" alt="iTopDeploy6" title="iTopDeploy6"></a> <a href="https://cdn.sujx.net/itop7.png" title="iTopDeploy7"><img src="https://cdn.sujx.net/itop7.png" alt="iTopDeploy7" title="iTopDeploy7"></a> <a href="https://cdn.sujx.net/itop8.png" title="iTopDeploy8"><img src="https://cdn.sujx.net/itop8.png" alt="iTopDeploy8" title="iTopDeploy8"></a> <a href="https://cdn.sujx.net/itop9.png" title="iTopDeploy9"><img src="https://cdn.sujx.net/itop9.png" alt="iTopDeploy9" title="iTopDeploy9"></a> <a href="https://cdn.sujx.net/itop10.png" title="iTopDeploy10"><img src="https://cdn.sujx.net/itop10.png" alt="iTopDeploy10" title="iTopDeploy10"></a> <a href="https://cdn.sujx.net/itop11.png" title="iTopDeploy11"><img src="https://cdn.sujx.net/itop11.png" alt="iTopDeploy11" title="iTopDeploy11"></a> <a href="https://cdn.sujx.net/itop12.png" title="iTopDeploy12"><img src="https://cdn.sujx.net/itop12.png" alt="iTopDeploy12" title="iTopDeploy12"></a> <a href="https://cdn.sujx.net/itop13.png" title="iTopDeploy13"><img src="https://cdn.sujx.net/itop13.png" alt="iTopDeploy13" title="iTopDeploy13"></a> <a href="https://cdn.sujx.net/itop14.png" title="iTopDeploy14"><img src="https://cdn.sujx.net/itop14.png" alt="iTopDeploy14" title="iTopDeploy14"></a> <a href="https://cdn.sujx.net/itop15.png" title="iTopDeploy15"><img src="https://cdn.sujx.net/itop15.png" alt="iTopDeploy15" title="iTopDeploy15"></a></li>
</ol>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>itop</tag>
      </tags>
  </entry>
  <entry>
    <title>制作CentOS 8的黄金模板</title>
    <url>/2021/05/08/centos8-make-template/</url>
    <content><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ol>
<li>在虚拟化环境中部署CentOS 8，包含Hyper-V、Esxi、Virtualbox等；</li>
<li>使用mini组件部署，大约会安装378个软件包；</li>
<li>安装过程中添加简体中文支持、设定时区为上海、使用硬盘自动分区、关闭kdump；</li>
<li>设定root密码(后期关闭root的ssh访问权限)，并添加远程ssh访问管理员账户；</li>
<li>设定网络开机自动启动；</li>
</ol>
<hr>
<h3 id="系统调整"><a href="#系统调整" class="headerlink" title="系统调整"></a>系统调整</h3><ol>
<li><p>安装工具</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装更新</span>
yum makecache
yum upgrade -y
<span class="token comment"># 安装系统工具</span>
yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token function">curl</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">vim</span> mailx mlocate telnet net-tools bash-completion tmux
yum <span class="token function">install</span> -y chrony <span class="token function">rsync</span> iotop <span class="token function">git</span> <span class="token function">screen</span> tree open-vm-tools yum-utils
updatedb <span class="token operator">&amp;&amp;</span> ldconfig
<span class="token comment"># 配置默认主机名</span>
hostnamectl set-hostname vlnx000000
<span class="token comment"># 配置模板机网络别名为eth0,如果是Hyper-V的话，可以忽略</span>
nmcli c m ens160 con-name eth0
<span class="token comment"># 设定模板机IP</span>
nmcli c m eth0 ipv4.method manual ipv4.addresses <span class="token number">192.168</span>.248.245/24 ipv4.dns <span class="token number">192.168</span>.248.2 ipv4.gateway <span class="token number">192.168</span>.248.2
nmcli c d eth0 <span class="token operator">&amp;&amp;</span> nmcli c u eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加IP地址配置脚本</span>
<span class="token function">touch</span> ipset.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ipset.sh
<span class="token function">vim</span> ipset.sh

<span class="token comment">#!/bin/bash</span>
<span class="token comment">#该脚本用于设置网卡的IP地址</span>

<span class="token builtin class-name">read</span> -p <span class="token string">"请输入设置IP地址："</span> IP
<span class="token builtin class-name">read</span> -p <span class="token string">"请输入设置的网关："</span> GW
<span class="token comment">#read -p "请输入设置的子网掩码：" MASK</span>
<span class="token builtin class-name">read</span> -p <span class="token string">"请输入首选DNS服务器："</span> D1
<span class="token comment">#read -p "请输入备选DNS服务器：" D2</span>
<span class="token builtin class-name">read</span> -p <span class="token string">"请输入主机名："</span> MachineNAME

nmcli c m eth0 ipv4.method manual ipv4.address <span class="token variable">$IP</span> ipv4.gateway <span class="token variable">$GW</span> ipv4.dns <span class="token variable">$D1</span>
nmcli c d eth0
nmcli c u eth0
hostnamectl set-hostname <span class="token variable">$MachineNAME</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>系统调整</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加华为云的YUM镜像</span>
<span class="token function">wget</span> -O /etc/yum.repos.d/CentOS-Base.repo https://repo.huaweicloud.com/repository/conf/CentOS-8-reg.repo
<span class="token comment"># 关闭SELINUX</span>
<span class="token function">sed</span> -i <span class="token string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config
<span class="token function">sed</span> -i <span class="token string">'s/vmlinuz.*/&amp; selinux=0/g'</span> /boot/grub2/grub.cfg
setenforce <span class="token number">0</span>

<span class="token comment"># SSHD服务优化，设定如下项</span>

LoginGraceTime 2m
PermitRootLogin no
StrictModes <span class="token function">yes</span>
MaxAuthTries <span class="token number">6</span>
MaxSessions <span class="token number">10</span>

PermitEmptyPasswords no
PasswordAuthentication <span class="token function">yes</span>

GSSAPIAuthentication no
GSSAPICleanupCredentials no

X11Forwarding no
UseDNS no
Compression delayed
Banner none

<span class="token comment"># 开启网络BBR模块</span>
<span class="token builtin class-name">echo</span> <span class="token string">"net.core.default_qdisc=fq"</span> <span class="token operator">>></span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">"net.ipv4.tcp_congestion_control=bbr"</span> <span class="token operator">>></span> /etc/sysctl.conf
sysctl -p

<span class="token comment"># 调整SWAP使用策略</span>
<span class="token builtin class-name">echo</span> vm.swappiness <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">>></span> /etc/sysctl.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>监控工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装EPEL源
yum install -y epel-release

# 添加华为云源
sed -i &quot;s&#x2F;#baseurl&#x2F;baseurl&#x2F;g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo
sed -i &quot;s&#x2F;metalink&#x2F;#metalink&#x2F;g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo
sed -i &quot;s@https\?:&#x2F;&#x2F;download.example&#x2F;pub@https:&#x2F;&#x2F;repo.huaweicloud.com@g&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo

yum makecache
yum upgrade -y

# 更新和安装工具
yum install -y htop iftop atop smem 

# 关闭EPEL
yum-config-manager --disable epel
yum-config-manager --disable epel-modular
yum-config-manager --disable epel-testing-modular<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>调整启动参数，取消开机画面</p>
<pre class="line-numbers language-none"><code class="language-none"># vim &#x2F;etc&#x2F;default&#x2F;grub
# 设定等待时间为3秒
GRUB_TIMEOUT&#x3D;3
GRUB_DEFAULT&#x3D;saved
GRUB_DISABLE_SUBMENU&#x3D;true
GRUB_TERMINAL_OUTPUT&#x3D;&quot;console&quot;
# 删除原有的rhgb选项，关闭开机画面，显示服务启动状态，保留quiet避免输出过多硬件自检内容
GRUB_CMDLINE_LINUX&#x3D;&quot;crashkernel&#x3D;auto rhgb quiet&quot;
GRUB_DISABLE_RECOVERY&#x3D;&quot;true&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">grub2-mkconfig -o &#x2F;boot&#x2F;grub2&#x2F;grub.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>启动时间服务</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装时间同步服务器
yum install -y chrony

# 添加阿里云NTP服务器:w
cat &gt;&gt; &#x2F;etc&#x2F;chronyd.conf &lt;&lt;EOF
pool time.pool.aliyun.com iburst
pool cn.pool.ntp.org iburst

allow 192.168.248.0&#x2F;24
EOF

# 设置时区为亚洲&#x2F;上海
timedatectl set-timezone Asia&#x2F;Shanghai

# 重启时间服务
systemctl enable chronyd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>清理交付</p>
<pre class="line-numbers language-none"><code class="language-none"># 同步数据
sync
ldconfig

# 删除主机ID
&gt;&#x2F;etc&#x2F;machine-id

# 删除ssh公钥
rm -rf &#x2F;etc&#x2F;ssh&#x2F;*key*

# 清理yum缓存
yum clean all

#清理日志
logrotate -f &#x2F;etc&#x2F;logrotate.conf
rm -f &#x2F;var&#x2F;log&#x2F;*-???????? &#x2F;var&#x2F;log&#x2F;*.gz
rm -f &#x2F;var&#x2F;log&#x2F;dmesg.old
rm -rf &#x2F;var&#x2F;log&#x2F;anaconda*
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;audit&#x2F;audit.log
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;wtmp
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;lastlog
cat &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;grubby

unset HISTFILE
rm -rf ~root&#x2F;.ssh&#x2F;

# 清理历史记录
history -c

# 使用外部工具关机，避免留下shutdown历史记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<h3 id="导出模板"><a href="#导出模板" class="headerlink" title="导出模板"></a>导出模板</h3><ul>
<li>导出为ova模板，或直接在控制台使用。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>CentOS</tag>
        <tag>VirtualMachine</tag>
        <tag>System</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS8的软件库</title>
    <url>/2020/01/31/centos8-mirrors/</url>
    <content><![CDATA[<p>相对于华为和阿里云的mirrors，中国科技大学的mirrors的完整性和速度要好一些，而且配置文件也方便一些。现在把相关文件记一下：</p>
<h3 id="系统repo"><a href="#系统repo" class="headerlink" title="系统repo"></a>系统repo</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>BaseOS<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Base
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/BaseOS/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token comment">#additional packages that may be useful</span>
<span class="token punctuation">[</span>extras<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Extras
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/extras/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token comment">#additional packages that extend functionality of existing packages</span>
<span class="token punctuation">[</span>centosplus<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Plus
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/centosplus/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token punctuation">[</span>AppStream<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - AppStream
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/AppStream/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

<span class="token punctuation">[</span>PowerTools<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - PowerTools
<span class="token comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=PowerTools&amp;infra=$infra</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.ustc.edu.cn/centos/<span class="token variable">$releasever</span>/PowerTools/<span class="token variable">$basearch</span>/os/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos8</tag>
        <tag>mirrors</tag>
        <tag>repo</tag>
        <tag>tsinghua</tag>
      </tags>
  </entry>
  <entry>
    <title>批量修改Windows主机本地管理员密码</title>
    <url>/2021/02/02/change-localadmin-password/</url>
    <content><![CDATA[<p>在Windows活动目录中的主机依据合规的要求，至少每年都应当按照密码规则进行一次本地管理员的密码变更。</p>
<p>以下脚本是使用有域管理员权限的域账号进行批量执行来修改主机管理员密码。</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># Windows域主机变更本地管理员密码脚本</span>
<span class="token comment"># 执行需要有本地主机管理员权限的域账号</span>
<span class="token comment"># 执行需要本地主机开启powershell远程执行权限</span>
<span class="token comment"># 引入需要变更密码的主机</span>
<span class="token variable">$VMList</span> = @<span class="token punctuation">(</span><span class="token string">'server1'</span><span class="token punctuation">,</span><span class="token string">'server2'</span><span class="token punctuation">,</span><span class="token string">'server3'</span><span class="token punctuation">,</span><span class="token string">'server4'</span><span class="token punctuation">)</span>

<span class="token comment"># 设立一个函数来执行密码变更</span>
<span class="token keyword">function</span> ChangeAdminPwd<span class="token punctuation">(</span><span class="token variable">$VMName</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token comment"># 设定本地密码规则，非随机密码，便于使用passgen配合主机名和加盐规则推导主机密码</span>
    <span class="token variable">$LocalPwd</span> = <span class="token string">'#'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cmd <span class="token operator">/</span>c <span class="token string">"PassGen.exe -g <span class="token variable">$VMName</span> billgate -l 20 -e 2"</span><span class="token punctuation">)</span> <span class="token operator">-</span>split <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span>4<span class="token punctuation">]</span>
    <span class="token comment"># 将主机名和密码值并保存到本地文件</span>
    <span class="token function">Write-Output</span> <span class="token variable">$VMName</span> <span class="token variable">$LocalPwd</span> <span class="token punctuation">|</span> <span class="token function">Out-File</span> <span class="token operator">-</span>Append <span class="token punctuation">.</span>\localpasswd<span class="token punctuation">.</span>txt
    <span class="token comment"># 使用net user Administrator 执行密码变更</span>
    <span class="token variable">$Job</span> = <span class="token punctuation">&#123;</span> net user Administrator <span class="token string">"<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">)</span></span>"</span> <span class="token punctuation">&#125;</span>
    <span class="token comment"># 使用powershell的远程执行功能进行变更</span>
    <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$VMName</span> <span class="token operator">-</span>ScriptBlock <span class="token variable">$Job</span>  <span class="token operator">-</span>ArgumentList  <span class="token variable">$LocalPwd</span>
    <span class="token comment"># 变更结果导出到本地文件，已进行确认变更结果</span>
    <span class="token function">Write-Output</span> <span class="token variable">$VMName</span> is $? <span class="token punctuation">|</span> <span class="token function">Out-File</span> <span class="token operator">-</span>Append <span class="token punctuation">.</span>\checkhost<span class="token punctuation">.</span>txt
<span class="token punctuation">&#125;</span>

<span class="token comment"># 循环执行上述函数</span>
<span class="token keyword">ForEach</span> <span class="token punctuation">(</span> <span class="token variable">$VMName</span> in <span class="token variable">$VMlist</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    ChangeAdminPwd<span class="token punctuation">(</span><span class="token variable">$VMName</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>powershell</tag>
        <tag>system</tag>
      </tags>
  </entry>
  <entry>
    <title>建立内网Linux防病毒系统</title>
    <url>/2021/07/09/clamav-privte-depoly/</url>
    <content><![CDATA[<p>ClamAV本来是为了Postfix邮件网关而开发的防毒软件，主要目的是对邮件队列里面的邮件进行病毒查杀。然后，这个防毒模块独立出来成为一个提供病毒、恶意软件、蠕虫的查杀能力的开源软件，成为了Linux环境下实现文件安全的主要选择。�</p>
<h3 id="部署ClamAV"><a href="#部署ClamAV" class="headerlink" title="部署ClamAV"></a>部署ClamAV</h3><ol start="0">
<li><p>添加EPEL源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ClamAV的RHEL/CentOS源是直接用epel来发布的</span>
yum cleanall
yum makecache
yum <span class="token function">install</span> -y <span class="token function">git</span> python3-pip
yum <span class="token function">install</span> -y epel-release

<span class="token comment"># 添加华为云源</span>
<span class="token function">sed</span> -i <span class="token string">"s/#baseurl/baseurl/g"</span> /etc/yum.repos.d/epel.repo
<span class="token function">sed</span> -i <span class="token string">"s/metalink/#metalink/g"</span> /etc/yum.repos.d/epel.repo
<span class="token function">sed</span> -i <span class="token string">"s@https\?://download.example/pub@https://repo.huaweicloud.com@g"</span> /etc/yum.repos.d/epel.repo

yum makecache
yum upgrade -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>安装ClamAV</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y clamav clamav-update clamd <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>启动服务</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 刷新服务列表</span>
systemctl daemon-reload
<span class="token comment"># 启动自动更新病毒库,默认更新周期是每月一次</span>
systemctl <span class="token builtin class-name">enable</span> clamav-freshclam.service
<span class="token comment"># 启动扫描服务</span>
systemctl <span class="token builtin class-name">enable</span> clamd@scan.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="建立内部病毒特征库"><a href="#建立内部病毒特征库" class="headerlink" title="建立内部病毒特征库"></a>建立内部病毒特征库</h3></li>
<li><p>部署cvdupdate</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装Nginx</span>
<span class="token comment"># 配置站点目录为/var/www</span>
yum <span class="token function">install</span> -y nginx
<span class="token function">mkdir</span> -p /var/www
<span class="token function">chown</span> nginx:nginx /var/www

<span class="token comment"># cvdupdate是思科公司(这个思科就是那个思科)开发的一个ClamAV病毒库镜像工具</span>
pip3 <span class="token function">install</span> cvdupdate
<span class="token comment"># 执行病毒库存储位置</span>
cvd config <span class="token builtin class-name">set</span> --dbdir /var/www
<span class="token comment"># 修改官方源为亚马逊的S3镜像</span>
<span class="token function">sed</span> -i <span class="token string">"s@https://database.clamav.net@https://pivotal-clamav-mirror.s3.amazonaws.com@g"</span> ~/.cvdupdate/config.json

cvd update
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO main.cvd is up-to-date. Version: <span class="token number">59</span>
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO daily.cvd is up-to-date. Version: <span class="token number">26225</span>
<span class="token number">2021</span>-07-09 <span class="token number">17</span>:28:06 cvdupdate-1.0.2 INFO bytecode.cvd is up-to-date. Version: <span class="token number">333</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置CLamAV"><a href="#配置CLamAV" class="headerlink" title="配置CLamAV"></a>配置CLamAV</h3></li>
<li><p>添加内网更新源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认使用https，若使用http协议需要写明http://xxx.yyy.zzz，否则则不需要</span>
<span class="token function">sed</span> -i <span class="token string">"s@database.clamav.net@http://192.168.248.150/clamav@g"</span> /etc/freshclam.conf

<span class="token punctuation">[</span>root@elasticnode1 ~<span class="token punctuation">]</span><span class="token comment"># freshclam</span>
ClamAV update process started at Fri Jul  <span class="token number">9</span> <span class="token number">18</span>:29:37 <span class="token number">2021</span>
WARNING: Your ClamAV installation is OUTDATED<span class="token operator">!</span>
WARNING: Local version: <span class="token number">0.103</span>.2 Recommended version: <span class="token number">0.103</span>.3
DON<span class="token string">'T PANIC! Read https://www.clamav.net/documents/upgrading-clamav
daily database available for download (remote version: 26225)
Time:    0.5s, ETA:    0.0s [========================>]  102.43MiB/102.43MiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-4cfdfa4231c3496ffee7793166ed2602.tmp-daily.cvd<span class="token string">' ...
Database test passed.
daily.cvd updated (version: 26225, sigs: 3994327, f-level: 63, builder: raynman)
main database available for download (remote version: 59)
Time:    0.5s, ETA:    0.0s [========================>]  112.40MiB/112.40MiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-cf8d5312f458ec6b897d0fbb3af11892.tmp-main.cvd<span class="token string">' ...
Database test passed.
main.cvd updated (version: 59, sigs: 4564902, f-level: 60, builder: sigmgr)
bytecode database available for download (remote version: 333)
Time:    0.0s, ETA:    0.0s [========================>]  286.79KiB/286.79KiB
Testing database: '</span>/var/lib/clamav/tmp.b9aed6d81b/clamav-e205410803d9f55beb3855e58f5ec7d2.tmp-bytecode.cvd' <span class="token punctuation">..</span>.
Database <span class="token builtin class-name">test</span> passed.
bytecode.cvd updated <span class="token punctuation">(</span>version: <span class="token number">333</span>, sigs: <span class="token number">92</span>, f-level: <span class="token number">63</span>, builder: awillia2<span class="token punctuation">)</span>

<span class="token comment"># 启动更新服务</span>
systemctl start clamav-freshclam.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置ClamAV服务</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建日志文件</span>
<span class="token function">touch</span> /var/log/clamd.scan

<span class="token comment"># 修改clamd配置文件</span>
<span class="token function">sed</span> -i <span class="token string">'s/#LogFile \/var/LogFile \/var/g'</span> /etc/clamd.d/scan.conf
<span class="token function">sed</span> -i <span class="token string">'s/#LocalSocket \/run/LocalSocket \/run/g'</span> /etc/clamd.d/scan.conf
<span class="token function">sed</span> -i <span class="token string">'s/#LocalSocketMode/LocalSocketMode/g'</span> /etc/clamd.d/scan.conf

<span class="token comment"># 启动服务</span>
systemctl start clamd@scan.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>功能测试</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载测试病毒包</span>
<span class="token function">wget</span> http://www.eicar.org/download/eicar.com

<span class="token comment"># 手动查杀</span>
clamscan --infected --remove --recursive <span class="token builtin class-name">.</span>
<span class="token comment"># 结果</span>
/root/eicar.com: Win.Test.EICAR_HDB-1 FOUND
/root/eicar.com: Removed.

----------- SCAN SUMMARY -----------
Known viruses: <span class="token number">8543862</span>
Engine version: <span class="token number">0.103</span>.2
Scanned directories: <span class="token number">1</span>
Scanned files: <span class="token number">9</span>
Infected files: <span class="token number">1</span>
Data scanned: <span class="token number">0.02</span> MB
Data read: <span class="token number">0.01</span> MB <span class="token punctuation">(</span>ratio <span class="token number">2.00</span>:1<span class="token punctuation">)</span>
Time: <span class="token number">17.424</span> sec <span class="token punctuation">(</span><span class="token number">0</span> m <span class="token number">17</span> s<span class="token punctuation">)</span>
Start Date: <span class="token number">2021</span>:07:09 <span class="token number">18</span>:45:02
End Date:   <span class="token number">2021</span>:07:09 <span class="token number">18</span>:45:19<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="与Wazuh结合"><a href="#与Wazuh结合" class="headerlink" title="与Wazuh结合"></a>与Wazuh结合</h3></li>
<li><p>安装Wazuh Agent</p>
<blockquote>
<p>Wazuh默认自带clamav的规则和解码器，所以只要安装wazuh-agent即可。</p>
</blockquote>
</li>
<li><p>Kibana展示</p>
<p><img src="https://cdn.sujx.net/clamav-wazuh.png" alt="clamav"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Sysstem</tag>
        <tag>Antivirus</tag>
        <tag>ClamAV</tag>
      </tags>
  </entry>
  <entry>
    <title>建立本地RPM包仓库</title>
    <url>/2019/09/09/deploy-local-repo-mirror/</url>
    <content><![CDATA[<p>随着国内使用Linux的氛围日渐浓郁，各个大厂的源也如雨后春笋一般纷纷出现，下载速度也是越来越快。不过，在我司内部因为安全制度的限制，生产环境是不能直接连接互联网的,因此需要建立本地的源服务器。</p>
<h3 id="建立服务环境"><a href="#建立服务环境" class="headerlink" title="建立服务环境"></a>建立服务环境</h3><p>软件镜像需要通过HTTP/HTTPS环境来提供服务。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 系统更新</span>
yum update -y
<span class="token comment"># 安装RPM相关包</span>
yum <span class="token function">install</span> -y zlib-devel openssl-devel gcc perl-devel pam-devel <span class="token function">make</span> autoconf
yum <span class="token function">install</span> -y rpm-build <span class="token function">unzip</span> <span class="token function">rsync</span> createrepo
<span class="token comment"># 安装HTTP服务器</span>
yum <span class="token function">install</span> -y httpd mod_security
<span class="token comment"># 修改配置文件</span>
<span class="token function">touch</span> /etc/httpd/conf.d/repos.conf
cat<span class="token operator">>></span>/etc/httpd/conf.d/repos.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
Alias /repos /var/www/repos
&lt;directory /var/www/repos>
    Options +Indexes
    Require all granted
&lt;/directory>
EOF</span>
<span class="token comment">#开启端口</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span>http
firewall-cmd --reload
systemctl <span class="token builtin class-name">enable</span> httpd --now
<span class="token comment"># 配置环境</span>
<span class="token function">mkdir</span> -p /var/www/repos/<span class="token punctuation">&#123;</span>centos,epel,docker-ce,remi,mongodb,zabbix<span class="token punctuation">&#125;</span>
<span class="token function">chown</span> -R apache:apche /var/www/repos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="同步官方安装源"><a href="#同步官方安装源" class="headerlink" title="同步官方安装源"></a>同步官方安装源</h3><p>下载脚本如下,其中使用到了清华大学的镜像源和中科大的镜像源，其中包含了CentOS、epel、Zabbix、MongoDB、PHP的镜像，整个占用存储空间不到800G。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># CentOS</span>
<span class="token function">rsync</span> -avrt --delete --exclude<span class="token operator">=</span>isos --exclude<span class="token operator">=</span>aarch64 --exclude<span class="token operator">=</span>ppc64 --exclude<span class="token operator">=</span>drpms/ --exclude<span class="token operator">=</span>debug/ rsync://mirrors.ustc.edu.cn/centos/ /var/www/repos/centos/

<span class="token comment">#EPEL</span>
<span class="token function">rsync</span> -avrt --delete --exclude<span class="token operator">=</span>isos --exclude<span class="token operator">=</span>aarch64 --exclude<span class="token operator">=</span>ppc64 --exclude<span class="token operator">=</span>drpms/ --exclude<span class="token operator">=</span>debug/ rsync://mirrors.ustc.edu.cn/epel/ /var/www/repos/epel/

<span class="token comment">#Docker_CE</span>
<span class="token function">rsync</span> -avrt --delete --exclude<span class="token operator">=</span>test --exclude<span class="token operator">=</span>nightly --exclude<span class="token operator">=</span>edge --exclude<span class="token operator">=</span>aarch64 --exclude<span class="token operator">=</span>drpms/ --exclude<span class="token operator">=</span>debug/ --exclude<span class="token operator">=</span>source/ --exclude<span class="token operator">=</span>debug-*/ rsync://mirrors.ustc.edu.cn/repo/docker-ce/linux/centos/ /var/www/repos/docker-ce/linux/centos/

<span class="token comment">#Zabbix</span>
<span class="token function">rsync</span> -avrt --delete rsync://mirror.tuna.tsinghua.edu.cn/zabbix/ /var/www/repos/zabbix/

<span class="token comment">#Mongodb</span>
<span class="token function">rsync</span> -avrt --delete  rsync://mirror.tuna.tsinghua.edu.cn/mongodb/yum/ /var/www/repos/mongodb/yum/

<span class="token comment">#Remi</span>
<span class="token function">rsync</span> -avrt --delete  rsync://mirror.tuna.tsinghua.edu.cn/remi/ /var/www/repos/remi/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="设置本地打包软件源"><a href="#设置本地打包软件源" class="headerlink" title="设置本地打包软件源"></a>设置本地打包软件源</h3><p>由于官方软件的更新策略和时间限制，我们需要给部分软件进行自打包和更新升级，所以需要建立单独的本地仓库</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /var/www/repos
<span class="token function">mkdir</span> -p /var/www/repos/local/<span class="token punctuation">&#123;</span><span class="token number">6,7</span>,8<span class="token punctuation">&#125;</span>/x86_64
creatrepo /var/www/repos/local/6/x86_64/
creatrepo /var/www/repos/local/7/x86_64/
creatrepo /var/www/repos/local/8/x86_64/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>repo</tag>
        <tag>dnf</tag>
        <tag>RPM</tag>
        <tag>yum</tag>
      </tags>
  </entry>
  <entry>
    <title>配置DNSMasq缓存系统</title>
    <url>/2021/10/09/dnsmasq/</url>
    <content><![CDATA[<h1 id="部署DNSMasq实现解析缓存服务"><a href="#部署DNSMasq实现解析缓存服务" class="headerlink" title="部署DNSMasq实现解析缓存服务"></a>部署DNSMasq实现解析缓存服务</h1><p>DNSMasq是一个简洁、快速的DNS和DHCP服务器，我们可以使用它为局域网和主机自身提供可靠的DHCPv4、DHCPv6、BOOTP以及PXE服务。<br>本文将记录一次DNSMasq的部署过程，并由该服务提供Github.com的域名解析。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 系统更新</span>
yum makecache
yum update -y
<span class="token comment"># 安装软件</span>
yum <span class="token function">install</span> -y dnsmasq
<span class="token comment"># 启动服务</span>
systemctl <span class="token builtin class-name">enable</span> dnsmasq.service --now
<span class="token comment"># 开通防火墙</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span>dns
firewall-cmd --reload
<span class="token comment"># 检查状态</span>
systemctl status dnsmasq
● dnsmasq.service - DNS caching server.
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/dnsmasq.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue <span class="token number">2021</span>-10-19 <span class="token number">15</span>:35:57 CST<span class="token punctuation">;</span> <span class="token number">1</span> weeks <span class="token number">0</span> days ago
 Main PID: <span class="token number">1013</span> <span class="token punctuation">(</span>dnsmasq<span class="token punctuation">)</span>
   CGroup: /system.slice/dnsmasq.service
           └─1013 /usr/sbin/dnsmasq -k<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li><p>配置上游解析目标</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># touch /etc/resolv.dnsmasq</span>
<span class="token comment"># vim /etc/resolv.dnsmasq</span>
nameserver <span class="token number">127.0</span>.0.1

<span class="token comment"># 本地内网DNS查询服务器</span>
nameserver <span class="token number">192.168</span>.1.1

<span class="token comment"># 主流公共DNS查询服务器</span>
nameserver <span class="token number">211.167</span>.230.100
nameserver <span class="token number">211.167</span>.230.200
nameserver <span class="token number">202.106</span>.196.115
nameserver <span class="token number">202.106</span>.0.20
nameserver <span class="token number">114.114</span>.114.114
nameserver <span class="token number">218.30</span>.118.6
nameserver <span class="token number">114.114</span>.114.119
nameserver <span class="token number">119.29</span>.29.29
nameserver <span class="token number">8.8</span>.4.4
nameserver <span class="token number">4.2</span>.2.2
nameserver <span class="token number">1.2</span>.4.8
nameserver <span class="token number">223.5</span>.5.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置DNSMasq解析服务    </p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 配置/etc/dnsmasq.cof</span>
<span class="token comment"># 监听eth0</span>
<span class="token assign-left variable">interface</span><span class="token operator">=</span>eth0
<span class="token comment"># 设定DNS端口为53</span>
<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">53</span>

<span class="token comment"># 要求fqdn格式域名才会转发到上游DNS</span>
domain-needed
bogus-priv

<span class="token comment">#指定上游DNS文件按resolv.dnsmasq顺序执行</span>
resolv-file<span class="token operator">=</span>/etc/resolv.dnsmasq
strict-order

<span class="token comment"># 缓存大小</span>
cache-size<span class="token operator">=</span><span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>新增解析缓存目标</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 获取github访问地址的hosts文件转化为dnsmasq的配置</span>
<span class="token function">curl</span> https://raw.hellogithub.com/hosts <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'$1 ~ /^[0-9]/ &#123;printf("address=/%s/%s\n", $2,$1)&#125;'</span> <span class="token operator">></span> /etc/dnsmasq.d/github.conf
<span class="token comment"># 获取污染DNS地址，避免DNS劫持</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/bogus-nxdomain.china.conf -P /etc/dnsmasq.d/
<span class="token comment"># 重启服务</span>
systemctl restart dnsmasq.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="收工"><a href="#收工" class="headerlink" title="收工"></a>收工</h2>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>dnsmasq</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker实践</title>
    <url>/2020/02/05/docker-practice/</url>
    <content><![CDATA[<p>建立一个三节点的网络环境来进行docker的操作练习，其中master节点存储私有仓库镜像文件。</p>
<p>节点</p>
<p>IP</p>
<p>用途</p>
<p>master</p>
<p>192.168.174.181</p>
<p>管理节点和私有仓库</p>
<p>node1</p>
<p>192.168.174.180</p>
<p>节点一</p>
<p>node1</p>
<p>192.168.174.180</p>
<p>节点二</p>
<hr>
<h3 id="管理节点安装"><a href="#管理节点安装" class="headerlink" title="管理节点安装"></a>管理节点安装</h3><h4 id="docker程序的安装"><a href="#docker程序的安装" class="headerlink" title="docker程序的安装"></a>docker程序的安装</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># yum install -y docker</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># fdisk -l</span>
Disk /dev/sda: <span class="token number">10.7</span> GB, <span class="token number">10737418240</span> bytes, <span class="token number">20971520</span> sectors
Disk /dev/sdb: <span class="token number">10.7</span> GB, <span class="token number">10737418240</span> bytes, <span class="token number">20971520</span> sectors

<span class="token comment"># 这里我们将使用新增的/dev/sdb磁盘作为docker的存储</span>

<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/sysconfig/docker-storage-setup #使用:r 打开docker磁盘驱动模板文件/usr/share/container-storage-setup/container-storage-setup</span>
<span class="token comment">#STORAGE_DRIVER=overlay2   #注释掉overlay2磁盘驱动</span>
<span class="token assign-left variable">STORAGE_DRIVER</span><span class="token operator">=</span>devicemapper <span class="token comment">#使用默认磁盘驱动</span>
<span class="token assign-left variable">EXTRA_STORAGE_OPTIONS</span><span class="token operator">=</span><span class="token string">"--storage-opt dm.fs=xfs"</span> <span class="token comment">#格式化为xfs</span>
<span class="token assign-left variable">DEVS</span><span class="token operator">=</span>/dev/sdb   <span class="token comment">#使用dev/sdb磁盘</span>
<span class="token assign-left variable">CONTAINER_THINPOOL</span><span class="token operator">=</span>container-thinpool   <span class="token comment">#thinpool的容器存储方式，也是lv的名字</span>
<span class="token assign-left variable">VG</span><span class="token operator">=</span>docker_VG    <span class="token comment">#存储的vg名称</span>

<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># container-storage-setup </span>
INFO: Writing zeros to first 4MB of device /dev/sdb
<span class="token number">4</span>+0 records <span class="token keyword">in</span>
<span class="token number">4</span>+0 records out
<span class="token number">4194304</span> bytes <span class="token punctuation">(</span><span class="token number">4.2</span> MB<span class="token punctuation">)</span> copied, <span class="token number">0.00600853</span> s, <span class="token number">698</span> MB/s
INFO: Device node /dev/sdb1 exists.
  Physical volume <span class="token string">"/dev/sdb1"</span> successfully created.
  Volume group <span class="token string">"docker_VG"</span> successfully created
  Rounding up size to full physical extent <span class="token number">12.00</span> MiB
  Thin pool volume with chunk size <span class="token number">512.00</span> KiB can address at <span class="token function">most</span> <span class="token number">126.50</span> TiB of data.
  Logical volume <span class="token string">"container-thinpool"</span> created.
  Logical volume docker_VG/container-thinpool changed.
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG        <span class="token comment">#PV #LV #SN Attr   VSize   VFree</span>
  centos      <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n-  <span class="token operator">&lt;</span><span class="token number">9</span>.00g    <span class="token number">0</span> 
  docker_VG   <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">10</span>.00g <span class="token number">6</span>.00g
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV                 VG        Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root               centos    -wi-ao---- <span class="token operator">&lt;</span><span class="token number">8</span>.00g                                                    
  swap               centos    -wi-ao----  <span class="token number">1</span>.00g                                                    
  container-thinpool docker_VG twi-a-t---  <span class="token number">3</span>.97g             <span class="token number">0.00</span>   <span class="token number">10.29</span>   
<span class="token comment"># 创建成功，启动docker服务</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable docker --now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><p>通过配置多个加速器实现不同网络环境下的快速部署。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Docker加速器配置</span>
cat<span class="token operator">></span>/etc/docker/daemon.json<span class="token operator">&lt;&lt;</span><span class="token string">EOF
&#123;
  "registry-mirrors": ["https://dockerhub.azk8s.cn","http://f1361db2.m.daocloud.io","https://d1a0f2854f4b44c2a3b3af4f5425db1a.mirror.swr.myhuaweicloud.com","https://hub-mirror.c.163.com","https://registry.docker-cn.com"]，
  "insecure-registries": ["registry:5000"]
&#125;
EOF</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># systemctl daemon-reload &amp;&amp; systemctl restart docker</span>

<span class="token comment"># 关闭防火墙</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># systemctl disable firewalld.service --now</span>

<span class="token comment"># 关闭selinux</span>
setenforce <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Docker环境准备"><a href="#Docker环境准备" class="headerlink" title="Docker环境准备"></a>Docker环境准备</h3><h4 id="镜像准备"><a href="#镜像准备" class="headerlink" title="镜像准备"></a>镜像准备</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 拉取实验镜像</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker pull docker.io/centos</span>
Using default tag: latest
Trying to pull repository docker.io/library/centos <span class="token punctuation">..</span>. 
latest: Pulling from docker.io/library/centos
8a29a15cefae: Pull complete 
Digest: sha256:fe8d824220415eed5477b63addf40fb06c3b049404242b31982106ac204f6700
Status: Downloaded newer image <span class="token keyword">for</span> docker.io/centos:latest

<span class="token comment"># 镜像列表</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE
docker.io/nginx      latest              2073e0bcb60e        <span class="token number">2</span> days ago          <span class="token number">127</span> MB
docker.io/httpd      latest              c562eeace183        <span class="token number">3</span> days ago          <span class="token number">165</span> MB
docker.io/php        latest              7dc31b4f3403        <span class="token number">3</span> days ago          <span class="token number">405</span> MB
docker.io/mysql      latest              791b6e40940c        <span class="token number">3</span> days ago          <span class="token number">465</span> MB
docker.io/debian     latest              a8797652cfd9        <span class="token number">3</span> days ago          <span class="token number">114</span> MB
docker.io/registry   latest              708bc6af7e5e        <span class="token number">12</span> days ago         <span class="token number">25.7</span> MB
docker.io/centos     latest              470671670cac        <span class="token number">2</span> weeks ago         <span class="token number">237</span> MB
docker.io/mysql      <span class="token number">5.5</span>                 d404d78aa797        <span class="token number">9</span> months ago        <span class="token number">205</span> MB
docker.io/centos     <span class="token number">6.10</span>                48650444e419        <span class="token number">10</span> months ago       <span class="token number">194</span> MB

<span class="token comment"># 删除镜像</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker rmi docker.io/mysql</span>
Untagged: docker.io/mysql:latest
Untagged: docker.io/mysql@sha256:6d0741319b6a2ae22c384a97f4bbee411b01e75f6284af0cce339fee83d7e314
Deleted: sha256:791b6e40940cd550af522eb4ffe995226798204504fe495743445b900e417a51
Deleted: sha256:a3c92ad464abbee6d08856efd404df8c43e9d991b9253bed8281e452d8021dfa
Deleted: sha256:3eb0379ecdc39f86da90c491765187e40dda381e57f319dd21afd0b1e2c40158
Deleted: sha256:fe814f19102e93fd9e2c12b4c864d110bbe4884ff4c5c34e2e1d96341ec17778
Deleted: sha256:f973fa93f201d11a3a6ccf900614fa6e25f4cf899da69f163510560263642d0e
Deleted: sha256:db53286cf6b77826bd35675098bfa76863ace9a04b4e28f4d8340d53c23821e8
Deleted: sha256:477e19600de637164faac8d2e39d4552fac8fbf3c4a9f29efe34072c0fd156e9
Deleted: sha256:2c109aa38ef35164d5adcabac202bde92420867a5839deb75f5ce034aacc00b4
Deleted: sha256:0de337169373e6779cb3ca09485e95fedd4ac98abee19b839cd46e294a64f363
Deleted: sha256:73f1cb0f35d3377b825488e38241d0e12c63e7d30946362402dd8ab2e9467d81
Deleted: sha256:5807022bbb80a63e78831d4dff1ac497a450287ce43fbb0381623b19f5d45c8a
Deleted: sha256:1aaef8d601e09d40fc66f3531268e837f4ae3eedf84f94359fa33177f0be4c6e
Deleted: sha256:e0db3ba0aaea8a01d5cb000aeb449c153be0a47a369cafc4e912b85fb18192cf

<span class="token comment"># 镜像导出</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker save docker.io/centos:6.10 > /tmp/sujxcentos.tar</span>

<span class="token comment"># 镜像导入</span>
<span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment"># docker load &lt; /root/sujxcentos.tar</span>
<span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY                        TAG                 IMAGE ID            CREATED             SIZE
docker.io/centos                  <span class="token number">6.10</span>                48650444e419        <span class="token number">10</span> months ago       <span class="token number">194</span> MB

<span class="token comment"># 检索镜像</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker search oracle</span>
INDEX       NAME                                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
docker.io   docker.io/oraclelinux                           Official Docker builds of Oracle Linux.         <span class="token number">629</span>       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>       
docker.io   docker.io/jaspeen/oracle-11g                    Docker image <span class="token keyword">for</span> Oracle 11g database            <span class="token number">144</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/oracleinanutshell/oracle-xe-11g                                                       <span class="token number">82</span>                   
docker.io   docker.io/oracle/openjdk                        Docker images containing OpenJDK Oracle Linux   <span class="token number">60</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/oracle/graalvm-ce                     GraalVM Community Edition Official Image        <span class="token number">56</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/absolutapps/oracle-12c-ee             Oracle 12c EE image with web management co<span class="token punctuation">..</span>.   <span class="token number">38</span>                   
docker.io   docker.io/araczkowski/oracle-apex-ords          Oracle Express Edition 11g Release <span class="token number">2</span> on Ub<span class="token punctuation">..</span>.   <span class="token number">27</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/bofm/oracle12c                        Docker image <span class="token keyword">for</span> Oracle Database                <span class="token number">23</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/oracle/nosql                          Oracle NoSQL on a Docker Image with Oracle<span class="token punctuation">..</span>.   <span class="token number">22</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/datagrip/oracle                       Oracle <span class="token number">11.2</span> <span class="token operator">&amp;</span> <span class="token number">12.1</span>.0.2-se2 <span class="token operator">&amp;</span> <span class="token number">11.2</span>.0.2-xe        <span class="token number">14</span>                   <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/oracle/weblogic-kubernetes-operator   Docker images containing the Oracle WebLog<span class="token punctuation">..</span>.   <span class="token number">10</span>                   
docker.io   docker.io/openweb/oracle-tomcat                 A fork off of Official tomcat image with O<span class="token punctuation">..</span>.   <span class="token number">8</span>                    <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
docker.io   docker.io/truevoly/oracle-12c                   Copy of sath89/oracle-12c image <span class="token punctuation">(</span>https://g<span class="token punctuation">..</span>.   <span class="token number">8</span>                    
docker.io   docker.io/18fgsa/oracle-client                  Hosted version of the Oracle Container Ima<span class="token punctuation">..</span>.   <span class="token number">2</span>                    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="建立本地私有仓库"><a href="#建立本地私有仓库" class="headerlink" title="建立本地私有仓库"></a>建立本地私有仓库</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker run -d -p 5000:5000 --name=registry --restart=always docker.io/registry</span>
345e05f68235687b47d2917fd0a86620ac2d6b40fbe7647063b817e0d690cf6b

<span class="token comment"># 打标</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker tag docker.io/mysql:5.5 registry:5000/sujx_images/mysql:5.5</span>

<span class="token comment">#上传</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># docker push registry:5000/sujx_images/mysql:5.5</span>
The push refers to a repository <span class="token punctuation">[</span>registry:5000/sujx_images/mysql<span class="token punctuation">]</span>
c9f3545812c8: Pushed 
f49eaacc87a0: Pushed 
a9c5a24e943f: Pushed 
90b4ae8695b5: Pushed 
4054cc666efd: Pushed 
f83622e85376: Pushed 
af84b063c827: Pushed 
ddc265b679cf: Pushed 
647245c554e4: Pushed 
432b5f62e513: Pushed 
6270adb5794c: Pushed 
<span class="token number">5.5</span>: digest: sha256:c9c671d0c959183154313d6830d46f9a00d5937f97415c15ebd3c6844f6f1467 size: <span class="token number">2619</span>

<span class="token comment"># 本地其他客户端拉取</span>
<span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment"># docker pull registry:5000/sujx_images/mysql:5.5</span>
Trying to pull repository registry:5000/sujx_images/mysql <span class="token punctuation">..</span>. 
<span class="token number">5.5</span>: Pulling from registry:5000/sujx_images/mysql
743f2d6c1f65: Pull complete 
3f0c413ee255: Pull complete 
aef1ef8f1aac: Pull complete 
f9ee573e34cb: Pull complete 
3f237e01f153: Pull complete 
03da1e065b16: Pull complete 
04087a801070: Pull complete 
7efd5395ab31: Pull complete 
1b5cc03aaac8: Pull complete 
2b7adaec9998: Pull complete 
385b8f96a9ba: Pull complete 
Digest: sha256:c9c671d0c959183154313d6830d46f9a00d5937f97415c15ebd3c6844f6f1467
Status: Downloaded newer image <span class="token keyword">for</span> registry:5000/sujx_images/mysql:5.5

<span class="token comment"># 本地其他节点上传镜像</span>
<span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment"># docker tag docker.io/centos:6.10 registry:5000/sujx_images/centos:6.10</span>
<span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment"># docker push registry:5000/sujx_images/centos:6.10</span>
The push refers to a repository <span class="token punctuation">[</span>registry:5000/sujx_images/centos<span class="token punctuation">]</span>
8088cb617267: Pushed 
<span class="token number">6.10</span>: digest: sha256:7e53308393264c34359fbdf6d15d5c8c4985b8c2a58ee0ad4f7d5cc2e3c1577a size: <span class="token number">529</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
        <category>System</category>
        <category>Other</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用批处理进行数据备份</title>
    <url>/2021/08/31/dos-cmd-backup/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>运维组内部有一个服务器日志的离线备份需求：</p>
<ol>
<li>Filebeat将日志打到一个WindowsServer的SMB共享上，然后要通过FTP的形式在办公环境进行离线备份；</li>
<li>要在生产环境备份服务器上保留14天以防线下备份失效；</li>
</ol>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ol>
<li>生产环境备份服务器提供相应文件夹共享，并开放权限；</li>
<li>建立计划任务，定时打包实现文件备份转储以及删除超过14天的备份文件；</li>
<li>线下建立离线存储服务器，同步FTP数据到加密磁盘</li>
<li>线下磁盘的定期轮转和永久存储</li>
</ol>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><ol>
<li>基于时间的命名备份方案<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">@echo off
::该脚本已被放弃，原因是备份源文件的日期和打包备份日期相差4天，导致题不对版
::设置7z的命令行程序路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">zip7</span><span class="token operator">=</span>C:<span class="token punctuation">\</span>Program Files<span class="token punctuation">\</span><span class="token number">7</span>-Zip<span class="token punctuation">\</span>7z.exe

::设置压缩包保存路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Save</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>temp

::当天日期，备份文件名
<span class="token builtin class-name">set</span> <span class="token assign-left variable">curdate</span><span class="token operator">=</span>%date:~0,4%-%date:~5,2%-%date:~8,2%

::设置要打包压缩的文件夹
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Backup</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>AllLogsBackup<span class="token punctuation">\</span>*

::备份命令 无压缩只存档，压缩完成后删除
::备份密码为 <span class="token comment">#IHte9tE90bYgJjxtYNmD</span>
<span class="token string">"%zip7%"</span> a -tzip <span class="token string">"%Save%\logs_%curdate%.zip"</span> <span class="token string">"%Backup%"</span> -mx0 -sdel -p<span class="token comment">#IHte9tE90bYgJjxtYNmD</span>

::删除超过14天的备份--start--
forfiles /p <span class="token string">"%Save%"</span> /m *.zip -d -14 /c <span class="token string">"cmd /c del /f @path"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>基于目标文件夹下文件名进行的备份方案<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">@echo off
:: 因备份文件目录名就为文件产生日期，且因线下同步完成之后会删除，即备份目录下只有一份备份文件夹，所以采用文件名作为备份名称。
::设置7z的命令行程序路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">zip7</span><span class="token operator">=</span>C:<span class="token punctuation">\</span>Program Files<span class="token punctuation">\</span><span class="token number">7</span>-Zip<span class="token punctuation">\</span>7z.exe

::设置压缩包保存路径
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Save</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>temp

::设置要打包压缩的文件夹
<span class="token builtin class-name">set</span> <span class="token assign-left variable">Backup</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>AllLogsBackup$<span class="token punctuation">\</span>*

::备份文件名
<span class="token keyword">for</span> /f <span class="token string">"delims="</span> %%i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'dir /b D:\AllLogsBackup$'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token builtin class-name">set</span> <span class="token assign-left variable">filename</span><span class="token operator">=</span>%%i

::备份命令 无压缩只存档，压缩完成后删除
<span class="token string">"%zip7%"</span> a -tzip <span class="token string">"%Save%\%filename%.zip"</span> <span class="token string">"%Backup%"</span> -mx0 -sdel

::删除超过14天的备份--start--
::forfiles /p <span class="token string">"%Save%"</span> /m *.zip -d -14 /c <span class="token string">"cmd /c del /f @path"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="离线备份"><a href="#离线备份" class="headerlink" title="离线备份"></a>离线备份</h2><ol>
<li>使用Windows Server作为备份环境，挂载4块硬盘进行备份(使用bitlock加密磁盘，不做Raid)；</li>
<li>使用FreeFileSync建立同步批处理文件，并加入计划任务定期执行；</li>
<li>每周人工巡检，定期手动更替备份目标路径。</li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>7zip</tag>
        <tag>dos</tag>
        <tag>backup</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch常用查询语句</title>
    <url>/2021/07/19/elasticsearch-common-cmd/</url>
    <content><![CDATA[<h3 id="节点状态相关"><a href="#节点状态相关" class="headerlink" title="节点状态相关"></a>节点状态相关</h3><ol>
<li><p>检查节点是否运行</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XGET http://localhost:9200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>检查节点健康状态</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XGET http://localhost:9200/_cluster/health<span class="token punctuation">\</span>?pretty<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>检查群集节点状态</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XGET http://192.168.248.148:9200/_cat/nodes?v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="分片状态相关"><a href="#分片状态相关" class="headerlink" title="分片状态相关"></a>分片状态相关</h3></li>
<li><p>检查分片健康</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> http://localhost:9200/_cat/indices<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>检查所有分片</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XGET http://localhost:9200/_cat/shards<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>删除分片</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XDELETE http://127.0.0.1:9200/wazuh-alerts-3.x-2021.05.16<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>设置分片数</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -XPUT  <span class="token string">"127.0.0.1:9200/_cluster/settings"</span> -H <span class="token string">'Content-Type: application/json'</span> -d <span class="token string">'&#123;"transient":&#123;"cluster":&#123;"max_shards_per_node":20000&#125;&#125;&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h3 id="存储相关"><a href="#存储相关" class="headerlink" title="存储相关"></a>存储相关</h3><ol>
<li>设置存储水位<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -X PUT <span class="token string">"http://127.0.0.1:9200/_cluster/settings"</span> -H <span class="token string">'Content-Type: application/json'</span> -d<span class="token string">'

&#123;

 "persistent": &#123;

  "cluster.routing.allocation.disk.watermark.low":"90%"

 &#125;

&#125;   
'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Elasticsearch</tag>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS8与Fail2Ban的联合使用</title>
    <url>/2021/10/29/fail2ban/</url>
    <content><![CDATA[<h1 id="CentOS8与Fail2Ban的联合使用"><a href="#CentOS8与Fail2Ban的联合使用" class="headerlink" title="CentOS8与Fail2Ban的联合使用"></a>CentOS8与Fail2Ban的联合使用</h1><blockquote>
<p>Fail2ban是一个根据系统日志动态调整防火墙规则的安全工具，它具有响应迅速、使用方便的特性。</p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Fail2ban是fedora社区打包的rpm包，需要添加EPEL软件源</span>
dnf <span class="token function">install</span> -y epel-release
dnf makecache
dnf update -y

dnf <span class="token function">install</span> -y fail2ban
systemctl <span class="token builtin class-name">enable</span> --now fail2ban.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># tree /etc/fail2ban/</span>
/etc/fail2ban/					<span class="token comment"># 配置文件目录</span>
├── action.d					<span class="token comment"># 可搭配下列进程进行防火管理，比如防火墙封堵、发送邮件等</span>
│   ├── abuseipdb.conf
│   ├── apf.conf
│   ├── badips.conf
│   ├── badips.py
│   ├── blocklist_de.conf
│   ├── cloudflare.conf
│   ├── dshield.conf
│   ├── dummy.conf
│   ├── firewallcmd-allports.conf
│   ├── firewallcmd-common.conf
│   ├── firewallcmd-ipset.conf
│   ├── firewallcmd-multiport.conf
│   ├── firewallcmd-new.conf
│   ├── firewallcmd-rich-logging.conf
│   ├── firewallcmd-rich-rules.conf
│   ├── helpers-common.conf
│   ├── iptables-allports.conf
│   ├── iptables-common.conf
│   ├── iptables.conf
│   ├── iptables-ipset-proto4.conf
│   ├── iptables-ipset-proto6-allports.conf
│   ├── iptables-ipset-proto6.conf
│   ├── iptables-multiport.conf
│   ├── iptables-multiport-log.conf
│   ├── iptables-new.conf
│   ├── iptables-xt_recent-echo.conf
│   ├── mail-whois-common.conf
│   ├── mynetwatchman.conf
│   ├── netscaler.conf
│   ├── nftables-allports.conf
│   ├── nftables.conf
│   ├── nftables-multiport.conf
│   ├── nginx-block-map.conf
│   ├── npf.conf
│   ├── nsupdate.conf
│   ├── route.conf
│   ├── sendmail-buffered.conf
│   ├── sendmail-common.conf
│   ├── sendmail.conf
│   ├── sendmail-geoip-lines.conf
│   ├── sendmail-whois.conf
│   ├── sendmail-whois-ipjailmatches.conf
│   ├── sendmail-whois-ipmatches.conf
│   ├── sendmail-whois-lines.conf
│   ├── sendmail-whois-matches.conf
│   ├── shorewall-ipset-proto6.conf
│   ├── smtp.py
│   ├── symbiosis-blacklist-allports.conf
│   └── xarf-login-attack.conf
├── fail2ban.conf					<span class="token comment"># 服务配置文件</span>
├── fail2ban.d
├── filter.d						<span class="token comment"># 结合各种过滤器和规则实现对多种服务的防护</span>
│   ├── 3proxy.conf
│   ├── apache-auth.conf
│   ├── apache-badbots.conf
│   ├── apache-botsearch.conf
│   ├── apache-common.conf
│   ├── apache-fakegooglebot.conf
│   ├── apache-modsecurity.conf
│   ├── apache-nohome.conf
│   ├── apache-noscript.conf
│   ├── apache-overflows.conf
│   ├── apache-pass.conf
│   ├── apache-shellshock.conf
│   ├── assp.conf
│   ├── asterisk.conf
│   ├── bitwarden.conf
│   ├── botsearch-common.conf
│   ├── centreon.conf
│   ├── common.conf
│   ├── counter-strike.conf
│   ├── courier-auth.conf
│   ├── courier-smtp.conf
│   ├── cyrus-imap.conf
│   ├── directadmin.conf
│   ├── domino-smtp.conf
│   ├── dovecot.conf
│   ├── dropbear.conf
│   ├── drupal-auth.conf
│   ├── ejabberd-auth.conf
│   ├── exim-common.conf
│   ├── exim.conf
│   ├── exim-spam.conf
│   ├── freeswitch.conf
│   ├── froxlor-auth.conf
│   ├── gitlab.conf
│   ├── grafana.conf
│   ├── groupoffice.conf
│   ├── gssftpd.conf
│   ├── guacamole.conf
│   ├── haproxy-http-auth.conf
│   ├── horde.conf
│   ├── ignorecommands
│   │   └── apache-fakegooglebot
│   ├── kerio.conf
│   ├── lighttpd-auth.conf
│   ├── mongodb-auth.conf
│   ├── monit.conf
│   ├── murmur.conf
│   ├── mysqld-auth.conf
│   ├── nagios.conf
│   ├── named-refused.conf
│   ├── nginx-botsearch.conf
│   ├── nginx-http-auth.conf
│   ├── nginx-limit-req.conf
│   ├── nsd.conf
│   ├── openhab.conf
│   ├── openwebmail.conf
│   ├── oracleims.conf
│   ├── pam-generic.conf
│   ├── perdition.conf
│   ├── phpmyadmin-syslog.conf
│   ├── php-url-fopen.conf
│   ├── portsentry.conf
│   ├── postfix.conf
│   ├── proftpd.conf
│   ├── pure-ftpd.conf
│   ├── qmail.conf
│   ├── recidive.conf
│   ├── roundcube-auth.conf
│   ├── screensharingd.conf
│   ├── selinux-common.conf
│   ├── selinux-ssh.conf
│   ├── sendmail-auth.conf
│   ├── sendmail-reject.conf
│   ├── sieve.conf
│   ├── slapd.conf
│   ├── softethervpn.conf
│   ├── sogo-auth.conf
│   ├── solid-pop3d.conf
│   ├── squid.conf
│   ├── squirrelmail.conf
│   ├── sshd.conf
│   ├── stunnel.conf
│   ├── suhosin.conf
│   ├── tine20.conf
│   ├── traefik-auth.conf
│   ├── uwimap-auth.conf
│   ├── vsftpd.conf
│   ├── webmin-auth.conf
│   ├── wuftpd.conf
│   ├── xinetd-fail.conf
│   ├── znc-adminlog.conf
│   └── zoneminder.conf
├── jail.conf				<span class="token comment"># 自定义监狱，所有黑名单用户根据此项配置管理</span>
├── jail.d
│   └── 00-firewalld.conf
├── paths-common.conf
└── paths-fedora.conf

<span class="token number">5</span> directories, <span class="token number">145</span> files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="初步应用"><a href="#初步应用" class="headerlink" title="初步应用"></a>初步应用</h2><h3 id="定义服务"><a href="#定义服务" class="headerlink" title="定义服务"></a>定义服务</h3><p>在管理目录下存在一个jail.conf文件，通过修改该文件就可实现对各项服务的访问关进监狱。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># cp jail.conf jail.confbak</span>
<span class="token punctuation">[</span>root@centos fail2ban<span class="token punctuation">]</span><span class="token comment"># vim jail.conf</span>

<span class="token comment"># 默认配置</span>
<span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span>
<span class="token comment"># 被ban时间</span>
bantime  <span class="token operator">=</span> 15m
<span class="token comment"># 检索时间</span>
findtime  <span class="token operator">=</span> 10m
<span class="token comment"># 最大尝试数，即失败5次就被ban15分钟</span>
maxretry <span class="token operator">=</span> <span class="token number">5</span>
maxmatches <span class="token operator">=</span> %<span class="token punctuation">(</span>maxretry<span class="token punctuation">)</span>s
<span class="token comment"># 后端服务依赖systemd</span>
backend <span class="token operator">=</span> systemd
<span class="token comment"># 日志警告信息可以使用DNS记录访问主机地址</span>
usedns <span class="token operator">=</span> warn
<span class="token comment"># 日志编码使用utf-8</span>
logencoding <span class="token operator">=</span> utf-8
<span class="token comment"># 启用监管</span>
enabled <span class="token operator">=</span> ture
<span class="token comment"># 默认为普通模式</span>
mode <span class="token operator">=</span> normal
<span class="token comment"># 过滤模块</span>
filter <span class="token operator">=</span> %<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>s<span class="token punctuation">[</span>mode<span class="token operator">=</span>%<span class="token punctuation">(</span>mode<span class="token punctuation">)</span>s<span class="token punctuation">]</span>
<span class="token comment"># 防火墙调用firewallcmd，默认为iptables</span>
banaction <span class="token operator">=</span> firewallcmd-ipset<span class="token punctuation">[</span>actiontype<span class="token operator">=</span><span class="token operator">&lt;</span>multiport<span class="token operator">></span><span class="token punctuation">]</span>
banaction_allports <span class="token operator">=</span> firewallcmd-ipset<span class="token punctuation">[</span>actiontype<span class="token operator">=</span><span class="token operator">&lt;</span>allports<span class="token operator">></span><span class="token punctuation">]</span>

<span class="token comment"># 管理SSHD</span>
<span class="token punctuation">[</span>sshd<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
filter  <span class="token operator">=</span> sshd
port    <span class="token operator">=</span> <span class="token number">22</span>
logpath <span class="token operator">=</span> /var/log/secure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="应对SSH爆破"><a href="#应对SSH爆破" class="headerlink" title="应对SSH爆破"></a>应对SSH爆破</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart fail2ban</span>
<span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># fail2ban-client status</span>
Status
<span class="token operator">|</span>- Number of jail:      <span class="token number">1</span>
<span class="token variable"><span class="token variable">`</span>- Jail list:   sshd
<span class="token punctuation">[</span>root@sklnx001 ~<span class="token punctuation">]</span><span class="token comment"># fail2ban-client status sshd</span>
Status <span class="token keyword">for</span> the jail: sshd
<span class="token operator">|</span>- Filter
<span class="token operator">|</span>  <span class="token operator">|</span>- Currently failed: <span class="token number">0</span>
<span class="token operator">|</span>  <span class="token operator">|</span>- Total failed:     <span class="token number">0</span>
<span class="token operator">|</span>  <span class="token variable">`</span></span>- Journal matches:  <span class="token assign-left variable">_SYSTEMD_UNIT</span><span class="token operator">=</span>sshd.service + <span class="token assign-left variable">_COMM</span><span class="token operator">=</span>sshd
<span class="token variable"><span class="token variable">`</span>- Actions
   <span class="token operator">|</span>- Currently banned: <span class="token number">0</span>
   <span class="token operator">|</span>- Total banned:     <span class="token number">0</span>
   <span class="token variable">`</span></span>- Banned IP list:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#查看被ban IP，其中sshd为名称，比如上面的[wordpress]</span>
fail2ban-client status sshd
<span class="token comment">#删除被ban IP</span>
fail2ban-client <span class="token builtin class-name">set</span> sshd delignoreip <span class="token number">192.168</span>.111.111
<span class="token comment">#查看日志</span>
<span class="token function">tail</span> /var/log/fail2ban.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="高级应用"><a href="#高级应用" class="headerlink" title="高级应用"></a>高级应用</h2><h3 id="防护Wordpress"><a href="#防护Wordpress" class="headerlink" title="防护Wordpress"></a>防护Wordpress</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在指定目录下建立wordpress配置文件，指定监控wordpress的访问地址</span>
<span class="token function">vi</span> /etc/fail2ban/filter.d/wordpress.conf

<span class="token punctuation">[</span>Definition<span class="token punctuation">]</span>
failregex <span class="token operator">=</span> ^ -.* /wp-login.php.* HTTP/1<span class="token punctuation">\</span><span class="token punctuation">..</span>"
ignoreregex <span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在jail.conf中加入如下配置，让fail2ban监视指定日志文件，根据日志记录进行拦截</span>
<span class="token punctuation">[</span>wordpress<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
port <span class="token operator">=</span> http,https
filter <span class="token operator">=</span> wordpress
action <span class="token operator">=</span> %<span class="token punctuation">(</span>action_mwl<span class="token punctuation">)</span>s
maxretry <span class="token operator">=</span> <span class="token number">20</span>
findtime <span class="token operator">=</span> <span class="token number">60</span>
bantime <span class="token operator">=</span> <span class="token number">3600</span>
logpath <span class="token operator">=</span> /usr/local/nginx/logs/access.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="防止半连接攻击"><a href="#防止半连接攻击" class="headerlink" title="防止半连接攻击"></a>防止半连接攻击</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 需要先新建一个nginx日志匹配规则</span>
<span class="token function">vi</span> /etc/fail2ban/filter.d/nginx-cc.conf
<span class="token comment">#填写如下内容</span>
<span class="token punctuation">[</span>Definition<span class="token punctuation">]</span>
failregex <span class="token operator">=</span>  -.*- .*HTTP/1.* .* .*$
ignoreregex <span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 加入如下配置</span>
<span class="token punctuation">[</span>nginx-cc<span class="token punctuation">]</span>
enabled <span class="token operator">=</span> <span class="token boolean">true</span>
port <span class="token operator">=</span> http,https
filter <span class="token operator">=</span> nginx-cc
action <span class="token operator">=</span> %<span class="token punctuation">(</span>action_mwl<span class="token punctuation">)</span>s
maxretry <span class="token operator">=</span> <span class="token number">20</span>
findtime <span class="token operator">=</span> <span class="token number">60</span>
bantime <span class="token operator">=</span> <span class="token number">3600</span>
logpath <span class="token operator">=</span> /usr/local/nginx/logs/access.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h2>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Fail2Ban</tag>
        <tag>Firewall</tag>
      </tags>
  </entry>
  <entry>
    <title>技术服务代开发票</title>
    <url>/2021/09/23/fapiao/</url>
    <content><![CDATA[<h1 id="如何办理个人技术服务代开发票"><a href="#如何办理个人技术服务代开发票" class="headerlink" title="如何办理个人技术服务代开发票"></a>如何办理个人技术服务代开发票</h1><blockquote>
<p>自力更生才是省钱之道</p>
</blockquote>
<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>最近开始给一家广告公司代维公有云上的几个服务器，就触及到一个知识盲区，就是这种兼职情况下如何合法收钱？</p>
<p>在以前的临时性的付费服务中，对方公司或者单位大多使用书籍或办公用品发票来顶账，当然这涉及到避税的问题。而在目前的这个项目中是长期性的劳务服务，就不能这么灰着了。对方公司财务建议走代开中介或者自办，中介是抽6个点，自办是3个点。本着能动手就不吵吵的精神，跑了两趟四个税务所，成功搞明白了代开发票的流程。</p>
<h2 id="办理"><a href="#办理" class="headerlink" title="办理"></a>办理</h2><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><ol>
<li>加盖公司公章的格式劳动合同；</li>
<li>个人身份证原件；</li>
<li>个人身份证头像和国徽面复印件一份(税务局要收走的)；</li>
<li>对方公司开票信息</li>
</ol>
<h3 id="地点"><a href="#地点" class="headerlink" title="地点"></a>地点</h3><ol>
<li>当地国税局</li>
<li>能够办理个人代开发票的当地国税局局点。<ol>
<li>注意办事时间，周末以及中午大多不处理业务；</li>
<li>不是所有税务局都可以代开发票，可以提前电话问询；</li>
<li>建议到市区的政务中心的税务办理柜台办理，省的跑冤枉路；</li>
</ol>
</li>
<li>北京市通州区能够办理代开发票的税务所为第四税务所(永顺镇·京通快速入口)</li>
</ol>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol>
<li>填写《代开增值税发票缴纳税款申报单》；</li>
<li>自己为销售方，对方公司为购买方；</li>
<li>应税劳务为技术服务</li>
<li>可以按月开具，也可一次办理半年的金额的单张发票；</li>
<li>要按指印</li>
<li>需要缴纳印花税和契税，支持支付宝和微信；</li>
<li>税费金额大体1个点</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li><p>[北京市税务局办事指引]: <a href="http://beijing.chinatax.gov.cn/bjswj/c104381/201911/7eb1995abf95409f9b84764c669a2d53.shtml">http://beijing.chinatax.gov.cn/bjswj/c104381/201911/7eb1995abf95409f9b84764c669a2d53.shtml</a>    “指引”</p>
</li>
<li><p>依法纳税是公民的义务</p>
</li>
</ol>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>fapiao</tag>
      </tags>
  </entry>
  <entry>
    <title>用户初次使用jumpserver指南</title>
    <url>/2020/08/18/first_use_jumpserver/</url>
    <content><![CDATA[<h3 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h3><p>为方便研发和运维同事进行线上操作，平台运营运维组为大家搭建了从线下办公环境到线上生产环境的网页版跳板机。 访问方式如下： - 访问地址：<a href="http://jump.sujx.net/">http://jump.sujx.net</a> - 用户名： 域用户名 - 密码为： 域账户密码</p>
<h3 id="首次登陆"><a href="#首次登陆" class="headerlink" title="首次登陆"></a>首次登陆</h3><ol>
<li> 首次登陆网址并输入用户名密码 <img src="https://cdn.sujx.net/jumpexample-001.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 再次输入域账户密码进行安全令牌绑定 <img src="https://cdn.sujx.net/jumpexample-002.PNG" alt="jumpexample" title="jumpexample"></li>
<li> iPhone手机用户可以使用下图二维码获取安全令牌验证码生成器 <img src="https://cdn.sujx.net/jumpexample-003.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 安装完成安全令牌生成器之后就可以进行用户绑定 <img src="https://cdn.sujx.net/jumpexample-004.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 可以通过访问 <a href="https://gauth.apps.gbraad.nl/">https://gauth.apps.gbraad.nl</a> 输入上图中的Secret Key来获取令牌 <img src="https://cdn.sujx.net/jumpexample-005.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 输入上述程序获得的一次性密码完成绑定 <img src="https://cdn.sujx.net/jumpexample-006.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 绑定完成之后系统会跳转回首页，再次输入Foneshare域账户和域密码 <img src="https://cdn.sujx.net/jumpexample-007.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 输入6位动态码 <img src="https://cdn.sujx.net/jumpexample-008.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 进入跳板机首次登陆页面，勾选“我同意” (手机和微信信息选填) <img src="https://cdn.sujx.net/jumpexample-009.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 完成配置 <img src="https://cdn.sujx.net/jumpexample-010.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 点击左侧面板“我的资产”，即可看到可用主机 <img src="https://cdn.sujx.net/jumpexample-011.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 点击左侧面板“Web终端”，即可进入网页版的远程管理界面 <img src="https://cdn.sujx.net/jumpexample-012.PNG" alt="jumpexample" title="jumpexample"></li>
<li> 点击可管理主机，会以登陆域用户名自动连接对象主机 <img src="https://cdn.sujx.net/jumpexample-013.PNG" alt="jumpexample" title="jumpexample"></li>
</ol>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li> 登陆提示“密码解密失败” ：更换浏览器或者清空浏览器缓存即可</li>
<li> 安卓用户可以下载使用google.android.apps.authenticator来进行双因子账户绑定</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>jumpserver</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo构建静态博客站点</title>
    <url>/2021/06/29/hexo-deploy/</url>
    <content><![CDATA[<p>因为本站点是运行在阿里云最便宜的虚拟主机上面的，为提高运行效率、节约成本以及学习使用相关技术。现将原有wordpress站点迁移导出部署为hexo站点。<br>hexo的优势：</p>
<ol>
<li>原生使用markdown来进行文本编辑；</li>
<li>渲染生成静态文件后部署，省去了PHP环境和数据库环境；</li>
<li>基于HTML页面，无论是oss、virtualhost、virtualmachine都能快速灵活部署；</li>
<li>以下部署方案在Windows 10的wsl子系统上测试正常。</li>
</ol>
<hr>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><ol>
<li>部署NODE.JS<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 使用Ubuntu Desktop 20.04 LTS环境</span>
<span class="token comment"># 升级系统</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update 
<span class="token function">sudo</span> <span class="token function">apt</span> upgrade -y
<span class="token comment"># 安装组件</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> -y <span class="token function">curl</span> <span class="token function">git</span>
<span class="token function">curl</span> -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh
<span class="token function">chmod</span> +x nodesource_setup.sh 
<span class="token function">sudo</span> ./nodesource_setup.sh
<span class="token function">sudo</span> <span class="token function">apt</span> udpate
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nodejs build-essential

<span class="token comment"># 使用华为NPM镜像</span>
<span class="token function">sudo</span> <span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://repo.huaweicloud.com/repository/npm/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>Hexo部署<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 升级npm</span>
<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> <span class="token function">npm</span> -g
<span class="token comment"># 安装升级hexo</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g
<span class="token comment"># 初始化站点</span>
hexo -v
hexo init blog
<span class="token comment"># 生成站点</span>
hexo g
hexo s
firefox http://127.0.0.1:4000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>插件安装<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装蝴蝶主题</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-theme-butterfly --save
<span class="token comment"># 安装sitemap插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save
<span class="token comment"># 安装RSS插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save
<span class="token comment"># 安装本地搜索插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-searchdb --save
<span class="token comment"># 安装wordpress迁移插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-migrator-wordpress --save
<span class="token comment"># 安装FTP上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-ftpsync --save
<span class="token comment"># 安装Git上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save
<span class="token comment"># 安装阿里云OSS上传插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-ali-oss --save
<span class="token comment"># 安装主题所需插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-pug hexo-renderer-stylus --save
<span class="token comment"># 安装字数统计插件</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-wordcount --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h3><ol>
<li>修改配置<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> ~/blog/_config.yml
   
   <span class="token comment"># 站点信息</span>
   <span class="token comment"># Site</span>
   title: 灰黑化挥花悔黑
   subtitle: <span class="token string">''</span>
   description: <span class="token string">"逝者如斯夫,不舍昼夜"</span>
   keywords: sujx
   author: grepsu
   language: en    <span class="token comment"># 支持 en,zh_TW,zh_CN</span>
   timezone: <span class="token string">'Asia/shanghai'</span>
   url: https://sujx.net
   
   <span class="token comment"># 新增功能模块</span>
   <span class="token comment"># Extensions</span>
   <span class="token comment">## Plugins: https://hexo.io/plugins/</span>
   <span class="token comment">## Themes: https://hexo.io/themes/</span>
   
   <span class="token comment"># 站点索引</span>
   sitemap:
     path: sitemap.xml
   
   <span class="token comment"># RSS索引</span>
   feed:
     type: atom
     path: atom.xml
     limit: <span class="token number">20</span>
   
   <span class="token comment"># 打开本地搜索</span>
   search:
     path: search.xml
     field: post  <span class="token comment"># 指定搜索范围,可以使用post、page、all</span>
     format: html <span class="token comment"># 指定页面内容形式，可选 html | raw (Markdown) | excerpt | more</span>
     limit: <span class="token number">10000</span>
   
   <span class="token comment"># 指定主题</span>
   theme: butterfly   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>主题设置<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 创建主题配置文件</span>
<span class="token function">touch</span> ~/blog/_config.butterfly.yml
<span class="token function">cat</span> ~/blog/node_modules/hexo-theme-butterfly/_config.yml <span class="token operator">>></span> ~/blog/_config.butterfly.yml
<span class="token function">vim</span> ~/blog/_config.butterfly.yml

略……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="创建内容"><a href="#创建内容" class="headerlink" title="创建内容"></a>创建内容</h3><ol>
<li>导入WP<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># wordpress站点导出所有post</span>
wp-admin-<span class="token operator">></span>tools-<span class="token operator">></span>output-<span class="token operator">></span>givemetime.WordPress.2021-06-27.xml
<span class="token comment"># 使用插件导入post</span>
hexo migrate wordpress <span class="token punctuation">..</span>/givemetime.WordPress.2021-06-27.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>新建内容<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo new post hellowolrd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>新建页面<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo new page about<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="站点部署"><a href="#站点部署" class="headerlink" title="站点部署"></a>站点部署</h3><ol>
<li>多站点同步部署<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 编辑站点配置文件，同时设置三种上传方式</span>
<span class="token function">vim</span> ~/blog/_config.yml

deploy:
- type: ali-oss <span class="token comment"># 部署在阿里云OSS上</span>
  region: oss-cn-chengdu <span class="token comment">#bucket地域</span>
  accessKeyId: <span class="token comment"># 访问ID</span>
  accessKeySecret: <span class="token comment"># 访问秘钥</span>
  bucket: <span class="token comment"># bucket名称</span>
- type: <span class="token function">git</span> <span class="token comment">#部署在Gitee上</span>
  repo: https://gitee.com/grepsu/grepsu.git
  branch: master
- type: <span class="token function">git</span> <span class="token comment">#部署在Github上</span>
  repo: https://github.com/sujx/sujx.github.io.git
  branch: master
- type: ftpsync
  host: ftpserver <span class="token comment"># ftp服务器地址</span>
  user: ftpusername <span class="token comment"># ftp用户名</span>
  pass: xxxx <span class="token comment"># 你的ftp用户密码</span>
  remote: xxx <span class="token comment"># 你要上传到的地址，例如/wwwroot</span>
  port: <span class="token number">21</span> <span class="token comment"># ftp端口，不同的ftp可能会不一样</span>
  delete: <span class="token boolean">true</span> <span class="token comment"># 上传本地文件是否删除ftp中的所有文件</span>
  verbose: <span class="token boolean">true</span> <span class="token comment"># 是否打印调试信息</span>
  ignore_errors: <span class="token boolean">false</span> <span class="token comment"># 是否忽略错误</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>站点发布<pre class="line-numbers language-none"><code class="language-none">综上，使用阿里云的智能DNS，海外线路走github、电信线路走oss南方区域、万网虚拟主机走联通线路，实现一个廉价版的多区域部署。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>如何打开iDRAC虚拟控制台</title>
    <url>/2020/04/01/how-to-use-idrac/</url>
    <content><![CDATA[<p>在戴尔服务器的日常运维中，我们可以使用服务器自带的iDRAC带外管理器来进行远程的系统安装、配置以及开关机、重启的操作。在实际使用中，iDRAC的虚拟控制台会通过浏览器下载启动链接，再调用相关接口来在本地显示远程服务器图形界面。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a href="https://cdn.sujx.net/idrac_java_01.PNG"><img src="https://cdn.sujx.net/idrac_java_01.PNG"></a></h2><p>因为下载回来的.jnlp文件并不能直接使用，必须要进行相关的配置。网上有很多信息来解决这个问题，比如保留java版本在7，改后缀名之类，其实该升还是要升版本。</p>
<h3 id="安装最新版的JRE"><a href="#安装最新版的JRE" class="headerlink" title="安装最新版的JRE"></a>安装最新版的JRE</h3><p><a href="https://www.oracle.com/java/technologies/javase-downloads.html">[1]下载链接</a></p>
<h3 id="配置JAVA"><a href="#配置JAVA" class="headerlink" title="配置JAVA"></a>配置JAVA</h3><ol>
<li> 添加访问地址到可信列表中</li>
</ol>
<p><a href="https://cdn.sujx.net/idrac_java_00.PNG"><img src="https://cdn.sujx.net/idrac_java_00.PNG"></a></p>
<ol start="2">
<li> 修改JAVA的sslv3选项 打开“C:\Program Files (x86)\Java\jre1.8.0_241\lib\security”目录下面的java.security文件; 查找SSLv3选项，并确保此项全部注释掉，然后保存关闭。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, DH keySize &lt; 1024, \</span>
    EC keySize <span class="token operator">&lt;</span> <span class="token number">224</span>, 3DES_EDE_CBC, anon, NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="3">
<li> 修改虚拟控制台文件的打开方式 把文件打开方式指向”C:\Program Files (x86)\Java\jre1.8.0_241\bin\javaws.exe” <a href="https://cdn.sujx.net/idrac_java_02.PNG"><img src="https://cdn.sujx.net/idrac_java_02.PNG"></a></li>
</ol>
<h3 id="双击打开控制台文件"><a href="#双击打开控制台文件" class="headerlink" title="双击打开控制台文件"></a>双击打开控制台文件</h3><p><a href="https://cdn.sujx.net/idrac_java_03.PNG"><img src="https://cdn.sujx.net/idrac_java_03.PNG"></a> <a href="https://cdn.sujx.net/idrac_java_04.PNG"><img src="https://cdn.sujx.net/idrac_java_04.PNG"></a> <a href="https://cdn.sujx.net/idrac_java_05.PNG"><img src="https://cdn.sujx.net/idrac_java_05.PNG"></a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>使用LVM进行磁盘管理</title>
    <url>/2020/05/01/how_to_use_lvm/</url>
    <content><![CDATA[<h3 id="创建LVM"><a href="#创建LVM" class="headerlink" title="创建LVM"></a>创建LVM</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 创建物理卷</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvcreate /dev/sdb</span>
  Physical volume <span class="token string">"/dev/sdb"</span> successfully created.

<span class="token comment"># 创建卷组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgcreate vg_example /dev/sdb</span>
  Volume group <span class="token string">"vg_example"</span> successfully created
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree</span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g      <span class="token number">0</span>
  vg_example   <span class="token number">1</span>   <span class="token number">0</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">10</span>.00g <span class="token operator">&lt;</span><span class="token number">10</span>.00g

<span class="token comment"># 创建逻辑组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvcreate -l 100%free -n lv_example vg_example</span>
  Logical volume <span class="token string">"lv_example"</span> created.
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree</span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g    <span class="token number">0</span>
  vg_example   <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">10</span>.00g    <span class="token number">0</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV         VG         Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root       centos     -wi-ao----  <span class="token number">13</span>.39g

  swap       centos     -wi-ao----   <span class="token number">1</span>.60g

  lv_example vg_example -wi-a----- <span class="token operator">&lt;</span><span class="token number">10</span>.00g

<span class="token comment"># 格式化逻辑组</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs /dev/vg_example/lv_example</span>
meta-data<span class="token operator">=</span>/dev/vg_example/lv_example <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">512</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">655104</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">sparse</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2620416</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">1</span>
log      <span class="token operator">=</span>internal log           <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2560</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># blkid grep vg_example</span>
/dev/mapper/vg_example-lv_example: <span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"83b3262d-d7d1-429e-ab04-67022e91865a"</span> <span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"xfs"</span>

<span class="token comment"># 创建挂载点</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /data</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/fstab</span>
/dev/mapper/centos-root /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>95ef0912-08e6-4fc9-9dc1-179e47ffe304 /boot                   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
/dev/mapper/centos-swap swap                    swap    defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>83b3262d-d7d1-429e-ab04-67022e91865a       /data   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mount -a</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># df -Th grep /data</span>
/dev/mapper/vg_example-lv_example xfs        10G   33M   10G   <span class="token number">1</span>% /data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="扩容LVM"><a href="#扩容LVM" class="headerlink" title="扩容LVM"></a>扩容LVM</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 磁盘扩容10G</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># fdisk -l /dev/sdb</span>

Disk /dev/sdb: <span class="token number">21.5</span> GB, <span class="token number">21474836480</span> bytes, <span class="token number">41943040</span> sectors
Units <span class="token operator">=</span> sectors of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes

<span class="token comment"># PV扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvresize /dev/sdb</span>
  Physical volume <span class="token string">"/dev/sdb"</span> changed
  <span class="token number">1</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> resized or updated / <span class="token number">0</span> physical volume<span class="token punctuation">(</span>s<span class="token punctuation">)</span> not resized

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pvs</span>
  PV         VG         Fmt  Attr PSize   PFree 
  /dev/sda2  centos     lvm2 a--  <span class="token operator">&lt;</span><span class="token number">15</span>.00g     <span class="token number">0</span> 
  /dev/sdb   vg_example lvm2 a--  <span class="token operator">&lt;</span><span class="token number">20</span>.00g <span class="token number">10</span>.00g

<span class="token comment"># VG自动扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vgs</span>
  VG         <span class="token comment">#PV #LV #SN Attr   VSize   VFree </span>
  centos       <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">15</span>.00g     <span class="token number">0</span> 
  vg_example   <span class="token number">1</span>   <span class="token number">1</span>   <span class="token number">0</span> wz--n- <span class="token operator">&lt;</span><span class="token number">20</span>.00g <span class="token number">10</span>.00g

<span class="token comment"># LV扩容</span>
<span class="token comment"># 因为磁盘换算问题导致失败</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvextend -L +10G /dev/vg_example/lv_example</span>
  Insufficient <span class="token function">free</span> space: <span class="token number">2560</span> extents needed, but only <span class="token number">2559</span> available
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvextend -L +9.99G /dev/vg_example/lv_example</span>
  Rounding size to boundary between physical extents: <span class="token number">9.99</span> GiB.
  Size of logical volume vg_example/lv_example changed from <span class="token number">10.00</span> GiB <span class="token punctuation">(</span><span class="token number">2560</span> extents<span class="token punctuation">)</span> to <span class="token number">19.99</span> GiB <span class="token punctuation">(</span><span class="token number">5118</span> extents<span class="token punctuation">)</span>.
  Logical volume vg_example/lv_example successfully resized.

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lvs</span>
  LV         VG         Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root       centos     -wi-ao---- <span class="token number">13</span>.39g                                                    
  swap       centos     -wi-ao----  <span class="token number">1</span>.60g                                                    
  lv_example vg_example -wi-ao---- <span class="token number">19</span>.99g     

<span class="token comment"># 文件系统扩容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># xfs_growfs /dev/vg_example/lv_example </span>
meta-data<span class="token operator">=</span>/dev/mapper/vg_example-lv_example <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">512</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">655104</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">spinodes</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2620416</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">1</span>
log      <span class="token operator">=</span>internal               <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2560</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>
data blocks changed from <span class="token number">2620416</span> to <span class="token number">5240832</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># df -Th grep /data</span>
/dev/mapper/vg_example-lv_example xfs        20G   33M   20G   <span class="token number">1</span>% /data

<span class="token comment"># 扩容完成</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。"><a href="#使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。" class="headerlink" title="使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。"></a>使用xfs文件格式只能扩容磁盘，使用EXT4格式才能扩容和缩减磁盘。</h4>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>disk</tag>
        <tag>lvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyper-V主机的开局</title>
    <url>/2020/04/07/hyper-v-host-init/</url>
    <content><![CDATA[<p>Hyper-V是微软推出的虚拟化平台，它具有免费、高效、功能完备和安全的特性，但他的管理是基于powershell和winrm来进行管理配置。习惯了windows的图形界面配置和Linux的Bash管理，初次上手还是有点难度。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>略，……</p>
<h3 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h3><p>开局默认可以使用sconfig这个TUI工具来进行改计算机名、加域、调整时间、设置IP地址等初始化操作。</p>
<h3 id="安装Windows功能"><a href="#安装Windows功能" class="headerlink" title="安装Windows功能"></a>安装Windows功能</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装Hyper-V Powershell </span>
Install-WindowsFeature Hyper-V-PowerShell
<span class="token comment"># 安装SNMP服务</span>
Install-WindowsFeature SNMP-Service
<span class="token comment"># 安装数据中心桥接功能</span>
Install-WindowsFeature Data-Center-Bridging
Install-WindowsFeature Data-Center-Bridging -IncludeManagementTools
<span class="token comment"># 打开ICMP Ping功能</span>
Enable-NetFirewallRule -Name FPS-ICMP4-ERQ-In
<span class="token comment"># 打开远程桌面端口</span>
Get-NetFirewallRule -Name RemoteDesktop*
<span class="token comment"># 受勒索软件RansomWin32WannaCrypt影响，移除FS-SMB1(需要重启)</span>
remove-WindowsFeature fs-smb1
<span class="token comment"># 开启多路径功能</span>
Enable-WindowsOptionalFeature -Online -Featurename MultipathIO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="开启远程管理"><a href="#开启远程管理" class="headerlink" title="开启远程管理"></a>开启远程管理</h3><ol>
<li> 打开Powershell的远程管理功能，使用powershell</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Configure-SMRemoting -enable
Enable-PSRemoting -force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="2">
<li> 打开winrm的远程管理功能，使用cmd</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 快速配置winrm</span>
winrm quickconfig（输入Y）
<span class="token comment"># 设置认证方式为基本认证</span>
winrm <span class="token builtin class-name">set</span> winrm/config/service/auth @<span class="token punctuation">&#123;</span>Basic<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 将所有计算机纳入信任主机</span>
winrm s winrm/config/Client @<span class="token punctuation">&#123;</span>TrustedHosts<span class="token operator">=</span><span class="token string">"*"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 取消加密网络流量</span>
winrm s winrm/config/Client @<span class="token punctuation">&#123;</span>AllowUnencrypted<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">&#125;</span>
<span class="token comment"># 提高性能</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxEnvelopeSizekb<span class="token operator">=</span><span class="token string">"150"</span><span class="token punctuation">&#125;</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxTimeoutms <span class="token operator">=</span><span class="token string">"60000"</span><span class="token punctuation">&#125;</span>
winrm <span class="token builtin class-name">set</span> winrm/config @<span class="token punctuation">&#123;</span>MaxBatchItems<span class="token operator">=</span><span class="token string">"50"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 查看网卡信息</span>
Get-NetAdapterSort-Object Name FT Name,InterfaceDescription,LinkSpeed,ifIndex,Status -AutoSize
<span class="token comment"># 创建网卡绑定</span>
New-NetLbfoTeam -Name PublicNetwork -TeamMembers <span class="token string">"NIC1"</span>,<span class="token string">"NIC3"</span> -TeamingMode SwitchIndependent -LoadBalancingAlgorithm Dynamic -Confirm:<span class="token variable">$false</span>
<span class="token comment"># 新增网卡到已建立网卡组</span>
Add-NetLbfoTeamMember -Name <span class="token string">"NIC2"</span> -Team PublicNetwork
<span class="token comment"># 设置网卡地址</span>
Get-NetAdapter FSNPublicNetwork  New-NetIPAddress -IPAddress <span class="token string">'172.16.1.111'</span> -AddressFamily IPv4 -PrefixLength <span class="token number">16</span> -DefaultGateway <span class="token string">'172.16.1.254'</span>
<span class="token comment"># 设置DNS</span>
Get-NetAdapter FSNPublicNetwork  Set-DnsClientServerAddress -ServerAddresses <span class="token string">'172.16.1.1'</span>,<span class="token string">'172.16.1.2'</span>
<span class="token comment"># 设置VLAN</span>
Set-VMNetworkAdapterVlan -ManagementOS -VMNetworkAdapterName PublicNetwork -Access -VLanID <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="新增磁盘"><a href="#新增磁盘" class="headerlink" title="新增磁盘"></a>新增磁盘</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 获取新增磁盘编号</span>
Get-Disk
<span class="token comment"># 初始化磁盘</span>
Initialize-Disk -Number <span class="token number">1</span> -PartitionStyle GPT
<span class="token comment"># 设置盘符</span>
New-Partition -DiskNumber <span class="token number">1</span> -UseMaximumSize -DriveLetter D
<span class="token comment"># 格式化</span>
Format-Volume -DriveLetter D -FileSystem NTFS -Force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 修改管理员密码</span>
net user administrator new_password
<span class="token comment"># 修改主机名</span>
netdom renamecomputer %computername% /newname
<span class="token comment"># 允许远程查看日志</span>
netsh advfirewall firewall <span class="token builtin class-name">set</span> rule <span class="token assign-left variable">group</span><span class="token operator">=</span><span class="token string">"remote event log management"</span> new <span class="token assign-left variable">enable</span><span class="token operator">=</span>yes
<span class="token comment"># 重启</span>
<span class="token function">shutdown</span> /r /t <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Tips</category>
        <category>ServerCore</category>
      </categories>
      <tags>
        <tag>hyper-v</tag>
        <tag>servercore</tag>
        <tag>virtualization</tag>
      </tags>
  </entry>
  <entry>
    <title>戴尔服务器iDRAC设置Tips</title>
    <url>/2020/10/19/idrac-set/</url>
    <content><![CDATA[<ol>
<li> 戴尔服务器iDRAC可以使用 概览-iDRAC设置-设置-时区和NTP 来设置时区和校时；</li>
<li> 戴尔服务器iDRAC可从 概览-服务器-故障排除-SupportAssist-保存收集 来收集Lifecycle日志；</li>
<li> 上一条主要要选择 编辑集合数据 来开启Raid控制器日志；</li>
<li> 收集日志期间，不要关闭、刷新、打开其他标签等，否则会中断日志收集；</li>
<li> 戴尔服务器R630、R730xd需要先将Lifecycle升级到2.41.40版本，然后再升级到2.75.75版本。升级完成之后就可以直接升级BIOS、NIC、SAS等固件了。否则会上传失败；</li>
<li> 命令行设置戴尔服务器时间和时区</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Set NTP settings on a Dell server with iDRAC7</span>
<span class="token comment"># Set the DNS first to ensure the iDRAC can resolve the NTP host names:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.ipv4static.dns1 <span class="token number">8.8</span>.8.8
<span class="token comment"># Set the NTP server names:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">0</span>.asia.pool.ntp.org
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">1</span>.asia.pool.ntp.org
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">2</span>.asia.pool.ntp.org
<span class="token comment"># In case it won’t update the time when FQDN’s are used, IP addresses can also be used:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">129.250</span>.35.250
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">180.211</span>.88.50
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">202.112</span>.29.82
<span class="token comment"># Enable NTP and set max hops:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPEnable Enabled
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPMaxDist <span class="token number">16</span>
<span class="token comment"># Set the timezone:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.time.timezone Japan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
      </tags>
  </entry>
  <entry>
    <title>内网搭建KMS服务器</title>
    <url>/2019/06/14/intranet-kms/</url>
    <content><![CDATA[<p>在局域网环境中，我们可以使用开源的KMS服务来实现Windows系统和Office软件的激活工作。下面我们将在CentOS8之上来部署实施相关服务。</p>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y epel-release <span class="token function">git</span>
yum update -y
yum <span class="token function">install</span> -y supervisord

systemctl <span class="token builtin class-name">enable</span> supervisord --now
firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token number">1688</span>/tcp
firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /opt
<span class="token function">git</span> clone https://github.com/SystemRage/py-kms.git

cat<span class="token operator">></span> /etc/supervisord.d/kms.ini <span class="token operator">&lt;&lt;</span><span class="token string">EOF
[program:kms]
# command=python /opt/py-kms/py-kms/pykms_Server.py       //注意python的版本
command=python3 /opt/py-kms/py-kms/pykms_Server.py
autostart=true
autorestart=true
user=root
stdout_logfile=/var/log/kms.log
EOF</span>

systemctl restart supervisord
<span class="token function">netstat</span> -tlnp <span class="token function">grep</span> <span class="token number">1688</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="发布服务"><a href="#发布服务" class="headerlink" title="发布服务"></a>发布服务</h3><h4 id="Windows-DNS"><a href="#Windows-DNS" class="headerlink" title="Windows DNS"></a>Windows DNS</h4><p>在Windows Server的DNS管理器中连接DNS服务器，打开‘正向查找区域’-‘域名所在zone’-‘_tcp’，新建“服务位置(SRV)”DNS记录值。 <a href="https://cdn.sujx.net/dns-kms.PNG" title="DNS-kms"><img src="https://cdn.sujx.net/dns-kms.PNG" alt="DNS-kms" title="DNS-kms"></a></p>
<h4 id="Linux-BIND"><a href="#Linux-BIND" class="headerlink" title="Linux BIND"></a>Linux BIND</h4><p>在BIND服务的正向解析配置文件中新增记录并重启bind服务。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">_vlmcs._tcp IN SRV <span class="token number">5</span> <span class="token number">0</span> <span class="token number">1688</span> xxx.xxx.xxx.xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="Linux-DNSMASQ"><a href="#Linux-DNSMASQ" class="headerlink" title="Linux DNSMASQ"></a>Linux DNSMASQ</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">cat</span> <span class="token operator">></span> /etc/dnsmasq.d/kms.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
srv-host=_vlmcs._tcp,xxx.xxx.xxx,1688,100,100
EOF</span>

systemctl restart dnsmasq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>DNS</tag>
        <tag>kms</tag>
      </tags>
  </entry>
  <entry>
    <title>修改Hosts文件加速访问GitHub</title>
    <url>/2020/03/15/ip-for-github/</url>
    <content><![CDATA[<p>在公司使用中国电信的公司宽带访问Github速度虽然不是飞快，但还是能够下载的。不过回家是用的移动宽带，访问github时能打开首页就算时烧高香了。那么首先想到的就是修改Hosts直接访问Github的地址，避免国内的CDN污染和线路瞎JB跳。 先说成果：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Github</span>
<span class="token number">52.74</span>.223.119 github.com
<span class="token number">140.82</span>.114.3 github.com
<span class="token number">185.199</span>.108.154 github.githubassets.com
<span class="token number">185.199</span>.109.154 github.githubassets.com
<span class="token number">185.199</span>.110.153 github.io
<span class="token number">185.199</span>.111.153 github.io
<span class="token number">140.82</span>.113.10 nodeload.github.com
<span class="token number">69.171</span>.234.29  github.global.ssl.fastly.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>效果么，只能说能用了。 方法很简单，就是打开站长之家的DNS检测工具，然后观察GitHub访问会用到那些域名，再把域名对应的IP查出来，把TTL值最小的写入hosts文件。虽然无聊，但是有效。</p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hosts</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Rclone进行文件备份</title>
    <url>/2020/06/08/minio-rlcone-s3/</url>
    <content><![CDATA[<h3 id="环境概述"><a href="#环境概述" class="headerlink" title="环境概述"></a>环境概述</h3><ol>
<li>本地环境为由Beijing、shanghai、guangzhou三台Linux主机构成的数据备份源；</li>
<li>远端备份目的为本地自建S3存储和紫光云存储；</li>
<li>使用rclone将本地多主机文件备份到远端存储；</li>
<li>具体工具有：rclone、minio和sftp。<h3 id="主机地址"><a href="#主机地址" class="headerlink" title="主机地址"></a>主机地址</h3><table>
<thead>
<tr>
<th>主机名</th>
<th>角色</th>
<th>IP地址</th>
</tr>
</thead>
<tbody><tr>
<td>Rclone</td>
<td>同步工具</td>
<td>192.168.174.150</td>
</tr>
<tr>
<td>Minio</td>
<td>开源S3服务器</td>
<td>192.168.174.160</td>
</tr>
<tr>
<td>UNicloud</td>
<td>公网S3服务器</td>
<td>*</td>
</tr>
<tr>
<td>Beijing</td>
<td>备份站点</td>
<td>192.168.174.141</td>
</tr>
<tr>
<td>Shanghai</td>
<td>备份站点</td>
<td>192.168.174.142</td>
</tr>
<tr>
<td>Guangzhou</td>
<td>备份站点</td>
<td>192.168.174.143</td>
</tr>
</tbody></table>
<h3 id="Minio的建立"><a href="#Minio的建立" class="headerlink" title="Minio的建立"></a>Minio的建立</h3>Mnino是一个轻巧、快速的开源S3服务器，其官方主页为：minio <a href="https://min.io/">https://min.io/</a><pre class="line-numbers language-c" data-language="c"><code class="language-c"># 下载二进制执行文件
wget https<span class="token operator">:</span><span class="token comment">//dl.minio.io/server/minio/release/linux-amd64/minio</span>
# 添加可执行权限
chmod <span class="token operator">+</span>x minio
# 复制到指定路径
cp minio <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>
# 建立程序运行账户
useradd <span class="token operator">-</span>r minio <span class="token operator">-</span>s <span class="token operator">/</span>sbin<span class="token operator">/</span>nologin
# 对程序属主进行配置
chown minio<span class="token operator">:</span>minio <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio
# 配置程序启动参数
touch <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio
cat<span class="token operator">></span><span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio<span class="token operator">&lt;&lt;</span><span class="token constant">EOF</span>
MINIO_VOLUMES<span class="token operator">=</span><span class="token string">"/usr/local/share/minio/"</span>
MINIO_OPTS<span class="token operator">=</span><span class="token string">"-C /etc/minio --address 192.168.174.160:9000"</span>
MINIO_ACCESS_KEY<span class="token operator">=</span><span class="token string">"minio"</span>
MINIO_SECRET_KEY<span class="token operator">=</span><span class="token string">"miniostorage"</span>
<span class="token constant">EOF</span>
# 配置systemctl管理程序
touch minio<span class="token punctuation">.</span>service
cat <span class="token operator">>></span> minio<span class="token punctuation">.</span>service <span class="token operator">&lt;&lt;</span><span class="token constant">EOF</span>
<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
Description<span class="token operator">=</span>MinIO
Documentation<span class="token operator">=</span>https<span class="token operator">:</span><span class="token comment">//docs.min.io</span>
Wants<span class="token operator">=</span>network<span class="token operator">-</span>online<span class="token punctuation">.</span>target
After<span class="token operator">=</span>network<span class="token operator">-</span>online<span class="token punctuation">.</span>target
AssertFileIsExecutable<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
WorkingDirectory<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>

User<span class="token operator">=</span>minio
Group<span class="token operator">=</span>minio

EnvironmentFile<span class="token operator">=</span><span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>minio
ExecStartPre<span class="token operator">=</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token operator">-</span>c <span class="token string">"if [ -z \"$&#123;MINIO_VOLUMES&#125;\" ]; then echo \"Variable MINIO_VOLUMES not set in /etc/default/minio\"; exit 1; fi"</span>

ExecStart<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>minio server $MINIO_OPTS $MINIO_VOLUMES

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Let systemd restart this service always</span></span>
Restart<span class="token operator">=</span>always

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Specifies the maximum file descriptor number that can be opened by this process</span></span>
LimitNOFILE<span class="token operator">=</span><span class="token number">65536</span>

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Disable timeout logic and wait until process is stopped</span></span>
TimeoutStopSec<span class="token operator">=</span>infinity
SendSIGKILL<span class="token operator">=</span>no

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
WantedBy<span class="token operator">=</span>multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Built <span class="token keyword">for</span> $<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token operator">-</span>$<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>version<span class="token punctuation">&#125;</span> <span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>project<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span>
<span class="token constant">EOF</span>

# 复制配置文件到指定位置
cp minio<span class="token punctuation">.</span>service <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system
systemctl daemon<span class="token operator">-</span>reload
systemctl enable minio<span class="token punctuation">.</span>service <span class="token operator">--</span>now

# 配置防火墙
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>service<span class="token operator">=</span><span class="token punctuation">&#123;</span>ssh<span class="token punctuation">,</span>http<span class="token punctuation">,</span>https<span class="token punctuation">&#125;</span>
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">9000</span><span class="token operator">/</span>tcp
firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="建立桶存储并上传文件"><a href="#建立桶存储并上传文件" class="headerlink" title="建立桶存储并上传文件"></a>建立桶存储并上传文件</h3></li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ls /usr/local/share/minio/</span>
<span class="token builtin class-name">test</span>
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ls /usr/local/share/minio/test/</span>
This is MinIO.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>接下来，我们可以使用官方客户端mc来访问我们建立的桶：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> http://dl.minio.org.cn/client/mc/release/linux-amd64/mc
<span class="token function">chmod</span> +x <span class="token function">mc</span>
./mc config <span class="token function">host</span> <span class="token function">add</span> minio http://192.168.174.160:9000 minio miniostroage
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ./mc ls minio</span>
<span class="token punctuation">[</span><span class="token number">2020</span>-06-01 <span class="token number">23</span>:50:56 CST<span class="token punctuation">]</span>      0B test/
<span class="token punctuation">[</span>root@minio ~<span class="token punctuation">]</span><span class="token comment"># ./mc ls minio/test/</span>
<span class="token punctuation">[</span><span class="token number">2020</span>-06-01 <span class="token number">23</span>:51:01 CST<span class="token punctuation">]</span>  <span class="token number">8</span>.7MiB This is MinIO.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Rclone部署"><a href="#Rclone部署" class="headerlink" title="Rclone部署"></a>Rclone部署</h3><p>rclone的部署很简单，从官方网站下载安装rclone包即可。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> https://downloads.rclone.org/v1.52.0/rclone-v1.52.0-linux-amd64.rpm
yum localinstall -y rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后，使用“rclone config”进行配置即可。配置完成的配置文件如下：</p>
<pre class="line-numbers language-none"><code class="language-none">[minio]
type &#x3D; s3
provider &#x3D; Minio
env_auth &#x3D; false
access_key_id &#x3D; minio
secret_access_key &#x3D; miniostorage
region &#x3D; us-east-1
endpoint &#x3D; http:&#x2F;&#x2F;192.168.174.160:9000

[unicloud]
type &#x3D; s3
provider &#x3D; Other
env_auth &#x3D; false
access_key_id &#x3D; __
secret_access_key &#x3D; ______
endpoint &#x3D; ______.unicloudsrv.com
acl &#x3D; private<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>接下来，我们进行测试：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone lsd minio:</span>
          -1 <span class="token number">2020</span>-06-01 <span class="token number">23</span>:50:56        -1 <span class="token builtin class-name">test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:test</span>
  <span class="token number">9117336</span> This is MinIO.mp4
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone copy rclone-v1.52.0-linux-amd64.rpm minio:test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:test</span>
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="备份其他上传"><a href="#备份其他上传" class="headerlink" title="备份其他上传"></a>备份其他上传</h3><ol>
<li>各个服务器需要开启时间同步服务并配置rclone主机同各个备份主机的ssh免密登录；</li>
<li>使用rclone config 建立sftp类型的配置文件；</li>
<li>测试<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@beijing opt<span class="token punctuation">]</span><span class="token comment"># touch beijing/192.168.174.141</span>
<span class="token punctuation">[</span>root@beijing opt<span class="token punctuation">]</span><span class="token comment"># hostname >> ./beijing/192.168.174.141 </span>

<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone copy beijing:/opt/beijing minio:/test</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls minio:/test/</span>
        <span class="token number">9</span> <span class="token number">192.168</span>.174.141
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm
<span class="token comment"># 在公有云新建桶</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone mkdir unicloud:sujx</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone lsd unicloud:</span>
          -1 <span class="token number">2020</span>-05-27 <span class="token number">14</span>:16:27        -1 backup-ucd-public-prod
          -1 <span class="token number">2020</span>-05-27 <span class="token number">14</span>:16:22        -1 backup-ucd-public-test
          -1 <span class="token number">2020</span>-05-20 09:20:30        -1 crmbak
          -1 <span class="token number">2020</span>-05-25 <span class="token number">16</span>:36:46        -1 fs-pcf
          -1 <span class="token number">2020</span>-05-25 <span class="token number">16</span>:36:35        -1 fs-pcf-temp
          -1 <span class="token number">2020</span>-06-01 <span class="token number">19</span>:28:14        -1 sujx
<span class="token comment"># 在本地S3和远端S3 同步</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone sync minio:test unicloud:sujx</span>
<span class="token punctuation">[</span>root@rclone ~<span class="token punctuation">]</span><span class="token comment"># rclone ls unicloud:sujx</span>
        <span class="token number">9</span> <span class="token number">192.168</span>.174.141
  <span class="token number">9117336</span> This is MinIO.mp4
 <span class="token number">13825921</span> rclone-v1.52.0-linux-amd64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>rclone</tag>
        <tag>minio</tag>
        <tag>s3</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7上使用yum部署Discuz!Q</title>
    <url>/2021/12/06/centos7-discuzq/</url>
    <content><![CDATA[<h2 id="文档资料"><a href="#文档资料" class="headerlink" title="文档资料"></a>文档资料</h2><h3 id="官方指引"><a href="#官方指引" class="headerlink" title="官方指引"></a>官方指引</h3><ol>
<li><p>官方站点: <a href="https://discuz.com/">https://discuz.com/</a></p>
</li>
<li><p>示例站点：<a href="https://discuz.chat/">https://discuz.chat/</a></p>
</li>
<li><p>安装指引: <a href="https://discuz.com/docs/Linux%20%E4%B8%BB%E6%9C%BA.html#nginx">https://discuz.com/docs/Linux%20%E4%B8%BB%E6%9C%BA.html#nginx</a></p>
</li>
<li><p>后台使用：<a href="https://discuz.com/manual-admin/">https://discuz.com/manual-admin/</a></p>
</li>
<li><p>程序下载: <a href="https://dl.discuz.chat/dzq_latest_install.zip">https://dl.discuz.chat/dzq_latest_install.zip</a></p>
</li>
</ol>
<h3 id="社区使用"><a href="#社区使用" class="headerlink" title="社区使用"></a>社区使用</h3><p>站点：<a href="http://forum.subwin.cn/">社区</a></p>
<p>后台登录：<a href="http://forum.subwin.cn/admin">管理中心首页</a></p>
<h2 id="程序部署"><a href="#程序部署" class="headerlink" title="程序部署"></a>程序部署</h2><h3 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span>
yum makecache
yum update -y

<span class="token comment"># 创建本地软件源</span>
<span class="token function">tar</span> zxvf php74.tar.gz -C /opt/
yum <span class="token function">install</span> -y createrepo
createrepo /opt/php74/
yum-config-manager --add-repo file:/opt/php74

<span class="token comment"># 安装软件包打包证书</span>
<span class="token comment"># wget https://rpms.remirepo.net/RPM-GPG-KEY-remi</span>

<span class="token comment">#导入证书</span>
<span class="token function">rpm</span> --import RPM-GPG-KEY-remi
<span class="token comment"># 安装nginx和PHP</span>
yum <span class="token function">install</span> -y nginx
yum <span class="token function">install</span> -y php php-cli php-fpm php-gd php-mysqlnd php-odbc php-bcmath php-curl php-fileinfo php-nette-tokenizer php-xmlrpc php-date php-soap php-ldap php-mbstring libmcrypt libmcrypt-devel php-pecl-apcu mhash php-dom php-xmlreader php-date php-exif php-filter  php-hash php-iconv php-json php-libxml php-mysqlnd php-openssl php-pcre php-posix hp-tokenizer php-zlib php-opcache php-zip
<span class="token comment"># 拉起服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> --now nginx php-fpm
<span class="token comment"># 开放80端口</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span>http
firewall-cmd --reload
<span class="token comment">#论坛程序部署</span>
<span class="token function">mkdir</span> -p /wwwroot/discuz/public
<span class="token function">unzip</span> dzq_latest_install.zip -d /wwwroot/discuz/
<span class="token function">chown</span> -R nginx:nginx /wwwroot/

<span class="token comment"># 配置PHP-fpm</span>
<span class="token function">sed</span> -i <span class="token string">'s\;exif.\exif.\g'</span> /etc/php.ini
<span class="token function">sed</span> -i <span class="token string">'s@date.timezone =@date.timezone = Asia\Shanghai@g'</span> /etc/php.ini
<span class="token function">sed</span> -i <span class="token string">'s\zlib.output_compression = Off\zlib.output_compression = On\g'</span> /etc/php.ini
<span class="token function">sed</span> -i <span class="token string">'s\user = apache\ user = nginx\g'</span> /etc/php-fpm.d/www.conf
<span class="token function">sed</span> -i <span class="token string">'s\group = apache\ group = nginx\g'</span> /etc/php-fpm.d/www.conf

systemctl restart php-fpm.service

<span class="token function">netstat</span> -tlnp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><p>将下述文件粘贴到/etc/nginx/nginx.conf</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">server <span class="token punctuation">&#123;</span>
    listen       <span class="token number">80</span><span class="token punctuation">;</span>
    listen       <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80<span class="token punctuation">;</span>
    server_name  forum.fxiaoke.com<span class="token punctuation">;</span>
    <span class="token comment"># 修改root目录</span>
    root         /wwwroot/discuz/public/<span class="token punctuation">;</span>

    <span class="token comment"># Load configuration files for the default server block.</span>
    include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>
    <span class="token comment"># 添加配置参数</span>
    index index.php<span class="token punctuation">;</span>
    <span class="token function">gzip</span> on<span class="token punctuation">;</span>
    gzip_min_length <span class="token number">1024</span><span class="token punctuation">;</span>
    gzip_types application/json text/css application/x-javascript application/javascript application/vnd.api+json<span class="token punctuation">;</span>
    gzip_disable <span class="token string">"MSIE [1-6]\."</span><span class="token punctuation">;</span>
    gzip_comp_level <span class="token number">2</span><span class="token punctuation">;</span>
   <span class="token comment"># 配置rewrite模块 </span>
    location / <span class="token punctuation">&#123;</span>
            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.php?<span class="token variable">$query_string</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
   <span class="token comment"># 添加PHP支持</span>
    location ~ <span class="token punctuation">\</span>.php$ <span class="token punctuation">&#123;</span>
        fastcgi_pass   <span class="token number">127.0</span>.0.1:9000<span class="token punctuation">;</span>
        fastcgi_param  SCRIPT_FILENAME <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>
        fastcgi_param  PATH_INFO <span class="token variable">$fastcgi_path_info</span><span class="token punctuation">;</span>
        include        fastcgi_params<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
            error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>
    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>
    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


]]></content>
      <tags>
        <tag>centos</tag>
        <tag>yum</tag>
        <tag>discuz</tag>
      </tags>
  </entry>
  <entry>
    <title>JumpServer的两项修改</title>
    <url>/2020/08/21/modify_jumperserver/</url>
    <content><![CDATA[<h2 id="JumpServer-扩容"><a href="#JumpServer-扩容" class="headerlink" title="JumpServer 扩容"></a>JumpServer 扩容</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>JumpSever的录像默认位置为： /opt/jumpserver/data/media/replay/ 为了防止录像文件把过大，需要为该目录挂载一块新的硬盘。</p>
<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><ol>
<li> 为主机挂载一块20G硬盘</li>
<li> 新建LVM分区</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># partprobe /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># pvcreate /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vgcreate vg_jumpereplay /dev/sdb</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># lvcreate -l 100%FREE -n lv_jump vg_jumpreplay</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs /dev/vg_jumpreplay/lv_jump</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 挂载</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># blkid</span>
/dev/mapper/vg_jumpreplay-lv_jump: <span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"7360e830-ec71-4f56-bbc8-765e42ba39cc"</span> <span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"xfs"</span> 
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/fstab</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>7360e830-ec71-4f56-bbc8-765e42ba39cc   /opt/jumpserver/data    xfs defaults    <span class="token number">0</span> <span class="token number">0</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># mount -a</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li> 完成</li>
</ol>
<p>————————————————</p>
<h2 id="JumpServer-修改KOKO端口号"><a href="#JumpServer-修改KOKO端口号" class="headerlink" title="JumpServer 修改KOKO端口号"></a>JumpServer 修改KOKO端口号</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>Jumpserver 在不使用web终端的情况下可以使用2222端口来直接访问堡垒机系统，然后跳转访问授权资产。现在需要修改默认的2222端口来访问堡垒机的koko。</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ol>
<li> 急速安装的堡垒机中2222端口是本地代理映射的Docker中的2222端口，所以我们只需要修改相关配置文件重新加载即可。</li>
<li> 修改</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/setuptools/</span>
<span class="token punctuation">[</span>root@jumpserver setuptools<span class="token punctuation">]</span><span class="token comment"># ./jmsctl.sh status</span>
MySQL   Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Redis   Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Ninx    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Py3     Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Core    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Koko    Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Guaca.  Check   <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
<span class="token comment"># 查找koko镜像对应的容器ID</span>
<span class="token punctuation">[</span>root@jumpserver setuptools<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                             COMMAND             CREATED             STATUS              PORTS                                               NAMES
2ed1a83b1d98        jumpserver/jms_guacamole:v2.1.2   <span class="token string">"./entrypoint.sh"</span>   <span class="token number">21</span> hours ago        Up <span class="token number">35</span> seconds       <span class="token number">127.0</span>.0.1:8081-<span class="token operator">></span><span class="token number">8080</span>/tcp                            jms_guacamole
8351b191fd1d        jumpserver/jms_koko:v2.1.2        <span class="token string">"./entrypoint.sh"</span>   <span class="token number">21</span> hours ago        Up <span class="token number">35</span> seconds       <span class="token number">127.0</span>.0.1:5000-<span class="token operator">></span><span class="token number">5000</span>/tcp, <span class="token number">0.0</span>.0.0:2222-<span class="token operator">></span><span class="token number">2222</span>/tcp   jms_koko
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># sh /opt/setuptools/jmsctl.sh stop</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># updatedb &amp;&amp; locate 8351b191fd1d</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># vim /var/lib/docker/containers/8351b191fd1d9bbe3a0a3bd0f6de213ca5847e286d5cc164afbcc2e0f02cc8f2/hostconfig.json</span>
<span class="token comment"># 修改["HostPort":"2222"]中的2222为目标端口</span>
<span class="token string">"PortBindings"</span>:<span class="token punctuation">&#123;</span><span class="token string">"2222/tcp"</span>:<span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"HostIp"</span><span class="token builtin class-name">:</span><span class="token string">""</span>,<span class="token string">"HostPort"</span><span class="token builtin class-name">:</span><span class="token string">"2222"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>,<span class="token string">"5000/tcp"</span>:<span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"HostIp"</span><span class="token builtin class-name">:</span><span class="token string">"127.0.0.1"</span>,<span class="token string">"HostPort"</span><span class="token builtin class-name">:</span><span class="token string">"5000"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span>root@jumpserver ~<span class="token punctuation">]</span><span class="token comment"># sh /opt/setuptools/jmsctl.sh start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 登陆测试</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>jumpserver</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows修改默认路由</title>
    <url>/2020/09/23/modify_windows_defualt_route/</url>
    <content><![CDATA[<p>在实际运维中，遇到了一件XX的事情，就是改网关。其实吧，网关嘛，改一下没啥啊，so easy。但，项目要求网关一定是“default”，而不是跳数1。 简单来说，就是如下： 1. default</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254  Default
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> 正常修改过的路由</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254       <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>原因是，Windows只有默认第一个网卡配置的第一个网关才会是default，其他都会从1开始顺次增加，即便gateway的值已经变更，路由表里面没有了先前的网关地址。 这样的情况在使用环境中没有问题，但就是要让新建的网关作为default的话，需要以下操作： 1. “route -f”清空路由表，重启之后重设网关地址&lt;—此项非必须，选做； 2. 打开注册表，定位到HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\interfaces\ 然后搜索新建网关值（正常是第一个项）； 3. 修改“DefaultGatewayMetric”值为0； 4. 重启服务器</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Persistent Routes:
  Network Address          Netmask  Gateway Address  Metric
          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0    <span class="token number">172.16</span>.10.254  Default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Router</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Windows Update一直为check状态</title>
    <url>/2020/09/30/modify_winserver_wsus_check_stat/</url>
    <content><![CDATA[<p>新部署的Windows Server 2012R2服务器在设置了WSUS服务之后，无法完成系统更新，始终处于check update的状态。检查Windows目录下的update log中，有”‘FATAL: GetClientUpdateUrl failed, err = 0x8024D009’ on all clients”的描述。根据0x8024D009这个关键字，找到了解决的方法：</p>
<ol>
<li> 重启Windows Update服务(建议)或者重启主机；</li>
<li> 登录<a href="https://www.catalog.update.microsoft.com/Home.aspx" title="Windows补丁站点">Windows补丁站点</a>；</li>
<li> 先安装补丁:<a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4566425" title="KB4566425">KB4566425</a></li>
<li> 然后安装补丁:<a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577066" title="KB4577066">KB4577066</a></li>
<li> 通过控制面板，“check for updates”，即可连线打补丁了。</li>
</ol>
<p>以上的理论依据如下： 1. <a href="https://support.microsoft.com/zh-cn/help/4535697/servicing-stack-updates-ssu-frequently-ask-questions" title="什么是服务堆栈更新(SSU)">什么是服务堆栈更新(SSU)</a> 2. <a href="https://techcommunity.microsoft.com/t5/windows-it-pro-blog/changes-to-improve-security-for-windows-devices-scanning-wsus/ba-p/1645547" title="WSUS的安全改进">WSUS的安全改进</a> Windows 8.1 同理。</p>
]]></content>
      <categories>
        <category>System</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>WSUS</tag>
      </tags>
  </entry>
  <entry>
    <title>离线部署CDH5.16.2</title>
    <url>/2020/02/29/offline-deploy-cdh5/</url>
    <content><![CDATA[<p>在实践了CDH6的离线部署之后，发现Cloudera的官方教程是基于CDH5.10的。同时，CDH6的内存占用比较高，我的机器有点遭不住，所以又把CDH5的部署实施走了一遍。</p>
<h3 id="模板部署"><a href="#模板部署" class="headerlink" title="模板部署"></a>模板部署</h3><ol>
<li> 安装CentOS7.10，并完成yum升级；</li>
<li> 所有主机时间与阿里云时间服务器同步；</li>
<li> 关闭selinux和firewalld；</li>
<li> 安装JDK和mysql-connect；</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># wget https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.rpm</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># yum localinstall jdk-8u202-linux-x64.rpm</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mv mysql-connector-java-5.1.39-bin.jar /usr/share/java/mysql-connector-java.jar </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li> 关闭透明大页；</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/rc.d/rc.local</span>

<span class="token comment"># 在最后一行添加如下内容</span>
<span class="token keyword">if</span> <span class="token builtin class-name">test</span> -f /sys/kernel/mm/transparent_hugepage/enabled<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/enabled
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token builtin class-name">test</span> -f /sys/kernel/mm/transparent_hugepage/defrag<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/defrag
<span class="token keyword">fi</span>

<span class="token comment"># 赋予rc.local具有可执行权限</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># chmod +x /etc/rc.d/rc.local</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># sh /etc/rc.d/rc.local</span>

<span class="token comment"># 检查</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /sys/kernel/mm/transparent_hugepage/defrag</span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /sys/kernel/mm/transparent_hugepage/enabled</span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li> 调整swap策略</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo 10 > /proc/sys/vm/swappiness</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo vm.swappiness = 10 >> /etc/sysctl.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="7">
<li> 修改文件句柄数</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/security/limits.conf</span>
<span class="token comment"># 添加如下内容</span>
* soft nofile <span class="token number">100000</span>
* hard nofile <span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="8">
<li> 收尾</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># sys-unconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol start="9">
<li> 下载CM和CDH</li>
</ol>
<p><a href="http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.16.2/RPMS/x86_64/" title="CM下载地址">CM下载地址</a> <a href="http://archive.cloudera.com/cdh5/parcels/5.16.2/" title="CDH下载地址">CDH下载地址</a></p>
<h3 id="Agent部署"><a href="#Agent部署" class="headerlink" title="Agent部署"></a>Agent部署</h3><ol>
<li> 配置主机ssh信任</li>
<li> 安装ansible</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># yum install -y ansible</span>

<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
CDH-5.16.2-1.cdh5.16.2.p0.8-el5.parcel.sha1
CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel
Mail
anaconda-ks.cfg
cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
cloudera-manager-server-db-2-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
enterprise-debuginfo-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm
hadoop.tar.gz
jdk-8u202-linux-x64.rpm
manifest.json
mysql-connector-java-5.1.39-bin.jar

<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mkdir client</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mv cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm client/</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mv cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm client/</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># tar zcvf client.tar.gz client/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 分发</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -m copy -a 'src=/root/client.tar.gz dest=/root/'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'tar zxf /root/client.tar.gz'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="4">
<li> 安装</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'yum localinstall /root/client/cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'yum localinstall /root/client/cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span>

<span class="token comment"># 修改配置文件</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># sed -i ':s/localhost/lion/g' /etc/cloudera-scm-agent/config.ini</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion,tiger,horse,monkey -m copy -a 'src=/etc/cloudera-scm-agent/config.ini dest=/etc/cloudera-scm-agent/'</span>

<span class="token comment"># 重启服务</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'systemctl enable cloudera-scm-agent --now'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible all -a 'systemctl restart cloudera-scm-agent'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="管理主机部署"><a href="#管理主机部署" class="headerlink" title="管理主机部署"></a>管理主机部署</h3><ol>
<li> 安装</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm dest=/root/'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel dest=/opt/cloudera/parcel-repo'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -m copy -a 'src=/root/manifest.json dest=/opt/cloudera/parcel-repo'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -a 'yum localinstall /root/cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm -y'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> 数据库部署</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible lion -a 'yum install -y mariadb mariadb-server'</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ssh lion</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/my.cnf.d/server.cnf</span>
<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
key_buffer <span class="token operator">=</span> 16M
key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> <span class="token number">64</span>
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> <span class="token number">1</span>
max_connections <span class="token operator">=</span> <span class="token number">550</span>
<span class="token assign-left variable">server_id</span><span class="token operator">=</span><span class="token number">1</span>

binlog_format <span class="token operator">=</span> mixed
read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> <span class="token number">1</span>
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> <span class="token number">2</span>
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G
innodb_thread_concurrency <span class="token operator">=</span> <span class="token number">8</span>
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable mariadb --now</span>

<span class="token function">vim</span> cdh.sql

CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON scm.* TO <span class="token string">'scm'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON amon.* TO <span class="token string">'amon'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON rman.* TO <span class="token string">'rman'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON hue.* TO <span class="token string">'hue'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON metastore.* TO <span class="token string">'hive'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON sentry.* TO <span class="token string">'sentry'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON nav.* TO <span class="token string">'nav'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON navms.* TO <span class="token string">'navms'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci<span class="token punctuation">;</span>
GRANT ALL ON oozie.* TO <span class="token string">'oozie'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'passwd'</span><span class="token punctuation">;</span>

<span class="token comment"># 导入数据库</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p &lt; cdh.sql</span>

<span class="token comment"># 扩展数据库架构和CDH6有区别</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># cp /usr/share/java/mysql-connector-java.jar /usr/share/cmf/lib/</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># sh /usr/share/cmf/schema/scm_prepare_database.sh mysql scm scm</span>
Enter SCM password:
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk1.8.0_202-amd64
Verifying that we can <span class="token function">write</span> to /etc/cloudera-scm-server
Creating SCM configuration <span class="token function">file</span> <span class="token keyword">in</span> /etc/cloudera-scm-server
Executing:  /usr/java/jdk1.8.0_202-amd64/bin/java -cp /usr/share/java/mysql-connector-java.jar:/usr/share/java/oracle-connector-java.jar:/usr/share/java/postgresql-connector-java.jar:/usr/share/cmf/schema/<span class="token punctuation">..</span>/lib/* com.cloudera.enterprise.dbutil.DbCommandExecutor /etc/cloudera-scm-server/db.properties com.cloudera.cmf.db.
<span class="token punctuation">[</span>                          main<span class="token punctuation">]</span> DbCommandExecutor              INFO  Successfully connected to database.
All done, your SCM database is configured correctly<span class="token operator">!</span>

<span class="token comment"># 启动服务</span>
<span class="token punctuation">[</span>root@lion parcel-repo<span class="token punctuation">]</span><span class="token comment"># cd /opt/cloudera/parcel-repo/</span>
<span class="token punctuation">[</span>root@lion parcel-repo<span class="token punctuation">]</span><span class="token comment"># sha1sum CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel  awk '&#123; print $1 &#125;' > CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># chkconfig cloudera-scm-server on</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># systemctl start cloudera-scm-server</span>

<span class="token comment"># 检查结果</span>
<span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp grep 7180</span>
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:7180            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">3907</span>/java <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="GUI安装"><a href="#GUI安装" class="headerlink" title="GUI安装"></a>GUI安装</h3><p>接下来的安装就相对简单了，基本比CDH6简单。 <img src="https://cdn.sujx.net/cdh5_01.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_02.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_03.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_04.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_05.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_06.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_07.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_08.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_09.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_10.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_11.png" alt="start" title="start"> <img src="https://cdn.sujx.net/cdh5_12.png" alt="end" title="end"></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>cdh</tag>
        <tag>bigdata</tag>
        <tag>cdh5</tag>
        <tag>offline</tag>
      </tags>
  </entry>
  <entry>
    <title>离线加域</title>
    <url>/2020/04/11/offline-join-ad/</url>
    <content><![CDATA[<p>在MS ActiveDirectory的维护工作中，经常会出现承担多种域权限的主机需要重新刷系统的情况。一般的操作方式是退域、重装、删除域信息、重新加域、再次赋权，这样可以确保安全、可靠的维护域中计算机账号的权限正确。不过，从2008R2开始，MS提供了可以离线加域的方法，来避免这一麻烦的处理过程。简单来说，就是从AD中把计算机账号的属性导出为加密文本，然后再在新建的主机上导入，重启即可使用域账号登录并继承原有域权限。 实现方法就两条命令：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在可以正常登录AD的主机上导出域中计算机账号信息,然后把文本文件复制到新机上</span>
djoin /provision /domain domian_name /machine machine_name /savefile  /reuse
<span class="token comment"># 在重刷系统的主机上以管理员权限导入域信息</span>
djoin /requestodj /loadfile  /windowspath c:<span class="token punctuation">\</span>windows /localos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>具体的解析<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd392267(v=ws.10)?redirectedfrom=MSDN" title="在此">在此</a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>offline</tag>
        <tag>ActiveDirctory</tag>
        <tag>djoin</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell的小技巧</title>
    <url>/2020/04/22/powershell-usetips/</url>
    <content><![CDATA[<h3 id="Powershell环境的设置"><a href="#Powershell环境的设置" class="headerlink" title="Powershell环境的设置"></a>Powershell环境的设置</h3><ol>
<li> update-help 强制更新Powshell帮助文件，同时跳过更新错误文件，主要用于解决区域帮助文件错误。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Update-Help -Verbose -Force -ErrorAction SilentlyContinue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="https://cdn.sujx.net/powershell_update_erro.PNG" title="powershellupdate"><img src="https://cdn.sujx.net/powershell_update_erro.PNG" alt="powershellupdate" title="powershellupdate"></a></p>
<ol start="2">
<li> show-command 图形化生成命令参数文件</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 这需要安装powershell-ise</span>
show-command get-eventlog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><a href="https://cdn.sujx.net/showcommand.PNG" title="showcmmand"><img src="https://cdn.sujx.net/showcommand.PNG" alt="showcommand" title="showcommand"></a></p>
<ol start="3">
<li> 开启PS1脚本执行权限</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 以管理员权限打开powershell，执行如下命令，然后选择Y</span>
Set-ExecutionPolicy RemoteSigned<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="4">
<li> 防火墙开关</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 打开防火墙</span>
Set-NetFirewallProfile -Enabled True
<span class="token comment"># 打开防火墙</span>
Set-NetFirewallProfile -Enabled False<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li> 关机</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 重启</span>
restart-computer
<span class="token comment"># 关机</span>
stop-computer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li> 新增磁盘</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 获取新磁盘信息</span>

<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> get-disk

Number Friendly Name Serial Number                    HealthStatus         OperationalStatus      Total Size Partition
                                                                                                             Style
------ ------------- -------------                    ------------         -----------------      ---------- ----------
<span class="token number">0</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                      <span class="token number">40</span> GB GPT
<span class="token number">1</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Offline                    <span class="token number">100</span> GB RAW
<span class="token comment"># 初始化磁盘，默认创建gpt分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> Initialize-Disk

位于命令管道位置 <span class="token number">1</span> 的 cmdlet Initialize-Disk
请为以下参数提供值:
Number<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>: <span class="token number">1</span>
Number<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>:
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> get-disk

Number Friendly Name Serial Number                    HealthStatus         OperationalStatus      Total Size Partition
                                                                                                             Style
------ ------------- -------------                    ------------         -----------------      ---------- ----------
<span class="token number">0</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                      <span class="token number">40</span> GB GPT
<span class="token number">1</span>      VMware, VM<span class="token punctuation">..</span>.                                  Healthy              Online                     <span class="token number">100</span> GB GPT
<span class="token comment"># 创建分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> New-Partition -DiskNumber <span class="token number">1</span> -AssignDriveLetter -UseMaximumSize


   DiskPath:<span class="token punctuation">\</span><span class="token punctuation">\</span>?<span class="token punctuation">\</span>scsi<span class="token comment">#disk&amp;ven_vmware_&amp;prod_vmware_virtual_s#5&amp;174a0eaf&amp;0&amp;000100#&#123;53f56307-b6bf-11d0-94f2-00a0c91efb8b&#125;</span>

PartitionNumber  DriveLetter Offset                                        Size Type
---------------  ----------- ------                                        ---- ----
<span class="token number">2</span>                D           <span class="token number">135266304</span>                                 <span class="token number">99.87</span> GB Basic
<span class="token comment"># 格式化分区</span>
<span class="token punctuation">[</span>vwsr010007.contoso.com<span class="token punctuation">]</span>: PS C:<span class="token punctuation">\</span><span class="token operator">></span> Format-Volume -DriveLetter D -FileSystem NTFS

DriveLetter FileSystemLabel FileSystem DriveType HealthStatus OperationalStatus SizeRemaining     Size
----------- --------------- ---------- --------- ------------ ----------------- -------------     ----
D                           NTFS       Fixed     Healthy      OK                     <span class="token number">99.76</span> GB <span class="token number">99.87</span> GB
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>powershell</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>简单制作WindowsPE镜像</title>
    <url>/2021/03/29/preper_windowpe/</url>
    <content><![CDATA[<h3 id="下载部署文件"><a href="#下载部署文件" class="headerlink" title="下载部署文件"></a>下载部署文件</h3><ol>
<li><p>下载适用于 Windows 10 版本 2004 的 Windows ADK<br><a href="https://go.microsoft.com/fwlink/?linkid=2120254">https://go.microsoft.com/fwlink/?linkid=2120254</a></p>
</li>
<li><p>下载适用于 ADK 版本 2004 的 Windows PE 加载项<br><a href="https://go.microsoft.com/fwlink/?linkid=2120253">https://go.microsoft.com/fwlink/?linkid=2120253</a></p>
</li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装完成ADK和加载项之后，使用命令行进入 :</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">C:<span class="token punctuation">\</span>Program Files <span class="token punctuation">(</span>x86<span class="token punctuation">)</span><span class="token punctuation">\</span>Windows Kits<span class="token punctuation">\</span><span class="token number">10</span><span class="token punctuation">\</span>Assessment and Deployment Kit<span class="token punctuation">\</span>Windows Preinstallation Environment<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">copype amd64 c:<span class="token punctuation">\</span>winpe_amd64_ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>该命令会自动创建目标文件夹</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol>
<li><p>装载原始镜像</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Mount-Image /ImageFile:<span class="token string">"C:\WinPE_amd64_PS\media\sources<span class="token entity" title="\b">\b</span>oot.wim"</span> /Index:1 /MountDir:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加Powershell功能支持</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-WMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-WMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-NetFX.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-NetFX_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-Scripting.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-Scripting_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-PowerShell.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-PowerShell_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-StorageWMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-StorageWMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-DismCmdlets.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-DismCmdlets_en-us.cab"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>添加驱动</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /Add-Driver /driver:<span class="token string">"d"</span>:<span class="token punctuation">\</span>drivers<span class="token punctuation">\</span>" /recurse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加工具</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount<span class="token punctuation">\</span>tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>复制可执行文件比如filezilla、putty等免安装文件到tools目录。</p>
</li>
<li><p>优化</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Set-ScratchSpace:512 /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>生成镜像</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Unmount-Image /MountDir:C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount /Commit
MakeWinPEMedia /ISO C:<span class="token punctuation">\</span>WinPE_amd64_PS d:<span class="token punctuation">\</span>winpe.iso<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>引导加载使用</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>WindowsPE</tag>
      </tags>
  </entry>
  <entry>
    <title>基于CentOS8快速部署iTop</title>
    <url>/2019/11/20/quikly-deploy-itop-on-centos8/</url>
    <content><![CDATA[<p>iTop是一个用PHP编写的基于ITIL理念打造的开源ITSM系统。本次将在CentOS8的虚机上安装部署一套iTOP系统。</p>
<ol>
<li> 系统准备 首先是准本LAMP环境，使用系统默认的Apache2.4.3、PHP7.2、Mariadb10.3.</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum update -y
yum <span class="token function">install</span> -y cmake <span class="token function">make</span> autoconf gcc gcc-g++ <span class="token function">unzip</span> graphviz libzip-devel libzip-tools
yum <span class="token function">install</span> -y httpd php php-fpm php-ldap php-soap
yum <span class="token function">install</span> -y php-xmlrpc php-gd php-opcache php-mysqlnd php-json php-devel
yum <span class="token function">install</span> -y libmcrypt libmcrypt-devel php-pecl-apcu mhash
yum <span class="token function">install</span> -y php-odbc php-mbstring php-snmp
yum <span class="token function">install</span> -y mariadb mariadb-server
firewall-cmd --permanent --add-service<span class="token operator">=</span>http
firewall-cmd --reload
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm mariadb --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> 上传iTop系统，修改配置文件 我们把iTop的程序文件放置到/var/www/web目录下，修改/etc/httpd/conf/httpd.conf配置文件，使得根文件系统指向web目录，同时对web目录进行赋权。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">unzip</span> iTop-2.6.1-4463.zip
<span class="token function">cp</span> web/* /var/www/html/ -R
<span class="token function">chown</span> -R apache:apache /var/www/html/
mysql -uroot -p
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database itop character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on itop.* to itop@<span class="token string">'localhost'</span> identified by <span class="token string">'itop'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 编译PHP扩展实现支持zip 使用YUM/DNF安装的PHP默认不支持zip扩展，因此默认配置下iTOP会出现白屏，日志报错： <code>PHP Fatal error: Class &#39;DBBackup&#39; not found in /var/www/html/itop/web/setup/applicationinstaller.class.inc.php</code> 所以，需要编译安装PHP的zip扩展。</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> http://pecl.php.net/get/zip
<span class="token function">tar</span> zxvf <span class="token function">zip</span>
<span class="token builtin class-name">cd</span> zip-1.15.5
phpize
./configure 
<span class="token function">make</span> 
<span class="token function">cp</span> modules/zip.so /usr/lib64/php/modules/
<span class="token function">touch</span> /etc/php.d/20-zip.ini
<span class="token builtin class-name">echo</span> <span class="token string">'extension=zip'</span> <span class="token operator">>></span> /etc/php.d/20-zip.ini
<span class="token function">vim</span> /etc/php.ini
~~~~~~
<span class="token comment">## 开启zlib压缩支持</span>
<span class="token number">269</span> zlib.output_compression <span class="token operator">=</span> On
~~~~~~
systemctl restart php-fpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后打开站点就可以进行安装了。</p>
<ol start="4">
<li> iTOP部署 <a href="https://cdn.sujx.net/itop1.png" title="iTopDeploy1"><img src="https://cdn.sujx.net/itop1.png" alt="iTopDeploy1" title="iTopDeploy1"></a> <a href="https://cdn.sujx.net/itop2.png" title="iTopDeploy2"><img src="https://cdn.sujx.net/itop2.png" alt="iTopDeploy2" title="iTopDeploy2"></a> <a href="https://cdn.sujx.net/itop3.png" title="iTopDeploy3"><img src="https://cdn.sujx.net/itop3.png" alt="iTopDeploy3" title="iTopDeploy3"></a> <a href="https://cdn.sujx.net/itop4.png" title="iTopDeploy4"><img src="https://cdn.sujx.net/itop4.png" alt="iTopDeploy4" title="iTopDeploy4"></a> <a href="https://cdn.sujx.net/itop5.png" title="iTopDeploy5"><img src="https://cdn.sujx.net/itop5.png" alt="iTopDeploy5" title="iTopDeploy5"></a> <a href="https://cdn.sujx.net/itop6.png" title="iTopDeploy6"><img src="https://cdn.sujx.net/itop6.png" alt="iTopDeploy6" title="iTopDeploy6"></a> <a href="https://cdn.sujx.net/itop7.png" title="iTopDeploy7"><img src="https://cdn.sujx.net/itop7.png" alt="iTopDeploy7" title="iTopDeploy7"></a> <a href="https://cdn.sujx.net/itop8.png" title="iTopDeploy8"><img src="https://cdn.sujx.net/itop8.png" alt="iTopDeploy8" title="iTopDeploy8"></a> <a href="https://cdn.sujx.net/itop9.png" title="iTopDeploy9"><img src="https://cdn.sujx.net/itop9.png" alt="iTopDeploy9" title="iTopDeploy9"></a> <a href="https://cdn.sujx.net/itop10.png" title="iTopDeploy10"><img src="https://cdn.sujx.net/itop10.png" alt="iTopDeploy10" title="iTopDeploy10"></a> <a href="https://cdn.sujx.net/itop11.png" title="iTopDeploy11"><img src="https://cdn.sujx.net/itop11.png" alt="iTopDeploy11" title="iTopDeploy11"></a> <a href="https://cdn.sujx.net/itop12.png" title="iTopDeploy12"><img src="https://cdn.sujx.net/itop12.png" alt="iTopDeploy12" title="iTopDeploy12"></a> <a href="https://cdn.sujx.net/itop13.png" title="iTopDeploy13"><img src="https://cdn.sujx.net/itop13.png" alt="iTopDeploy13" title="iTopDeploy13"></a> <a href="https://cdn.sujx.net/itop14.png" title="iTopDeploy14"><img src="https://cdn.sujx.net/itop14.png" alt="iTopDeploy14" title="iTopDeploy14"></a> <a href="https://cdn.sujx.net/itop15.png" title="iTopDeploy15"><img src="https://cdn.sujx.net/itop15.png" alt="iTopDeploy15" title="iTopDeploy15"></a></li>
</ol>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>itop</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu开启/var/log/messages</title>
    <url>/2021/09/05/rsyslog-ubuntu/</url>
    <content><![CDATA[<h1 id="找回遗失的Message"><a href="#找回遗失的Message" class="headerlink" title="找回遗失的Message"></a>找回遗失的Message</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在CentOS7和之前的版本中，系统日志统一存储在/var/log/message 中,方便进行统一分析和整理。但在Ubuntu中，大量的日志信息按照类别和级别被分别导入到 /var/log目录下的不同文件中，提供了一些快捷功能的同时，却导致原有的日志收集和归档程序出问题了。所以，我们需要重新开启messages。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="安装rsyslog"><a href="#安装rsyslog" class="headerlink" title="安装rsyslog"></a>安装rsyslog</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> rsyslog
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> rsyslog --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/rsyslog.d/50-default.conf
----------------------------------
<span class="token comment"># 编辑31行到34行，去掉注释</span>
 <span class="token number">25</span> <span class="token comment">#</span>
 <span class="token number">26</span> <span class="token comment"># Some "catch-all" log files.</span>
 <span class="token number">27</span> <span class="token comment">#</span>
 <span class="token number">28</span> <span class="token comment">#*.=debug;\</span>
 <span class="token number">29</span> <span class="token comment">#       auth,authpriv.none;\</span>
 <span class="token number">30</span> <span class="token comment">#       news.none;mail.none     -/var/log/debug</span>
 <span class="token number">31</span> *.<span class="token operator">=</span>info<span class="token punctuation">;</span>*.<span class="token operator">=</span>notice<span class="token punctuation">;</span>*.<span class="token operator">=</span>warn<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">32</span>         auth,authpriv.none<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">33</span>         cron,daemon.none<span class="token punctuation">;</span><span class="token punctuation">\</span>
 <span class="token number">34</span>         mail,news.none          -/var/log/messages
 <span class="token number">35</span> 
----------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart rsyslog.service
<span class="token function">cat</span> /var/log/messages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Log详解"><a href="#Log详解" class="headerlink" title="Log详解"></a>Log详解</h2><h3 id="系统日志文件"><a href="#系统日志文件" class="headerlink" title="系统日志文件"></a>系统日志文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。
/var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。
/var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。
/var/log/boot.log — 包含系统启动时的日志。
/var/log/daemon.log — 包含各种系统后台守护进程日志信息。
/var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。
/var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。
/var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
/var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。
/var/log/user.log — 记录所有等级用户信息的日志。
/var/log/Xorg.x.log — 来自X的日志信息。
/var/log/alternatives.log – 更新替代信息都记录在这个文件中。
/var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last -f /var/log/btmp <span class="token operator">|</span> more“。
/var/log/cups — 涉及所有打印信息的日志。
/var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。
/var/log/yum.log — 包含使用yum安装的软件包信息。
/var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。
/var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。
/var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
/var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="程序日志文件"><a href="#程序日志文件" class="headerlink" title="程序日志文件"></a>程序日志文件</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;log&#x2F;httpd&#x2F;或&#x2F;var&#x2F;log&#x2F;apache2 — 包含服务器access_log和error_log信息。
&#x2F;var&#x2F;log&#x2F;lighttpd&#x2F; — 包含light HTTPD的access_log和error_log。
&#x2F;var&#x2F;log&#x2F;mail&#x2F; –  这个子目录包含邮件服务器的额外日志。
&#x2F;var&#x2F;log&#x2F;prelink&#x2F; — 包含.so文件被prelink修改的信息。
&#x2F;var&#x2F;log&#x2F;audit&#x2F; — 包含被 Linux audit daemon储存的信息。
&#x2F;var&#x2F;log&#x2F;samba&#x2F; – 包含由samba存储的信息。
&#x2F;var&#x2F;log&#x2F;sa&#x2F; — 包含每日由sysstat软件包收集的sar文件。
&#x2F;var&#x2F;log&#x2F;sssd&#x2F; – 用于守护进程安全服务。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>rsyslog</tag>
        <tag>messages</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>网卡配置项</title>
    <url>/2020/03/30/set-netcard/</url>
    <content><![CDATA[<p>修改电脑网卡高级设置可以提高网络速度。另外，建议关闭在Realtek网卡高级设置中的以下其他选项：流控制/FlowControl、巨型帧/Jumboframe、大量传送负载/OffloadLargesend、EEE(Energy Efficient Ethernet)、环保节能/GreenEthernet、硬件效验和/OffloadChksum。</p>
<ol>
<li> 自动关闭 PCIe (省电) 设置此选项可进入网络控制器省电模式设置此選項可進入网路卡省电模式</li>
</ol>
<p>选项 说明 关闭 关闭自动关闭PCIe (省电) 开启, 电池 当使用电池且网络线未插入时，自动关闭PCIe连接 开启, 电池或 AC 当使用电池或AC且网络线未插入时，自动关闭PCIe连接</p>
<ol start="2">
<li> 自动关闭 PHY (省电) 设置此选项可进入网络控制器省电模式</li>
</ol>
<p>选项 说明 关闭 关闭自动关闭PHY (省电) 开启, 电池 当使用电池且网络线未插入时，自动关闭PHY连接 开启, 电池或 AC 当使用电池或AC且网络线未插入时，自动关闭PHY连接</p>
<ol start="3">
<li>流控制(Flow Control) 允许暂时停止传输数据包以适应接收端速度 选项 说明 开启 开启流控制 (默认值) 关闭 关闭流控制 据说开流控制会导致掉线，关</li>
<li>中断调整(interrupt moderation) 根据网络的流量状况，动态调整发起处理器中断的频率</li>
</ol>
<p>选项 说明 开启 开启中断调整合适化 (默认值) 关闭 关闭中断调整合适化 建议：关</p>
<ol start="5">
<li> IPv4 硬件校验和（IPv4 Checksum Offload） 设置硬件加速IPv4校验和</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速IPv4校验和 Rx &amp; Tx 开启 启用硬件加速接收端和传输端IPv4校验和(默认值) Rx 开启 启用硬件加速接收端IPv4校验和 Tx 开启 启用硬件加速传输端IPv4校验和 据说很多程序因为网卡校验和问题造成连接问题，关。</p>
<ol start="6">
<li>802.1Q/1p 虚拟网络标签 IEEE 802.1Q帧信息用以表示每一个帧的优先级和其所属的虚拟局域网，设置这个选项可以启用硬件加速优先级帧传输和加入虚拟局域网识别标签。 选项 说明 开启 启用优先级传输和虚拟局域网 关闭 禁用优先级传输和虚拟局域网 (默认值)</li>
<li>大量传送减负 (IPv4)(Large Send Offload(IPv4)) 设置网络控制器硬件加速IPv4数据包切割功能</li>
</ol>
<p>选项 说明 开启 开启IPv4大量传送减负 (默认值) 关闭 关闭IPv4大量传送减负 大量传送减负是用网卡硬件分割TCP数据包,但其实只有关闭它才可以发挥网卡的真正性能，cpu占用率会提升，但不明显。网络处理速度会快一些。 这个一定要关，比如xp mode和win7主机局域网传文件慢就是这个造成的</p>
<ol start="8">
<li> 大量传送减负 (IPv6) (Large Send Offload(IPv6)) 设置网络控制器硬件加速IPv6数据包切割功能</li>
</ol>
<p>选项 说明 开启 开启IPv6大量传送减负 (默认值) 关闭 关闭IPv6大量传送减负 这个一定要关，比如xp mode和win7主机局域网传文件慢就是这个造成的</p>
<ol start="9">
<li>巨型帧(Jumbo Frame) Ethernet的数据最大传输单元定义为1500字节，数据长度大于1500字节封包即称为巨型帧，此选项可以调整Ethernet封包內所带数据的长度 选项 说明 2KB 最大传输单元 设置巨型帧为2K字节 3KB 最大传输单元 设置巨型帧为3K字节 4KB 最大传输单元 设置巨型帧为4K字节 5KB 最大传输单元 设置巨型帧为5K字节 6KB 最大传输单元 设置巨型帧为6K字节 7KB 最大传输单元 设置巨型帧为7K字节 8KB 最大传输单元 设置巨型帧为8K字节 9KB 最大传输单元 设置巨型帧为9K字节 关闭 禁用巨型帧(默认值) 注意:启用巨型帧选项，网络控制器另一端所连接的网络设备也需支持巨型帧</li>
<li>网络地址（Priority &amp; VLAN） 改变网络控制器MAC地址 默认值：不存在</li>
<li>优先级和VLAN IEEE 802.1Q数据包信息用以表示每一个数据包的优先级和其所属的虚拟局域网，设置这个选项可以启用硬件加速优先级数据包传输或加入虚拟局域网识别标志 选项 说明 优先级 &amp; VLAN 关闭 关闭优先级传输和虚拟局域网 优先级 &amp; VLAN 开启 开启优先级传输和虚拟局域网 (默认值) 优先级开启 开机优先级传输 VLAN 开启 开启虚拟局域网硬件标志功能</li>
<li>接收端缓冲区(Receive Buffers) 设置接收端缓冲区 选项 范围 缓冲区大小 1~512 (默认值:512) 建议：开最大。</li>
<li>接收端调整 接收端调整(Received Side Scaling, RSS)是一种动态指派多核心处理器接收数据包的负载均衡机制，借由调整多核心处理器处理接收数据包以达到多核心系统的处理器负载均衡。 选项 说明 开启 开启接收端调整 (默认值) 关闭 关闭接收端调整 注意： RTL8168C及RTL8102E系列网络控制器才支持接收端调整。</li>
<li>关机网络唤醒 设置关机后可从网络唤醒</li>
</ol>
<p>选项 说明 开启 开机关机后网络唤醒 关闭 关闭关机后网络唤醒(默认值)</p>
<ol start="15">
<li>连接速度/双工模式(Speed &amp; Duplex) 切换连接速度和双工模式 选项 说明 自动侦测 自动侦测连接网络的连接速度和双工模式(默认值) 10Mbps半双工 设置为 10Mbps半双工连接模式 10Mbps全双工 设置为 10Mbps全双工连接模式 100Mbps半双工 设置为 100Mbps半双工连接模式 100Mbps全双工 设置为100Mbps全双工连接模式 1000Mbps全双工 设置为1000Mbps全双工连接模式 (*) 注意：RTL8101E、RTL8102E及RTL8139系列网络控制器为10/100 Mbps，所以并不支持1000 Mbps的连接速度。</li>
<li>TCP 硬件校验和 (IPv4) （TCP Checksum Offload(IPv4)） 设置硬件加速TCP校验和 (IPv4)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速TCP校验和(IPv4) Rx &amp; Tx 开启 启用硬件加速接收端及传输端TCP校验和(IPv4)(默认值) Rx 开启 启用硬件加速接收端TCP校验和(IPv4) Tx 开启 启用硬件加速传输端TCP校验和 (IPv4) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="17">
<li> TCP 硬件校验和 (IPv6) （TCP Checksum Offload(IPv4)） 设置硬件加速TCP校验和 (IPv6)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速TCP校验和(IPv6) Rx &amp; Tx 开启 启用硬件加速接收端及传输端TCP校验和(IPv6)(默认值) Rx 开启 启用硬件加速接收端TCP校验和(IPv6) Tx 开启 启用硬件加速传输端TCP校验和(IPv6) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="18">
<li>传送缓冲区（Transmit Buffers） 设置传送缓冲区 缓冲区大小:1~128 (默认值:128) 建议：最大</li>
<li>UDP 硬件校验和 (IPv4)（UDP Checksum Offload(IPv4)） 设置硬件加速UDP校验和 (IPv4)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速UDP校验和(IPv4) Rx &amp; Tx 开启 启用硬件加速接收端及传输端UDP校验和(IPv4)(默认值) Rx 开启 启用硬件加速接收端UDP校验和(IPv4) Tx 开启 启用硬件加速传输端UDP校验和(IPv4) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="20">
<li> UDP 硬件校验和 (IPv6) (IPv4)（UDP Checksum Offload(IPv6)） 设置硬件加速UDP校验和 (IPv6)</li>
</ol>
<p>选项 说明 关闭 关闭硬件加速UDP校验和(IPv6) Rx &amp; Tx 开启 启用硬件加速接收端及传输端UDP校验和(IPv6)(默认值) Rx 开启 启用硬件加速接收端UDP校验和(IPv6) Tx 开启 启用硬件加速传输端UDP校验和(IPv6) 据说很多程序因为网卡校验和问题造成连接问题，建议：关，校验还是用cpu。</p>
<ol start="21">
<li>Wake on Magic Packet AMD公司的一项技术，网络发送(magic packet)数据包到某网卡，唤醒计算机的。</li>
<li>Wake on pattern match</li>
</ol>
<p>又是一种唤醒技术</p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>netcard</tag>
      </tags>
  </entry>
  <entry>
    <title>戴尔服务器iDRAC设置Tips</title>
    <url>/2020/10/19/set_idrac/</url>
    <content><![CDATA[<ol>
<li> 戴尔服务器iDRAC可以使用 概览-iDRAC设置-设置-时区和NTP 来设置时区和校时；</li>
<li> 戴尔服务器iDRAC可从 概览-服务器-故障排除-SupportAssist-保存收集 来收集Lifecycle日志；</li>
<li> 上一条主要要选择 编辑集合数据 来开启Raid控制器日志；</li>
<li> 收集日志期间，不要关闭、刷新、打开其他标签等，否则会中断日志收集；</li>
<li> 戴尔服务器R630、R730xd需要先将Lifecycle升级到2.41.40版本，然后再升级到2.75.75版本。升级完成之后就可以直接升级BIOS、NIC、SAS等固件了。否则会上传失败；</li>
<li> 命令行设置戴尔服务器时间和时区</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Set NTP settings on a Dell server with iDRAC7</span>
<span class="token comment"># Set the DNS first to ensure the iDRAC can resolve the NTP host names:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.ipv4static.dns1 <span class="token number">8.8</span>.8.8
<span class="token comment"># Set the NTP server names:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">0</span>.asia.pool.ntp.org
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">1</span>.asia.pool.ntp.org
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">2</span>.asia.pool.ntp.org
<span class="token comment"># In case it won’t update the time when FQDN’s are used, IP addresses can also be used:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp1 <span class="token number">129.250</span>.35.250
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp2 <span class="token number">180.211</span>.88.50
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.ntp3 <span class="token number">202.112</span>.29.82
<span class="token comment"># Enable NTP and set max hops:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPEnable Enabled
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.NTPConfigGroup.NTPMaxDist <span class="token number">16</span>
<span class="token comment"># Set the timezone:</span>
racadm -r <span class="token number">10.1</span>.1.100 -u root -p calvin <span class="token builtin class-name">set</span> idrac.time.timezone Japan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>System</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>dell</tag>
        <tag>idrac</tag>
      </tags>
  </entry>
  <entry>
    <title>使用SFTP进行数据备份</title>
    <url>/2021/09/15/sftp-chroot/</url>
    <content><![CDATA[<h1 id="使用SFTP进行数据备份"><a href="#使用SFTP进行数据备份" class="headerlink" title="使用SFTP进行数据备份"></a>使用SFTP进行数据备份</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>现有部分Windows Server上的SQL Server的数据库文件需要进行异地备份，然而备份中转机则为Linux主机，异地备份主机的防火墙设定为只接收该机的IP访问。在不修改原有的网络环境的前提下，原有的思路是在Windows上挂载NFS共享路径或者Linux远程挂载SMB共享，现利用Windows平台的开源软件FreefileSync的文件同步功能来通过SFTP服务进行文件的同步备份。</p>
<h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><ol>
<li><p>建立用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 建立用户kingdee，但不建立用户群组，设定用户不能登录系统</span>
<span class="token function">useradd</span> -d /backups/misc/kingdee -n -s /sbin/nologin kingdee
<span class="token comment"># 修改kindee用户密码</span>
<span class="token function">passwd</span> kingdee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>修改SSHD配置文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注释掉sftp-server进程</span>
<span class="token comment">#Subsystem      sftp    /usr/libexec/openssh/sftp-server</span>
<span class="token comment"># 使用internal-sftp替代sftp-server</span>
Subsystem <span class="token function">sftp</span> internal-sftp
<span class="token comment"># 增加如下设定sftp用户配置文件</span>
UsePAM <span class="token function">yes</span>
Match user kingdee
ForceCommand internal-sftp
<span class="token comment"># 指定chroot目录限制用户只能访问该目录</span>
ChrootDirectory /backups/misc/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立传输文件夹</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># chroot目录至根目录的文件夹的宿主只能是root，否则无法登录</span>
<span class="token comment"># 在chroot目录下可以设置用户可读写文件夹</span>
<span class="token function">mkdir</span> -p /backups/misc/kingdee
<span class="token function">chown</span> root /backups/misc
<span class="token function">chown</span> kingdee /backups/misc/kingdee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置生效</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3></li>
<li><p>配置文件同步</p>
<ol>
<li><p>安装工具软件</p>
<ol>
<li><p>软件列表</p>
<ol>
<li>7zip:<a href="https://www.7-zip.org/">7-Zip</a></li>
<li>freefilesync: <a href="https://freefilesync.org/">FreeFileSync: Open Source File Synchronization &amp; Backup Software</a></li>
</ol>
</li>
<li><p>安装过程</p>
<p>略</p>
</li>
</ol>
</li>
<li><p>同步属性配置</p>
<ol>
<li><p>源文件：使用本地文件夹</p>
</li>
<li><p>目标文件：设置在线存储</p>
<p><img src="https://cdn.sujx.net/freefilesync.PNG"></p>
</li>
<li><p>设置为镜像模式</p>
</li>
</ol>
</li>
<li><p>同步文件</p>
<p><img src="https://cdn.sujx.net/freefilesyncing.PNG"></p>
</li>
</ol>
</li>
<li><p>建立定时任务</p>
<ol>
<li>将FreeFileSync脚本保存为批处理脚本</li>
<li>在定时任务中调用该脚本</li>
</ol>
</li>
</ol>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>​    略</p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>sshd</tag>
        <tag>sftp</tag>
        <tag>freefilesync</tag>
      </tags>
  </entry>
  <entry>
    <title>手机短信转发电子邮件</title>
    <url>/2021/07/13/sms2email/</url>
    <content><![CDATA[<p>在运维工作中，我们经常会用到公用手机不在手边的情况。比如，我们在休假或者外出期间紧急对公司注册的云资源进行变更的时候，相关验证码必须要使用短信接收，而手机却在半个城市之外的公司办公室。还有一种情况就是每天都有人来找公用手机翻检验证码，这样对当值运维人员不胜其烦。</p>
<p>为了避免这种情况的蔓延，找到了使用旧安卓机进行SMS2Email改造的小程序。</p>
<p>具体设置如下图：</p>
<table>
<thead>
<tr>
<th><img src="https://cdn.sujx.net/emailsend.jpg"></th>
<th><img src="https://cdn.sujx.net/sms2emailtest.jpg"></th>
<th align="center"><img src="https://cdn.sujx.net/resend.jpg"></th>
</tr>
</thead>
</table>
<p>效果：</p>
<p><img src="https://cdn.sujx.net/sms2getemail.PNG"></p>
<p>该程序名称为 TranspondSMS</p>
<p>官网地址为：<a href="http://tsms.allmything.com/">http://tsms.allmything.com</a></p>
<p>Github代码库：<a href="https://github.com/xiaoyuanhost/">https://github.com/xiaoyuanhost/</a></p>
<p>除了邮件之外，它还支持钉钉、微信机器人已经web页面等告警方式，以后会慢慢深入它的应用。</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>SMS</tag>
        <tag>E-mail</tag>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>互联网公司的技术架构</title>
    <url>/2020/12/09/tech-roadmap/</url>
    <content><![CDATA[<blockquote>
<p>借用一下尚硅谷的拓扑图，细节部分会有出入。</p>
</blockquote>
<p><img src="https://cdn.sujx.net/jgsph.png"></p>
<h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ol>
<li>开发工具：后台Java研发主要使用intellij idea，终端研发分别用android studio和xcode，前端研发主要用vscode;</li>
<li>知识库管理：用confluence搭建公司wiki平台，用于积累案例库、经验分享、产品设计文档等;</li>
<li>研发管理：利用腾讯TAPD的优秀能力，做研发进度跟踪，BUG管理等工作;</li>
<li>代码平台：利用gitlab搭建公司代码仓库，配合sonarqube做代码质量检测，在fisheye平台上做代码审查，利用jenkins制作docker镜像，通过spinnaker平滑发布到Habor容器库.</li>
</ol>
<h3 id="应用工具"><a href="#应用工具" class="headerlink" title="应用工具"></a>应用工具</h3><ol>
<li>运行环境：基于kubernetes搭建的容器云环境，利用其自动伸缩+健康监测等特性保障服务高可用。</li>
<li>存储组件：核心业务数据放在Postgresql，部分数据放MongoDB和Mysql，多媒体数据放在FastDFS分布式文件系统，大数据分析用了HDFS，监控及搜索用了ElasticSearch</li>
<li>缓存层：基于Redis构建了高效的缓存层</li>
<li>消息系统：业务消息强调实时性都存在RocketMQ中、日志类消息强调吞吐量放到了Kafka</li>
<li>监控告警：基于ELK套件构建日志告警、Prometheus + Grafana实现对K8S的监控</li>
</ol>
<h3 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h3><ol>
<li>硬件环境：戴尔R730xd、R630服务器以及FC存储；</li>
<li>异地灾备：设立主机房和辅助机房，间隔80公里以上，同时部署广州机房作为异地灾备；</li>
<li>虚拟化层：使用VMware vSphere以OpenStack私有云方案；</li>
<li>网络接入：主辅机房多个运营商接入，灾备机房通过ipsecVPN连接，使用阿里云、华为云、Azure海外节点提供国外访问，同时，用CDN加速静态资源访问；</li>
<li>负载均衡:：使用LVS+Keeplived+NGINX；</li>
<li>监控告警：硬件层使用戴尔OpenManage Essentials提供监控告警，网络层使用zabbix，主机层使用Open-falcon</li>
<li>云上环境：使用OSS、CDN提供相应分发服务，使用ECS和RDS提供前端访问加速；</li>
</ol>
<h3 id="技术类型"><a href="#技术类型" class="headerlink" title="技术类型"></a>技术类型</h3><p>1.运行环境应用软件选型</p>
<p>（1）操作系统（WEB服务器、APP服务器、接口服务器）： Nginx、LVS。</p>
<p>（2）操作系统（数据库服务器）： CentOS。</p>
<p>（3）数据库： PostgreSql、Mysql。</p>
<p>（4）安全框架： shiro。</p>
<p>（5）HTTPS： TLS 1.2。</p>
<p>2.研发环境应用软件选型</p>
<p>（1）开发语言平台： Java，Object C。</p>
<p>（2）开发工具： intellij idea，android studio，xcode，vscode。</p>
<p>（3）版本控制工具 ： gitlab，jenkins，spinnaker，sonarqube。</p>
<p>（4）开发框架： Vue。</p>
<p>（5）网页层： nginx。</p>
<p>（6）服务层： Java、kubernetes、Docker。</p>
<p>（7）数据访问层： PostgreSql、Mysql、MongoDB、FastDFS、HDFS、ElasticSearch。</p>
<p>（8）MQ: RocketMQ、Kafka。</p>
<p>（9）缓存：Redis</p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>Technology Roadmap</tag>
      </tags>
  </entry>
  <entry>
    <title>《写作的逻辑》读书笔记</title>
    <url>/2021/08/19/the_logic_of_write/</url>
    <content><![CDATA[<h1 id="读书笔记·《写作的逻辑》"><a href="#读书笔记·《写作的逻辑》" class="headerlink" title="读书笔记·《写作的逻辑》"></a>读书笔记·《写作的逻辑》</h1><blockquote>
<p>书籍来源：京东自购</p>
<p>购买链接：<a href="https://item.jd.com/13201886.html">https://item.jd.com/13201886.html</a></p>
<p>简评：一个需要画脑图才能看明白的写作书。本书其实该叫职场文本技法，不适用于中小学语文教学。</p>
</blockquote>
<p><img src="https://cdn.sujx.net/logicofwrite.jpg"></p>
<h2 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h2><h3 id="清晰的传达"><a href="#清晰的传达" class="headerlink" title="清晰的传达"></a>清晰的传达</h3><ol>
<li>是否明确的表达</li>
<li>表达是否明确的被理解</li>
<li>段落是什么以及为什么是写作标准</li>
<li>文章易懂的基础<ol>
<li>心智模型</li>
<li>巧用强调</li>
<li>精简信息</li>
</ol>
</li>
</ol>
<h3 id="段落写作七大规则"><a href="#段落写作七大规则" class="headerlink" title="段落写作七大规则"></a>段落写作七大规则</h3><ol>
<li>文章开头先写总论</li>
<li>每段只阐述一个主题</li>
<li>段落开头先写概要句</li>
<li>补充信息强化主题</li>
<li>衔接前后段落</li>
<li>统一段落表达</li>
<li>由已知写到未知</li>
</ol>
<h3 id="商务写作实战"><a href="#商务写作实战" class="headerlink" title="商务写作实战"></a>商务写作实战</h3><ol>
<li>通知</li>
<li>技术报告</li>
<li>对外文书</li>
</ol>
<h2 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h2><h3 id="为什么用段落去写作"><a href="#为什么用段落去写作" class="headerlink" title="为什么用段落去写作"></a>为什么用段落去写作</h3><ol>
<li>表意清晰的文章必须满足三个条件：<ol>
<li>30秒内传达要点；</li>
<li>让人在短时间内读懂详细内容；</li>
<li>逻辑清晰且具有说服力；</li>
</ol>
</li>
<li>写作者切勿将沟通的责任推卸给阅读者。</li>
<li>我们要学习有学术理论依据的写作方法。</li>
</ol>
<h3 id="什么是段落写作法"><a href="#什么是段落写作法" class="headerlink" title="什么是段落写作法"></a>什么是段落写作法</h3><ol>
<li>定义<ol>
<li>在一个段落中只论述一个主题的文字布局，原则上段落由一个概要句和多个补充信息的句子构成</li>
<li>每个段落限定一个主题，一定要有概要句</li>
<li>段落不同于层次，文章由层次构成、层次由段落构成</li>
</ol>
</li>
<li>意义<ol>
<li>让逻辑模块和文字模块保持一致</li>
<li>写作方法因文而已，逻辑类文章需要使用段落写作法</li>
<li>国际标准</li>
</ol>
</li>
<li>心智模型<ol>
<li>短期记忆(7+- 2个信息 约20秒)和长期记忆</li>
<li>心智模型是人为了处理信息而建立的理解过程</li>
<li>要文章清晰易懂就要帮助读者构建心智模型(文章概要)并按照该模型的预测方向撰写</li>
</ol>
</li>
<li>巧用强调<ol>
<li>开头和结尾要强调<ol>
<li>文章的开头和结尾</li>
<li>文字模块(层次和段落以及句子)的开头和结尾</li>
<li>开头比结尾更重要</li>
</ol>
</li>
</ol>
</li>
<li>精简信息<ol>
<li>精简才让人印象深刻</li>
<li>事不过三</li>
<li>若要强调数量，则要尽可能罗列</li>
</ol>
</li>
</ol>
<h3 id="如何进行段落写作"><a href="#如何进行段落写作" class="headerlink" title="如何进行段落写作"></a>如何进行段落写作</h3><h4 id="文章开头先写总论"><a href="#文章开头先写总论" class="headerlink" title="文章开头先写总论"></a>文章开头先写总论</h4><ol>
<li>要点<ol>
<li>文章要以总论开始。总论可以让阅读者快速判断是否阅读这篇文章，也有助于阅读者对具体内容的理解。</li>
<li>将总论作为文章的开篇，其中应包含结果和结论等重要信息。</li>
</ol>
</li>
<li>效果<ol>
<li>可以判断是否需要详细阅读</li>
<li>可以轻松理解文章的具体内容</li>
<li>可以确认论据的正当性</li>
<li>可以强调重要信息</li>
</ol>
</li>
<li>诀窍<ol>
<li>模板<ol>
<li>全文的总论：总论分为目的和概要两个段落，30秒完成阅读</li>
<li>背景——问题——目的——方法——结果——结论</li>
<li>目的(3句话)<ol>
<li>现状或背景</li>
<li>问题或必要性</li>
<li>目的</li>
</ol>
</li>
<li>概要(5句话)<ol>
<li>结论和概要句</li>
<li>重要信息1</li>
<li>重要信息2</li>
<li>重要信息3</li>
<li>重要信息4</li>
</ol>
</li>
</ol>
</li>
<li>注意事项<ol>
<li>与分论呼应</li>
<li>与结论呼应</li>
<li>内容要具体</li>
<li>表述要简洁</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="每段只阐述一个主题"><a href="#每段只阐述一个主题" class="headerlink" title="每段只阐述一个主题"></a>每段只阐述一个主题</h4><ol>
<li>要点<ol>
<li>主题和文章的排版相对应，会有助于清晰传达文章的逻辑。</li>
<li>一个段落通常使用4~8句话，占据一个自然段。</li>
</ol>
</li>
<li>效果<ol>
<li>正确理解文章的逻辑（读者与作者面对小单位的集合都会导致思考和理解上的困难）</li>
<li>快速阅读文章</li>
<li>平衡多方信息</li>
<li>使文章的逻辑更清晰<ol>
<li>对信息进行模块化处理</li>
<li>厘清逻辑结构</li>
</ol>
</li>
</ol>
</li>
<li>诀窍<ol>
<li>做好段落排版<ol>
<li>段间空行分段</li>
<li>段首空格分段</li>
<li>段首空格和段间空行分段</li>
</ol>
</li>
<li>每段4~8句话为佳</li>
<li>总结的段落可以使用1~2句话</li>
</ol>
</li>
<li>注意事项<ol>
<li>切忌段落过短</li>
<li>切忌段落过长</li>
<li>设定具体主题</li>
<li>严格分类信息</li>
</ol>
</li>
</ol>
<h4 id="段落开头先写概要句"><a href="#段落开头先写概要句" class="headerlink" title="段落开头先写概要句"></a>段落开头先写概要句</h4><ol>
<li>要点<ol>
<li>段首应该留给揭示本段主题的概要句</li>
<li>概要句要勾勒出全文的逻辑</li>
</ol>
</li>
<li>效果<ol>
<li>判断是否需要详细阅读</li>
<li>轻松理解文章内容</li>
<li>确认论据</li>
<li>强调信息</li>
</ol>
</li>
<li>诀窍<ol>
<li>一句话概要</li>
<li>概要写在句头</li>
<li>承接前段概要句</li>
<li>和总论相呼应</li>
</ol>
</li>
<li>注意事项<ol>
<li>内容要具体</li>
<li>表达要简洁</li>
<li>关键词放在句首</li>
</ol>
</li>
</ol>
<h4 id="补充信息强化主题"><a href="#补充信息强化主题" class="headerlink" title="补充信息强化主题"></a>补充信息强化主题</h4><ol>
<li>要点<ol>
<li>概要句之后要补充信息对主题进行进一步说明</li>
<li>补充信息要有说服力</li>
</ol>
</li>
<li>效果<ol>
<li>增强文章的说服力</li>
<li>增强文章的逻辑性</li>
</ol>
</li>
<li>诀窍<ol>
<li>What—什么意思：补充详细解释</li>
<li>Why—为什么这么说：给出理由，解决疑问</li>
<li>How—有多重要：给出理由，解决疑问</li>
</ol>
</li>
<li>注意事项<ol>
<li>补充信息要具体：要有具体示例和数据</li>
<li>不需要补充信息，说明主题也是不必要的</li>
<li>不要只写一两句话就结束</li>
</ol>
</li>
</ol>
<h4 id="衔接前后段落"><a href="#衔接前后段落" class="headerlink" title="衔接前后段落"></a>衔接前后段落</h4><ol>
<li>要点<ol>
<li>文章的逻辑产生于段落之间的横向并列和纵向连接的连接关系</li>
</ol>
</li>
<li>效果<ol>
<li>阅读者准确理解文章的逻辑</li>
<li>写作者可以增强文章的说服力和逻辑性</li>
</ol>
</li>
<li>诀窍<ol>
<li>连接关系<ol>
<li>连接型：纵向</li>
<li>展开型：横向</li>
</ol>
</li>
<li>用概要句连接段落<ol>
<li>连续型：A<del>D A</del>B B<del>C C</del>D</li>
<li>展开型：ABC A<del>B</del>C</li>
</ol>
</li>
<li>注意事项<ol>
<li>明确区分纵向和横向</li>
<li>纵向连接时需要文字说明，横向连接不需要文字说明</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="统一段落表达"><a href="#统一段落表达" class="headerlink" title="统一段落表达"></a>统一段落表达</h4><ol>
<li>要点<ol>
<li>横向并列的各个段落要统一段落表达</li>
<li>使用表格逻辑填充文章</li>
</ol>
</li>
<li>效果<ol>
<li>容易理解</li>
<li>避免遗漏信息</li>
<li>轻松撰写文章</li>
</ol>
</li>
<li>诀窍<ol>
<li>首先要用表格划分逻辑结构</li>
<li>用统一的表达方式将表格内容填充到文章</li>
<li>要统一文章中的关键词、表达和排版</li>
</ol>
</li>
<li>注意事项<ol>
<li>确认是否遗漏信息</li>
<li>统一内容的抽象度</li>
<li>考虑排列的顺序</li>
</ol>
</li>
</ol>
<h4 id="由已知写到未知"><a href="#由已知写到未知" class="headerlink" title="由已知写到未知"></a>由已知写到未知</h4><ol>
<li>要点<ol>
<li>每句话都要由已知信息开头，由未知信息结尾</li>
<li>确保所有君子能够衔接上下文</li>
<li>完善文章的逻辑、方便阅读理解</li>
</ol>
</li>
<li>效果<ol>
<li>可以准确理解全文</li>
<li>防止逻辑跳跃</li>
<li>可以提高写作速度</li>
</ol>
</li>
<li>诀窍<ol>
<li>接续型：纵向</li>
<li>展开型：横向</li>
<li>统一型：纵横两种</li>
</ol>
</li>
<li>注意事项<ol>
<li>即便啰嗦，也要将已知信息放在句首</li>
<li>写作过程中时刻要做到由已知到未知</li>
<li>已知信息可以不是上一句中出现的信息</li>
<li>关联信息也可以看成已知信息</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Reading</category>
      </categories>
      <tags>
        <tag>book</tag>
        <tag>write</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Tmux进行对Linux主机的管理</title>
    <url>/2021/10/19/tmux/</url>
    <content><![CDATA[<h1 id="使用Tmux进行对Linux主机的管理"><a href="#使用Tmux进行对Linux主机的管理" class="headerlink" title="使用Tmux进行对Linux主机的管理"></a>使用Tmux进行对Linux主机的管理</h1><p>Tmux是一个用来替代Screen的多窗口管理工具.由于CentOS8官方源已经不再提供screen，其替代品就是Tmux(Terminal MultipleXer)。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf makecache
dnf <span class="token function">install</span> -y tmux
<span class="token comment"># 进入Tmux</span>
tmux
<span class="token comment"># 退出</span>
<span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 创建一个名为t1的tmux会话，默认初始编号为0</span>
$ tmux new -s t1
<span class="token comment"># 临时退出当前会话，即分离会话</span>
$ tmux detach		<span class="token comment"># 或使用crtl+b d</span>
<span class="token comment"># 再创建一个新的会话t2和t3</span>
$ tmux new -s t2
$ tmux new -s t3
<span class="token comment"># 查看当前tmux所有会话</span>
$ tmux <span class="token function">ls</span>
t1: <span class="token number">4</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:09:28 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:12:42 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:14:33 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
<span class="token comment"># 杀死会话t3 </span>
$ tmux kill-session -t t3
$ tmux <span class="token function">ls</span>
t1: <span class="token number">4</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:09:28 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:12:42 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
<span class="token comment"># 切入会话t1</span>
<span class="token variable">$tmux</span> attach-session -t t1
<span class="token comment"># 从t1会话切换到t2</span>
<span class="token variable">$tmux</span> switch-client -t t2
<span class="token comment"># 重命名会话</span>
$ tmux <span class="token function">ls</span>
t2: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:25:57 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:26:02 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
$ tmux rename-session -t t2 t4
no current client
$ tmux <span class="token function">ls</span>
t3: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:26:02 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span>
t4: <span class="token number">1</span> windows <span class="token punctuation">(</span>created Thu Oct <span class="token number">28</span> <span class="token number">18</span>:25:57 <span class="token number">2021</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>189x42<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 进行窗口操作需要先进入tmux终端</span>
<span class="token comment"># 上下分割窗口</span>
$ tmux split-window
<span class="token comment"># 左右分割窗口</span>
$ dtmux split-window -h
<span class="token comment"># 移动光标</span>
<span class="token comment"># 光标切换到上方窗格</span>
$ tmux select-pane -U
<span class="token comment"># 光标切换到下方窗格</span>
$ tmux select-pane -D
<span class="token comment"># 光标切换到左边窗格</span>
$ tmux select-pane -L
<span class="token comment"># 光标切换到右边窗格</span>
$ tmux select-pane -R
<span class="token comment"># 当前窗格上移</span>
$ tmux swap-pane -U
<span class="token comment"># 当前窗格下移</span>
$ tmux swap-pane -D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 会话快捷键</span>
Ctrl+b d：分离当前会话。
Ctrl+b s：列出所有会话。
Ctrl+b $：重命名当前会话。

<span class="token comment"># 窗口快捷键</span>
Ctrl+b %：划分左右两个窗格。
Ctrl+b "：划分上下两个窗格。
Ctrl+b <span class="token operator">&lt;</span>arrow key<span class="token operator">></span>：光标切换到其他窗格。<span class="token operator">&lt;</span>arrow key<span class="token operator">></span>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓。
Ctrl+b <span class="token punctuation">;</span>：光标切换到上一个窗格。
Ctrl+b o：光标切换到下一个窗格。
Ctrl+b <span class="token punctuation">&#123;</span>：当前窗格与上一个窗格交换位置。
Ctrl+b <span class="token punctuation">&#125;</span>：当前窗格与下一个窗格交换位置。
Ctrl+b Ctrl+o：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。
Ctrl+b Alt+o：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。
Ctrl+b x：关闭当前窗格。
Ctrl+b <span class="token operator">!</span>：将当前窗格拆分为一个独立窗口。
Ctrl+b z：当前窗格全屏显示，再使用一次会变回原来大小。
Ctrl+b Ctrl+<span class="token operator">&lt;</span>arrow key<span class="token operator">></span>：按箭头方向调整窗格大小。
Ctrl+b q：显示窗格编号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 新建会话</span>
tmux new -s my_session。
<span class="token comment"># 运行程序</span>
<span class="token function">htop</span>
<span class="token comment"># 会话分离</span>
按下快捷键Ctrl+b d
<span class="token comment">#重新连接到会话</span>
tmux attach-session -t my_session<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="自动启动"><a href="#自动启动" class="headerlink" title="自动启动"></a>自动启动</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在/etc/profile尾行添加如下内容并重启</span>
<span class="token comment"># TMUX</span>
<span class="token keyword">if</span> <span class="token function">which</span> tmux <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token comment"># if no session is started, start a new session</span>
    <span class="token builtin class-name">test</span> -z <span class="token variable">$&#123;TMUX&#125;</span> <span class="token operator">&amp;&amp;</span> tmux

    <span class="token comment"># when quitting tmux, try to attach</span>
    <span class="token keyword">while</span> <span class="token builtin class-name">test</span> -z <span class="token variable">$&#123;TMUX&#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        tmux attach <span class="token operator">||</span> <span class="token builtin class-name">break</span>
    <span class="token keyword">done</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>Tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>制作Hyper-V的Ubuntu虚机模板</title>
    <url>/2021/06/28/ubuntu-template-on-HyperV/</url>
    <content><![CDATA[<h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><ol>
<li><p>主机信息</p>
<ol>
<li>CPU：默认创建1核处理器</li>
<li>内存：1GB</li>
<li>硬盘：50GB 系统盘，使用LVM动态磁盘</li>
<li>IP地址： 172.31.107.15/16</li>
<li>安装镜像：<a href="https://releases.ubuntu.com/20.04/ubuntu-20.04.2-live-server-amd64.iso">https://releases.ubuntu.com/20.04/ubuntu-20.04.2-live-server-amd64.iso</a> (SHA256SUMS校验值为: d1f2bf834bbe9bb43faf16f9be992a6f3935e65be0edece1dee2aa6eb1767423)</li>
<li>软件源为： <a href="http://cn.archive.ubuntu.com/ubuntu">http://cn.archive.ubuntu.com/ubuntu</a></li>
</ol>
</li>
<li><p>创建主机</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用管理员权限开启PHPV153003主机的powershell控制台
# 创建虚机，并指定第二代且版本为5.0以及路径
New-VM -Name ubuntutemplate -MemoryStartupBytes 1GB -Generation 2 -Version 5.0 -Path d:\VMs\ -Novhd
# 创建硬盘文件夹
mkdir &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks&quot;
# 创建系统盘，指定文件路径、大小、Blocksize
New-VHd -Path &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks\ubuntutemplate.vhdx&quot; -Dynamic -SizeBytes 50GB -BlockSizeBytes 1MB
# 将新建磁盘附加到指定虚机
Add-VMHardDiskDrive -VMName ubuntutemplate -Path &quot;D:\VMs\ubuntutemplate\Virtual Hard Disks\ubuntutemplate.vhdx&quot; -ControllerType SCSI -ControllerNumber 0
# 添加光驱并指定iso文件
Add-VMDvdDrive -VMName ubuntutemplate -Path D:\ISO\ubuntu-20.04.2-live-server-amd64.iso
# 默认网卡不指定交换机，在安装过程中断网以免安装过程中的升级时间过长
# 设定网卡的VLAN ID
Set-VMNetworkAdapterVlan -VMName ubuntutemplate -VMNetworkAdapterName &quot;Network Adapter&quot; -Access -VlanId 31
# 设定主机关闭安全启动
Set-VMFirmware -VMName ubuntutemplate -EnableSecureBoot off
# 开启主机集成服务中的来宾服务
Enable-VMIntegrationService -VMName ubuntutemplate -Name &quot;Guest Service Interface&quot;
# 启动主机
Start-VM -VMName ubuntutemplate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3></li>
<li><p>基本配置</p>
<pre class="line-numbers language-none"><code class="language-none">语言: English
键盘：English
网络：
	子网：172.31.0.0&#x2F;16
	地址：172.31.107.15
	网关: 172.31.153.253
	DNS: 172.31.100.4
不使用网络代理，并使用官方源
使用自定义磁盘分区
	创建1GB ext4格式 &#x2F;boot 分区
	自动创建512MB EFI引导分区
	剩余磁盘创建不含格式分区
	创建PV(CL)
	创建LV：root 3.5GB
	创建LV: swap 3GB
创建默认用户以及密码、主机名(VLNX000000)
安装openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置语言<br><img src="https://cdn.sujx.net/ubuntu_lang.PNG"></p>
</li>
<li><p>配置键盘布局<br><img src="https://cdn.sujx.net/ubntu_key.PNG"></p>
</li>
<li><p>配置网络属性<br><img src="https://cdn.sujx.net/ubuntu_net.PNG"></p>
</li>
<li><p>配置网络代理(无)<br><img src="https://cdn.sujx.net/ubuntu_proxy.PNG"></p>
</li>
<li><p>配置系统升级APT软件源<br><img src="https://cdn.sujx.net/ubuntu_mirror.PNG"></p>
</li>
<li><p>配置硬盘自动分区<br><img src="https://cdn.sujx.net/ubuntu_diskshow.PNG"></p>
</li>
<li><p>配置根分区使用全部剩余空间<br><img src="https://cdn.sujx.net/ubuntu_extroot.PNG"><br><img src="https://cdn.sujx.net/ubuntu_diskshow.PNG"></p>
</li>
<li><p>创建用户<br>  <img src="https://cdn.sujx.net/ubuntu_creatuser.PNG"></p>
</li>
<li><p>安装openssh-server   <img src="https://cdn.sujx.net/ubuntu_openssh.PNG"></p>
</li>
<li><p>选择软件包   <img src="https://cdn.sujx.net/ubuntu_nosel.PNG"></p>
</li>
<li><p>开始安装   <img src="https://cdn.sujx.net/ubuntu_install.PNG"></p>
</li>
<li><p>完成安装   <img src="https://cdn.sujx.net/ubuntu_finsh.PNG"></p>
<h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3></li>
<li><p>系统更新</p>
<pre class="line-numbers language-none"><code class="language-none">apt update
apt upgrade -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>安装工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装网络工具包
apt install -y curl wget net-tools

# 安装监控工具包
apt install -y htop iftop iotop

# 安装其他工具包
apt install -y locate unzip tree facter ruby libruby2.7

# 安装加域工具包
apt install -y sssd-ad sssd-tools realmd adcli
systemctl enable sssd 

# 开启域用户登录自动创建home目录
pam-auth-update --enable mkhomedir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>停用无用服务</p>
<pre class="line-numbers language-none"><code class="language-none"># 关闭snapd服务和apparmo服务
systemctl disable apparmor.service snapd.service
systemctl disable snap-core18-1944.mount snapd.apparmor.service snapd.core-fixup.service snapd.seeded.service snapd.socket snap-lxd-19188.mount snap.lxd.activate.service snap.lxd.daemon.unix.socket snap-snapd-10707.mount 
systemctl disable snapd.autoimport.service lxd-agent.service lxd-agent-9p.service snapd.system-shutdown.service snapd.recovery-chooser-trigger.service snapd.snap-repair.timer snapd.socket
# 停止cloud-init服务
systemctl disable cloud-init.service cloud-init-local.service cloud-final.service cloud-config.service
# 停止自动升级和信息收集服务
systemctl disable unattended-upgrades.service apt-daily.timer apt-daily-upgrade.timer apport-forward.socket apport-autoreport.path
sed -i &#39;s&#x2F;1&#x2F;0&#x2F;g&#39; &#x2F;etc&#x2F;default&#x2F;apport<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>安装Hyper-V驱动</p>
<pre class="line-numbers language-none"><code class="language-none">apt install -y linux-image-virtual linux-tools-virtual linux-cloud-tools-virtual<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>配置时间</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用chrony管理时间
apt install -y chrony
systemctl enable chrony --now
# 使用北京时间
timedatectl set-timezone Asia&#x2F;Shanghai
# 使用24小时制
echo &#39;LC_TIME&#x3D;en_US.UTF-8&#39; &gt;&gt; &#x2F;etc&#x2F;default&#x2F;locale
echo &#39;LC_ALL&#x3D;en_US.UTF-8&#39; &gt;&gt; &#x2F;etc&#x2F;default&#x2F;locale<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>修改网络管理工具</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用NetworkMangager管理网络
apt install -y network-manager
systemctl enable network-manager
systemctl disable wpa_supplicant.service

# 要将全部yaml文件移除之后再创建新的配置文件
mkdir &#x2F;etc&#x2F;netplan&#x2F;bak
mv &#x2F;etc&#x2F;netplan&#x2F;*.yaml &#x2F;etc&#x2F;netplan&#x2F;bak&#x2F;

# 新建配置文件
cat &gt; &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml &lt;&lt; EOF
# This is the network config written by &#39;subiquity&#39;
network:
	version: 2
	renderer: NetworkManager
EOF

# 应用配置
netplan apply
systemctl restart network-manager

# 重新配置IP信息，否则开机无法访问网络
nmcli c del eth0
nmcli c m Wired\ connection\ 1 con-name eth0
nmcli c m eth0 ipv4.addresses 172.31.107.15&#x2F;24 ipv4.gateway 172.31.153.253 ipv4.dns 172.31.100.4 ipv4.method manual autoconnect yes

# 配置生效
nmcli c d eth0 &amp;&amp; nmcli c u eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>修改SSH配置文件</p>
<pre class="line-numbers language-none"><code class="language-none"># 修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config
# 允许root使用密码登录
PasswordAuthentication yes

# 开启认证方式
GSSAPIAuthentication yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置防火墙</p>
<pre class="line-numbers language-none"><code class="language-none">ufw allow ssh
ufw enable
ufw reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置编辑器</p>
<pre class="line-numbers language-none"><code class="language-none"># 配置默认编辑器使用vim
# 使用第3项 vim.basic 
update-alternatives --config editor 
There are 4 choices for the alternative editor (providing &#x2F;usr&#x2F;bin&#x2F;editor).

Selection Path Priority Status
------------------------------------------------------------
0 &#x2F;bin&#x2F;nano 40 auto mode
1 &#x2F;bin&#x2F;ed -100 manual mode
2 &#x2F;bin&#x2F;nano 40 manual mode
* 3 &#x2F;usr&#x2F;bin&#x2F;vim.basic 30 manual mode
4 &#x2F;usr&#x2F;bin&#x2F;vim.tiny 15 manual mode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>开启脚本自动补全</p>
<pre class="line-numbers language-none"><code class="language-none"># 去掉 &#x2F;etc&#x2F;bash.bashrc 第35~41行注释

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion ]; then
    . &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion
  elif [ -f &#x2F;etc&#x2F;bash_completion ]; then
    . &#x2F;etc&#x2F;bash_completion
  fi
fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>修改默认shell为bash</p>
<pre class="line-numbers language-none"><code class="language-none">root@vlnx000000:~# dpkg-reconfigure dash
# 选择NO
Removing &#39;diversion of &#x2F;bin&#x2F;sh to &#x2F;bin&#x2F;sh.distrib by dash&#39;
Adding &#39;diversion of &#x2F;bin&#x2F;sh to &#x2F;bin&#x2F;sh.distrib by bash&#39;
Removing &#39;diversion of &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.1.gz to &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.distrib.1.gz by dash&#39;
Adding &#39;diversion of &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.1.gz to &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;sh.distrib.1.gz by bash&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>设置开机自启动脚本</p>
<pre class="line-numbers language-none"><code class="language-none"># 新建开机运行程序
echo &#39;@reboot root &#x2F;bin&#x2F;bash &#x2F;root&#x2F;firstboot.sh&#39;&gt;&gt;&#x2F;etc&#x2F;crontab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>启用ROOT用户并重启</p>
<pre class="line-numbers language-none"><code class="language-none"># 设置root用户密码
sudo passwd
# 更新索引和库依赖关系
ldconfig
updatedb
# 重启主机
reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="清理交付"><a href="#清理交付" class="headerlink" title="清理交付"></a>清理交付</h3></li>
<li><p>删除安装用户</p>
<pre class="line-numbers language-none"><code class="language-none">deluser fxiaoke
rm -rf &#x2F;home&#x2F;fxiaoke<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>清理主机信息</p>
<pre class="line-numbers language-none"><code class="language-none"># 清除Machine ID
&gt;&#x2F;etc&#x2F;machine-id
# 清除SSH公钥,在后续部署中会使用&#96;dpkg -reconfigure openssh-server&#96;来重新SSHD的key，否则无法SSH登录
rm -rf &#x2F;etc&#x2F;ssh&#x2F;*key*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>扩展磁盘</p>
<pre class="line-numbers language-none"><code class="language-none">lvextend -l 100%free &#x2F;dev&#x2F;cl&#x2F;root
resize2fs &#x2F;dev&#x2F;cl&#x2F;root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>删除缓存</p>
<pre class="line-numbers language-none"><code class="language-none"># 清除apt缓存
apt autoremove -y
apt clean
# 清除访问历史
rm –rf &#x2F;tmp&#x2F;*
rm –rf &#x2F;var&#x2F;tmp&#x2F;*
history -c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>关机</p>
<pre class="line-numbers language-none"><code class="language-none"># 使用带空格的命令避免存入history
 sync
 poweroff<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><ul>
<li>新部署的主机需要使用<code>dpkg-reconfigure openssh-server</code>来重新SSHD的key，否则是登录不上22端口的；</li>
<li>Ubuntu 20.04 使用swap.img来替代以往的swap分区，导致在虚机部署中实际磁盘空间占用要大于centos至少一倍以上；</li>
<li>部署时使用自定义分区可以创建swap分区；</li>
<li>Hyper-V虚机的默认blocksize是32M，会导致vhdx文件远远大于vmdk，建议按照官方实践指南blocksize使用1M。</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Hyper-V Powershell Ubuntu VM Template##</tag>
      </tags>
  </entry>
  <entry>
    <title>升级CentOS8的OpenSSH版本</title>
    <url>/2019/08/09/update-openssh-2-81p1/</url>
    <content><![CDATA[<p>虽然说CentOS8的Openssl和OpenSSH的版本已经算是比较新的了，但是因为公司的信息安全建设的要求，在经过商业漏洞扫描软件扫描之后，还是需要进行升级操作(由于CentOS8的Openssl已经是比较新的1.1.1版本了，此次就不升级它了)。</p>
<h3 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 配置编译环境</span>
<span class="token builtin class-name">cd</span>
yum update -y
yum <span class="token function">install</span> rpm-build zlib-devel openssl-devel gcc perl-devel pam-devel <span class="token function">unzip</span> -y
<span class="token function">mkdir</span> -p ~/rpmbuild/<span class="token punctuation">&#123;</span>SOURCES,SPECS<span class="token punctuation">&#125;</span>
<span class="token comment"># 下载安装包</span>
<span class="token function">wget</span> https://openbsd.hk/pub/OpenBSD/OpenSSH/portable/openssh-8.1p1.tar.gz
<span class="token function">wget</span> http://ftp.riken.jp/Linux/momonga/6/Everything/SOURCES/x11-ssh-askpass-1.2.4.1.tar.gz
<span class="token function">cp</span> openssh-8.1p1.tar.gz x11-ssh-askpass-1.2.4.1.tar.gz ~/rpmbuild/SOURCES
<span class="token function">tar</span> zxvf openssh-8.1p1.tar.gz
<span class="token function">cp</span> openssh-8.1p1/contrib/redhat/openssh.spec ~/rpmbuild/SPECS/
<span class="token comment"># 修改编译文件，去掉X11环境依赖和openssl依赖</span>
<span class="token function">sed</span> -i -e <span class="token string">"s/%define no_x11_askpass 0/%define no_x11_askpass 1/g"</span> ~/rpmbuild/SPECS/openssh.spec p
<span class="token function">sed</span> -i -e <span class="token string">"s/%define no_gnome_askpass 0/%define no_gnome_askpass 1/g"</span> ~/rpmbuild/SPECS/openssh.spec
<span class="token function">sed</span> -i -e <span class="token string">"s/BuildRequires: openssl-devel &lt; 1.1/#BuildRequires: openssl-devel &lt; 1.1/g"</span> ~/rpmbuild/SPECS/openssh.spec 
<span class="token comment"># 开始编译rpm包</span>
rpmbuild -bp openssh.spec
rpmbuild -ba openssh.spec
<span class="token comment"># yum本地安装新编译的包</span>
yum localinstall -y ~/rpmbuild/RPMS/x86_64/openssh-*
<span class="token comment"># 修改相关公钥权限</span>
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_ecdsa_key
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_ed25519_key
<span class="token function">chmod</span> 0400 /etc/ssh/ssh_host_rsa_key
<span class="token comment"># 修改配置文件</span>
<span class="token function">sed</span> -i -e <span class="token string">"s/UsePAM yes/UsePAM no/g"</span> /etc/ssh/sshd_config
<span class="token comment"># 重置服务</span>
systemctl restart sshd
<span class="token comment"># 查看新版本信息</span>
openssh -V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="批量分发"><a href="#批量分发" class="headerlink" title="批量分发"></a>批量分发</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 上传文件到本地YUM仓库之后建立索引</span>
createrepo /var/www/repos/cnpe/8/x86_64/
<span class="token comment"># 安装</span>
ansible all -m yum -a <span class="token string">'name=* state=latest'</span> -b -K<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>ssh</tag>
        <tag>centos8</tag>
        <tag>system</tag>
      </tags>
  </entry>
  <entry>
    <title>HDFS初步使用</title>
    <url>/2020/03/01/use-hdfs-newbie/</url>
    <content><![CDATA[<p>HDFS(Hadoop Distributed File System)是可扩展、容错、高性能的分布式文件系统，异步复制，一次写入多次读取，主要负责存储。其概念和内容可以参考<a href="https://www.cnblogs.com/binarylei/p/8903601.html" title="这里">[1]</a>。这里就做一个简单的实验来看一下其文件管理的功能。更多的Hadoop命令可以参考<a href="http://dblab.xmu.edu.cn/blog/1625-2/" title="这里">[2]</a>。</p>
<h3 id="用户建立"><a href="#用户建立" class="headerlink" title="用户建立"></a>用户建立</h3><p>在实验环境中，不建议使用root账号直接登录运行，所以建立一个普通账号。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Elephant主机执行</span>
<span class="token comment"># 安装ansible</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># yum install -y ansible</span>
<span class="token comment"># 在/etc/ansible/hosts中新增所有主机名</span>
<span class="token comment"># 建立ansible文件</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># mkdir playbook</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># vim ./playbook/useradd.yaml</span>
---
- hosts: hadoop
  remote_user: root
  vars_prompt:
    - name: user_name
      prompt: Enter Username
      private: no
    - name: user_passwd
      prompt: Enter Password
      encrypt: <span class="token string">"sha512_crypt"</span>
      confirm: <span class="token function">yes</span>
  tasks:
    - name: create user
      user:
        name: <span class="token string">"&#123;&#123;user_name&#125;&#125;"</span>
        password: <span class="token string">"&#123;&#123;user_passwd&#125;&#125;"</span>

<span class="token comment"># 执行</span>
<span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># ansible-playbook ./playbook/useradd.yaml</span>
Enter Username: sujx
Enter Password:
confirm Enter Password:

PLAY <span class="token punctuation">[</span>hadoop<span class="token punctuation">]</span> *****************************************************************************<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="HDFS文件使用"><a href="#HDFS文件使用" class="headerlink" title="HDFS文件使用"></a>HDFS文件使用</h3><p>我们先将准备的481M文件(access.log)上传至用户家目录，看看这个文件将在hdfs文件系统中如何存储。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@elephant ~<span class="token punctuation">]</span><span class="token comment"># su hdfs</span>
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hadoop fs -mkdir /user/sujx
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hadoop fs -chown sujx /user/sujx
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ <span class="token function">su</span> sujx -
<span class="token punctuation">[</span>hdfs@elephant root<span class="token punctuation">]</span>$ hdfs dfs -put access_log weblog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后，我们通过hdfs的web控制台就可以看到文件的存储情况，可见文件以3副本的形式，按照每个128M大小的存储块分割存储在namenode之上。当前情况是分成了4块。 <img src="https://cdn.sujx.net/hdfs_01.png" alt="show"> <img src="https://cdn.sujx.net/hdfs_02.png" alt="block"> 我们可以从lion主机中看到存储的数据块。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@lion ~<span class="token punctuation">]</span><span class="token comment"># tree /dfs</span>
/dfs
<span class="token variable"><span class="token variable">`</span>-- dn
    -- current
       -- BP-752680285-192.168.174.131-1582986010714
          -- current
             -- VERSION
             -- dfsUsed
             -- finalized
                <span class="token variable">`</span></span>-- subdir0
                    -- subdir0
                    -- subdir1
                    -- subdir2
                    -- subdir3
                       -- blk_1073742734
                       -- blk_1073742734_1910.meta
                    <span class="token variable"><span class="token variable">`</span>-- subdir4
             <span class="token variable">`</span></span>-- rbw
          -- scanner.cursor
          <span class="token variable"><span class="token variable">`</span>-- tmp
       <span class="token variable">`</span></span>-- VERSION
    `-- in_use.lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Something</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>bigdata</tag>
        <tag>hdfs</tag>
      </tags>
  </entry>
  <entry>
    <title>使用脚本一键部署堡垒机</title>
    <url>/2019/12/19/use-sh-deploy-jumpsever/</url>
    <content><![CDATA[<p>部门领导要求研究一下堡垒机的使用，所以花了两天时间研究了一下开源堡垒机的部署和使用。因为官方文档中有些已经有了部分错误，现在以官方的CentOS8版本的安装文档为蓝本把部署过程以脚本的形式备份一下。 其中，主要的变化是使用了官方源的nginx、修改了python安装的几个组件的版本、部署了堡垒机jms服务、koko服务和guacamole服务的systemd自启动脚本。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 2020.01.15</span>
<span class="token comment"># sujx@live.cn</span>

<span class="token comment"># 安装依赖包</span>
yum update -y
yum -y <span class="token function">install</span> <span class="token function">wget</span> gcc epel-release <span class="token function">git</span> telnet openssh-clients dnf-utils <span class="token function">vim</span> 
yum update -y

<span class="token comment"># 下载 Jumpserver</span>
<span class="token builtin class-name">cd</span> /opt/
<span class="token function">git</span> clone --depth<span class="token operator">=</span><span class="token number">1</span> https://github.com/jumpserver/jumpserver.git

<span class="token comment"># 防火墙 与 selinux 设置说明, 如果已经关闭了 防火墙 和 Selinux 的用户请跳过设置</span>
systemctl start firewalld
<span class="token comment"># nginx 端口</span>
firewall-cmd --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http --permanent  
<span class="token comment"># 用户SSH登录端口 koko</span>
firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">2222</span>/tcp --permanent  
<span class="token comment"># 重新载入规则</span>
firewall-cmd --reload  
<span class="token comment"># SElinux配置</span>
setsebool -P httpd_can_network_connect <span class="token number">1</span>

<span class="token comment"># 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke</span>
yum -y <span class="token function">install</span> redis
systemctl <span class="token builtin class-name">enable</span> redis --now

<span class="token comment"># 安装 MySQL, 如果不使用 Mysql 可以跳过相关 Mysql 安装和配置, 支持sqlite3, mysql, postgres等</span>
yum -y <span class="token function">install</span> mariadb mariadb-devel mariadb-server sshpass
systemctl <span class="token builtin class-name">enable</span> mariadb --now

<span class="token comment"># 创建数据库 Jumpserver 并授权</span>
<span class="token assign-left variable">DB_PASSWORD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> -dc A-Za-z0-9  <span class="token function">head</span> -c <span class="token number">24</span><span class="token variable">`</span></span>  <span class="token comment"># 生成随机数据库密码</span>

<span class="token function">cat</span> <span class="token operator">></span>~/passwd.txt<span class="token operator">&lt;&lt;</span><span class="token string">EOF
数据库密码是 <span class="token variable">$DB_PASSWORD</span>
EOF</span>

mysql -uroot -e <span class="token string">"create database jumpserver default charset 'utf8'; grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by '<span class="token variable">$DB_PASSWORD</span>'; flush privileges;"</span>

<span class="token comment"># 安装 Nginx, 用作代理服务器整合 Jumpserver 与各个组件</span>

yum -y <span class="token function">install</span> nginx
systemctl <span class="token builtin class-name">enable</span> nginx --now

<span class="token comment"># 安装 Python3.6</span>
yum -y <span class="token function">install</span> python36 python36-devel
yum -y <span class="token function">install</span> krb5-devel libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel tcl-devel tk-devel openldap-devel libffi-devel openldap-clients

<span class="token comment"># 安装 Python 库依赖</span>
<span class="token comment"># 配置使用华为python源</span>
<span class="token function">mkdir</span> ~/.pip
<span class="token function">cat</span> <span class="token operator">></span>~/.pip/pip.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
[global]
index-url = https://mirrors.huaweicloud.com/repository/pypi/simple
trusted-host = mirrors.huaweicloud.com
timeout = 120 
EOF</span>

<span class="token comment"># 配置并载入 Python3 虚拟环境</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token comment"># py3 为虚拟环境名称, 可自定义</span>
python3 -m venv py3  
<span class="token comment"># 退出虚拟环境可以使用 deactivate 命令</span>
<span class="token builtin class-name">source</span> /opt/py3/bin/activate  

pip <span class="token function">install</span> wheel setuptools
pip <span class="token function">install</span> pip --upgrade
pip <span class="token function">install</span> python-gssapi

<span class="token comment"># 修改依赖包版本</span>
<span class="token function">sed</span> -i <span class="token string">"s/Django==2.1.11/Django==2.2/g"</span> /opt/jumpserver/requirements/requirements.txt
<span class="token function">sed</span> -i <span class="token string">"s/cryptography==2.3.1/cryptography==2.7/g"</span> /opt/jumpserver/requirements/requirements.txt
<span class="token function">sed</span> -i <span class="token string">"s/pyasn1==0.4.2/pyasn1==0.4.6/g"</span> /opt/jumpserver/requirements/requirements.txt

pip <span class="token function">install</span> -r /opt/jumpserver/requirements/requirements.txt

<span class="token comment"># 修改 Jumpserver 配置文件</span>
<span class="token builtin class-name">cd</span> /opt/jumpserver
<span class="token function">cp</span> config_example.yml config.yml

<span class="token comment"># 生成随机SECRET_KEY</span>
<span class="token assign-left variable">SECRET_KEY</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> -dc A-Za-z0-9  <span class="token function">head</span> -c <span class="token number">50</span><span class="token variable">`</span></span>  
<span class="token builtin class-name">echo</span> <span class="token string">"SECRET_KEY=<span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token comment"># 生成随机BOOTSTRAP_TOKEN</span>
<span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom  <span class="token function">tr</span> -dc A-Za-z0-9  <span class="token function">head</span> -c <span class="token number">16</span><span class="token variable">`</span></span>  
<span class="token builtin class-name">echo</span> <span class="token string">"BOOTSTRAP_TOKEN=<span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token function">sed</span> -i <span class="token string">"s/SECRET_KEY:/SECRET_KEY: <span class="token variable">$SECRET_KEY</span>/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> -i <span class="token string">"s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: <span class="token variable">$BOOTSTRAP_TOKEN</span>/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> -i <span class="token string">"s/# DEBUG: true/DEBUG: false/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> -i <span class="token string">"s/# LOG_LEVEL: DEBUG/LOG_LEVEL: ERROR/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> -i <span class="token string">"s/# SESSION_EXPIRE_AT_BROWSER_CLOSE: false/SESSION_EXPIRE_AT_BROWSER_CLOSE: true/g"</span> /opt/jumpserver/config.yml
<span class="token function">sed</span> -i <span class="token string">"s/DB_PASSWORD: /DB_PASSWORD: <span class="token variable">$DB_PASSWORD</span>/g"</span> /opt/jumpserver/config.yml

<span class="token builtin class-name">echo</span> -e <span class="token string">"SECRET_KEY是 <span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">>></span> ~/passwd.txt
<span class="token builtin class-name">echo</span> -e <span class="token string">"BOOTSTRAP_TOKEN是 <span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">>></span> ~/passwd.txt

<span class="token comment"># 退出虚拟环境可以使用 deactivate 命令</span>

<span class="token comment"># 运行 Jumpserver</span>
<span class="token comment">#cd /opt/jumpserver</span>
<span class="token comment">#./jms start -d  # 后台运行使用 -d 参数./jms start -d</span>
<span class="token comment"># 新版本更新了运行脚本, 使用方式./jms startstopstatus all  后台运行请添加 -d 参数</span>
<span class="token function">cat</span> <span class="token operator">></span>/usr/lib/systemd/system/jms.service<span class="token operator">&lt;&lt;</span><span class="token string">EOF
[Unit]
Description=jms
After=network.target mariadb.service redis.service
Wants=mariadb.service redis.service

[Service]
Type=forking
Environment="PATH=/opt/py3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin"
ExecStart=/opt/jumpserver/jms start -d
ExecReload=
ExecStop=/opt/jumpserver/jms stop

[Install]
WantedBy=multi-user.target
EOF</span>
systemctl <span class="token builtin class-name">enable</span> jms.service --now

<span class="token comment"># 安装 podman 部署 koko 与 guacamole</span>
yum <span class="token function">install</span> -y podman-docker
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">docker</span><span class="token operator">=</span>podman
<span class="token builtin class-name">echo</span> <span class="token string">"alias docker=podman"</span> <span class="token operator">>></span> ~/.bashrc

<span class="token comment"># 配置 podman 镜像源</span>
<span class="token function">sed</span> -i <span class="token string">"s/registry.redhat.io/dockerhub.azk8s.cn/g"</span> /etc/containers/registries.conf
<span class="token function">sed</span> -i <span class="token string">"s/registry.access.redhat.com/docker.mirrors.ustc.edu.cn/g"</span> /etc/containers/registries.conf

<span class="token comment"># 允许 容器ip 访问宿主 8080 端口, (容器的 ip 可以进入容器查看)</span>
firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span><span class="token number">10.88</span>.0.0/16<span class="token string">" port protocol="</span>tcp<span class="token string">" port="</span><span class="token number">8080</span><span class="token string">" accept"</span>
firewall-cmd --reload
<span class="token comment"># 10.88.0.x 是 podman 容器默认的IP池, 这里偷懒直接授权ip段了, 可以根据实际情况单独授权IP</span>

<span class="token comment"># 获取当前服务器 IP</span>
<span class="token assign-left variable">Server_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">ip</span> addr  <span class="token function">grep</span> <span class="token string">'state UP'</span> -A2  <span class="token function">grep</span> inet  <span class="token function">egrep</span> -v <span class="token string">'(127.0.0.1inet6docker)'</span>  <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span>  <span class="token function">tr</span> -d <span class="token string">"addr:"</span>  <span class="token function">head</span> -n <span class="token number">1</span>  <span class="token function">cut</span> -d / -f1<span class="token variable">`</span></span>
<span class="token builtin class-name">echo</span> -e <span class="token string">"服务器IP是 <span class="token variable">$Server_IP</span>"</span> <span class="token operator">>></span> ~/passwd.txt

<span class="token comment"># http://&lt;Jumpserver_url> 指向 jumpserver 的服务端口, 如 http://192.168.244.144:8080</span>
<span class="token comment"># BOOTSTRAP_TOKEN 为 Jumpserver/config.yml 里面的 BOOTSTRAP_TOKEN</span>
docker run --name jms_koko -d -p <span class="token number">2222</span>:2222 -p <span class="token number">127.0</span>.0.1:5000:5000 -e <span class="token assign-left variable">CORE_HOST</span><span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 -e <span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_koko:1.5.6
docker run --name jms_guacamole -d -p <span class="token number">127.0</span>.0.1:8081:8080 -e <span class="token assign-left variable">JUMPSERVER_SERVER</span><span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 -e <span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_guacamole:1.5.6

<span class="token comment"># 配置KOKO自启动</span>
<span class="token function">cat</span> <span class="token operator">></span> /usr/lib/systemd/system/koko.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Unit]
Description=Podman JMS_koko Service
After=network.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/podman start -a jms_koko
ExecStop=/usr/bin/podman stop -t 10 jms_koko
Restart=always

[Install]
WantedBy=multi-user.target
EOF</span>

systemctl <span class="token builtin class-name">enable</span> koko.service

<span class="token comment"># 配置guacamole自启动</span>
<span class="token function">cat</span> <span class="token operator">></span> /usr/lib/systemd/system/guacamole.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Unit]
Description=Podman JMS_guacamole Service
After=network.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/podman start -a jms_guacamole
ExecStop=/usr/bin/podman stop -t 10 jms_guacamole
Restart=always

[Install]
WantedBy=multi-user.target
EOF</span>

systemctl <span class="token builtin class-name">enable</span> guacamole.service

<span class="token comment"># 安装 Web Terminal 前端: Luna  需要 Nginx 来运行访问 访问(https://github.com/jumpserver/luna/releases)下载对应版本的 release 包, 直接解压, 不需要编译</span>
<span class="token builtin class-name">cd</span> /opt
<span class="token comment"># wget https://github.com/jumpserver/luna/releases/download/1.5.6/luna.tar.gz</span>

<span class="token comment"># 如果网络有问题导致下载无法完成可以使用下面地址</span>
<span class="token function">wget</span> https://demo.jumpserver.org/download/luna/1.5.6/luna.tar.gz

<span class="token function">tar</span> xvzf luna.tar.gz
<span class="token function">chown</span> -R root:root luna

<span class="token comment"># 配置 Nginx 整合各组件</span>
<span class="token function">rm</span> -rf /etc/nginx/conf.d/default.conf

<span class="token function">cp</span> /etc/nginx/nginx.conf /etc/nginx.conf.bak
<span class="token function">sed</span> -i <span class="token string">"38,58d"</span> /etc/nginx/nginx.conf
<span class="token function">cat</span> <span class="token operator">></span> /etc/nginx/conf.d/jumpserver.conf <span class="token operator">&lt;&lt;</span> <span class="token string">"EOF"
server &#123;
    listen 80;
    # server_name _;

    client_max_body_size 100m;  # 录像及文件上传大小限制

    location /luna/ &#123;
        try_files $uri / /index.html;
        alias /opt/luna/;  # luna 路径, 如果修改安装目录, 此处需要修改
    &#125;

    location /media/ &#123;
        add_header Content-Encoding gzip;
        root /opt/jumpserver/data/;  # 录像位置, 如果修改安装目录, 此处需要修改
    &#125;

    location /static/ &#123;
        root /opt/jumpserver/data/;  # 静态资源, 如果修改安装目录, 此处需要修改
    &#125;

    location /koko/ &#123;
        proxy_pass       http://localhost:5000;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location /guacamole/ &#123;
        proxy_pass       http://localhost:8081/;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location /ws/ &#123;
        proxy_pass http://localhost:8070;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    &#125;

    location / &#123;
        proxy_pass http://localhost:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
             &#125;
&#125;
EOF</span>

<span class="token comment"># 确保配置没有问题, 有问题请先解决</span>
nginx -t   
systemctl restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后网页访问主机地址. <a href="https://cdn.sujx.net/jumpserver.png" title="jumpserver"><img src="https://cdn.sujx.net/jumpserver.png" alt="jumpserver" title="jumpserver"></a></p>
<hr>
<p>另外，脚本的下载地址如下： <a href="https://cdn.sujx.net/jumpserver.sh" title="jumpserver">jumpserver安装脚本</a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>jumpserver</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware磁盘文件转化为Hyper-V磁盘</title>
    <url>/2021/11/01/vmdk2vhdx/</url>
    <content><![CDATA[<h1 id="VMware磁盘文件转化为Hyper-V磁盘"><a href="#VMware磁盘文件转化为Hyper-V磁盘" class="headerlink" title="VMware磁盘文件转化为Hyper-V磁盘"></a>VMware磁盘文件转化为Hyper-V磁盘</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>现有以VM形式提供的测试工具，大多以VMware的vmdk格式存储。那么就存在将这些文件转换为现有的Hyper-V支持的VHDX格式的需求。</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>有很多工具可以实现不同虚机版本的硬盘文件互转，比如winimage或者virtualbox以及各个厂商推出的工具。</p>
<p>本次推荐使用Starwind出品的免费工具：</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>获取虚拟机VMDK文件</p>
<ol>
<li>避免直接使用VMwareWorkstation创建的虚机文件，应当使用“文件”—“导出为OVF”生成的vmdk文件</li>
<li>从ESXi导出的ova文件，可以解压缩之后得到相对应的vmdk文件</li>
</ol>
</li>
<li><p>安装V2VConverter工具<br><img src="https://cdn.sujx.net/starwindv2v-000.PNG"></p>
</li>
<li><p>转换类型，支持本地文件和远程虚拟化服务器上目标<br><img src="https://cdn.sujx.net/starwindv2v-001.PNG"></p>
</li>
<li><p>转换本地虚拟硬盘</p>
<ol>
<li><p>转换文件保存为本地文件<br><img src="https://cdn.sujx.net/starwindv2v-002.PNG"></p>
</li>
<li><p>保存文件类型<br><img src="https://cdn.sujx.net/starwindv2v-003.PNG"></p>
</li>
<li><p>文件存储格式<br><img src="https://cdn.sujx.net/starwindv2v-004.PNG"></p>
</li>
<li><p>VHDX格式存在两代四种类型<br><img src="https://cdn.sujx.net/starwindv2v-005.PNG"></p>
</li>
<li><p>保存目标<br><img src="https://cdn.sujx.net/starwindv2v-006.PNG"></p>
</li>
<li><p>执行转换<br><img src="https://cdn.sujx.net/starwindv2v-007.PNG">   </p>
</li>
</ol>
</li>
<li><p>转换为远程Hyper-V服务器上的虚机</p>
<ol>
<li><p>输入远程服务器凭证<br><img src="https://cdn.sujx.net/starwindv2v-012.PNG"></p>
</li>
<li><p>选择存储目标<br><img src="https://cdn.sujx.net/starwindv2v-013.PNG"></p>
</li>
<li><p>选择磁盘格式<br><img src="https://cdn.sujx.net/starwindv2v-014.PNG"></p>
</li>
<li><p>存储目标<br><img src="https://cdn.sujx.net/starwindv2v-015.PNG"></p>
</li>
<li><p>执行转换<br><img src="https://cdn.sujx.net/starwindv2v-016.PNG"></p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>vmdk</tag>
        <tag>vhdx</tag>
      </tags>
  </entry>
  <entry>
    <title>批量更新Wazuh主机配置文件和漏洞库</title>
    <url>/2021/08/05/wazuh-cluster-update/</url>
    <content><![CDATA[<h1 id="批量更新Wazuh主机配置文件和漏洞库"><a href="#批量更新Wazuh主机配置文件和漏洞库" class="headerlink" title="批量更新Wazuh主机配置文件和漏洞库"></a>批量更新Wazuh主机配置文件和漏洞库</h1><h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>相比较单机版本，群集化的Wazuh需要处理的第一个问题就是如何保证ossec.conf文件和漏洞库的统一配置、统一更新、统一下发。以下将使用简单的Ansible命令和Shell脚本实现前述功能。</p>
<h3 id="建立共享"><a href="#建立共享" class="headerlink" title="建立共享"></a>建立共享</h3><ol>
<li><p>部署Nginx</p>
<pre class="line-numbers language-none"><code class="language-none"># 在wazuh-master上安装Nginx
yum install -y nginx
mkdir -p &#x2F;var&#x2F;www&#x2F;wazuh
chown -R nginx:nginx &#x2F;var&#x2F;www&#x2F;wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>下载更新</p>
<pre class="line-numbers language-none"><code class="language-none"># 下载离线文件
cd &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;

# 下载Ubuntu 20.04的漏洞种子
wget -N https:&#x2F;&#x2F;people.canonical.com&#x2F;~ubuntu-security&#x2F;oval&#x2F;com.ubuntu.focal.cve.oval.xml.bz2

# 下载RHEL 7 8的漏洞种子文件
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL6&#x2F;rhel-6-including-unpatched.oval.xml.bz2
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL7&#x2F;rhel-7-including-unpatched.oval.xml.bz2
wget https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL8&#x2F;rhel-8-including-unpatched.oval.xml.bz2

# 下载微软CVE文件
wget https:&#x2F;&#x2F;feed.wazuh.com&#x2F;vulnerability-detector&#x2F;windows&#x2F;msu-updates.json.gz

# 下载Redhat的安全数据Json文件
wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;master&#x2F;tools&#x2F;vulnerability-detector&#x2F;rh-generator.sh
chmod +x .&#x2F;*.sh
mkdir redhat
.&#x2F;rh-generator.sh redhat&#x2F;

# 下载NVD的安全数据库(CVE)
wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;master&#x2F;tools&#x2F;vulnerability-detector&#x2F;nvd-generator.sh
chmod +x .&#x2F;*.sh
mkdir nvd
 .&#x2F;nvd-generator.sh 2010 nvd&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>页面发布</p>
<pre class="line-numbers language-none"><code class="language-none"># 配置nginx文件 
vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf
# 在server&#123;&#125;中修改增补如下配置
        root         &#x2F;var&#x2F;www&#x2F;wazuh;
    
        location &#x2F; &#123;
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3></li>
<li><p>在/opt/wazuh/目录下建立wazuhupdate.sh文件</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;bash

cd &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;
rm -rf *.bz2
rm *.gz

# 下载Ubuntu 20.04的漏洞种子
wget -N https:&#x2F;&#x2F;people.canonical.com&#x2F;~ubuntu-security&#x2F;oval&#x2F;com.ubuntu.focal.cve.oval.xml.bz2

# 下载RHEL 6&#x2F;7&#x2F;8的漏洞种子
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL6&#x2F;rhel-6-including-unpatched.oval.xml.bz2
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL7&#x2F;rhel-7-including-unpatched.oval.xml.bz2
wget -N https:&#x2F;&#x2F;www.redhat.com&#x2F;security&#x2F;data&#x2F;oval&#x2F;v2&#x2F;RHEL8&#x2F;rhel-8-including-unpatched.oval.xml.bz2

# 下载微软漏洞文件
wget -N https:&#x2F;&#x2F;feed.wazuh.com&#x2F;vulnerability-detector&#x2F;windows&#x2F;msu-updates.json.gz

#下载Redhat的安全数据Json文件
&#x2F;bin&#x2F;bash &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;rh-generator.sh &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;redhat

# 下载NVD的安全数据库(CVE)
&#x2F;bin&#x2F;bash &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;nvd-generator.sh 2010 &#x2F;var&#x2F;www&#x2F;wazuh&#x2F;nvd

# 更新文件权限
chown -R nginx:nginx &#x2F;var&#x2F;www&#x2F;wazuh

# 重启服务,更新数据库
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立定时文件</p>
<pre class="line-numbers language-none"><code class="language-none">#检查crond.service运行状态
systemctl status crond.service 
crontab -e
# 每周一、四下午6点半执行脚本进行升级
30 18 * * 1,4 &#x2F;bin&#x2F;bash &#x2F;opt&#x2F;wazuh&#x2F;wazuhupdate.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="批量下发"><a href="#批量下发" class="headerlink" title="批量下发"></a>批量下发</h3></li>
<li><p>安装配置Ansbile</p>
<pre class="line-numbers language-none"><code class="language-none">yum install -y centos-release-ansible-29.noarch 
yum install -y ansible

# 因主机默认设置不允许root使用ssh登录，需要切换到普通用户目录
cd ~
mkdir ansible
cd ansible
touch .inventory
cat &gt; .inventory &lt;&lt;EOF
[master]
192.168.79.60
[worker]
192.168.79.61
192.168.79.62
EOF

ssh-keygen
ssh-copy-id sujx@192.168.79.60
ssh-copy-id sujx@192.168.79.61
ssh-copy-id sujx@192.168.79.62

ansible all -m ping
[sujx@WazuhNode0 ansible]$ ansible worker -m ping
192.168.79.62 | SUCCESS &#x3D;&gt; &#123;
    &quot;ansible_facts&quot;: &#123;
        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;libexec&#x2F;platform-python&quot;
    &#125;,
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
&#125;
192.168.79.61 | SUCCESS &#x3D;&gt; &#123;
    &quot;ansible_facts&quot;: &#123;
        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;libexec&#x2F;platform-python&quot;
    &#125;,
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立批量更新脚本</p>
<pre class="line-numbers language-none"><code class="language-none"># 在每台Worker主机上建立相应脚本
mkdir &#x2F;opt&#x2F;wazuh
touch &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh
cat &gt; &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh &lt;&lt;EOF
#!&#x2F;bin&#x2F;bash

cd ~

# 配置文件
wget http:&#x2F;&#x2F;192.168.79.60&#x2F;conf&#x2F;ossec.conf
# 自定义规则文件
# wget http:&#x2F;&#x2F;192.168.79.60&#x2F;conf&#x2F;0015-ossec_rules.xml

# 替换主机名
workername&#x3D;$(hostname -s)
sed -i &quot;s&#x2F;vlnx000000&#x2F;$workername&#x2F;g&quot; ~&#x2F;ossec.conf

# 替换配置文件
rm -Rf &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf
mv ~&#x2F;ossec.conf &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;
chown root:ossec &#x2F;var&#x2F;ossec&#x2F;etc&#x2F;ossec.conf

# 更新自定义文件
# rm -Rf &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;0015-ossec_rules.xml
# mv ~&#x2F;0015-ossec_rules.xml &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;
# chown root:ossec &#x2F;var&#x2F;ossec&#x2F;ruleset&#x2F;rules&#x2F;0015-ossec_rules.xml


# Reset The Service
systemctl restart wazuh-manager.service
EOF

chmod +x &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>建立worker配置文件</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;vulnerability-detector&gt;
  &lt;enabled&gt;no&lt;&#x2F;enabled&gt;
  &lt;interval&gt;5m&lt;&#x2F;interval&gt;
  &lt;ignore_time&gt;6h&lt;&#x2F;ignore_time&gt;
  &lt;run_on_start&gt;yes&lt;&#x2F;run_on_start&gt;
   
  &lt;!-- Ubuntu OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;canonical&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;com.ubuntu.focal.cve.oval.xml.bz2&quot;&gt;focal&lt;&#x2F;os&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Debian OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;debian&quot;&gt;
    &lt;enabled&gt;no&lt;&#x2F;enabled&gt;
    &lt;os&gt;stretch&lt;&#x2F;os&gt;
    &lt;os&gt;buster&lt;&#x2F;os&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- RedHat OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;redhat&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-6-including-unpatched.oval.xml.bz2&quot;&gt;6&lt;&#x2F;os&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-7-including-unpatched.oval.xml.bz2&quot;&gt;7&lt;&#x2F;os&gt;
    &lt;os url&#x3D;&quot;http:&#x2F;&#x2F;192.168.79.60&#x2F;rhel-8-including-unpatched.oval.xml.bz2&quot;&gt;8&lt;&#x2F;os&gt;
    &lt;url start&#x3D;&quot;1&quot; end&#x3D;&quot;25&quot;&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;redhat&#x2F;redhat-feed[-].json&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Windows OS vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;msu&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;url&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;msu-updates.json.gz&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
   
  &lt;!-- Aggregate vulnerabilities --&gt;
  &lt;provider name&#x3D;&quot;nvd&quot;&gt;
    &lt;enabled&gt;yes&lt;&#x2F;enabled&gt;
    &lt;url start&#x3D;&quot;2010&quot; end&#x3D;&quot;2021&quot;&gt;http:&#x2F;&#x2F;192.168.79.60&#x2F;nvd&#x2F;nvd-feed[-].json.gz&lt;&#x2F;url&gt;
    &lt;update_interval&gt;1d&lt;&#x2F;update_interval&gt;
  &lt;&#x2F;provider&gt;
&lt;&#x2F;vulnerability-detector&gt;
   
&lt;cluster&gt;
  &lt;name&gt;wazuh&lt;&#x2F;name&gt;
  &lt;node_name&gt;vln000000&lt;&#x2F;node_name&gt;
  &lt;node_type&gt;worker&lt;&#x2F;node_type&gt;
  &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
  &lt;port&gt;1516&lt;&#x2F;port&gt;
  &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
  &lt;nodes&gt;
      &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
  &lt;&#x2F;nodes&gt;
  &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
  &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
&lt;&#x2F;cluster&gt;
……
略  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>使用Ansible触发更新</p>
<pre class="line-numbers language-none"><code class="language-none"># 每个Worker上创建目录
ansible worker -a &#39;mkdir &#x2F;opt&#x2F;wazuh&#39;
# 复制脚本到worker上
ansible worker -m copy -a &quot;src&#x3D;&#x2F;opt&#x2F;wazuh&#x2F;cluster.sh dest&#x3D;&#x2F;opt&#x2F;wazuh owner&#x3D;root group&#x3D;root mode&#x3D;0744&quot;
# 每个worker执行脚本
ansible worker -a &#39;&#x2F;bin&#x2F;sh &#x2F;opt&#x2F;wazuh&#x2F;cluster.sh&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Wazuh</tag>
        <tag>Ansible</tag>
        <tag>CVE</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Wazuh检测PostgreSQL漏洞</title>
    <url>/2021/07/09/wazuh-vulner-detec-postgresql/</url>
    <content><![CDATA[<p>本文的源于领导的一句问句，Wazuh能监控PG数据库的漏洞么？然后结合实际环境搭建了一套环境进行了测试。<br>结论是：能，然而并不能。</p>
<!--以下使用centos8.4系统进行测试-->

<h3 id="使用操作系统官方软件库"><a href="#使用操作系统官方软件库" class="headerlink" title="使用操作系统官方软件库"></a>使用操作系统官方软件库</h3><ol>
<li><p>安装数据库</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum makecache
<span class="token comment"># 系统自带版本为10</span>
yum <span class="token function">install</span> -y postgresql postgresql-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>启动数据库</p>
<pre class="line-numbers language-none"><code class="language-none"># 启动服务
postgresql-setup initdb
systemctl enable postgresql.service --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>执行漏洞检测</p>
<p><img src="https://cdn.sujx.net/wazuh_monitor_postgresql.png" alt="postgresql"></p>
</li>
</ol>
<h3 id="使用数据库官方软件库"><a href="#使用数据库官方软件库" class="headerlink" title="使用数据库官方软件库"></a>使用数据库官方软件库</h3><ol>
<li>安装数据库<pre class="line-numbers language-none"><code class="language-none"># 安装PG官方源
yum install -y https:&#x2F;&#x2F;download.postgresql.org&#x2F;pub&#x2F;repos&#x2F;yum&#x2F;reporpms&#x2F;EL-8-x86_64&#x2F;pgdg-redhat-repo-latest.noarch.rpm
# 更新源，时间较长，需要确认添加那个版本PG，我们以12版本为例
yum makecache
# 安装数据库
yum install -y postgresql12 postgresql12-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>启动数据库<pre class="line-numbers language-none"><code class="language-none"># 创建目录
mkdir -p &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;12&#x2F;data&#x2F;
chown postgres:postgres &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;12&#x2F; -R

# 启动服务
postgresql-12-setup initdb
systemctl enable postgresql-12.service --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>执行漏洞检测</li>
</ol>
<ul>
<li>none</li>
<li>none</li>
<li>none</li>
</ul>
<h3 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h3><p>Wazuh使用软件包名或者KB名来进行对比，对于RPM系发行版就是访问rpminfo数据库来进行对比。<br>以postgresql为例</p>
<ol>
<li><p>Redhat官方漏洞库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># redhat官方的漏洞库中是有postgresql12的漏洞的</span>
 <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"Module postgresql:12 is enabled"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229037"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229001"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plperl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229002"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229007"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229008"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229009"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-plpython3 is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229010"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229011"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229012"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229013"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-static is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229014"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229015"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229016"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229017"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-docs is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229018"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229019"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-contrib is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229020"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229023"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-pltcl is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229024"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229025"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-test-rpm-macros is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229026"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229029"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-debugsource is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229030"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229031"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-server is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229032"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is installed"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229033"</span>/<span class="token operator">></span>
         <span class="token operator">&lt;</span>criterion <span class="token assign-left variable">comment</span><span class="token operator">=</span><span class="token string">"postgresql-upgrade-devel is signed with Red Hat redhatrelease2 key"</span> <span class="token assign-left variable">test_ref</span><span class="token operator">=</span><span class="token string">"oval:com.redhat.cve:tst:202120229034"</span>/<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://cdn.sujx.net/postgresql-vuln.png" alt="vuln"></p>
</li>
<li><p>PG官方包的名称</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>sujx@postgresql ~<span class="token punctuation">]</span>$ <span class="token function">rpm</span> -qa <span class="token operator">|</span><span class="token function">grep</span> postgresql
postgresql12-12.7-2PGDG.rhel8.x86_64
postgresql12-libs-12.7-2PGDG.rhel8.x86_64
postgresql12-server-12.7-2PGDG.rhel8.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>postgresql12 ≠ postgresql,所以wazuh使用redhat的OVAL文件可以搜出redhat打包的postgresql的漏洞，其他就不可以。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>wazuh</tag>
        <tag>postgresql</tag>
        <tag>vulnerability</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Wazuh实现漏洞扫描</title>
    <url>/2021/07/07/wazuh-vulnerabilities/</url>
    <content><![CDATA[<p>Wazuh是个复杂的积木式系统，由ossec、ElasticStack和wazuh插件以及第三方的漏扫、病毒查杀、文件监控等等安全工具组合而成。本文将简述Wazuh的漏洞扫描模块的使用。</p>
<h3 id="应用原理"><a href="#应用原理" class="headerlink" title="应用原理"></a>应用原理</h3><ol>
<li>Wazuh不是一个漏洞扫描工具，它只是借助本身的功能模块来实现对操作系统的漏洞监控；</li>
<li>Wazuh的漏扫依赖于Agent的对系统软件版本的扫描，上传至Master节点之后，通过在线或者离线加载的各个操作系统官方发布的CVE数据库以及美国政府发布的NVD数据库来进行对比，从而实现漏洞的检查和告警；</li>
<li>Wazuh不使用爬虫、端口扫描等传统漏扫技术路径，所以对客户端主机的性能影响极小；</li>
<li>Wazuh官方支持对数据库、中间件等软件进行漏洞扫描，但只支持操作系统发行官方库中的包，因为它是简单的按照软件包名来进行对比的；</li>
<li>Wazuh可以对接Clamav、Suricata等其他安全系统。</li>
</ol>
<hr>
<h3 id="漏洞扫描模块"><a href="#漏洞扫描模块" class="headerlink" title="漏洞扫描模块"></a>漏洞扫描模块</h3><ol start="0">
<li>配置离线文件<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在wazuh-master上安装Nginx</span>
yum <span class="token function">install</span> -y nginx
<span class="token function">mkdir</span> -p /var/www/wazuh/os
<span class="token function">chown</span> -R nginx:nginx /var/www/wazuh

<span class="token comment"># 下载离线文件</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/
<span class="token comment"># 下载RHEL 7 8的漏洞种子文件</span>
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment"># 下载Redhat的安全数据Json文件</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/rh-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> redhat
./rh-generator.sh redhat/

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
<span class="token function">wget</span> https://raw.githubusercontent.com/wazuh/wazuh/master/tools/vulnerability-detector/nvd-generator.sh
<span class="token function">chmod</span> +x ./*.sh
<span class="token function">mkdir</span> nvd
 ./nvd-generator.sh <span class="token number">2010</span> nvd/

<span class="token comment"># 配置nginx文件 </span>
<span class="token function">vim</span> /etc/nginx/nginx.conf
<span class="token comment"># 在server&#123;&#125;中修改增补如下配置</span>
        root         /var/www/wazuh<span class="token punctuation">;</span>
    
        location / <span class="token punctuation">&#123;</span>
                autoindex on<span class="token punctuation">;</span>
                autoindex_exact_size off<span class="token punctuation">;</span>
                autoindex_localtime on<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置漏洞扫描模块<br>vim /var/ossec/etc/ossec.conf<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&lt;</span>vulnerability-detector<span class="token operator">></span>
    <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
    <span class="token operator">&lt;</span>interval<span class="token operator">></span>5m<span class="token operator">&lt;</span>/interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>ignore_time<span class="token operator">></span>6h<span class="token operator">&lt;</span>/ignore_time<span class="token operator">></span>
    <span class="token operator">&lt;</span>run_on_start<span class="token operator">></span>yes<span class="token operator">&lt;</span>/run_on_start<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- RedHat OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"redhat"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.248.150/rhel-7-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>os <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">"http://192.168.248.150/rhel-8-including-unpatched.oval.xml.bz2"</span><span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/os<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"1"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"25"</span><span class="token operator">></span>http://192.168.248.150/redhat/redhat-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Windows OS vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"msu"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url<span class="token operator">></span>http://192.168.248.150/msu-updates.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">!</span>-- Aggregate vulnerabilities --<span class="token operator">></span>
    <span class="token operator">&lt;</span>provider <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"nvd"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>enabled<span class="token operator">></span>yes<span class="token operator">&lt;</span>/enabled<span class="token operator">></span>
      <span class="token operator">&lt;</span>url <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token string">"2010"</span> <span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token string">"2021"</span><span class="token operator">></span>http://192.168.248.150/nvd/nvd-feed<span class="token punctuation">[</span>-<span class="token punctuation">]</span>.json.gz<span class="token operator">&lt;</span>/url<span class="token operator">></span>
      <span class="token operator">&lt;</span>update_interval<span class="token operator">></span>1h<span class="token operator">&lt;</span>/update_interval<span class="token operator">></span>
    <span class="token operator">&lt;</span>/provider<span class="token operator">></span>

  <span class="token operator">&lt;</span>/vulnerability-detector<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>配置定期更新漏洞文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">cd</span> /var/www/wazuh/

<span class="token comment"># 下载Ubuntu 20.04的漏洞种子</span>
<span class="token function">wget</span> -N https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.focal.cve.oval.xml.bz2

<span class="token comment"># 下载RHEL 6/7/8的漏洞种子</span>
<span class="token function">wget</span> -N https://www.redhat.com/security/data/oval/v2/RHEL6/rhel-6-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> -N https://www.redhat.com/security/data/oval/v2/RHEL7/rhel-7-including-unpatched.oval.xml.bz2
<span class="token function">wget</span> -N https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2

<span class="token comment"># 下载微软漏洞文件</span>
<span class="token function">wget</span> -N https://feed.wazuh.com/vulnerability-detector/windows/msu-updates.json.gz

<span class="token comment">#下载Redhat的安全数据Json文件</span>
/bin/bash /var/www/wazuh/rh-generator.sh /var/www/wazuh/redhat

<span class="token comment"># 下载NVD的安全数据库(CVE)</span>
/bin/bash /var/www/wazuh/nvd-generator.sh <span class="token number">2010</span> /var/www/wazuh/nvd

<span class="token comment"># 更新文件权限</span>
<span class="token function">chown</span> -R nginx:nginx /var/www/wazuh

<span class="token comment"># 重启服务,更新数据库</span>
systemctl restart wazuh-manager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>查询漏扫情况</li>
</ol>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vul.PNG" alt="vul"></p>
<ol start="3">
<li><p>邮件告警</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 开启全局邮件通知</span>
<span class="token comment"># Wazuh本身没有邮件功能，它依赖系统的邮件投递</span>
  <span class="token operator">&lt;</span>global<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_notification<span class="token operator">></span>yes<span class="token operator">&lt;</span>/email_notification<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
      <span class="token operator">&lt;</span>smtp_server<span class="token operator">></span>exmail.qq.com<span class="token operator">&lt;</span>/smtp_server<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_from<span class="token operator">></span>i@sujx.net<span class="token operator">&lt;</span>/email_from<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_maxperhour<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_maxperhour<span class="token operator">></span>
  <span class="token operator">&lt;</span>/global<span class="token operator">></span>

<span class="token comment"># 定义邮件告警级别，设定事件级别>=12级即发送邮件告警</span>
  <span class="token operator">&lt;</span>alerts<span class="token operator">></span>
    <span class="token operator">&lt;</span>log_alert_level<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/log_alert_level<span class="token operator">></span>
    <span class="token operator">&lt;</span>email_alert_level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/email_alert_level<span class="token operator">></span>
  <span class="token operator">&lt;</span>/alerts<span class="token operator">></span>
  
<span class="token comment"># 定义每日高危漏洞通知(>=13级漏洞)</span>
  <span class="token operator">&lt;</span>reports<span class="token operator">></span>
      <span class="token operator">&lt;</span>level<span class="token operator">></span><span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/level<span class="token operator">></span>
      <span class="token operator">&lt;</span>title<span class="token operator">></span>Daily report: Alerts with level higher than <span class="token number">1</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/title<span class="token operator">></span>
      <span class="token operator">&lt;</span>email_to<span class="token operator">></span>sujx@live.cn<span class="token operator">&lt;</span>/email_to<span class="token operator">></span>
  <span class="token operator">&lt;</span>/reports<span class="token operator">></span>
  
<span class="token comment"># 强制发送告警邮件，即不管上述如何设定一定要发邮件告警，是配置在rule上，而不是全局conf中</span>
  <span class="token operator">&lt;</span>rule <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"502"</span> <span class="token assign-left variable">level</span><span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>if_sid<span class="token operator">></span><span class="token number">50</span><span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/if_sid<span class="token operator">></span>
    <span class="token operator">&lt;</span>options<span class="token operator">></span>alert_by_email<span class="token operator">&lt;</span>/options<span class="token operator">></span>
    <span class="token operator">&lt;</span>match<span class="token operator">></span>Ossec started<span class="token operator">&lt;</span>/match<span class="token operator">></span>
    <span class="token operator">&lt;</span>description<span class="token operator">></span>Ossec server started.<span class="token operator">&lt;</span>/description<span class="token operator">></span>
  <span class="token operator">&lt;</span>/rule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>邮件投递</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y mailx
<span class="token comment"># 使用mailx发送内部邮件</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/mail.rc<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# 设定内部匿名邮件服务器
set smtp=smtp.example.com
EOF</span>
<span class="token comment"># 使用公共邮箱发送邮件</span>
yum <span class="token function">install</span> -y postfix mailx cyrus-sasl cyrus-sasl-plain
<span class="token comment"># 建立邮件中继</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/postfix/main.cf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
relayhost = [smtp.exmail.qq.com]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous
smtp_tls_CAfile = /etc/ssl/certs/ca-bundle.crt
smtp_use_tls = yes
EOF</span>
<span class="token comment"># 设定使用i@sujx.net发送邮件给指定接收方</span>
<span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>smtp.exmail.qq.com<span class="token punctuation">]</span>:587 i@sujx.net:PASSWORD <span class="token operator">></span> /etc/postfix/sasl_passwd
postmap /etc/postfix/sasl_passwd
<span class="token function">chmod</span> <span class="token number">400</span> /etc/postfix/sasl_passwd

<span class="token function">chown</span> root:root /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db
<span class="token function">chmod</span> 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db

<span class="token comment"># 重置服务</span>
systemctl reload postfix

<span class="token comment"># 邮件测试</span>
<span class="token builtin class-name">echo</span> <span class="token string">"Test mail from postfix"</span> <span class="token operator">|</span> mail -s <span class="token string">"Test Postfix"</span> -r <span class="token string">"i@sujx.net"</span> sujx@live.cn

<span class="token comment"># 邮件告警</span>

Wazuh Notification.
<span class="token number">2021</span> Jul 03 <span class="token number">23</span>:21:09

Received From: <span class="token punctuation">(</span>server002.sujx.net<span class="token punctuation">)</span> any-<span class="token operator">></span>syscheck
Rule: <span class="token number">550</span> fired <span class="token punctuation">(</span>level <span class="token number">7</span><span class="token punctuation">)</span> -<span class="token operator">></span> <span class="token string">"Integrity checksum changed."</span>
Portion of the log<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:

File <span class="token string">'/etc/sysconfig/iptables.save'</span> modified
Mode: scheduled
Changed attributes: mtime,md5,sha1,sha256
…………
--END OF NOTIFICATION

<span class="token comment"># 邮件报告</span>

Report <span class="token string">'Daily report: Alerts with level higher than 13.'</span> completed.
------------------------------------------------
-<span class="token operator">></span>Processed alerts: <span class="token number">481384</span>
-<span class="token operator">></span>Post-filtering alerts: <span class="token number">1953</span>
-<span class="token operator">></span>First alert: <span class="token number">2021</span> Jun <span class="token number">29</span> 00:06:08
-<span class="token operator">></span>Last alert: <span class="token number">2021</span> Jun <span class="token number">29</span> <span class="token number">23</span>:59:17
Top entries <span class="token keyword">for</span> <span class="token string">'Level'</span><span class="token builtin class-name">:</span>
------------------------------------------------
Severity <span class="token number">13</span>                                                                   <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Group'</span><span class="token builtin class-name">:</span>
------------------------------------------------
gdpr_IV_35.7.d                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.1                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
pci_dss_11.2.3                                                                <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.1                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
tsc_CC7.2                                                                     <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
vulnerability-detector                                                        <span class="token operator">|</span><span class="token number">1953</span>    <span class="token operator">|</span>
Top entries <span class="token keyword">for</span> <span class="token string">'Location'</span><span class="token builtin class-name">:</span>
……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>使用Kibana产生PDF版本的漏洞报告</p>
<p><img src="https://cdn.sujx.net/wazuh-kibana-vulrep.PNG" alt="report"></p>
</li>
</ol>
<hr>
<h3 id="生产建议"><a href="#生产建议" class="headerlink" title="生产建议"></a>生产建议</h3><ol>
<li>由于Wazuh的漏扫模块很容易将CPU资源打满，建议使用wazuh的群集模式部署相应数量的worker来承担漏扫功能。</li>
<li>Wazuh的worker建议使用4核4G的配置进行部署，其内存占用2G左右，但CPU占用较高，且多核性能不理想。官方回复是以后版本会改进。</li>
<li>如果要求每天(24hour)产生一次全网漏扫报告的话，建议使用200:1的比例部署worker。</li>
</ol>
]]></content>
      <tags>
        <tag>Wazuh</tag>
        <tag>EDR</tag>
        <tag>Security</tag>
        <tag>Vulnerability</tag>
      </tags>
  </entry>
  <entry>
    <title>终端安全系统WAZUH的介绍</title>
    <url>/2021/07/05/wazuh_basic_info/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>[Wazuh](<a href="https://wazuh.com/">Wazuh · The Open Source Security Platform</a>)是一整套基于ossec安全检测工具和EFK日志工具构成的终端安全管理工具。不管是将其分类至HIDS，还是EDR，它都是一套通过监控主机日志行为，提供安全检测、分析和完整报告的开源、免费利器。Wazuh基于C/S架构，它的Agent支持Windows、MacOS、Linux、HP-UX、AIX等主流操作系统。其服务端负责提供认证和数据收集，然后通过filebeat进行日志清洗，最后导入ElasticSearch，通过Kinbana进行展示和输出日志。它不仅可以收集主机的事件日志进行一般的入侵检测功能，还可以通过第三方提供的系统漏洞检测feed文件，来实现主机的漏洞扫描和合规检查。</p>
<h3 id="功能示例"><a href="#功能示例" class="headerlink" title="功能示例"></a>功能示例</h3><p><img src="https://cdn.sujx.net/data_flow1.png" alt="data_flow"></p>
<hr>
<h3 id="组件模块"><a href="#组件模块" class="headerlink" title="组件模块"></a>组件模块</h3><p>Wazuh的组件分为三部分：</p>
<ol>
<li><p>客户端的功能</p>
<p><img src="https://cdn.sujx.net/architecture_agent1.png" alt="agent"></p>
<ol>
<li>收集日志和事件日志；</li>
<li>文件和注册表的监控；</li>
<li>运行进程和安装软件的信息收集；</li>
<li>监控系统端口和网络配置；</li>
<li>检测恶意软件；</li>
<li>配置管理和策略监控</li>
<li>检测主机响应</li>
</ol>
</li>
<li><p>服务端</p>
<p><img src="https://cdn.sujx.net/architecture_server1.png" alt="server"></p>
<ol>
<li>客户端的服务器注册；</li>
<li>实现客户端的连接服务；</li>
<li>根据各项规则实现事件日志的分析引擎；</li>
<li>提供RESTful API；</li>
<li>实现服务端的群集化；</li>
<li>使用Filebeat将日志文件吐给ES存储</li>
</ol>
</li>
<li><p>Elastic Stack</p>
<p><img src="https://cdn.sujx.net/wazuh-show.PNG" alt="show"></p>
</li>
</ol>
<hr>
<h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><ol>
<li><p>端口要求</p>
<table>
<thead>
<tr>
<th>Component</th>
<th>Software</th>
<th>Port</th>
<th>Protocol</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Wazuh server</td>
<td>Wazuh manager</td>
<td>1514</td>
<td>TCP (default)</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1514</td>
<td>UDP</td>
<td>Agents connection service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1515</td>
<td>TCP</td>
<td>Agents registration service</td>
</tr>
<tr>
<td></td>
<td></td>
<td>1516</td>
<td>TCP</td>
<td>Wazuh cluster daemon</td>
</tr>
<tr>
<td></td>
<td>Wazuh API</td>
<td>55000</td>
<td>TCP</td>
<td>Wazuh RESTful API</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>Elasticsearch</td>
<td>9200</td>
<td>TCP</td>
<td>Elasticsearch RESTful API</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9300-9400</td>
<td>TCP</td>
<td>Elasticsearch cluster communication</td>
</tr>
<tr>
<td></td>
<td>Kibana</td>
<td>5601</td>
<td>TCP</td>
<td>Kibana web interface</td>
</tr>
</tbody></table>
</li>
<li><p>系统要求</p>
<ol>
<li>服务端只能部署到Linux主机上</li>
<li>建议使用RHEL/CentOS 6.x、Ubuntu 12、Debian 7 版本以上</li>
</ol>
</li>
<li><p>硬件要求</p>
<table>
<thead>
<tr>
<th></th>
<th>最小配置</th>
<th></th>
<th>建议配置</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>组件</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
<td>RAM (GB)</td>
<td>CPU (cores)</td>
</tr>
<tr>
<td>Wazuh server</td>
<td>2</td>
<td>2</td>
<td>8</td>
<td>4</td>
</tr>
<tr>
<td>Elastic Stack</td>
<td>4</td>
<td>2</td>
<td>16</td>
<td>8</td>
</tr>
</tbody></table>
</li>
<li><p>存储配置</p>
<ol>
<li>需要单独配置wazuh server的日志存储分区；</li>
<li>需要按当前月度日志量x6的最低要求配置，实际运行建议至少每台Wazuh Server配置100G日志存储；</li>
<li>Elastic存储需要汇总多台Wazuh Server日志，至少需要保留半年日志量，建议配置1T存储。</li>
</ol>
</li>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/deployment1.png" alt="topo"></p>
</li>
</ol>
<hr>
<p>未完待续……</p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>System</tag>
        <tag>wazuh</tag>
        <tag>EDR</tag>
        <tag>Security</tag>
        <tag>HIDS</tag>
      </tags>
  </entry>
  <entry>
    <title>Wazuh的基本部署</title>
    <url>/2021/07/06/wazuh_deploy_first/</url>
    <content><![CDATA[<p>本次将部署一套分布式Wazuh方案，实现其基本功能。其中：</p>
<ol>
<li>wazuh-master启用全功能组件；</li>
<li>ElasticStack将使用官方基本授权，不启用X-pack和加密连接；</li>
<li>Linux版本Agent将安装到Kibana主机和ElasticSearch主机上，不再额外安装示例主机；</li>
<li>各个功能组件采用单节点部署；</li>
<li>Wazuh使用4.1.5版本，搭配官方指定7.11.2ElasticStack版本。</li>
</ol>
<hr>
<h3 id="部署方案"><a href="#部署方案" class="headerlink" title="部署方案"></a>部署方案</h3><ol>
<li><p>部署拓扑</p>
<p><img src="https://cdn.sujx.net/wazuh-deploy-single.png" alt="topo"></p>
</li>
<li><p>网络地址</p>
<table>
<thead>
<tr>
<th align="center">系统角色</th>
<th align="center">版本</th>
<th align="center">网络地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ElasticSearch</td>
<td align="center">7.11.2</td>
<td align="center">192.168.248.146</td>
</tr>
<tr>
<td align="center">Kibana</td>
<td align="center">7.11.2</td>
<td align="center">192.168.248.145</td>
</tr>
<tr>
<td align="center">WazuhMaster</td>
<td align="center">4.1.5</td>
<td align="center">192.168.248.150</td>
</tr>
<tr>
<td align="center">WazuhAgent</td>
<td align="center">4.1.5</td>
<td align="center">192.168.248.1</td>
</tr>
</tbody></table>
</li>
</ol>
<hr>
<h3 id="部署实施"><a href="#部署实施" class="headerlink" title="部署实施"></a>部署实施</h3><ol>
<li><p>ElasticSearch的安装</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> -y <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>
<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade -y
yum <span class="token function">install</span> -y elasticsearch-7.11.2

<span class="token comment"># 导入配置文件</span>
<span class="token function">mv</span> /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml-bak
<span class="token function">touch</span> /etc/elasticsearch/elasticsearch.yml
<span class="token function">cat</span> <span class="token operator">></span> /etc/elasticsearch/elasticsearch.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
cluster.name: elastic
node.name: elasticnode1
network.host: 192.168.248.146
cluster.initial_master_nodes: ["elasticnode1"]

path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch
EOF</span>

<span class="token comment"># 开通防火墙</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span>elasticsearch 
firewall-cmd --reload

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> elasticsearch
systemctl start elasticsearch

<span class="token comment"># 校验服务</span>
<span class="token comment"># 使用其他主机访问es环境</span>
<span class="token function">curl</span> -XGET http://192.168.248.146:9200
<span class="token punctuation">&#123;</span>
  <span class="token string">"name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elasticnode1"</span>,
  <span class="token string">"cluster_name"</span> <span class="token builtin class-name">:</span> <span class="token string">"elastic"</span>,
  <span class="token string">"cluster_uuid"</span> <span class="token builtin class-name">:</span> <span class="token string">"ahjxhVEHREKNmBAfjcuyNw"</span>,
  <span class="token string">"version"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"number"</span> <span class="token builtin class-name">:</span> <span class="token string">"7.11.2"</span>,
    <span class="token string">"build_flavor"</span> <span class="token builtin class-name">:</span> <span class="token string">"default"</span>,
    <span class="token string">"build_type"</span> <span class="token builtin class-name">:</span> <span class="token string">"rpm"</span>,
    <span class="token string">"build_hash"</span> <span class="token builtin class-name">:</span> <span class="token string">"3e5a16cfec50876d20ea77b075070932c6464c7d"</span>,
    <span class="token string">"build_date"</span> <span class="token builtin class-name">:</span> <span class="token string">"2021-03-06T05:54:38.141101Z"</span>,
    <span class="token string">"build_snapshot"</span> <span class="token builtin class-name">:</span> false,
    <span class="token string">"lucene_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"8.7.0"</span>,
    <span class="token string">"minimum_wire_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.8.0"</span>,
    <span class="token string">"minimum_index_compatibility_version"</span> <span class="token builtin class-name">:</span> <span class="token string">"6.0.0-beta1"</span>
  <span class="token punctuation">&#125;</span>,
  <span class="token string">"tagline"</span> <span class="token builtin class-name">:</span> <span class="token string">"You Know, for Search"</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> -i <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>Kibana的安装</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> -y <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入源秘钥</span>
<span class="token function">rpm</span> --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token comment"># 增加官方源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade -y
yum <span class="token function">install</span> -y kibana-7.11.2

<span class="token comment"># 修改配置文件</span>
<span class="token function">cp</span> /etc/kibana/kibana.yml /etc/kibana/kibana.yml-bak
<span class="token function">cat</span> <span class="token operator">>></span> /etc/kibana/kibana.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
server.port: 5601
server.host: "localhost"
server.name: "kibana"
i18n.locale: "zh-CN"
elasticsearch.hosts: ["http://192.168.248.146:9200"]
kibana.index: ".kibana"
kibana.defaultAppId: "home"
server.defaultRoute : "/app/wazuh"
EOF</span>

<span class="token comment"># 创建数据目录</span>
<span class="token function">mkdir</span> /usr/share/kibana/data
<span class="token function">chown</span> -R kibana:kibana /usr/share/kibana

<span class="token comment"># 离线安装插件</span>
<span class="token function">wget</span> https://packages.wazuh.com/4.x/ui/kibana/wazuh_kibana-4.1.5_7.11.2-1.zip
<span class="token function">cp</span> ./wazuh_kibana-4.1.5_7.11.2-1.zip /tmp
<span class="token builtin class-name">cd</span> /usr/share/kibana
<span class="token function">sudo</span> -u kibana /usr/share/kibana/bin/kibana-plugin <span class="token function">install</span> file:///tmp/wazuh_kibana-4.1.5_7.11.2-1.zip

<span class="token comment"># 配置服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> kibana
systemctl start kibana

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> -i <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo

<span class="token comment"># 配置反向代理</span>
yum <span class="token function">install</span> -y nginx
systemctl <span class="token builtin class-name">enable</span> --now nginx
<span class="token function">vim</span> /etc/ngix/nginx.conf.default
<span class="token comment"># 在server&#123;&#125;中添加配置项</span>
​``<span class="token variable"><span class="token variable">`</span>
        proxy_redirect           off<span class="token punctuation">;</span>
        proxy_set_header         X-Real-IP $remote_addr<span class="token punctuation">;</span>
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for<span class="token punctuation">;</span>
        proxy_set_header         Host $http_host<span class="token punctuation">;</span>

        location / <span class="token punctuation">&#123;</span>
                proxy_pass http://localhost:5601/<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
​<span class="token variable">`</span></span>``
nginx -s reload

<span class="token comment"># 登录kibana之后选择wazuh插件</span>
<span class="token comment"># 返回控制台修改插件配置文件</span>
<span class="token function">sed</span> -i ‘:s/localhost/192.168.248.150/g’ /usr/share/kibana/data/wazuh/config/wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> <img src="https://cdn.sujx.net/wazuh-kibana-install.PNG" alt="wazuh"></p>
</li>
<li><p>WazuhMaster的安装</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装前置软件</span>
yum <span class="token function">install</span> -y <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span>
<span class="token comment"># 导入秘钥</span>
<span class="token function">rpm</span> --import https://packages.wazuh.com/key/GPG-KEY-WAZUH
<span class="token function">rpm</span> --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

<span class="token comment"># 配置官方软件源</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/wazuh.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[wazuh]
gpgcheck=1
gpgkey=https://packages.wazuh.com/key/GPG-KEY-WAZUH
enabled=1
name=EL-<span class="token variable">$releasever</span> - Wazuh
baseurl=https://packages.wazuh.com/4.x/yum/
protect=1
EOF</span>

<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/elastic.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF</span>

<span class="token comment"># 安装软件</span>
yum makecache
yum upgrade -y

yum <span class="token function">install</span> -y wazuh-manager
yum <span class="token function">install</span> filebeat-7.11.2

<span class="token comment"># 配置Filebeat</span>
<span class="token function">mv</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml-bak
<span class="token function">touch</span> /etc/filebeat/filebeat.yml

<span class="token function">cat</span> <span class="token operator">></span> /etc/filebeat/filebeat.yml<span class="token operator">&lt;&lt;</span><span class="token string">EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: '/etc/filebeat/wazuh-template.json'
setup.template.json.name: 'wazuh'
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: ['http://192.168.248.146:9200']
EOF</span>

<span class="token comment"># 导入filebeat的wazuh日志模板</span>
<span class="token function">curl</span> -so /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.1/extensions/elasticsearch/7.x/wazuh-template.json
<span class="token function">chmod</span> go+r /etc/filebeat/wazuh-template.json

<span class="token comment"># 导入filebeat的wazuh日志模型</span>
<span class="token function">curl</span> -s https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.1.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> -xvz -C /usr/share/filebeat/module

<span class="token comment"># 配置防火墙规则</span>
firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp,55000/tcp<span class="token punctuation">&#125;</span>
firewall-cmd --reload

<span class="token comment"># 禁用软件源，避免非控升级组件</span>
<span class="token function">sed</span> -i <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/elastic.repo
<span class="token function">sed</span> -i <span class="token string">"s/^enabled=1/enabled=0/"</span> /etc/yum.repos.d/wazuh.repo

<span class="token comment"># 启动服务</span>
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> --now wazuh-manager
systemctl <span class="token builtin class-name">enable</span> --now filebeat

<span class="token comment"># 验证Filebeat</span>
filebeat <span class="token builtin class-name">test</span> output
···
elasticsearch: http://192.168.248.146:9200<span class="token punctuation">..</span>.
  parse url<span class="token punctuation">..</span>. OK
  connection<span class="token punctuation">..</span>.
    parse host<span class="token punctuation">..</span>. OK
    dns lookup<span class="token punctuation">..</span>. OK
    addresses: <span class="token number">192.168</span>.248.146
    dial up<span class="token punctuation">..</span>. OK
  TLS<span class="token punctuation">..</span>. WARN secure connection disabled
  talk to server<span class="token punctuation">..</span>. OK
  version: <span class="token number">7.11</span>.2
  ···
<span class="token comment"># 刷新kibana</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WazuhAgent的安装(Linux)</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 在es节点和kibana节点上安装</span>
<span class="token function">sudo</span> <span class="token assign-left variable">WAZUH_MANAGER</span><span class="token operator">=</span><span class="token string">'192.168.248.150'</span> <span class="token assign-left variable">WAZUH_AGENT_GROUP</span><span class="token operator">=</span><span class="token string">'default'</span> yum <span class="token function">install</span> -y https://packages.wazuh.com/4.x/yum/wazuh-agent-4.1.5-1.x86_64.rpm

<span class="token comment"># 启动服务</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> wazuh-agent
<span class="token function">sudo</span> systemctl start wazuh-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WazuhAgent的安装(Windows)</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 使用管理员权限打开powershell控制台</span>
<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri https:<span class="token operator">/</span><span class="token operator">/</span>packages<span class="token punctuation">.</span>wazuh<span class="token punctuation">.</span>com<span class="token operator">/</span>4<span class="token punctuation">.</span>x<span class="token operator">/</span>windows<span class="token operator">/</span>wazuh<span class="token operator">-</span>agent<span class="token operator">-</span>4<span class="token punctuation">.</span>1<span class="token punctuation">.</span>5<span class="token operator">-</span>1<span class="token punctuation">.</span>msi <span class="token operator">-</span>OutFile wazuh<span class="token operator">-</span>agent<span class="token punctuation">.</span>msi<span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token operator">/</span>wazuh<span class="token operator">-</span>agent<span class="token punctuation">.</span>msi <span class="token operator">/</span>q WAZUH_MANAGER=<span class="token string">'192.168.248.150'</span> WAZUH_REGISTRATION_SERVER=<span class="token string">'192.168.248.150'</span> WAZUH_AGENT_GROUP=<span class="token string">'default'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="https://cdn.sujx.net/wazuh-kibana-login.PNG"></p>
</li>
</ol>
<hr>
<p>未完待续……</p>
]]></content>
      <tags>
        <tag>system</tag>
        <tag>wazuh</tag>
        <tag>EDR</tag>
        <tag>Security</tag>
        <tag>HIDS</tag>
      </tags>
  </entry>
  <entry>
    <title>wHAT is HDFS?</title>
    <url>/2020/02/23/what-is-hdfs/</url>
    <content><![CDATA[<p>Hadoop实现了一个分布式文件系统（Hadoop Distributed File System），简称HDFS。HDFS有高容错性的特点，并且设计用来部署在低廉的（low-cost）硬件上；而且它提供高吞吐量（high throughput）来访问应用程序的数据，适合那些有着超大数据集（large data set）的应用程序。HDFS放宽了（relax）POSIX的要求，可以以流的形式访问（streaming access）文件系统中的数据。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ol>
<li> HDFS集群分为两大角色：NameNode、DataNode；</li>
<li> NameNode负责管理整个文件系统的元数据,second namenode是namenode的冷备；</li>
<li> DataNode 负责管理用户的文件数据块；</li>
<li> 文件会按照固定的大小（blocksize）(128M)切成若干块后分布式存储在若干台datanode上；</li>
<li> 每一个文件块可以有多个副本，并存放在不同的datanode上；</li>
<li> Datanode会定期向Namenode汇报自身所保存的文件block信息，而namenode则会负责保持文件的副本数量；</li>
<li> HDFS的内部工作机制对客户端保持透明，客户端请求访问HDFS都是通过向namenode申请来进行；</li>
</ol>
<h3 id="写过程"><a href="#写过程" class="headerlink" title="写过程"></a>写过程</h3><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.sujx.net/hdfswrite.png" alt="HDFS_write" title="HDFS_write"></h2><ol>
<li> Client调用DistributedFileSystem对象的create方法，创建一个文件输出流（FSDataOutputStream）对象</li>
<li> 通过DistributedFileSystem对象与Hadoop集群的NameNode进行一次RPC远程调用，在HDFS的Namespace中创建一个文件条目（Entry），该条目没有任何的Block</li>
<li> 通过FSDataOutputStream对象，向DataNode写入数据，数据首先被写入FSDataOutputStream对象内部的Buffer中，然后数据被分割成一个个Packet数据包</li>
<li> 以Packet最小单位，基于Socket连接发送到按特定算法选择的HDFS集群中一组DataNode（正常是3个，可能大于等于1）中的一个节点上，在这组DataNode组成的Pipeline上依次传输Packet</li>
<li> 这组DataNode组成的Pipeline反方向上，发送ack，最终由Pipeline中第一个DataNode节点将Pipeline ack发送给Client</li>
<li> 完成向文件写入数据，Client在文件输出流（FSDataOutputStream）对象上调用close方法，关闭流</li>
<li> 调用DistributedFileSystem对象的complete方法，通知NameNode文件写入成功</li>
</ol>
<h3 id="读过程"><a href="#读过程" class="headerlink" title="读过程"></a>读过程</h3><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://cdn.sujx.net/hdfsread.png" alt="HDFS_read" title="HDFS_read"></h2><ol>
<li> Client向NameNode发起RPC请求,来确定请求文件block所在的位置</li>
<li> NameNode会视情况返回文件的部分或者全部block列表,对于每个block,NameNode都会返回含有该block副本的DataNode地址</li>
<li> 这些返回的DN地址,会按照集群拓扑结构得出DataNode与客户端的距离,然后进行排序,排序两个规则:网络拓扑结构中距离Client的排在前;心跳机制中超时汇报的DN状态为STALE,这样的排在后</li>
<li> Clietn选取排序靠前的DataNode来读取block,如果客户端本身就是DataNode,那么将从本地直接获取数据</li>
<li> 底层本质是建立Socket Stream(FSDataInputStream) ,重复调用父类DataInputStream的read方法,知道这个块上的数据读取完毕</li>
<li> 当读完列表的block后,若文件读取还没有结束,客户端会继续想NameNode获取下一批的block列表</li>
<li> 读取完一个Block都会进行checksum验证,如果读取DataNode时出现错误,客户端会通知NameNode,然后再从下一个拥有该block副本的DataNode继续读取。注: 如果在读取过程中DFSInputStream检测到block错误,DFSInputStream也会检查从datanode读取来的数据的校验和,如果发现有数据损坏,它会把坏掉的block报告给namenode同时重新读取其他datanode上的其他block备份</li>
<li> read方法是并行的读取block信息,不是一块一块的读取,NameNode只是返回Client请求包含块的DataNode地址,并不是返回请求块的数据</li>
<li> 最终读取哎所有的block会合并成一个完整的最终文件</li>
</ol>
<h3 id="副本放置策略"><a href="#副本放置策略" class="headerlink" title="副本放置策略"></a>副本放置策略</h3><ol>
<li> 第一个副本：放置在上传文件的DN；如果是集群外提交，则随机挑选一台磁盘不太满，CPU不太忙的节点</li>
<li> 第二个副本：放置在于第一个副本不同的机架的节点上</li>
<li> 第三个副本：与第二个副本相同机架的节点</li>
<li> 更多副本：随机节点</li>
</ol>
<h3 id="NameNode-内存使用"><a href="#NameNode-内存使用" class="headerlink" title="NameNode 内存使用"></a>NameNode 内存使用</h3><p>NameNode内存数据主要对整个文件系统元数据的管理。Namenode目前元数据管理可以分成两个层次，一个是Namespace的管理层，这一层负责管理HDFS分布式文件系统中的树状目录和文件结构；另一层则为Block管理层，这一层负责管理HDFS分布式文件系统中存储文件到物理块之间的映射关系BlocksMap元数据。其中对Namespace的管理数据除在内存常驻外，会定期Flush到持久化设备中；对BlocksMap元数据的管理只存在内存；当NameNode发生重启，需要从持久化设备中读取Namespace管理数据，并重新构造BlocksMap。 除了对文件系统本身元数据的管理外，NameNode还需要维护DataNode本身的元数据，这部分空间相对固定，且占用空间较小。 从实际Hadoop集群环境历史数据看，当Namespace中包含INode（目录和文件总量）<del>140M，数据块数量</del>160M，常驻内存使用量达在~50G。随着数据规模的持续增长，内存占用接近同步线性增长。在整个HDFS服务中，NameNode的核心作用及内存数据结构的重要地位，所以分析内存使用情况对维护HDFS服务稳定性至关重要。</p>
<h3 id="漫画HDFS"><a href="#漫画HDFS" class="headerlink" title="漫画HDFS"></a>漫画HDFS</h3><p><img src="https://cdn.sujx.net/HDFS_001.png" alt="HDFS_001" title="HDFS_001"> <img src="https://cdn.sujx.net/HDFS_002.png" alt="HDFS_002" title="HDFS_002"> <img src="https://cdn.sujx.net/HDFS_003.png" alt="HDFS_003" title="HDFS_003"></p>
]]></content>
      <categories>
        <category>System</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>bigdata</tag>
        <tag>hdfs</tag>
        <tag>hdoop</tag>
      </tags>
  </entry>
  <entry>
    <title>建立基于Windows活动目录的联合认证服务</title>
    <url>/2021/10/15/windowsad-fs/</url>
    <content><![CDATA[<h1 id="建立基于Windows活动目录的联合认证服务"><a href="#建立基于Windows活动目录的联合认证服务" class="headerlink" title="建立基于Windows活动目录的联合认证服务"></a>建立基于Windows活动目录的联合认证服务</h1><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>Active Directory 联合身份验证服务 (AD FS) 可跨安全和企业边界安全地共享数字标识和权利权限，从而实现联合身份和访问管理。 AD FS 扩展了使用单个安全或企业边界内提供给面向 Internet 的应用程序的单一登录功能的功能，使客户、合作伙伴和供应商可以在访问组织中基于 web 的应用程序时简化用户体验。<br>前述为官方的<a href="https://docs.microsoft.com/zh-cn/windows-server/identity/active-directory-federation-services">表述</a>,其实简单描述就是将私有环境内的AD账户服务同外界的公共服务服务账号相打通，实现使用本地AD认证来访问其他组织或者服务商的服务，以减少认证环节，实现对第三方账户使用的管理、审计和快捷使用。</p>
<h2 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h2><h3 id="版本要求"><a href="#版本要求" class="headerlink" title="版本要求"></a>版本要求</h3><ol>
<li>域控主机使用 Windows Server 2016 </li>
<li>联合认证ad-fs 版本为4.0</li>
<li>证书使用MMC方式申请</li>
</ol>
<h3 id="网络主机"><a href="#网络主机" class="headerlink" title="网络主机"></a>网络主机</h3><ol>
<li>域控主机地址： ExampleAD  172.29.0.99</li>
<li>联合认证主机： ExampADFS 172.29.0.100</li>
<li>使用客户端：   ExampleCL   172.29.0.103</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1、DNS解析记录：<br>    a) 主机名为 exampleadfs 需要新建一个额外的名称为fs的A记录指向ad-fs服务所在主机，并为这个A记录建立名称为enterpriseregistration的CNAME记录；<br>    b) certauth.fs.example.com不需要建立DNS记录<br>2、域的操作:<br>    a) Enable the IDPInitiatedSignonPage<br>    Set-AdfsProperties -EnableIdPInitiatedSignonPage:$true<br>    Set-AdfsProperties -EnableRelayStateForIdpInitiatedSignOn:$true<br>    b) 设置KDS根密钥需执行如下操作：<br>    Add-KdsRootKey -EffectiveTime (Get-Date).AddHours(-10)</p>
<h3 id="参考记录"><a href="#参考记录" class="headerlink" title="参考记录"></a>参考记录</h3><ol>
<li><a href="https://social.technet.microsoft.com/wiki/contents/articles/34162.ad-fs-4-0-discover-setup-and-publish-application-part1.aspx">https://social.technet.microsoft.com/wiki/contents/articles/34162.ad-fs-4-0-discover-setup-and-publish-application-part1.aspx</a></li>
<li><a href="https://blog.51cto.com/gaowenlong/1920117">https://blog.51cto.com/gaowenlong/1920117</a></li>
<li><a href="https://blog.51cto.com/13781144/2486909">https://blog.51cto.com/13781144/2486909</a><h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><h3 id="域的部署"><a href="#域的部署" class="headerlink" title="域的部署"></a>域的部署</h3><img src="https://cdn.sujx.net/ad-000.PNG"><br><img src="https://cdn.sujx.net/ad-001.PNG"><br><img src="https://cdn.sujx.net/ad-002.PNG"><br><img src="https://cdn.sujx.net/ad-003.PNG"><br><img src="https://cdn.sujx.net/ad-004.PNG"><br><img src="https://cdn.sujx.net/ad-005.PNG"><h3 id="建立CA"><a href="#建立CA" class="headerlink" title="建立CA"></a>建立CA</h3><img src="https://cdn.sujx.net/ca-000.PNG"><br><img src="https://cdn.sujx.net/ca-001.PNG"><br><img src="https://cdn.sujx.net/ca-002.PNG"><br><img src="https://cdn.sujx.net/ca-003.PNG"><br><img src="https://cdn.sujx.net/ca-004.PNG"><br><img src="https://cdn.sujx.net/ca-005.PNG"><br><img src="https://cdn.sujx.net/ca-006.PNG"><br><img src="https://cdn.sujx.net/ca-007.PNG"><br><img src="https://cdn.sujx.net/ca-008.PNG"><br><img src="https://cdn.sujx.net/ca-009.PNG"><br><img src="https://cdn.sujx.net/ca-010.PNG"><br><img src="https://cdn.sujx.net/ca-011.PNG"><h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><img src="https://cdn.sujx.net/adfs-003.PNG"><br><img src="https://cdn.sujx.net/adfs-004.PNG"><br><img src="https://cdn.sujx.net/adfs-005.PNG"><br><img src="https://cdn.sujx.net/adfs-006.PNG"><br><img src="https://cdn.sujx.net/adfs-008.PNG"><br><img src="https://cdn.sujx.net/adfs-009.PNG"><br><img src="https://cdn.sujx.net/adfs-010.PNG"><br><img src="https://cdn.sujx.net/adfs-011.PNG"></li>
</ol>
<h3 id="安装FS"><a href="#安装FS" class="headerlink" title="安装FS"></a>安装FS</h3><p><img src="https://cdn.sujx.net/adfs-001.PNG"><br><img src="https://cdn.sujx.net/adfs-002.PNG"><br><img src="https://cdn.sujx.net/adfs-007.PNG"><br><img src="https://cdn.sujx.net/adfs-012.PNG"><br><img src="https://cdn.sujx.net/adfs-013.PNG"><br><img src="https://cdn.sujx.net/adfs-014.PNG"><br><img src="https://cdn.sujx.net/adfs-015.PNG"><br><img src="https://cdn.sujx.net/adfs-016.PNG"><br><img src="https://cdn.sujx.net/adfs-017.PNG"><br><img src="https://cdn.sujx.net/adfs-018.PNG"><br><img src="https://cdn.sujx.net/adfs-019.PNG"><br><img src="https://cdn.sujx.net/adfs-020.PNG"><br><img src="https://cdn.sujx.net/adfs-021.PNG"><br><img src="https://cdn.sujx.net/adfs-022.PNG"></p>
<h3 id="客户端访问"><a href="#客户端访问" class="headerlink" title="客户端访问"></a>客户端访问</h3><p><img src="https://cdn.sujx.net/login-000.PNG"><br><img src="https://cdn.sujx.net/login-001.PNG"></p>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>Windows Server</tag>
        <tag>AD-FS</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix的集中式部署</title>
    <url>/2019/10/23/zabbix-deploy/</url>
    <content><![CDATA[<p>Zabbix是一种高效、快速、开源的企业级监控系统。本文将基于Zabbix4.4和CentOS8来实现集中式部署一台监控主站点。</p>
<ol>
<li> 主机部署</li>
</ol>
<p>首先部署两台CentOS8（Zabbix:10.30.2.67、MySQL:10.30.2.68）主机，并安装epel-release源和zabbix源，其中建议使用<a href="https://mirrors.tuna.tsinghua.edu.cn/" title="清华大学软件源">[1]</a>。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf upgrade -y
dnf <span class="token function">install</span> -y epel-release
<span class="token function">rpm</span> -Uvh https://repo.zabbix.com/zabbix/4.4/rhel/8/x86_64/zabbix-release-4.4-1.el8.noarch.rpm
dnf upgrade -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li> Zabbix服务部署</li>
</ol>
<p>登录Zabbix服务器，安装主程序</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf -y upgrade
dnf -y <span class="token function">install</span> httpd php php-fpm
dnf -y <span class="token function">install</span> zabbix-server-mysql zabbix-web-mysql zabbix-apache-conf zabbix-agent

<span class="token comment">#修改启动项</span>
systemctl <span class="token builtin class-name">enable</span> httpd php-fpm
systemctl <span class="token builtin class-name">enable</span> zabbix-agent.service zabbix-server.service

<span class="token comment">#开放防火墙</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>http,https<span class="token punctuation">&#125;</span>
firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">10051</span>/tcp,10050/tcp<span class="token punctuation">&#125;</span>
firewall-cmd --reload

<span class="token comment">#传输监控数据库架构文件</span>
<span class="token function">scp</span> /usr/share/doc/zabbix-server-mysql/create.sql.gz root@10.30.2.68:/root

<span class="token comment">#修改php配置文件</span>
<span class="token function">vim</span> /etc/php-fpm.d/zabbix.conf
~~~~~~~~~~~~
<span class="token comment">#修改第24行，去掉；号并修改时区位亚洲/上海</span>
php_value<span class="token punctuation">[</span>date.timezone<span class="token punctuation">]</span> <span class="token operator">=</span> Asia/Shanghai
~~~~~~~~~~~~

<span class="token comment">#修改zabbix主程序文件</span>
<span class="token function">vim</span> /etc/zabbix/zabbix_server.conf
~~~~~~~~~~~~
<span class="token comment">#修改第92行</span>
<span class="token assign-left variable">DBHost</span><span class="token operator">=</span><span class="token number">10.30</span>.2.68
<span class="token comment">#修改124行，设置数据库用户密码</span>
<span class="token assign-left variable">DBPassword</span><span class="token operator">=</span>password
~~~~~~~~~~~~

<span class="token comment">#重启服务</span>
systemctl restart httpd php-fpm
systemctl restart zabbix-agent.service zabbix-server.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li> 数据库部署</li>
</ol>
<p>登录数据库服务器10.30.2.68，安装数据库文件，并进行配置</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf -y <span class="token function">install</span> zabbix-agent
dnf -y <span class="token function">install</span> mariadb mariadb-server
systemctl <span class="token builtin class-name">enable</span> mariadb zabbix-agent.service --now

<span class="token comment">#修改密码，删除匿名用户和测试库</span>
mysql_secure_installation 

<span class="token comment">#安装数据库</span>
<span class="token comment"># mysql -uroot -p</span>
password
mysql<span class="token operator">></span> create database zabbix character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
mysql<span class="token operator">></span> grant all privileges on zabbix.* to zabbix@<span class="token string">'%'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span>
mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
mysql<span class="token operator">></span> quit<span class="token punctuation">;</span>

<span class="token comment">#导入架构</span>
zcat create.sql.gz  mysql -uzabbix -p zabbix

<span class="token comment">#配置防火墙</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span>mysql
firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token number">10050</span>/tcp
firewall-cmd --reload

<span class="token comment">#配置监控客户端</span>
<span class="token function">vim</span> /etc/zabbix/zabbix-agent.conf
~~~~~~~~~~~~
<span class="token comment">#第98行</span>
<span class="token assign-left variable">Server</span><span class="token operator">=</span><span class="token number">10.30</span>.2.67

<span class="token comment">#第139行</span>
<span class="token assign-left variable">ServerActive</span><span class="token operator">=</span><span class="token number">10.30</span>.2.67

<span class="token comment">#第150行，注释掉</span>
<span class="token comment">#Hostname=Zabbix server</span>

<span class="token comment">#第158行</span>
<span class="token assign-left variable">HostnameItem</span><span class="token operator">=</span>system.hostname
~~~~~~~~~~~~
systemctl restart mariadb zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li><p> Zabbix站点配置</p>
<span id="more"></span>
<p>默认管理员为Admin，密码为zabbix <a href="https://cdn.sujx.net/zabbix_1.png" title="配置首页"><img src="https://cdn.sujx.net/zabbix_1.png" alt="配置首页" title="配置首页"></a> <a href="https://cdn.sujx.net/zabbix_2.png" title="配置检查"><img src="https://cdn.sujx.net/zabbix_2.png" alt="配置检查" title="配置检查"></a> <a href="https://cdn.sujx.net/zabbix_3.png" title="数据库配置"><img src="https://cdn.sujx.net/zabbix_3.png" alt="数据库配置" title="数据库配置"></a> <a href="https://cdn.sujx.net/zabbix_4.png" title="服务器设置"><img src="https://cdn.sujx.net/zabbix_4.png" alt="服务器设置" title="服务器设置"></a> <a href="https://cdn.sujx.net/zabbix_5.png" title="完成配置"><img src="https://cdn.sujx.net/zabbix_5.png" alt="完成配置" title="完成配置"></a> <a href="https://cdn.sujx.net/zabbix_6.png" title="登录"><img src="https://cdn.sujx.net/zabbix_6.png" alt="登录系统" title="登录"></a> <a href="https://cdn.sujx.net/zabbix_7.png" title="首页展示"><img src="https://cdn.sujx.net/zabbix_7.png" alt="首页展示" title="首页展示"></a></p>
</li>
<li><p>解决中文显示问题</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装中文字体</span>
dnf <span class="token function">install</span> -y wqy*
<span class="token builtin class-name">cd</span> /etc/alternatives
<span class="token function">rm</span> zabbix-web-font
<span class="token function">ln</span> -s /usr/share/fonts/wqy-microhei/wqy-microhei.ttc zabbix-web-font
systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Something</category>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>centos8</tag>
        <tag>monitor</tag>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>简单制作WindowsPE镜像</title>
    <url>/2021/03/29/windowspe_build/</url>
    <content><![CDATA[<h3 id="下载部署文件"><a href="#下载部署文件" class="headerlink" title="下载部署文件"></a>下载部署文件</h3><ol>
<li><p>下载适用于 Windows 10 版本 2004 的 Windows ADK<br><a href="https://go.microsoft.com/fwlink/?linkid=2120254">https://go.microsoft.com/fwlink/?linkid=2120254</a></p>
</li>
<li><p>下载适用于 ADK 版本 2004 的 Windows PE 加载项<br><a href="https://go.microsoft.com/fwlink/?linkid=2120253">https://go.microsoft.com/fwlink/?linkid=2120253</a></p>
</li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装完成ADK和加载项之后，使用命令行进入 :</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">C:<span class="token punctuation">\</span>Program Files <span class="token punctuation">(</span>x86<span class="token punctuation">)</span><span class="token punctuation">\</span>Windows Kits<span class="token punctuation">\</span><span class="token number">10</span><span class="token punctuation">\</span>Assessment and Deployment Kit<span class="token punctuation">\</span>Windows Preinstallation Environment<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">copype amd64 c:<span class="token punctuation">\</span>winpe_amd64_ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>该命令会自动创建目标文件夹</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol>
<li><p>装载原始镜像</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Mount-Image /ImageFile:<span class="token string">"C:\WinPE_amd64_PS\media\sources<span class="token entity" title="\b">\b</span>oot.wim"</span> /Index:1 /MountDir:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加Powershell功能支持</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-WMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-WMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-NetFX.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-NetFX_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-Scripting.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-Scripting_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-PowerShell.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-PowerShell_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-StorageWMI.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-StorageWMI_en-us.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs\WinPE-DismCmdlets.cab"</span>
Dism /Add-Package /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /PackagePath:<span class="token string">"C:\Program Files (x86)\Windows Kits<span class="token entity" title="\10">\10</span>\Assessment and Deployment Kit\Windows Preinstallation Environment<span class="token entity" title="\a">\a</span>md64\WinPE_OCs<span class="token entity" title="\e">\e</span>n-us\WinPE-DismCmdlets_en-us.cab"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>添加驱动</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span> /Add-Driver /driver:<span class="token string">"d"</span>:<span class="token punctuation">\</span>drivers<span class="token punctuation">\</span>" /recurse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>添加工具</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount<span class="token punctuation">\</span>tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>复制可执行文件比如filezilla、putty等免安装文件到tools目录。</p>
</li>
<li><p>优化</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Set-ScratchSpace:512 /Image:<span class="token string">"C:\WinPE_amd64_PS\mount"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>生成镜像</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Dism /Unmount-Image /MountDir:C:<span class="token punctuation">\</span>WinPE_amd64_PS<span class="token punctuation">\</span>mount /Commit
MakeWinPEMedia /ISO C:<span class="token punctuation">\</span>WinPE_amd64_PS d:<span class="token punctuation">\</span>winpe.iso<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>引导加载使用</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>WindowsPE</tag>
      </tags>
  </entry>
  <entry>
    <title>使用CDH示例程序进行字数统计</title>
    <url>/2020/03/09/wordcount-by-cdh/</url>
    <content><![CDATA[<p>Wordcount程序是Hadoop上的经典“HelloWorld”程序。CDH系统自带了wordcount程序来检测部署的成功与否。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 解压提前准备好的莎士比亚全集</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ <span class="token function">gzip</span> -d shakespeare.txt.gz

<span class="token comment"># 上传至hadoop文件系统</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs -mkdir /user/sujx/input
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs -put shakespeare.txt /user/sujx/input

<span class="token comment"># 查看有哪些测试程序可用</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hadoop jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar
An example program must be given as the first argument.
Valid program names are:
  aggregatewordcount: An Aggregate based map/reduce program that counts the words <span class="token keyword">in</span> the input files.
  aggregatewordhist: An Aggregate based map/reduce program that computes the histogram of the words <span class="token keyword">in</span> the input files.
  bbp: A map/reduce program that uses Bailey-Borwein-Plouffe to compute exact digits of Pi.  dbcount: An example job that count the pageview counts from a database.
  distbbp: A map/reduce program that uses a BBP-type formula to compute exact bits of Pi.    grep: A map/reduce program that counts the matches of a regex <span class="token keyword">in</span> the input.
  join: A job that effects a <span class="token function">join</span> over sorted, equally partitioned datasets
  multifilewc: A job that counts words from several files.
  pentomino: A map/reduce tile laying program to <span class="token function">find</span> solutions to pentomino problems.       pi: A map/reduce program that estimates Pi using a quasi-Monte Carlo method.
  randomtextwriter: A map/reduce program that writes 10GB of random textual data per node.   randomwriter: A map/reduce program that writes 10GB of random data per node.
  secondarysort: An example defining a secondary <span class="token function">sort</span> to the reduce.
  sort: A map/reduce program that sorts the data written by the random writer.
  sudoku: A sudoku solver.
  teragen: Generate data <span class="token keyword">for</span> the terasort
  terasort: Run the terasort
  teravalidate: Checking results of terasort
  wordcount: A map/reduce program that counts the words <span class="token keyword">in</span> the input files.
  wordmean: A map/reduce program that counts the average length of the words <span class="token keyword">in</span> the input files.
  wordmedian: A map/reduce program that counts the median length of the words <span class="token keyword">in</span> the input files.
  wordstandarddeviation: A map/reduce program that counts the standard deviation of the length of the words <span class="token keyword">in</span> the input files.

<span class="token comment"># 执行mapreduce运算，output文件夹会自动建立</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hadoop jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar wordcount /user/sujx/input/shakespeare.txt /user/sujx/output/

<span class="token comment"># 查看输出结果</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs -ls /user/sujx/output
Found <span class="token number">4</span> items
-rw-r--r--   <span class="token number">3</span> sujx supergroup          <span class="token number">0</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/_SUCCESS      -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">238211</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00000  -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">236617</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00001  -rw-r--r--   <span class="token number">3</span> sujx supergroup     <span class="token number">238668</span> <span class="token number">2020</span>-03-09 02:47 /user/sujx/output/part-r-00002 

<span class="token comment"># 查看输出内容</span>
<span class="token punctuation">[</span>sujx@elephant ~<span class="token punctuation">]</span>$ hdfs dfs -tail /user/sujx/output/part-r-00000
<span class="token builtin class-name">.</span>       <span class="token number">3</span>
writhled        <span class="token number">1</span>
writing,        <span class="token number">4</span>
writings.       <span class="token number">1</span>
writs   <span class="token number">1</span>
written,        <span class="token number">3</span>
wrong   <span class="token number">112</span>
wrong'd-        <span class="token number">1</span>
wrong-should    <span class="token number">1</span>
wrong.  <span class="token number">39</span>
wrong:  <span class="token number">1</span>
wronged <span class="token number">11</span>
wronged.        <span class="token number">3</span>
wronger,        <span class="token number">1</span>
wronger<span class="token punctuation">;</span>        <span class="token number">1</span>
wrongfully?     <span class="token number">1</span>
wrongs  <span class="token number">40</span>
wrongs, <span class="token number">9</span>
wrongs<span class="token punctuation">;</span> <span class="token number">9</span>
wrote?  <span class="token number">1</span>
wrought,        <span class="token number">4</span>
…………<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Other</category>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>bigdata</tag>
        <tag>mapreduce</tag>
        <tag>wordcount</tag>
        <tag>yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Xshell免费版远程调用图形界面</title>
    <url>/2019/04/20/xshell-x11/</url>
    <content><![CDATA[<p>使用Xshell套装可以通过Xshell调用Xmanager来实现Linux图形界面的ssh转发，从而实现Linux的GUI界面的远程调用。但对于使用edu账号申请下来的免费版Xshell就没有这个功能了。那么，我们就需要使用xshell+xming来实现类似功能。</p>
<h3 id="SSHD配置"><a href="#SSHD配置" class="headerlink" title="SSHD配置"></a>SSHD配置</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 要打开SSH服务的X11转发功能</span>
<span class="token function">sed</span> -i <span class="token string">"s/#X11Forwarding yes/X11Forwarding yes/g"</span>
<span class="token function">sed</span> -i <span class="token string">"s/#X11DisplayOffset 10/X11DisplayOffset 10/g"</span>
<span class="token function">sed</span> -i <span class="token string">"s/#X11UseLocalhost yes/X11UseLocalhost yes/g"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="安装Xming"><a href="#安装Xming" class="headerlink" title="安装Xming"></a>安装Xming</h3><p>我们下载好<a href="https://sourceforge.net/projects/xming/" title="Xming">[1]</a>之后，执行安装。需要配置的只有两项:</p>
<ol>
<li> 取消安装自带的putty</li>
</ol>
<p><a href="https://cdn.sujx.net/xming1.PNG" title="Xming_install"><img src="https://cdn.sujx.net/xming1.PNG" alt="Xming_install" title="Xming_install"></a></p>
<ol start="2">
<li> 指定接受的端口10</li>
</ol>
<p><a href="https://cdn.sujx.net/xming2.PNG" title="Xming_port"><img src="https://cdn.sujx.net/xming2.PNG" alt="Xming_port" title="Xming_port"></a></p>
<h3 id="配置Xshell"><a href="#配置Xshell" class="headerlink" title="配置Xshell"></a>配置Xshell</h3><p>在xshell中配置客户端,在”SSH”-“隧道”中选择”转发x11连接到：’XDisplay:localhost:10.0’” <a href="https://cdn.sujx.net/xming3.PNG" title="xming_xshell"><img src="https://cdn.sujx.net/xming3.PNG" alt="xming_xshell" title="xming_xshell"></a></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在本地xshell客户端上调用远程GUI程序，比如gparted. <a href="https://cdn.sujx.net/xming4.PNG" title="xming_gui"><img src="https://cdn.sujx.net/xming4.PNG" alt="xming_gui" title="xming_xshell"></a></p>
]]></content>
      <categories>
        <category>Something</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>linux</tag>
        <tag>x11</tag>
        <tag>xming</tag>
      </tags>
  </entry>
  <entry>
    <title>OCSinventory-NG部署</title>
    <url>/2020/09/14/deploy_ocsinventory/</url>
    <content><![CDATA[<p><a href="https://ocsinventory-ng.org/" title="OCSinventory-NG">OCSinventory-NG</a>是一个开源、免费的IT资产管理软件，它支持Windows、Linux、Android、AIX等多种类型资产的信息收集和汇总。 <img src="https://cdn.sujx.net/FireShot%20Capture%20039%20-%20OCS%20Inventory%20Professionnel%20-%20ocsinventory-ng.org.png" alt="page" title="page"></p>
<h3 id="安装PHP7和MariaDB"><a href="#安装PHP7和MariaDB" class="headerlink" title="安装PHP7和MariaDB"></a>安装PHP7和MariaDB</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y epel-release
yum <span class="token function">install</span> -y https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/remi-release-7.rpm
yum update -y

<span class="token comment">#安装组件</span>
yum -y <span class="token function">install</span> yum-utils <span class="token function">git</span>
yum-config-manager --enable remi-php74
yum <span class="token function">install</span> -y php php-cli php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json php-soap php-ldap
yum <span class="token function">install</span> -y graphviz
yum <span class="token function">install</span> -y perl-XML-Simple perl-Compress-Zlib perl-DBI perl-DBD-MySQL perl-Net-IP perl-SOAP-Lite perl-Archive-Zip perl-Mojolicious perl-Plack perl-XML-Entities perl-Switch
yum <span class="token function">install</span> -y httpd

<span class="token comment">#启动服务</span>
systemctl <span class="token builtin class-name">enable</span> php74-php-fpm.service --now
systemctl <span class="token builtin class-name">enable</span> httpd.service --now

<span class="token comment">#设置防火墙</span>
firewall-cmd --permanent --add-service<span class="token operator">=</span><span class="token punctuation">&#123;</span>http,https<span class="token punctuation">&#125;</span>
firewall-cmd --reload

<span class="token comment">#配置数据库安装源</span>
<span class="token function">cat</span> <span class="token operator">></span>/etc/yum.repos.d/mariadb.repo <span class="token operator">&lt;</span>EOF
<span class="token comment"># MariaDB 10.5 CentOS repository list - created 2020-08-24 10:19 UTC</span>
<span class="token comment"># http://downloads.mariadb.org/mariadb/repositories/</span>
<span class="token punctuation">[</span>mariadb<span class="token punctuation">]</span>
name <span class="token operator">=</span> MariaDB
baseurl <span class="token operator">=</span> https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/10.5/centos7-amd64
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
EOF

<span class="token comment">#安装数据库</span>
yum update -y
yum <span class="token function">install</span> -y mariadb-server.x86_64 mariadb
systemctl <span class="token builtin class-name">enable</span> mariadb --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Httpd支持PHP"><a href="#Httpd支持PHP" class="headerlink" title="Httpd支持PHP"></a>Httpd支持PHP</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/httpd/conf.d/php.conf</span>

<span class="token operator">&lt;</span>FilesMatch <span class="token punctuation">\</span>.php$<span class="token operator">></span>
<span class="token comment">#    SetHandler application/x-httpd-php</span>
    SetHandler <span class="token string">"proxy:fcgi://127.0.0.1:9000"</span>

<span class="token operator">&lt;</span>/FilesMatch<span class="token operator">></span> 

<span class="token comment">#此处略去修改post_max_filesize、upload_max_filesize和timezone</span>

<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart httpd</span>
<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart php-fpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database ocsweb character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> grant all privileges on ocsweb.* to ocs@<span class="token string">'localhost'</span> identified by <span class="token string">'ocs'</span><span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="部署OCSinventoryServer"><a href="#部署OCSinventoryServer" class="headerlink" title="部署OCSinventoryServer"></a>部署OCSinventoryServer</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/</span>
<span class="token punctuation">[</span>root@ocs ~<span class="token punctuation">]</span><span class="token comment"># git clone https://github.com/OCSInventory-NG/OCSInventory-Server.git</span>
<span class="token punctuation">[</span>root@ocs opt<span class="token punctuation">]</span><span class="token comment"># git clone https://github.com/OCSInventory-NG/OCSInventory-ocsreports.git ocsreports</span>
<span class="token punctuation">[</span>root@ocs opt<span class="token punctuation">]</span><span class="token comment"># cd OCSInventory-Server/</span>
<span class="token punctuation">[</span>root@ocs OCSInventory-Server<span class="token punctuation">]</span><span class="token comment"># sh setup.sh </span>

+----------------------------------------------------------+
                                                          
  Welcome to OCS Inventory NG Management server setup <span class="token operator">!</span>   
                                                          
+----------------------------------------------------------+

Trying to determine <span class="token function">which</span> OS or Linux distribution you use
+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache web server binaries <span class="token operator">!</span>             
+----------------------------------------------------------+

CAUTION: If upgrading Communication server from OCS Inventory NG <span class="token number">1.0</span> RC2 and
previous, please remove any Apache configuration <span class="token keyword">for</span> Communication Server<span class="token operator">!</span>

Do you wish to <span class="token builtin class-name">continue</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?
Assuming Communication server <span class="token number">1.0</span> RC2 or previous is not installed
on this computer.

Starting OCS Inventory NG Management server setup from folder /opt/OCSInventory-Server
Storing log <span class="token keyword">in</span> <span class="token function">file</span> /opt/OCSInventory-Server/ocs_server_setup.log

+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> database server properties<span class="token punctuation">..</span>.              
+----------------------------------------------------------+

Your MySQL client seems to be part of MySQL version <span class="token number">10.5</span>.
Your computer seems to be running MySQL <span class="token number">4.1</span> or higher, good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

Which <span class="token function">host</span> is running database server <span class="token punctuation">[</span>localhost<span class="token punctuation">]</span> ?
OK, database server is running on <span class="token function">host</span> localhost <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

On <span class="token function">which</span> port is running database server <span class="token punctuation">[</span><span class="token number">3306</span><span class="token punctuation">]</span> ?
OK, database server is running on port <span class="token number">3306</span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache web server daemon<span class="token punctuation">..</span>.              
+----------------------------------------------------------+

Where is Apache daemon binary <span class="token punctuation">[</span>/usr/sbin/httpd<span class="token punctuation">]</span> ?
OK, using Apache daemon /usr/sbin/httpd <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache main configuration file<span class="token punctuation">..</span>.          
+----------------------------------------------------------+

ocsinventory-server: Bad setting. <span class="token variable"><span class="token variable">`</span>IPDISCOVER_LINK_TAG_NETWORK<span class="token variable">`</span></span> is not set. Default: <span class="token variable"><span class="token variable">`</span><span class="token number">0</span><span class="token variable">`</span></span>
ocsinventory-server: Can<span class="token string">'t load SOAP::Transport::HTTP* - Web service will be unavailable
AH00558: httpd: Could not reliably determine the server'</span>s fully qualified domain name, using fe80::21b:fe6b:acba:a137. Set the <span class="token string">'ServerName'</span> directive globally to suppress this message
ocsinventory-server: Bad setting. <span class="token variable"><span class="token variable">`</span>IPDISCOVER_LINK_TAG_NETWORK<span class="token variable">`</span></span> is not set. Default: <span class="token variable"><span class="token variable">`</span><span class="token number">0</span><span class="token variable">`</span></span>
ocsinventory-server: Can<span class="token string">'t load SOAP::Transport::HTTP* - Web service will be unavailable
AH00558: httpd: Could not reliably determine the server'</span>s fully qualified domain name, using fe80::21b:fe6b:acba:a137. Set the <span class="token string">'ServerName'</span> directive globally to suppress this message
Where is Apache main configuration <span class="token function">file</span> <span class="token punctuation">[</span>/etc/httpd/conf/httpd.conf<span class="token punctuation">]</span> ?
OK, using Apache main configuration <span class="token function">file</span> /etc/httpd/conf/httpd.conf <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache user account<span class="token punctuation">..</span>.                    
+----------------------------------------------------------+

Which user account is running Apache web server <span class="token punctuation">[</span>apache<span class="token punctuation">]</span> ?
OK, Apache is running under user account apache <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache group<span class="token punctuation">..</span>.                          
+----------------------------------------------------------+

Which user group is running Apache web server <span class="token punctuation">[</span>apache<span class="token punctuation">]</span> ?
OK, Apache is running under <span class="token function">users</span> group apache <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> Apache Include configuration directory<span class="token punctuation">..</span>.   
+----------------------------------------------------------+

Setup found Apache Include configuration directory <span class="token keyword">in</span>
/etc/httpd/conf.d.
Setup will put OCS Inventory NG Apache configuration <span class="token keyword">in</span> this directory.
Where is Apache Include configuration directory <span class="token punctuation">[</span>/etc/httpd/conf.d<span class="token punctuation">]</span> ?
OK, Apache Include configuration directory /etc/httpd/conf.d found <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> PERL Interpreter<span class="token punctuation">..</span>.                      
+----------------------------------------------------------+

Found PERL interpreter at <span class="token operator">&lt;</span>/usr/bin/perl<span class="token operator">></span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>
Where is PERL interpreter binary <span class="token punctuation">[</span>/usr/bin/perl<span class="token punctuation">]</span> ?
OK, using PERL interpreter /usr/bin/perl <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


Do you wish to setup Communication server on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?


+----------------------------------------------------------+
             Checking <span class="token keyword">for</span> Make utility<span class="token punctuation">..</span>.                 
+----------------------------------------------------------+

OK, Make utility found at <span class="token operator">&lt;</span>/usr/bin/make<span class="token operator">></span> <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------+
        Checking <span class="token keyword">for</span> Apache mod_perl version<span class="token punctuation">..</span>.           
+----------------------------------------------------------+

Checking <span class="token keyword">for</span> Apache mod_perl version <span class="token number">1</span>.99_22 or higher
Found that mod_perl version <span class="token number">1</span>.99_22 or higher is available.
OK, Apache is using mod_perl version <span class="token number">1</span>.99_22 or higher <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------+
    Checking <span class="token keyword">for</span> Communication server log directory<span class="token punctuation">..</span>.    
+----------------------------------------------------------+

Communication server can create detailed logs. This logs can be enabled
by setting integer value of LOGLEVEL to <span class="token number">1</span> <span class="token keyword">in</span> Administration console
menu Configuration.
Where to put Communication server log directory <span class="token punctuation">[</span>/var/log/ocsinventory-server<span class="token punctuation">]</span> ?
OK, Communication server will put logs into directory /var/log/ocsinventory-server <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+----------------------------------------------------------------------------+
    Checking <span class="token keyword">for</span> Communication server plugins configuration directory<span class="token punctuation">..</span>.    
+----------------------------------------------------------------------------+

Communication server need a directory <span class="token keyword">for</span> plugins configuration files. 
Where to put Communication server plugins configuration files <span class="token punctuation">[</span>/etc/ocsinventory-server/plugins<span class="token punctuation">]</span> ?
OK, Communication server will put plugins configuration files into directory /etc/ocsinventory-server/plugins <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

+-------------------------------------------------------------------+
   Checking <span class="token keyword">for</span> Communication server plugins perl directory<span class="token punctuation">..</span>.     
+-------------------------------------------------------------------+

Communication server need a directory <span class="token keyword">for</span> plugins Perl modules files.
Where to put Communication server plugins Perl modules files <span class="token punctuation">[</span>/etc/ocsinventory-server/perl<span class="token punctuation">]</span> ?
OK, Communication server will put plugins Perl modules files into directory /etc/ocsinventory-server/perl <span class="token punctuation">;</span>-<span class="token punctuation">)</span>


+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> required Perl Modules<span class="token punctuation">..</span>.                 
+----------------------------------------------------------+

Checking <span class="token keyword">for</span> DBI PERL module<span class="token punctuation">..</span>.
Found that PERL module DBI is available.
Checking <span class="token keyword">for</span> Apache::DBI PERL module<span class="token punctuation">..</span>.
Found that PERL module Apache::DBI is available.
Checking <span class="token keyword">for</span> DBD::mysql PERL module<span class="token punctuation">..</span>.
Found that PERL module DBD::mysql is available.
Checking <span class="token keyword">for</span> Compress::Zlib PERL module<span class="token punctuation">..</span>.
Found that PERL module Compress::Zlib is available.
Checking <span class="token keyword">for</span> XML::Simple PERL module<span class="token punctuation">..</span>.
Found that PERL module XML::Simple is available.
Checking <span class="token keyword">for</span> Net::IP PERL module<span class="token punctuation">..</span>.
Found that PERL module Net::IP is available.
Checking <span class="token keyword">for</span> Archive::Zip Perl module<span class="token punctuation">..</span>.
Found that PERL module Archive::Zip is available.


Do you wish to setup Rest API server on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?

+----------------------------------------------------------+
 Checking <span class="token keyword">for</span> REST API Dependencies <span class="token punctuation">..</span>.                     
+----------------------------------------------------------+

Found that PERL module Mojolicious::Lite is available.
Found that PERL module Switch is available.
Found that PERL module Plack::Handler is available.

+----------------------------------------------------------+
 Configuring REST API Server files <span class="token punctuation">..</span>.                      
+----------------------------------------------------------+

Where <span class="token keyword">do</span> you want the API code to be store <span class="token punctuation">[</span>/usr/lib64/perl5/vendor_perl<span class="token punctuation">]</span> ?
Copying files to /usr/lib64/perl5/vendor_perl

+----------------------------------------------------------+
 Configuring REST API Server configuration files <span class="token punctuation">..</span>.        
+----------------------------------------------------------+


+----------------------------------------------------------+
                 OK, looks good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                       
                                                          
     Configuring Communication server Perl modules<span class="token punctuation">..</span>.     
+----------------------------------------------------------+

Writing Makefile <span class="token keyword">for</span> Apache::Ocsinventory

+----------------------------------------------------------+
                 OK, looks good <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                       
                                                          
      Preparing Communication server Perl modules<span class="token punctuation">..</span>.      
+----------------------------------------------------------+


+----------------------------------------------------------+
                 OK, prepare finshed <span class="token punctuation">;</span>-<span class="token punctuation">)</span>                  
                                                          
     Installing Communication server Perl modules<span class="token punctuation">..</span>.      
+----------------------------------------------------------+


+----------------------------------------------------------+
 OK, Communication server Perl modules <span class="token function">install</span> finished<span class="token punctuation">;</span>-<span class="token punctuation">)</span>
                                                          
     Creating Communication server log directory<span class="token punctuation">..</span>.       
+----------------------------------------------------------+

Creating Communication server log directory /var/log/ocsinventory-server.

Fixing Communication server log directory files permissions.
Configuring <span class="token function">logrotate</span> <span class="token keyword">for</span> Communication server.
Removing old communication server <span class="token function">logrotate</span> <span class="token function">file</span> /etc/logrotate.d/ocsinventory-NG
Writing communication server <span class="token function">logrotate</span> to <span class="token function">file</span> /etc/logrotate.d/ocsinventory-server


+----------------------------------------------------------------------+
        OK, Communication server log directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span>            
                                                                      
   Creating Communication server plugins configuration directory<span class="token punctuation">..</span>.   
+----------------------------------------------------------------------+

Creating Communication server plugins configuration directory /etc/ocsinventory-server/plugins.


+----------------------------------------------------------------------+
 OK, Communication server plugins configuration directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span> 
                                                                      
        Creating Communication server plugins Perl directory<span class="token punctuation">..</span>.       
+----------------------------------------------------------------------+

Creating Communication server plugins Perl directory /etc/ocsinventory-server/perl.


+----------------------------------------------------------------------+
     OK, Communication server plugins Perl directory created <span class="token punctuation">;</span>-<span class="token punctuation">)</span>      
                                                                      
               Now configuring Apache web server<span class="token punctuation">..</span>.                   
+----------------------------------------------------------------------+

To ensure Apache loads mod_perl before OCS Inventory NG Communication Server,
Setup can name Communication Server Apache configuration <span class="token function">file</span>
<span class="token string">'z-ocsinventory-server.conf'</span> instead of <span class="token string">'ocsinventory-server.conf'</span><span class="token builtin class-name">.</span>
Do you allow Setup renaming Communication Server Apache configuration <span class="token function">file</span>
to <span class="token string">'z-ocsinventory-server.conf'</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span> ?
OK, using <span class="token string">'z-ocsinventory-server.conf'</span> as Communication Server Apache configuration <span class="token function">file</span>
Removing old communication server configuration to <span class="token function">file</span> /etc/httpd/conf.d/ocsinventory.conf
Writing communication server configuration to <span class="token function">file</span> /etc/httpd/conf.d/z-ocsinventory-server.conf

+----------------------------------------------------------------------+
       OK, Communication server setup successfully finished <span class="token punctuation">;</span>-<span class="token punctuation">)</span>       
                                                                      
 Please, review /etc/httpd/conf.d/z-ocsinventory-server.conf 
         to ensure all is good. Then restart Apache daemon.           
+----------------------------------------------------------------------+


Do you wish to setup Administration Server <span class="token punctuation">(</span>Web Administration Console<span class="token punctuation">)</span>
on this computer <span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>/n<span class="token punctuation">)</span>?

+----------------------------------------------------------+
    Checking <span class="token keyword">for</span> Administration Server directories<span class="token punctuation">..</span>.     
+----------------------------------------------------------+

CAUTION: Setup now <span class="token function">install</span> files <span class="token keyword">in</span> accordance with Filesystem Hierarchy
Standard. So, no <span class="token function">file</span> is installed under Apache root document directory
<span class="token punctuation">(</span>Refer to Apache configuration files to <span class="token function">locate</span> it<span class="token punctuation">)</span>.
If you<span class="token string">'re upgrading from OCS Inventory NG Server 1.01 and previous, YOU
MUST REMOVE (or move) directories '</span>ocsreports<span class="token string">' and '</span>download<span class="token string">' from Apache
root document directory.
If you choose to move directory, YOU MUST MOVE '</span>download<span class="token string">' directory to
Administration Server writable/cache directory (by default
/var/lib/ocsinventory-reports), especially if you use deployment feature.

Do you wish to continue ([y]/n)?
Assuming directories '</span>ocsreports<span class="token string">' and '</span>download<span class="token string">' removed from
Apache root document directory.

Where to copy Administration Server static files for PHP Web Console
[/usr/share/ocsinventory-reports] ?
OK, using directory /usr/share/ocsinventory-reports to install static files ;-)

Where to create writable/cache directories for deployment packages,
administration console logs, IPDiscover and SNMP [/var/lib/ocsinventory-reports] ?
OK, writable/cache directory is /var/lib/ocsinventory-reports ;-)


+----------------------------------------------------------+
         Checking for required Perl Modules...            
+----------------------------------------------------------+

Checking for DBI PERL module...
Found that PERL module DBI is available.
Checking for DBD::mysql PERL module...
Found that PERL module DBD::mysql is available.
Checking for XML::Simple PERL module...
Found that PERL module XML::Simple is available.
Checking for Net::IP PERL module...
Found that PERL module Net::IP is available.

+----------------------------------------------------------+
      Installing files for Administration server...       
+----------------------------------------------------------+

Creating PHP directory /usr/share/ocsinventory-reports/ocsreports.
Copying PHP files to /usr/share/ocsinventory-reports/ocsreports.
Fixing permissions on directory /usr/share/ocsinventory-reports/ocsreports.
Creating database configuration file /usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php.
Creating IPDiscover directory /var/lib/ocsinventory-reports/ipd.
Fixing permissions on directory /var/lib/ocsinventory-reports/ipd.
Creating packages directory /var/lib/ocsinventory-reports/download.
Fixing permissions on directory /var/lib/ocsinventory-reports/download.
Creating snmp mibs directory /var/lib/ocsinventory-reports/snmp.
Fixing permissions on directory /var/lib/ocsinventory-reports/snmp.
Creating Administration server log files directory /var/lib/ocsinventory-reports/logs.
Fixing permissions on directory /var/lib/ocsinventory-reports/logs.
Creating Administration server scripts log files directory /var/lib/ocsinventory-reports/scripts.
Fixing permissions on directory /var/lib/ocsinventory-reports/scripts.
Configuring IPDISCOVER-UTIL Perl script.
Installing IPDISCOVER-UTIL Perl script.
Fixing permissions on IPDISCOVER-UTIL Perl script.
Writing Administration server configuration to file /etc/httpd/conf.d/ocsinventory-reports.conf

+----------------------------------------------------------------------+
        OK, Administration server installation finished ;-)           
                                                                      
 Please, review /etc/httpd/conf.d/ocsinventory-reports.conf
          to ensure all is good and restart Apache daemon.            
                                                                      
 Then, point your browser to http://server//ocsreports
        to configure database server and create/update schema.        
+----------------------------------------------------------------------+


Setup has created a log file /opt/OCSInventory-Server/ocs_server_setup.log. Please, save this file.
If you encounter error while running OCS Inventory NG Management server,
we can ask you to show us its content !

DON'</span>T FORGET TO RESTART APACHE DAEMON <span class="token operator">!</span>

Enjoy OCS Inventory NG <span class="token punctuation">;</span>-<span class="token punctuation">)</span>

<span class="token punctuation">[</span>root@ocs OCSInventory-Server<span class="token punctuation">]</span><span class="token comment"># systemctl restart httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="WEB配置"><a href="#WEB配置" class="headerlink" title="WEB配置"></a>WEB配置</h3><p>打开访问页面<a href="http://server//ocsreports">http://server//ocsreports</a> 输入配置信息 <img src="https://cdn.sujx.net/ocsinstall000.PNG" alt="index" title="index"> 确认其他配置文件，注意红框内信息 <img src="https://cdn.sujx.net/ocsinstall001.PNG" alt="index" title="index"> 完成配置 <img src="https://cdn.sujx.net/ocsinstall002.PNG" alt="index" title="index"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>System</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>OCSinventory</tag>
        <tag>sysadmin</tag>
      </tags>
  </entry>
  <entry>
    <title>近期技术面试题目</title>
    <url>/2021/05/19/interview_202107/</url>
    <content><![CDATA[<h3 id="Windows相关"><a href="#Windows相关" class="headerlink" title="Windows相关"></a>Windows相关</h3><ol>
<li><p>域的角色有哪几个，谈谈你的理解</p>
<pre class="line-numbers language-none"><code class="language-none">林级别：
Schema Master（架构主机）
作用是修改活动目录的原数据。我们知道在活动目录里存在着各种各样的对象，比如用户、计算机、打印机等，这些对象有一系列的属性，活动目录本省就是一个数据库，对象和属性之间就好像表格一样存在着对应关系，那么这些对象和属性之间的关系是有谁来定义的，就是Schema Master.
Domain Naming Master（域名主机）
这也是一个森林级别的角色，他的主要作用是管理森林中的域的添加或者删除。如果你要在你现有森林中添加一个域或者删除一个域的话，那么就必须要和Domain Naming Master进行联系。

域级别
PDC Emulator（PDC仿真主机）
	a.密码变更
	b.提供时间服务
	c.统一修改组策略
	d.对Windows 2000以前的操作系统提供支持
RID Master（RID主机）
	用户的标识不取决于用户名，取决于安全标识符SID，所以当两个用户的SID一样的时候，尽管他们的用户名可能不一样，但Windows的安全子系统中会把他们认为是同一个用户，这样会产生安全问题。RID Mater的作用就是：分配可用RID池给域内的DC核防止安全主题的SID重复
Infrastructure Master(结构主机）
	主要负责组嵌套关系，当在多域情况下，需要将GC与结构主机分开。在单域环境下或域中DC都是GC情况下，结构主机不起作用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何提升域的级别</p>
<pre class="line-numbers language-none"><code class="language-none">1.开始--管理工具--Active Directory用户和计算机(或者Active Directory域和信任关系)。
2.选择要提升的域，右键单击，选择提升域功能级别。
3.在“选择可用的域功能级别”中，选择，然后单击提升。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何建立域的子站点</p>
<pre class="line-numbers language-none"><code class="language-none">打开 Active Directory 站点和服务 控制台，右键Subnets在弹出菜单项选择&quot;新建子网&quot;
移动指定DC至新的子网<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>域控制器无法启动如何处理？</p>
<pre class="line-numbers language-none"><code class="language-none">前提：
1、当活动目录搭建完成时，进行一次完全备份，包含系统状态、活动目录数据库、卷等相关信息。
2、活动目录建立并进行完全备份之后，星期一到星期五每天通过Windows Server Backup进行一次增量备份，每周星期6进行完全备份。
3、项目实施完成之后，当每次添加一台域控制器的时候，需要进行一次完全备份。无论是否到备份周期
实施：
1. netdom query fsmo来查看5种操作主机角色的位置；
2. 存活主机进行FSMO5角色的抢夺：域命名主机、架构主机、PDC、RID池管理器、结构主机；
3. 删除遗留在活动目录中原PDC记录，防止由于内容的混乱，出现活动目录复制的问题
4. 停止相应服务，并修改BDC地址，之后重新启动服务
5. 重新部署域控制器，等待数据的全部复制完成，通过AD间自动复制还原了AD数据库

或者使用全备份镜像通过系统安装光盘进行恢复。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>WSUS如何进行更新部署的审批？</p>
<pre class="line-numbers language-none"><code class="language-none">在 WSUS 管理控制台上，单击“更新”。将为“所有更新”、“关键更新”、“安全更新”和“WSUS 更新”显示更新状态摘要。
在“所有更新”部分，单击“计算机所需的更新”。
在更新列表上，选择要为您的测试计算机组上的安装进行审批的更新。
右键单击选定的更新，然后单击“审批”。
在“审批更新”对话框中，选择您的测试组，然后单击向下键。
单击“已审批进行安装”，然后单击“确定”。
将会看到“审批进度”窗口，它显示影响更新审批的各种任务的进度。完成审批之后，请单击“关闭”。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>使用MDT部署Windows的流程是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">部署 Windows RE。 支持将自定义的 Windows 恢复环境 (Windows RE) 作为任务序列的一部分进行部署。
部署到 VHD。 提供现成的用于将 Windows 部署到虚拟硬盘 (VHD) 文件中的任务序列模板。
改进的部署向导。 提供其他进度信息，并为 Lite Touch 部署向导提供更干净的 UI。
应用 GPO 包。 允许部署 Microsoft 安全合规性管理器 (SCM) 创建的本地组策略对象。
分区例程。 提供改进的分区例程，确保无论当前硬盘驱动器结构如何，部署都将正常运行。
USMT 脱机用户状态迁移。 支持在部署的 Windows PE 阶段内，脱机运行用户状态迁移工具 (USMT) 捕获。
安装或卸载 Windows 角色或功能。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何对域主机进行软件推送和卸载？</p>
<pre class="line-numbers language-none"><code class="language-none">1、使用组策略进行推送：Computer Policy为例，选择到Computer Configuration&#x2F;Policies&#x2F;Software Settings&#x2F;， 右击Software installation， New &gt; Package…
2、使用scom进行管理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>如何进行用户目录的重定向？</p>
<pre class="line-numbers language-none"><code class="language-none">编辑组策略，定位到用户策略--策略--windows设置--文件重定向--桌面，属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看域组策略的结果？</p>
<pre class="line-numbers language-none"><code class="language-none">rsop.msc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Windows的SID具体是指什么？</p>
<pre class="line-numbers language-none"><code class="language-none">SID安全标识符（Security Identifiers），是标识用户、组和计算机帐户的唯一的号码。
对象的SID ＝域的SID 十RID
用户通过验证后，登陆进程会给用户一个访问令牌，该令牌相当于用户访问系统资源的票证，当用户试图访问系统资源时，将访问令牌提供给 Windows NT，然后 Windows NT 检查用户试图访问对象上的访问控制列表。如果用户被允许访问该对象，Windows NT将会分配给用户适当的访问权限。
    访问令牌是用户在通过验证的时候有登陆进程所提供的，所以改变用户的权限需要注销后重新登陆，重新获取访问令牌。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确认域用户登录失败的具体IP、用户名和登录时间？</p>
<pre class="line-numbers language-none"><code class="language-none">可以通过开启审核日志的方法来查看域用户登陆、注销的具体信息
在PDC服务器上打开&quot;本地安全策略&quot;，确保审核登录事件和审核账户管理策略开启
检查 账户解锁事件ID4767，用户凭据验证，事件ID4776<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="Linux相关"><a href="#Linux相关" class="headerlink" title="Linux相关"></a>Linux相关</h3></li>
<li><p>如何查看存储设备的UUID</p>
<pre class="line-numbers language-none"><code class="language-none">使用blkid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何将现有进程切换到后台，并切换回前台</p>
<pre class="line-numbers language-none"><code class="language-none"># 按下ctrl+Z
再输入bg 将进程切换到后台
输入fg 将进程切换到前台<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>CPU的使用率和负载有何区别</p>
<pre class="line-numbers language-none"><code class="language-none">CPU利用率：显示的是程序在运行期间实时占用的CPU百分比
CPU负载：显示的是一段时间内正在使用和等待使用CPU的平均任务数

CPU利用率高，并不意味着负载就一定大。举例来说：如果我有一个程序它需要一直使用CPU的运算功能，那么此时CPU的使用率可能达到100%，但是CPU的工作负载则是趋近于“1”，因为CPU仅负责一个工作嘛！如果同时执行这样的程序两个呢？CPU的使用率还是100%，但是工作负载则变成2了。所以也就是说，当CPU的工作负载越大，代表CPU必须要在不同的工作之间进行频繁的工作切换。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>有没有CPU使用率很低而负载很高的情况，如何处理？</p>
<pre class="line-numbers language-none"><code class="language-none">磁盘读写请求过多就会导致大量I&#x2F;O等待
数据库死锁
网络存储故障<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>物理内存和虚拟内存的区别</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>新增一块磁盘给Home分区扩容，如何进行?(静态磁盘和动态磁盘的处理方式有何不同)</p>
<pre class="line-numbers language-none"><code class="language-none"># LVM分区
使用pvcreate建立PV；
将PV加入VG；
扩展PV，并格式化
# 静态分区
使用fdisk建立Linux分区
格式化分区，并挂载临时分区；
使用dd if&#x3D;&#x2F;home of&#x3D;&#x2F;mnt 复制文件；
修改fstab文件，重新挂载home分区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>简单说说ARM服务器和x86服务器的不同</p>
<pre class="line-numbers language-none"><code class="language-none">ARM架构使用精简指令集，效率高、功耗低，需要专用数据接口
x86架构性能高、扩展能力强，效率低、软件开发方便<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>你知道Linux下的性能监控工具有那些，简单说一个工具是如何分析当前主机状况的</p>
<pre class="line-numbers language-none"><code class="language-none">top、iotop、htop、iostat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看当前主机开启的TCP端口</p>
<pre class="line-numbers language-none"><code class="language-none">netstat -tlnp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看当前主机的TCP连接</p>
<pre class="line-numbers language-none"><code class="language-none">ss -4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何不重启网络服务变更主机IP地址</p>
<pre class="line-numbers language-none"><code class="language-none">nmcli c reload eth0
nmcli d reapply eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>简述你最近实施的一个技术项目的内容和流程</p>
<pre class="line-numbers language-none"><code class="language-none">    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3></li>
<li><p>IPSEC VPN和SSL VPN的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">1、IPSEC VPN使用ipsec协议，基于网络层；
2、SSL VPN使用ssl协议，使用HTTP协议，基于应用层
3、IPSECVPN容易管理，价格贵
4、SSL VPN只适用于HTTP流量
5、IPSECVPN用于网对网的环境，SSLVPN用于用户对网的环境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>OSI的七层有那些？HTTP协议在哪层？IP协议在那层？</p>
<pre class="line-numbers language-none"><code class="language-none">物理层:电信号
数据链路层:Mac地址
网络层:IP地址、ARP协议
传输层:流控和校验
会话层:建立、管理、终止会话
表示层:文件格式PNG、ZIP
应用层:HTTP\DNS\SNMP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>TCP如何处理拥塞？</p>
<pre class="line-numbers language-none"><code class="language-none">1、发送方维持拥塞窗口
2、使用慢开始算法，由小到大逐步发送
3、改用拥塞避免算法
4、快速重传；
5、快速恢复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>TCP的滑动窗口是多少？如何计算？</p>
<pre class="line-numbers language-none"><code class="language-none">TCP包头中只保留了16bit用来标识窗口大小，允许的最大缓存大小不超过64KB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>华为5700交换机如何创建VLAN</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="监控相关"><a href="#监控相关" class="headerlink" title="监控相关"></a>监控相关</h3></li>
<li><p>Zabbix是如何实施的？</p>
<pre class="line-numbers language-none"><code class="language-none">部署数据库
部署zabbix server
部署zabbix agent
配置监控主机和监控项
根据部署规模进行数据库的分库分表、zabbix的高可用以及部署zabbix proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>zabbix如何监控进程？</p>
<pre class="line-numbers language-none"><code class="language-none">使用模板，创建对进程名称或者进程数量进行监控<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>zabbix和Prometheus的区别？</p>
<pre class="line-numbers language-none"><code class="language-none">Prometheus的基本原理是通过HTTP周期性抓取被监控组件的状态，使用go语言，多用于容器和K8S
zabbix是使用cs模式，通过agent采集数据发送到server，使用C语言，传统监控场景丰富，技术稳定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="虚拟化相关"><a href="#虚拟化相关" class="headerlink" title="虚拟化相关"></a>虚拟化相关</h3></li>
<li><p>虚拟化磁盘的类型有那些？差异什么？</p>
<pre class="line-numbers language-none"><code class="language-none">精简置备、厚置备置零、厚置备延迟置零<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>虚机磁盘的克隆有哪几种形式，分别是什么?</p>
<pre class="line-numbers language-none"><code class="language-none">完全克隆、差异克隆、即时克隆<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>vsan中SSD与HDD的比例是多少</p>
<pre class="line-numbers language-none"><code class="language-none">存储量的10%作为缓存
使用单独的固态磁盘作为缓存<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>虚拟化主机的群集部署实践（FusionCompute和VMware的对比）</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>常见的VDI产品有那些</p>
<pre class="line-numbers language-none"><code class="language-none">华为的FusionAccess、微软虚拟桌面、VMware Horizon、Citrix <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="ELK相关"><a href="#ELK相关" class="headerlink" title="ELK相关"></a>ELK相关</h3></li>
<li><p>ELK的底层文件是如何存储的</p>
<pre class="line-numbers language-none"><code class="language-none">面向文档
使用JSON格式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>常用ELK日志系统是由什么构成的？</p>
<pre class="line-numbers language-none"><code class="language-none">ElasticSearch Kibana Logstat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>日志文件通过什么管道传输到Elasticsearch；</p>
<pre class="line-numbers language-none"><code class="language-none">filebeat、logstash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Windows日志如何传输到Elasticsearch；</p>
<pre class="line-numbers language-none"><code class="language-none">windows版本的filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>Elasticsearch通过什么来进行查询</p>
<pre class="line-numbers language-none"><code class="language-none">Restfu API<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="硬件相关"><a href="#硬件相关" class="headerlink" title="硬件相关"></a>硬件相关</h3></li>
<li><p>服务器如何部署系统</p>
<pre class="line-numbers language-none"><code class="language-none">华为使用BMC部署
戴尔使用iDRAC部署
惠普使用ilo部署
开启CPU的虚拟化、调整secure boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>你用过那些厂家的服务器的主机管理系统？如何接收和处理服务器告警信息？</p>
<pre class="line-numbers language-none"><code class="language-none">华为的esight
戴尔的OME
对接Nagios、Zabbix、SCOM进行告警发布<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>常用的Raid类型有那些，它们的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">RAID 0：组合成JBOD磁盘，不提供冗余，低成本、高性能，最少一块盘
RAID 1: 镜像磁盘 磁盘成对出现，数据完全镜像，最少两块盘
RAID 5: 同时存储数据和校验数据，数据库和校验信息分别存储，最少三块盘
RAID 6：两副本校验信息的Raid5，最少四块盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>常见磁盘的IOPS值是多少？</p>
<pre class="line-numbers language-none"><code class="language-none">FC&#x2F;SAS 15K磁盘：180
SATA 10k磁盘：290
固态磁盘：2500<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Raid磁盘组的IOPS如何计算</p>
<pre class="line-numbers language-none"><code class="language-none">物理磁盘总的IOPS &#x3D; 物理磁盘的IOPS × 磁盘数目
可用的IOPS &#x3D; （物理磁盘总的IOPS × 写百分比 ÷ RAID写惩罚） + （物理磁盘总的IOPS × 读百分比）

Raid 0的写惩罚为1
Raid 1的写惩罚为2
Raid 5的写惩罚为4
Raid 6的写惩罚为6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确定是IO引起的性能问题</p>
<pre class="line-numbers language-none"><code class="language-none">1、主机侧：应用-&gt;内存缓存-&gt;块设备层→HBA卡-&gt;驱动
2、网络侧：交换网络
3、存储侧：存储前端-&gt;存储cache-&gt;RAID组-&gt;磁盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何确定主机CPU和虚机CPU的部署比例</p>
<pre class="line-numbers language-none"><code class="language-none">系统可用的vCPU总数(逻辑处理器) &#x3D; Socket数（CPU个数）x Core数（内核）x Thread数（超线程）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="OpenStack相关"><a href="#OpenStack相关" class="headerlink" title="OpenStack相关"></a>OpenStack相关</h3></li>
<li><p>OpenStack的核心组件有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">Nova – 用于在计算级别管理虚拟机，并在计算或管理程序级别执行其他计算任务。
Neutron – 为虚拟机、计算和控制节点提供网络功能。
Keystone – 为所有云用户和 OpenStack 云服务提供身份认证服务。换句话说，我们可以说 Keystone 是一个提供给云用户和云服务访问权限的方法。
Horizon – 用于提供图形用户界面。使用图形化管理界面可以很轻松地完成各种日常操作任务。
Cinder – 用于提供块存储功能。通常来说 OpenStack 的 Cinder 中集成了 Chef 和 ScaleIO 来共同为计算和控制节点提供块存储服务。
Swift – 用于提供对象存储功能。通常来说，Glance 管理的镜像是存储在对象存储空间的。像 ScaleIO 这样的外部存储也可以提供对象存储，可以很容易的集成 Glance 服务。
Glance – 用于提供镜像服务。使用 Glance 的管理平台来上传和下载云镜像。
Heat – 用于提供编排服务或功能。使用 Heat 管理平台可以轻松地将虚拟机作为堆栈，并且根据需要可以将虚拟机扩展或收缩。
Ceilometer – 用于提供计量与监控功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何在OpenStack中创建虚机；</p>
<pre class="line-numbers language-none"><code class="language-none">openstack server create --flavor &#123;flavor-name&#125; --image &#123;Image-Name-Or-Image-ID&#125; --nic net-id&#x3D;&#123;Network-ID&#125; --security-group &#123;Security_Group_ID&#125; –key-name &#123;Keypair-Name&#125; &lt;VM_Name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>你用过那些OpenStack部署方式，他们各有什么长短？</p>
<pre class="line-numbers language-none"><code class="language-none">DevStack
TripleO
PackStack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="应用服务相关"><a href="#应用服务相关" class="headerlink" title="应用服务相关"></a>应用服务相关</h3><ol>
<li><p>Nginx访问出错，如何进行排查？</p>
<pre class="line-numbers language-none"><code class="language-none"># 查看Nginx日志
nginx -t 
&#x2F;var&#x2F;log&#x2F;nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Redis的作用</p>
<pre class="line-numbers language-none"><code class="language-none">消息队列
主要局限在较小数据量的数据库的高性能操作和运算上
1. 提高了DB的可扩展性，只需要将新加的数据放到新加的服务器上就可以了
2. 提高了DB的可用性，只影响到需要访问的shard服务器上的数据的用户
3. 提高了DB的可维护性，对系统的升级和配置可以按shard一个个来搞，对服务产生的影响较小
4. 小的数据库存的查询压力小，查询更快，性能更好<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>memcache的作用；</p>
<pre class="line-numbers language-none"><code class="language-none">memcache一般的使用目的是，通过缓存数据库查询的结果，减少数据库访问次数，以提高动态Web应用的速度、提高可扩展性。 它是一个基于内存的“键值对”存储，用于存储数据库调用、API调用或页面引用结果的直接数据。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>CDN的原理，简单描述动态页面是如何触发回源的？</p>
<pre class="line-numbers language-none"><code class="language-none">CDN 的核心点有两个：一个是缓存，一个是回源
静态资源变动的检查：基于文件内容进行hash
动态资源直接回源拉取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>MySQL的群集有哪几种形式，是如何实现的？</p>
<pre class="line-numbers language-none"><code class="language-none">MySQL Replication 重放binlog实现主库数据的异步复制，一主多从，多点备份
Galera Cluster 三节点，写操作同步复制，互为从节点
MySQL Cluster 多主多从，高可用、负载均衡，维护复杂<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>MySQL如何进行二进制部署？</p>
<pre class="line-numbers language-none"><code class="language-none">下载二进制安装包
创建数据存储目录
创建用户和用户组
初始化数据
创建my.cnf文件
复制启动文件
加入系统变量
启动数据库服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何设计一个高并发高可用的公有云上电商网站？</p>
<pre class="line-numbers language-none"><code class="language-none">SLB高可用——ECS高可用(多节点、弹性收缩)—OSS高可用—RDS高可用—异地部署（RDS-DTS数据传输）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>秒杀系统会使用到那些服务组件？</p>
<pre class="line-numbers language-none"><code class="language-none">CDN-动态资源—Redis读写分离—Redis主从—RocketMQ异步下单<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>在云部署环境中，存储有那些类型？区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">块存储
文件存储
对象存储<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>如何从github中克隆项目，完成修改之后如何进行项目合并？</p>
<pre class="line-numbers language-none"><code class="language-none">git clone ****
edit
git -a
git commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h3></li>
<li><p>如何获取当前网络中的主机漏洞情况以及如何进行漏洞的处理；你用过那些漏洞扫描工具？</p>
<pre class="line-numbers language-none"><code class="language-none">使用Nessus、openVas、Wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>常见加密算法有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">常见的 对称加密 算法主要有 DES、3DES、AES
常见的非对称算法 主要有 RSA、DSA
散列算法 主要有 SHA-1、MD5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>常见网络攻击类型有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">DDOS攻击
cc半连接攻击
SQL注入
xss跨站脚本攻击<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>SQLMap的作用什么？</p>
<pre class="line-numbers language-none"><code class="language-none">自动化的SQL注入和数据库安全检查工具<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>WAF应当部署在哪里？</p>
<pre class="line-numbers language-none"><code class="language-none">WAF可以过滤HTTP&#x2F;HTTPS协议流量，防护Web攻击。
WAF可以对Web应用进行安全审计
WAF可以防止CC攻击

透明代理串接模式
反向代理
旁路监控模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>MD5和SHA256SUM的作用是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">对文件进行校验，避免文件篡改或者检验文件的状态<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何查看Linux用户的登录日志？</p>
<pre class="line-numbers language-none"><code class="language-none">cat &#x2F;var&#x2F;log&#x2F;wtmp
cat &#x2F;var&#x2F;log&#x2F;secure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>如何查看Windows用户的登录日志？</p>
<pre class="line-numbers language-none"><code class="language-none">控制面板--&gt;系统和安全--&gt;查看事件日志--&gt;事件查看器--&gt;windows日志--&gt;安全<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何防止勒索软件事件的发生？</p>
<pre class="line-numbers language-none"><code class="language-none">卸载有风险组件，比如smb v1
执行权限管理，网络访问权限和文件访问权限
安装终端安全管理工具<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>堡垒机的作用是什么?</p>
<pre class="line-numbers language-none"><code class="language-none">身份验证、账号管理、授权控制、安全审计<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="容器相关"><a href="#容器相关" class="headerlink" title="容器相关"></a>容器相关</h3></li>
<li><p>虚拟机和容器的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">1. 虚机是对底层计算机的模拟，容器是操作系统的模拟；
2. 虚机的隔离性好，管理工具齐全
3. 容器轻量级，性能高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>Docker如何部署一个Wordpress镜像</p>
<pre class="line-numbers language-none"><code class="language-none">docker run -name&#x3D;wordpress -d wordpress -p 80:80 -v &#x2F;home&#x2F;wordpress:&#x2F;var&#x2F;www&#x2F;html -d --restart&#x3D;always
docker run --name&#x3D;mariadb -p 3306:3306 -e MYSQL_ROOT_PASSWORD&#x3D;输入数据库root用户的密码 -v &#x2F;etc&#x2F;mariadb&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -d --restart&#x3D;always mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>Docker的磁盘是如何指定和挂载的</p>
<pre class="line-numbers language-none"><code class="language-none">docker提供了三种不同的方式将数据挂载到容器中，volume、bind mount（-v映射）、tmpfs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>K8S的组件有那些</p>
<pre class="line-numbers language-none"><code class="language-none">master（api、schedular、contorller）
node(kubelet、kubeproxy、container_runtime）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>ETCD是做什么的？</p>
<pre class="line-numbers language-none"><code class="language-none">etcd是Kubernetes提供默认的存储系统，保存所有集群数据，使用时需要为etcd数据提供备份计划。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="IT服务相关"><a href="#IT服务相关" class="headerlink" title="IT服务相关"></a>IT服务相关</h3></li>
<li><p>ITIL中问题和事件的区别是什么？</p>
<pre class="line-numbers language-none"><code class="language-none">与事件管理的根本区别就在于，事件管理目的在于恢复企业生产，而问题管理在于找出IT故障的根本原因，制定解决方案，防止类似故障的再次发生。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>ITIL的流程有那些？</p>
<pre class="line-numbers language-none"><code class="language-none">包括十个核心流程和一个职能，分为服务提供和服务支持两组。
服务提供：
    服务级别管理
    IT财务管理
    IT服务持续性管理
    可用性管理
    能力管理

服务支持：
    事故管理
    问题管理
    配置管理
    变更管理
    发布管理
    
职能：
    服务台<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>常用ITSM工具有那些？你在工作中用到了那些？</p>
<pre class="line-numbers language-none"><code class="language-none">itop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>项目管理包含那些内容？</p>
<pre class="line-numbers language-none"><code class="language-none">项目管理总体有五个过程：启动过程、计划过程、实施过程、执行过程、收尾过程等，包含了九大领域的知识：范围管理、时间管理、成本管理、质量管理、风险管理、人力资源管理、沟通管理、采购管理及系统管理的方法与工具<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>简述一个你做过的项目经历（不需要描述技术细节）</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="开放题目"><a href="#开放题目" class="headerlink" title="开放题目"></a>开放题目</h3></li>
<li><p>谈谈你处理过的复杂故障事件，并讲述你在其中的作用；</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>使用英语讲述一个你经常处理的IT事件</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>谈谈你对职业规划的理解和你的愿景？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>如何设计一个两地三中心的容灾环境？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>你对我们公司和这个岗位有什么要问的？</p>
<pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>interview</tag>
        <tag>exam</tag>
        <tag>Sysadmin</tag>
      </tags>
  </entry>
  <entry>
    <title>Wazuh系统的群集化改造</title>
    <url>/2021/08/01/wazuh_depoly_cluster/</url>
    <content><![CDATA[<h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>在中大型网络环境中，单台Allinone的Wazuh系统或者单节点的分布式部署Wazuh系统从性能上已经无法满足日志分析和漏洞扫描的需求，因此应当采用高可用、多节点的分布式部署来满足Wazuh对CPU和存储的要求。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>系统描述</th>
<th>配置</th>
<th>网络地址</th>
<th>系统角色</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Lvsnode1</td>
<td>1c/1g</td>
<td>192.168.79.51</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>2</td>
<td>Lvsnode2</td>
<td>1c/1g</td>
<td>192.168.79.52</td>
<td>LVS+KeepLived 提供VIP和负载均衡</td>
</tr>
<tr>
<td>3</td>
<td>Wazuhnode0</td>
<td>2c/2g</td>
<td>192.168.79.60</td>
<td>Wazuh主节点，提供认证以及cve库</td>
</tr>
<tr>
<td>4</td>
<td>Wazuhnode1</td>
<td>1c/1g</td>
<td>192.168.79.61</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>5</td>
<td>Wazuhnode2</td>
<td>1c/1g</td>
<td>192.168.79.62</td>
<td>WazuhWorker，工作节点，提供事件日志分析和漏洞扫描</td>
</tr>
<tr>
<td>6</td>
<td>KibanaNode</td>
<td>2c/4g</td>
<td>192.168.79.80</td>
<td>Kibana展示节点</td>
</tr>
<tr>
<td>7</td>
<td>ElasticNode1</td>
<td>4c/4g</td>
<td>192.168.79.81</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>8</td>
<td>ElasticNode2</td>
<td>4c/4g</td>
<td>192.168.79.82</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>9</td>
<td>ElasticNode3</td>
<td>4c/4g</td>
<td>192.168.79.83</td>
<td>ElasticSearch 群集节点</td>
</tr>
<tr>
<td>10</td>
<td>UbuntuNode</td>
<td>1c/1g</td>
<td>192.168.79.127</td>
<td>Ubuntu 20.04 LTS 测试机 + Wordpress</td>
</tr>
<tr>
<td>11</td>
<td>CentOSNode</td>
<td>1c/1g</td>
<td>192.168.79.128</td>
<td>CentOS 8.4 测试机 + PostgreSQL</td>
</tr>
<tr>
<td>12</td>
<td>WindowsNode</td>
<td>2c/2g</td>
<td>192.168.79.129</td>
<td>Windows Server 2012R2 测试机+ SQL Server</td>
</tr>
<tr>
<td>13</td>
<td>VIP</td>
<td>——-</td>
<td>192.168.79.50</td>
<td>前端访问IP</td>
</tr>
<tr>
<td>14</td>
<td>Gateway</td>
<td>1c/1g</td>
<td>192.168.79.254</td>
<td>使用iKuai提供网关服务和外部DNS服务</td>
</tr>
</tbody></table>
<blockquote>
<p>以下内容仅限wazuh 4.5.1版本和ELK  7.11.2版本</p>
</blockquote>
<p><img src="https://cdn.sujx.net/distributed_no_title4.png"></p>
<h3 id="后端存储群集"><a href="#后端存储群集" class="headerlink" title="后端存储群集"></a>后端存储群集</h3><ol>
<li><p>ElasticSearch三节点部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
# 增加官方源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF
# 安装软件
yum makecache
yum upgrade -y
yum install -y elasticsearch-7.11.2

# 导入配置文件
cp -a &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml&#123;,_$(date +%F)&#125;

# 依次在各个节点上设置
cat &gt; &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml &lt;&lt; EOF
network.host: 192.168.79.81
node.name: elasticnode1
cluster.name: elastic
cluster.initial_master_nodes:
        - elasticnode1
        - elasticnode2
        - elasticnode3
discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
EOF

# 开通防火墙
firewall-cmd --permanent --add-service&#x3D;elasticsearch 
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable elasticsearch
systemctl start elasticsearch

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo

# 在各个节点上依次部署，注意变更主机名和IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>ElasticSearch群集验证</p>
<pre class="line-numbers language-none"><code class="language-none">sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cluster&#x2F;health?pretty
&#123;
  &quot;cluster_name&quot; : &quot;elastic&quot;,
  &quot;status&quot; : &quot;green&quot;,
  &quot;timed_out&quot; : false,
  &quot;number_of_nodes&quot; : 3,
  &quot;number_of_data_nodes&quot; : 3,
  &quot;active_primary_shards&quot; : 0,
  &quot;active_shards&quot; : 0,
  &quot;relocating_shards&quot; : 0,
  &quot;initializing_shards&quot; : 0,
  &quot;unassigned_shards&quot; : 0,
  &quot;delayed_unassigned_shards&quot; : 0,
  &quot;number_of_pending_tasks&quot; : 0,
  &quot;number_of_in_flight_fetch&quot; : 0,
  &quot;task_max_waiting_in_queue_millis&quot; : 0,
  &quot;active_shards_percent_as_number&quot; : 100.0
&#125;

sujx@LEGION:~$ curl http:&#x2F;&#x2F;192.168.79.81:9200&#x2F;_cat&#x2F;nodes?v
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
192.168.79.83           10          86   0    0.08    0.08     0.03 cdhilmrstw -      elasticnode3
192.168.79.82           18          97   0    0.01    0.12     0.08 cdhilmrstw *      elasticnode2
192.168.79.81           16          95   0    0.06    0.08     0.08 cdhilmrstw -      elasticnode1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h3 id="处理系统群集"><a href="#处理系统群集" class="headerlink" title="处理系统群集"></a>处理系统群集</h3><ol>
<li><p>Wazuh Master的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 安装前置软件
yum install -y zip unzip curl
# 导入秘钥
rpm --import https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch

# 配置官方软件源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo &lt;&lt; EOF
[wazuh]
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;key&#x2F;GPG-KEY-WAZUH
enabled&#x3D;1
name&#x3D;EL-$releasever - Wazuh
baseurl&#x3D;https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;yum&#x2F;
protect&#x3D;1
EOF

cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF

# 安装软件
yum makecache
yum upgrade -y

yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1515&#x2F;tcp,1516&#x2F;tcp,55000&#x2F;tcp&#125;
firewall-cmd --reload

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;wazuh.repo

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat

# 测试filebeat
[root@WazuhNode0 wazuh]# filebeat test output
elasticsearch: http:&#x2F;&#x2F;192.168.79.81:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.81
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.82:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.82
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2
elasticsearch: http:&#x2F;&#x2F;192.168.79.83:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 192.168.79.83
    dial up... OK
  TLS... WARN secure connection disabled
  talk to server... OK
  version: 7.11.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>Wazuh worker的部署</p>
<pre class="line-numbers language-none"><code class="language-none"># 同Master部署一致

# 安装软件
yum install -y wazuh-manager
yum install -y filebeat-7.11.2

# 配置Filebeat
cp -a &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&#123;,_$(date +%F)&#125;

cat &gt; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml&lt;&lt;EOF
filebeat.modules:
  - module: wazuh
    alerts:
      enabled: true
    archives:
      enabled: false

setup.template.json.enabled: true
setup.template.json.path: &#39;&#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json&#39;
setup.template.json.name: &#39;wazuh&#39;
setup.template.overwrite: true
setup.ilm.enabled: false

output.elasticsearch.hosts: [&#39;http:&#x2F;&#x2F;192.168.79.81:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.82:9200&#39;,&#39;http:&#x2F;&#x2F;192.168.79.83:9200&#39;]
EOF

# 导入filebeat的wazuh日志模板
curl -so &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wazuh&#x2F;wazuh&#x2F;4.1&#x2F;extensions&#x2F;elasticsearch&#x2F;7.x&#x2F;wazuh-template.json
chmod go+r &#x2F;etc&#x2F;filebeat&#x2F;wazuh-template.json

# 导入filebeat的wazuh日志模型
curl -s https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;filebeat&#x2F;wazuh-filebeat-0.1.tar.gz | tar -xvz -C &#x2F;usr&#x2F;share&#x2F;filebeat&#x2F;module

# 配置防火墙规则
firewall-cmd --permanent --add-port&#x3D;&#123;1514&#x2F;tcp,1516&#x2F;tcp&#125;
firewall-cmd --reload

# 启动服务
systemctl daemon-reload
systemctl enable --now wazuh-manager
systemctl enable --now filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>实现wazuh群集</p>
<pre class="line-numbers language-none"><code class="language-none"># 进行群集认证
# Master节点
#生成随机串值
openssl rand -hex 16
d84691d111f86e70e8ed7eff80cde39e

# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode0&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;master&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# Worker节点
# 编辑ossec.conf的cluster

  &lt;cluster&gt;
    &lt;name&gt;wazuh&lt;&#x2F;name&gt;
    &lt;node_name&gt;wazuhnode1&lt;&#x2F;node_name&gt;
    &lt;node_type&gt;worker&lt;&#x2F;node_type&gt;
    &lt;key&gt;d84691d111f86e70e8ed7eff80cde39e&lt;&#x2F;key&gt;
    &lt;port&gt;1516&lt;&#x2F;port&gt;
    &lt;bind_addr&gt;0.0.0.0&lt;&#x2F;bind_addr&gt;
    &lt;nodes&gt;
        &lt;node&gt;192.168.79.60&lt;&#x2F;node&gt;
    &lt;&#x2F;nodes&gt;
    &lt;hidden&gt;no&lt;&#x2F;hidden&gt;
    &lt;disabled&gt;no&lt;&#x2F;disabled&gt;
  &lt;&#x2F;cluster&gt;
  
# 验证
[root@WazuhNode0 bin]# .&#x2F;cluster_control -l
NAME        TYPE    VERSION  ADDRESS        
wazuhnode0  master  4.1.5    192.168.79.60  
wazuhnode1  worker  4.1.5    192.168.79.61  
wauzhnode2  worker  4.1.5    192.168.79.62<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
</li>
</ol>
<hr>
<h3 id="前端访问群集"><a href="#前端访问群集" class="headerlink" title="前端访问群集"></a>前端访问群集</h3><ol>
<li><p>概览</p>
<p>前端部署采用Keeplived+Nginx代理的模式，提供一个VIP供Wazuh的agent进行部署。</p>
</li>
<li><p>部署Nginx的TCP代理节点</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 部署第一个节点Node1</span>
<span class="token comment"># 开放防火墙端口</span>
firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1514</span>/tcp,1515/tcp<span class="token punctuation">&#125;</span>
firewall-cmd --reload

<span class="token comment"># 新增官方源地址</span>
<span class="token function">cat</span> <span class="token operator">></span> /etc/yum.repos.d/nginx.repo <span class="token operator">&lt;&lt;</span><span class="token punctuation">\</span>EOF
<span class="token punctuation">[</span>nginx<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>nginx repo
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
EOF

<span class="token comment"># 安装Nginx</span>
yum makecache
yum <span class="token function">install</span> -y nginx
systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> nginx.service --now

<span class="token comment"># 配置stream</span>
<span class="token builtin class-name">cd</span> /etc/nginx
<span class="token function">cp</span> -a nginx.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>
<span class="token function">cat</span> <span class="token operator">>></span> /etc/nginx/nginx.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF
include /etc/nginx/stream.d/*.conf;
EOF</span>

<span class="token function">mkdir</span> ./stream.d
<span class="token function">touch</span> /etc/nginx/stream.d/wazuh.conf

<span class="token function">cat</span> <span class="token operator">></span> /etc/nginx/stream.d/wazuh.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
stream &#123;
    upstream cluster &#123;
        hash <span class="token variable">$remote_addr</span> consistent;
        server 192.168.79.61:1514;
        server 192.168.79.62:1514;
    &#125;
    upstream master &#123;
        server 192.168.79.60:1515;
    &#125;
    server &#123;
        listen 1514;
        proxy_pass cluster;
    &#125;
    server &#123;
        listen 1515;
        proxy_pass master;
    &#125;
&#125;
EOF</span>

<span class="token comment"># 重启Nginx</span>
systemctl restart nginx
<span class="token comment"># 检查端口情况</span>
<span class="token punctuation">[</span>root@lvsnode1 nginx<span class="token punctuation">]</span><span class="token comment"># netstat -tlnp</span>
Active Internet connections <span class="token punctuation">(</span>only servers<span class="token punctuation">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1514            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:1515            <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:80              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1897</span>/nginx: master  
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:22              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1022</span>/sshd           
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::80                   :::*                    LISTEN      <span class="token number">1897</span>/nginx: master  
tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::22                   :::*                    LISTEN      <span class="token number">1022</span>/sshd   

<span class="token comment"># 安装Keeplived</span>
yum <span class="token function">install</span> -y keepalived
<span class="token builtin class-name">cd</span> /etc/keepalived/
<span class="token function">cp</span> -a keepalived.conf<span class="token punctuation">&#123;</span>,_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token punctuation">&#125;</span>

<span class="token comment"># 进行配置</span>
<span class="token function">cat</span> <span class="token operator">></span> keepalived.conf<span class="token operator">&lt;&lt;</span><span class="token string">EOF
# Configuration File for keepalived
#
global_defs &#123;
    router_id nginxnode1
    vrrp_mcast_group4 224.0.0.18
    lvs_timeouts tcp 900 tcpfin 30 udp 300
    lvs_sync_daemon ens160 route_lvs
    vrrp_skip_check_adv_addr
    #vrrp_strict
    vrrp_garp_interval 0
    vrrp_gna_interval 0
&#125;
vrrp_instance route_lvs &#123;
    state BACKUP
    priority 100
    virtual_router_id 18
    interface ens160
    track_interface &#123;
        ens160
    &#125;
    advert_int 3
    authentication &#123;
        auth_type PASS
        auth_pass password
    &#125;
    virtual_ipaddress &#123;
        192.168.79.50/24 dev ens160 label ens160:0
    &#125;
&#125;
EOF</span>

systemctl <span class="token builtin class-name">enable</span> keepalived.service --now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>验证服务</p>
<pre class="line-numbers language-none"><code class="language-none">sujx@LEGION:~$ ping 192.168.79.50
PING 192.168.79.50 (192.168.79.50) 56(84) bytes of data.
64 bytes from 192.168.79.50: icmp_seq&#x3D;1 ttl&#x3D;64 time&#x3D;0.330 ms
64 bytes from 192.168.79.50: icmp_seq&#x3D;2 ttl&#x3D;64 time&#x3D;0.306 ms

--- 192.168.79.50 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min&#x2F;avg&#x2F;max&#x2F;mdev &#x3D; 0.306&#x2F;0.430&#x2F;0.655&#x2F;0.159 ms

sujx@LEGION:~$ telnet 192.168.79.50 1515
Trying 192.168.79.140...
Connected to 192.168.79.140.
Escape character is &#39;^]&#39;.
   
sujx@LEGION:~$ telnet 192.168.79.50 1514
Trying 192.168.79.140...
Connected to 192.168.79.140.
Escape character is &#39;^]&#39;.
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<hr>
<h3 id="面板访问群集"><a href="#面板访问群集" class="headerlink" title="面板访问群集"></a>面板访问群集</h3><ol>
<li><p>部署Elastic协调节点</p>
<pre class="line-numbers language-none"><code class="language-none"># 如果 Elasticsearch 集群有多个节点，分发 Kibana 节点之间请求的最简单的方法就是在 Kibana 机器上运行一个 Elasticsearch 协调（Coordinating only node） 的节点。Elasticsearch 协调节点本质上是智能负载均衡器，也是集群的一部分，如果有需要，这些节点会处理传入 HTTP 请求，重定向操作给集群中其它节点，收集并返回结果

# 在Kibana节点上安装Elasticsearch
# 安装前置软件
yum install -y zip unzip curl
# 导入源秘钥
rpm --import https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
# 增加官方源
cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo &lt;&lt; EOF
[elasticsearch-7.x]
name&#x3D;Elasticsearch repository for 7.x packages
baseurl&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;yum
gpgcheck&#x3D;1
gpgkey&#x3D;https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch
enabled&#x3D;1
autorefresh&#x3D;1
type&#x3D;rpm-md
EOF

# 安装软件
yum makecache
yum upgrade -y
yum install -y elasticsearch-7.11.2

#配置防火墙
firewall-cmd --permanent --add-service&#x3D;http
firewall-cmd --permanent --add-service&#x3D;elasticsearch
firewall-cmd --reload

# 修改配置
# 其他ES节点也需要增加该主机NodeIP，并重启服务
cat &gt;&gt; &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml&lt;&lt;EOF
node.name: kibananode0
cluster.name: elastic
node.master: false
node.data: false
node.ingest: false
network.host: localhost
http.port: 9200
transport.host: 192.168.79.80
transport.tcp.port: 9300

discovery.seed_hosts:
        - 192.168.79.81
        - 192.168.79.82
        - 192.168.79.83
        - 192.168.79.80
EOF

# 查看群集信息，只允许本机Kibana访问
[root@kibana wazuh]# curl http:&#x2F;&#x2F;localhost:9200&#x2F;_cat&#x2F;nodes?v
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role  master name
192.168.79.81           18          96   0    0.04    0.06     0.02 cdhilmrstw -      elasticnode1
192.168.79.80           12          97   3    0.01    0.08     0.07 lr         -      kibananode0
192.168.79.82           23          96   0    0.04    0.09     0.04 cdhilmrstw *      elasticnode2
192.168.79.83           23          87   0    0.09    0.11     0.05 cdhilmrstw -      elasticnode3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>配置Kibana</p>
<pre class="line-numbers language-none"><code class="language-none">yum install -y kibana-7.11.2

# 修改配置文件
cp -a &#x2F;etc&#x2F;kibana&#x2F;kibana.yml&#123;,_$(date +%F)&#125;

cat &gt;&gt; &#x2F;etc&#x2F;kibana&#x2F;kibana.yml &lt;&lt; EOF
server.port: 5601
server.host: &quot;localhost&quot;
server.name: &quot;kibana&quot;
i18n.locale: &quot;zh-CN&quot;
elasticsearch.hosts: [&quot;http:&#x2F;&#x2F;localhost:9200&quot;]
kibana.index: &quot;.kibana&quot;
kibana.defaultAppId: &quot;home&quot;
server.defaultRoute : &quot;&#x2F;app&#x2F;wazuh&quot;
EOF

# 创建数据目录
mkdir &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;data
chown -R kibana:kibana &#x2F;usr&#x2F;share&#x2F;kibana

# 离线安装插件
wget https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;ui&#x2F;kibana&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip
cp .&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip &#x2F;tmp
cd &#x2F;usr&#x2F;share&#x2F;kibana
sudo -u kibana &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;bin&#x2F;kibana-plugin install file:&#x2F;&#x2F;&#x2F;tmp&#x2F;wazuh_kibana-4.1.5_7.11.2-1.zip

# 配置服务
systemctl daemon-reload
systemctl enable kibana
systemctl start kibana

# 禁用软件源，避免非控升级组件
sed -i &quot;s&#x2F;^enabled&#x3D;1&#x2F;enabled&#x3D;0&#x2F;&quot; &#x2F;etc&#x2F;yum.repos.d&#x2F;elastic.repo

# 配置反向代理
yum install -y nginx
systemctl enable --now nginx
vim &#x2F;etc&#x2F;ngix&#x2F;nginx.conf
# 在server&#123;&#125;中添加配置项
​&#96;&#96;&#96;
        proxy_redirect           off;
        proxy_set_header         X-Real-IP $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header         Host $http_host;

        location &#x2F; &#123;
                proxy_pass http:&#x2F;&#x2F;localhost:5601&#x2F;;
        &#125;
​&#96;&#96;&#96;
nginx -s reload

# 登录kibana之后选择wazuh插件
# 返回控制台修改插件配置文件
sed -i &quot;s&#x2F;localhost&#x2F;192.168.79.60&#x2F;g&quot; &#x2F;usr&#x2F;share&#x2F;kibana&#x2F;data&#x2F;wazuh&#x2F;config&#x2F;wazuh.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h3></li>
<li><p>部署Wazuh-Agent</p>
<pre class="line-numbers language-none"><code class="language-none"># CentOS主机
sudo WAZUH_MANAGER&#x3D;&#39;192.168.79.50&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; yum install https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;yum&#x2F;wazuh-agent-4.1.5-1.x86_64.rpm -y

# Ubuntu主机
curl -so wazuh-agent.deb https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;apt&#x2F;pool&#x2F;main&#x2F;w&#x2F;wazuh-agent&#x2F;wazuh-agent_4.1.5-1_amd64.deb &amp;&amp; sudo WAZUH_MANAGER&#x3D;&#39;192.168.79.60&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; dpkg -i .&#x2F;wazuh-agent.deb

# 启动服务
systemctl daemon-reload
systemctl enable wazuh-agent
systemctl start wazuh-agent

# Windows主机
Invoke-WebRequest -Uri https:&#x2F;&#x2F;packages.wazuh.com&#x2F;4.x&#x2F;windows&#x2F;wazuh-agent-4.1.5-1.msi -OutFile wazuh-agent.msi; .&#x2F;wazuh-agent.msi &#x2F;q WAZUH_MANAGER&#x3D;&#39;192.168.79.50&#39; WAZUH_REGISTRATION_SERVER&#x3D;&#39;192.168.79.50&#39; WAZUH_AGENT_GROUP&#x3D;&#39;default&#39; 
start-service wazuh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>验证客户端所在管理节点</p>
<p><img src="https://cdn.sujx.net/wazuh-client.PNG"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>System</tag>
        <tag>Elasticsearch</tag>
        <tag>Wazuh</tag>
        <tag>Security</tag>
        <tag>HIDS</tag>
        <tag>keeplived</tag>
        <tag>lvs</tag>
      </tags>
  </entry>
</search>
